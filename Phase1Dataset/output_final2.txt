OCR detection done with doctr
left top x of T/F: 5580.984375000001
bottom right x of T/F: 6837.55859375
left top x of SN: 660.7968749999999
bottom right x of SN: 1081.6015624999998
first t/f detection
TROE
((5739.171875, 1954.22265625), (6248.56640625, 2167.2421875))
TROE
((5674.33984375, 2602.54296875), (6220.78125, 2824.82421875))
FALIE
((5655.81640625, 3000.796875), (6239.3046875, 3260.125))
FALSE
((5590.984375000001, 3676.90234375), (6202.2578125, 3889.921875))
F
((5674.33984375, 4315.9609375), (6063.332031249999, 4454.88671875))
collision happend with box:4315.9609375 and text:F solving on the basis of percent match boxes
the current box specification are
TRUE
((5628.031250000001, 4445.625), (6192.99609375, 4649.3828125))
text2 i.e the incoming text is the winner
TRUG
((5470.58203125, 4853.140625), (5989.23828125, 5029.11328125))
FALSE
((5637.29296875, 5316.2265625), (6239.3046875, 5519.984375))
TROE
((5424.2734375, 5816.359375), (5924.40625, 6038.640625))
TROE
((5535.4140625, 6297.96875), (5998.5, 6483.203125))
TROE
((5479.84375, 6807.36328125), (6026.28515625, 7020.3828125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2148, '2': 2741, '3': 3139, '4': 3732, '5': 4315, '6': 4899, '7': 5297, '8': 5871, '9': 6270, '10': 6872}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : atMTlVH.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 327.63671875
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
True
((1416.1083984375, 627.615234375), (1518.2783203125002, 678.7001953125))
collision happend with box:627.615234375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:761.4091796875 and text:True solving on the basis of percent match boxes
the current box specification are
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
text2 i.e the incoming text is the winner
collision happend with box:885.47265625 and text:Falk solving on the basis of percent match boxes
the current box specification are
falte
((1425.8388671875, 1019.2666015625), (1530.44140625, 1077.6494140625))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
collision happend with box:1191.982421875 and text:Falk solving on the basis of percent match boxes
the current box specification are
fale
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
text2 i.e the incoming text is the winner
collision happend with box:1325.7763671875 and text:fale solving on the basis of percent match boxes
the current box specification are
fata
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
True
((1416.1083984375, 627.615234375), (1518.2783203125002, 678.7001953125))
True
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
falte
((1425.8388671875, 1019.2666015625), (1530.44140625, 1077.6494140625))
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
fale
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
fata
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
collision happend with box:1457.1376953125 and text:fata solving on the basis of percent match boxes
the current box specification are
fek
((1552.3349609375, 1452.2724609375), (1635.0439453125, 1508.22265625))
text1 i.e the prev text is the winner
Thue
((1425.8388671875, 1586.06640625), (1525.576171875, 1634.71875))
Tue
((1433.1367187500002, 1707.697265625), (1535.306640625, 1756.349609375))
True
((1408.810546875, 1890.1435546875), (1518.2783203125002, 1938.7958984375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 603, '2': 758, '3': 863, '4': 1021, '5': 1177, '6': 1333, '7': 1437, '8': 1595, '9': 1702, '10': 1858}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MNx2JmJ.jpg
OCR detection done with doctr
left top x of SN: 1072.8691406249998
bottom right x of SN: 1495.1054687499998
left top x of T/F: 5695.669921875
bottom right x of T/F: 6874.615234375
first t/f detection
TRUE
((5744.427734375, 2868.078125), (6151.384765625, 3042.48828125))
TRUE
((5715.359375, 3400.998046875), (6132.005859375001, 3585.09765625))
FALSC
((5676.6015625, 3817.64453125), (6296.7265625, 4040.501953125))
FALSE
((5744.427734375, 4389.322265625), (6287.037109375, 4583.111328125))
FALSE
((5676.6015625, 4961.0), (6209.521484375, 5135.41015625))
FALSE
((5589.396484374999, 5445.47265625), (6151.384765625, 5629.572265625))
TRVE
((5550.638671875, 5871.80859375), (6025.421875, 6104.35546875))
TRUE
((5550.638671875, 6404.728515625), (5957.595703124999, 6598.517578125))
TRUE
((5521.5703125, 6831.064453125), (5967.28515625, 7015.1640625))
TRVE
((5511.880859375, 7422.12109375), (6093.248046875001, 7606.220703125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['9']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '10']
['1', '2', '3', '4', '5', '6', '7', '8', '10', '1', '2', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 2683, '2': 3245, '3': 3623, '4': 4185, '5': 4747, '6': 5309, '7': 5687, '8': 6259, '10': 7218}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 94eVJfM.jpg
OCR detection done with doctr
left top x of T/F: 5770.21875
bottom right x of T/F: 7078.03125
left top x of SN: 928.140625
bottom right x of SN: 1346.0
first t/f detection
TRUE
((5825.9609375, 2268.8125), (6329.125, 2479.2265625))
TRUE
((5798.515624999999, 2900.0546875), (6310.828125000001, 3073.875))
TRUE
((5807.6640625, 3339.1796875), (6301.6796875, 3522.1484375))
FALSE
((5789.3671875, 3997.8671875), (6319.9765625, 4180.8359375))
FALSE
((5844.2578125, 4629.109375), (6347.421875, 4793.78125))
TRUE
((5816.812499999999, 5168.8671875), (6301.6796875, 5333.5390625))
Teve
((5743.625, 5644.5859375), (6201.046875, 5809.2578125))
TRUE
((5816.812499999999, 6175.1953125), (6237.640625, 6339.8671875))
PRU
((5780.21875, 6705.8046875), (6164.453125, 6870.4765625))
collision happend with box:6705.8046875 and text:PRU solving on the basis of percent match boxes
the current box specification are
FALSE
((6201.046875, 6714.953125), (6704.2109375, 6852.1796875))
text2 i.e the incoming text is the winner
TRUE
((5816.812499999999, 7263.859375), (6374.8671875, 7428.53125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2460, '2': 3028, '3': 3403, '4': 3988, '5': 4565, '6': 5159, '7': 5543, '8': 6156, '9': 6559, '10': 7172}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : naF0DTz.jpg
['bf', '6', '00', '-', 'o', 'CT', '4', '', 'N', '11', '2', 'I', 'E', 'I', '9', 'E', 'E', '>', 'I', 'E', 'a', '7', '2', 'a', 'I', 'I', '8', 'it', ':', '8', 'i', 'e', '-', 'I', 'E', 'a', 'I', 'E', 'I', 'I', 'I', '€', 'E', 'I', 'of', 'I', 'E', 'E', '8', 'I', 'I', 'se', 'I', 'E', 'E', 'E', 'I', 'a', 'I', '3', 't', 'I', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'E', 'E', 'E', 'tn', 'of', 'I', 'I', 'I', 'I', 'Q', '€', 'B', '8', 'I', 'a', 'f', 'I', 'I', 'I', 'I', 'a', 'E', '2', '1', '8', 'E', ':', 'I', 'E', 'I', 'E', 'I', 'I', '€', 'E', 'I', 'E', 'e', 'it', 'I', '8', 'I', 'I', 'I', ':', '2', 'I', '%', 'E', '8', 'I', 'I', 'E', 'I', 'E', 'I', 'I', 'a', 'E', 'I', 'I', ':', 'E', '2', 'I', 't', 'a', '€', '2', '2', 'I', 'E', ':', 'I', 'it', 'I', 'E', 'I', 'g', 'F', 'I', 'I', 'S', 'E', 'E', '€', 'a', '2', 'E', 'DE', 'I', 'E', 'I', 't', 'I', 'e', 'E', 'I', '1', 'I', 'E', '2', 't', 'E', 'I', 'E', '2', 'E', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'E', 'I', 'a', 'I', 'I', '1', '€', 'I', 'I', 't', 'I', 'F', 'I', 'I']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'azireloues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'auy', 'uI', 'smegop', 'IO', 'oSIOU', 'oyreds', 'omadeo', '01', 'UIBOT', 'Keur', 'lopour', 'o47', 'Se', "'soseaI", '-UI', 'Surnay.IeAo', 'Jo', 'YISII', 'ou7', "'WAS", 'UI', 'regowrered', 'D', '49', 'Jo', 'anreA', 'y81y', 'B', 'Y9IM', 'OT', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', 'uororpaad', 'B', 'Suryeur', "'sossero", 'JO', 'roqunu', 'a81eT', 'e', 'YAIM', 'suergoid', 'ssepotmu', 'JOI', '6', 'rooeds', 'TBULSLIO', 'ou4', 'uI', 'IBQUIT-uou', '0q', 'ueo', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoop', 'OUL', '8', 'sopou', 'Jo', 'poqunu', 'au4', '07', 'Teuorgodo.d', 'Atpamp', 'SI', 'BOIL', 'UOISIDOC', 'e47', 'UI', 'uorgorpard', 'B', 'Suryeur', 'JOJ', 'parmbar', 'OUIL', 'BUL', 'L', '"uornqugsip', 'ueissneD', 'B', 'sienre', 'SI', 'suornqugsip', 'uerssneD', 'OM7', 'Jo', 'OIgXIUL', 'V', '9', 'TTeDOH', 'pue', 'UOISIO', '-Id', 'uoomgeq', 'gord', 'B', 'SI', 'BAINO', '(DOH)', 'orAstIeg0BIeUD', 'Surgeredo', 'IOAIODOH', 'AUL', 'C', 'YIOMIOU', '[emou', 'a47', 'UI', 'squerpe1s', 'au7', 'agnduloo', '07', 'pesn', 'querpe1s', 'OTIYM', "'sau81OM", 'au7', 'agepdn', '07', 'posn', 'SI', 'uone3odoxdypeg', '4', 'SI', 'queosap', ':f', 'pue', 'I', 'SIO900A', '-', 'oouensip', 'PITBA', 'B', 'SI', '(A-z)@,uopuagousoy', '-I', '&', '[euorsuetup-p', 'Kue', 'IOJ', 'ouIgOuI', 'layissepo', 'reQuII-uou', 'B', 'SI', 'NNY', '2', 'quoukordap', 'queuezmbar', 'a8e10qs', 'auy', 'KTeordAL', 'I', '1a81e1', 'yonur', 'SI', 'NNY', 'IOJ', 'JOJ', 'WAS', 'ueya', 'quauagens', 'NS', 'mor', 'B9LIM', 'ISIVA/ANaL', 'paqumu', 'IIOI', ':a104', '(sad', 'O1)', '6', '291M', 'IO', 'ANHL', 'Teardeo', 'ul', 'ASTVI', 'S121101', 'reapo', 'pure', 'Surumpuey']
rotation started
['I', 'a', 'E', 'a', '-', ':', 'is', 'E', 'bs', 'I', 'is', 'I', 'à', 'I', 'I', 'I', 'is', 'I', 'da', 'I', 'I', 'a', 'E', 'e', 'a', 'I', 'is', 'I', 'I', 'E', 'à', '€', '', 'e', '1', 'of', '1', 'E', 'I', 'E', 'I', 'E', 'I', 'I', '8', 'is', 'e', 'I', 'iE', 'o', 'de', 'I', 'I', '2', 'e', 'I', 'E', ':', '8', 'i', 'iE', 'I', '', 'of', 'I', '-', ':', 'a', 'I', 'C', 'a', '0', 'I', 'I', 'I', 'I', 'I', 'I', 'of', ':', 'is', 'e', '-', ':', 'E', 'a', 'I', 'of', 'is', 'e', 'I', 'a', '-', 'de', 'S', 'I', 'E', 'I', 'I', '1', '1', '8', '-', 'à', 'E', 'I', 'of', 'I', 'e', 'a', '8', 'E', ':', '8', '$', 'is', '8', 'I', 'I', 'à', 'I', 'a', 'I', 'I', 'I', '2', '11', 'I', 'I', 'I', 'a', '3', 'E', '€', 'E', '1', 'I', 'of', '6', ':', '1', ':', 'I', ':', 'e', 'I', 'I', 'I', 'à', 'a', 'I', 'I', '3', 'E', 'I', 'I', '3', 'in', 'a', 'ot', 'E', 'à', 'E', 'e', '', ':', 'a', 'is', 'i', '-', 'i', 'E', 'a', ':', 'I', 'e', 'I', '1', 'I', 'I', 'I', 'I', 'E', 'à', 'A', 'E', 'E', 'E', ':', 'E', 'I', 'I', '7', '11', '4', '12', '8', 'I', '00', 'o', 'o9']
rotation started
['clear', 'handwriting.', 'letters', 'and', 'in', 'capital', 'TRUE', 'or', 'FALSE', 'pts)', 'Write', '9.', '(10', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/FALSI', 'SN', 'Statement', 'SVM', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'requirement', 'for', '1', 'Typically,', 'the', 'storage', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityz.w)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'F', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'cision', 'and', 'Recall.', 'F', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'T', 'F', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', '7']
OCR detection done with doctr
left top x of SN: 790.9140625000001
bottom right x of SN: 1199.625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:21:49] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : naF0DTz.jpg
[2024/07/01 14:21:50] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:21:51] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.247697114944458
[2024/07/01 14:21:53] ppocr DEBUG: rec_res num  : 35, elapsed : 2.247455596923828
OCR detection done
left top x of SN: 839.0
bottom right x of SN: 1249.0
left top y of SN: 1942.0
bottom right y of SN: 2238.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/naF0DTz.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6ZEaAgP.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
text2 i.e the incoming text is the winner
collision happend with box:914.0625 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
False
((1438.3984375, 1228.90625), (1547.578125, 1289.84375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1228.90625 and text:False solving on the basis of percent match boxes
the current box specification are
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
False
((1438.3984375, 1228.90625), (1547.578125, 1289.84375))
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
Falre
((1446.0156250000002, 1508.203125), (1565.3515625, 1569.140625))
True
((1458.7109375000002, 1665.625), (1565.3515625, 1716.40625))
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1505, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rjFS7o6.jpg
OCR detection done with doctr
left top x of SN: 200.39062499999997
bottom right x of SN: 417.21484374999994
left top x of T/F: 914.986328125
bottom right x of T/F: 1265.587890625
first t/f detection
Tyue
((924.986328125, 401.71875), (1008.6777343749999, 433.521484375))
collision happend with box:401.71875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((928.333984375, 478.71484375), (1008.6777343749999, 517.212890625))
text1 i.e the prev text is the winner
collision happend with box:401.71875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fahe
((936.703125, 557.384765625), (1007.00390625, 590.861328125))
text2 i.e the incoming text is the winner
collision happend with box:557.384765625 and text:Fahe solving on the basis of percent match boxes
the current box specification are
Fase
((930.0078125, 639.40234375), (1003.65625, 674.552734375))
text2 i.e the incoming text is the winner
collision happend with box:639.40234375 and text:Fase solving on the basis of percent match boxes
the current box specification are
Fale
((933.35546875, 733.13671875), (1007.00390625, 766.61328125))
text2 i.e the incoming text is the winner
collision happend with box:733.13671875 and text:Fale solving on the basis of percent match boxes
the current box specification are
FaMe
((930.0078125, 815.154296875), (1010.3515625, 846.95703125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((924.986328125, 401.71875), (1008.6777343749999, 433.521484375))
collision happend with box:401.71875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((928.333984375, 478.71484375), (1008.6777343749999, 517.212890625))
text1 i.e the prev text is the winner
Fahe
((936.703125, 557.384765625), (1007.00390625, 590.861328125))
Fase
((930.0078125, 639.40234375), (1003.65625, 674.552734375))
Fale
((933.35546875, 733.13671875), (1007.00390625, 766.61328125))
FaMe
((930.0078125, 815.154296875), (1010.3515625, 846.95703125))
collision happend with box:815.154296875 and text:FaMe solving on the basis of percent match boxes
the current box specification are
False
((930.0078125, 887.12890625), (1000.3085937499999, 918.931640625))
text2 i.e the incoming text is the winner
True
((928.333984375, 972.494140625), (996.9609375, 1005.970703125))
Tywe
((923.3124999999999, 1144.8984375), (1003.65625, 1183.396484375))
Trwe
((924.986328125, 1049.490234375), (996.9609375, 1081.29296875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 391, '2': 483, '3': 545, '4': 637, '5': 729, '6': 821, '8': 975, '9': 1037, '10': 1131}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2sjzRpB.jpg
OCR detection done with doctr
left top x of T/F: 5738.43359375
bottom right x of T/F: 6957.9609375
left top x of SN: 521.8710937499999
bottom right x of SN: 933.4140625000001
first t/f detection
TRUG
((5757.6953125, 1907.9140625), (6489.37109375, 2130.1953125))
TRUU
((5776.21875, 2602.54296875), (6443.0625, 2871.1328125))
FALSE
((5794.7421875, 3111.9375), (6544.94140625, 3380.52734375))
FALSG
((5757.6953125, 3723.2109375), (6387.4921875, 3936.23046875))
TRUE
((5748.43359375, 4223.34375), (6424.5390625, 4491.93359375))
FALSE
((5748.43359375, 4992.06640625), (6470.84765625, 5205.0859375))
TRbL
((5711.38671875, 5557.03125), (6526.41796875, 5816.359375))
TRUG
((5720.6484375, 6094.2109375), (6406.015625, 6316.4921875))
PALSG
((5822.52734375, 6612.8671875), (6452.32421875, 6835.1484375))
TRUE
((5655.81640625, 7288.97265625), (6350.445312500001, 7511.25390625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1954, '2': 2556, '3': 3148, '4': 3741, '5': 4130, '6': 4732, '7': 5519, '8': 6112, '9': 6510, '10': 7298}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : W9e6qNn.jpg
OCR detection done with doctr
left top x of SN: 424.97656250000006
bottom right x of SN: 851.9843749999998
left top x of T/F: 5559.804687500001
bottom right x of T/F: 6849.3203125
first t/f detection
Fale
((5633.84375, 2021.8046875), (5944.890625, 2268.8125))
Fle
((5560.65625, 2598.15625), (5908.296875, 2799.421875))
Trve
((5487.46875, 3147.0625), (5944.890625, 3412.3671875))
Trie
((5487.46875, 3750.859375), (5825.9609375, 4016.1640625))
Fabe
((5505.765624999999, 4318.0625), (5963.1875, 4583.3671875))
Tre
((5432.578125, 4903.5625), (5789.3671875, 5095.6796875))
True
((5496.6171875, 5434.171875), (5890.0, 5626.2890625))
Trve
((5487.46875, 5900.7421875), (5899.1484375, 6184.34375))
Fale
((5496.6171875, 6431.3515625), (5890.0, 6660.0625))
Tre
((5450.875, 7144.9296875), (5871.703125, 7382.7890625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2012, '2': 2634, '3': 3055, '4': 3677, '5': 4290, '6': 4903, '7': 5306, '8': 5928, '9': 6330, '10': 6943}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qi8cQd9.jpg
OCR detection done with doctr
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRHE
((5211.031249999999, 2185.5625), (5761.937500000001, 2402.3125))
TRWE
((5156.84375, 2700.34375), (5843.218750000001, 2917.09375))
FALSE
((5256.1875, 3169.96875), (5834.187499999999, 3377.6875))
FALSE
((5220.062500000001, 3729.90625), (5852.25, 3982.78125))
FALSE
((5229.09375, 4362.09375), (5770.96875, 4569.8125))
FALSE
((5256.1875, 4795.59375), (5852.25, 5057.5))
FALSE
((5211.031249999999, 5292.3125), (5807.093749999999, 5509.0625))
TRUETRUE
((5247.156250000001, 5816.125), (6240.593749999999, 6023.84375))
FALSE
((5256.1875, 6240.59375), (5834.187499999999, 6511.53125))
TRUE
((5238.124999999999, 6836.65625), (5807.093749999999, 7089.53125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2248, '2': 2826, '3': 3206, '4': 3784, '5': 4362, '6': 4940, '7': 5319, '8': 5906, '9': 6294, '10': 6881}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8r86TYY.jpg
OCR detection done with doctr
left top x of T/F: 5246.1875
bottom right x of T/F: 6341.250000000001
left top x of SN: 619.2812499999999
bottom right x of SN: 1016.0312499999999
first t/f detection
Tul
((5229.09375, 2113.3125), (5572.281250000001, 2348.125))
True
((5192.96875, 2628.09375), (5581.3125, 2817.75))
True
((5220.062500000001, 3106.75), (5653.562500000001, 3287.375))
Falsl
((5283.28125, 3657.65625), (5653.562500000001, 3847.3125))
alll
((5211.031249999999, 4262.75), (5608.40625, 4452.40625))
false
((5165.875, 4813.65625), (5536.156249999999, 5030.40625))
True
((5147.8125, 5229.09375), (5463.906250000001, 5481.96875))
Falye
((5183.9375, 5752.90625), (5527.125, 5978.6875))
Ti
((5247.156250000001, 6800.53125), (5527.125, 6990.1875))
Tvul
((5147.8125, 6195.4375), (5491.000000000001, 6376.0625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2817, '3': 3197, '4': 3738, '5': 4280, '6': 4831, '7': 5202, '8': 5752, '9': 6132, '10': 6692}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rYEPaeR.jpg
OCR detection done with doctr
left top x of SN: 91.80078125000003
bottom right x of SN: 309.16015625
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (970.830078125, 428.076171875))
collision happend with box:389.16015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((882.1015625, 474.775390625), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:474.775390625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((875.875, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((886.7714843750001, 653.7890625), (961.490234375, 684.921875))
collision happend with box:653.7890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (967.716796875, 792.330078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.7714843750001, 926.201171875), (958.3769531250001, 957.333984375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (970.830078125, 428.076171875))
FALSE
((882.1015625, 474.775390625), (966.16015625, 510.578125))
TRVE
((875.875, 557.27734375), (958.3769531250001, 594.63671875))
TRUE
((886.7714843750001, 653.7890625), (961.490234375, 684.921875))
FALSE
((883.658203125, 761.197265625), (967.716796875, 792.330078125))
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
collision happend with box:846.8125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.7714843750001, 926.201171875), (958.3769531250001, 957.333984375))
text2 i.e the incoming text is the winner
FALSE
((891.4414062500001, 1016.486328125), (977.056640625, 1046.0625))
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
PAL
((891.4414062500001, 1094.318359375), (939.697265625, 1130.12109375))
text1 i.e the prev text is the winner
SE
((941.25390625, 1097.431640625), (970.830078125, 1128.564453125))
FALSE
((892.998046875, 1209.509765625), (972.38671875, 1240.642578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 392, '2': 491, '3': 558, '4': 658, '5': 758, '7': 927, '8': 1030, '9': 1097, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sB9gIJP.jpg
OCR detection done with doctr
left top x of T/F: 5276.203125
bottom right x of T/F: 6529.125
left top x of SN: 681.1328124999999
bottom right x of SN: 1080.6953125
first t/f detection
Trul
((5240.4609375, 2296.2578125), (5633.84375, 2524.96875))
Thue
((5185.5703125, 2808.5703125), (5652.140625, 3028.1328125))
THal
((5423.4296875, 3220.25), (5853.40625, 3403.21875))
Treul
((5414.281250000001, 3869.7890625), (5899.1484375, 4089.3515625))
1rue
((5295.3515625, 4510.1796875), (5725.328125, 4693.1484375))
Teul
((5350.2421875, 4985.8984375), (5716.1796875, 5178.015625))
Falle
((5441.7265625, 5296.9453125), (5871.703125, 5525.65625))
Oud
((5341.09375, 5479.9140625), (5798.515624999999, 5662.8828125))
(ala
((5286.203125, 5864.1484375), (5734.4765625, 6083.7109375))
collision happend with box:5864.1484375 and text:(ala solving on the basis of percent match boxes
the current box specification are
TMul
((5771.0703125, 5891.59375), (6137.0078125, 6120.3046875))
text2 i.e the incoming text is the winner
Tralst
((5304.5, 6376.4609375), (5743.625, 6596.0234375))
Trul
((5286.203125, 6925.3671875), (5734.4765625, 7108.3359375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['6', '8']
the assigned keys are ['1', '2', '3', '4', '5', '7', '9', '10']
['1', '2', '3', '4', '5', '7', '9', '10', '1', '2', '3', '4', '5', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2406, '2': 2945, '3': 3311, '4': 3869, '5': 4427, '7': 5370, '9': 6330, '10': 6916}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ao4IYZg.jpg
OCR detection done with doctr
left top x of SN: 525.6093749999999
bottom right x of SN: 934.3203124999999
left top x of T/F: 5468.3203125
bottom right x of T/F: 6730.390625
first t/f detection
Taue
((5588.1015625, 2232.21875), (5944.890625, 2497.5234375))
Fale
((5533.2109375, 2845.1640625), (5935.7421875, 3083.0234375))
Tau
((5469.171875, 3384.921875), (5890.0, 3604.484375))
Fale
((5661.289062499999, 3979.5703125), (6045.5234375, 4217.4296875))
True
((5478.3203125, 4619.9609375), (5917.4453125, 4894.4140625))
Taue
((5533.2109375, 5168.8671875), (5981.484375, 5379.28125))
Falee
((5478.3203125, 5626.2890625), (5890.0, 5845.8515625))
FatreTrue
((5441.7265625, 6138.6015625), (6265.085937499999, 6385.609375))
Taue
((5423.4296875, 6678.359375), (5771.0703125, 6879.625))
Thue
((5533.2109375, 7273.0078125), (5880.8515625, 7465.125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2497, '2': 3083, '3': 3476, '4': 4071, '5': 4647, '6': 5232, '7': 5635, '8': 6220, '9': 6623, '10': 7227}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : b2UruIc.jpg
OCR detection done with doctr
left top x of T/F: 5164.20703125
bottom right x of T/F: 6402.2578125
left top x of SN: 670.0585937499999
bottom right x of SN: 1072.33984375
first t/f detection
TRVE
((5239.0390625, 2019.0546875), (5924.40625, 2389.5234375))
MRXXFFALSE
((5331.656249999999, 2639.58984375), (6267.08984375, 2898.91796875))
FALSE
((5257.5625, 3102.67578125), (6091.117187499999, 3445.359375))
FALSE
((5229.77734375, 3667.640625), (6054.070312499999, 3973.27734375))
TRUE
((5220.515625, 4269.65234375), (5961.453125, 4584.55078125))
PALSE
((5183.46875, 4816.09375), (5970.71484375, 5121.73046875))
PALSE
((5257.5625, 5279.1796875), (6081.855468749999, 5575.5546875))
TRUE
((5211.25390625, 5816.359375), (5878.09765625, 6084.94921875))
TRUE
((5220.515625, 6214.61328125), (5896.62109375, 6510.98828125))
TR
((5183.46875, 6862.93359375), (5590.984375000001, 7187.09375))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['4', '5', '7', '8', '9']
the assigned keys are ['1', '2', '3', '6', '10']
['1', '2', '3', '6', '10', '1', '2', '3', '6', '10']
printing the number dict y_coordinate
{'1': 2426, '2': 2982, '3': 3324, '6': 4955, '10': 6779}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EXLa4p7.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1146.8955078125
bottom right x of T/F: 1580.0957031250002
first t/f detection
falre
((1185.06640625, 526.5791015625), (1334.5888671875, 626.2607421875))
collision happend with box:526.5791015625 and text:falre solving on the basis of percent match boxes
the current box specification are
falre
((1180.732421875, 656.5986328125), (1297.75, 734.6103515625))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:falre solving on the basis of percent match boxes
the current box specification are
Trul
((1182.8994140625, 788.78515625), (1308.5849609375, 871.130859375))
text2 i.e the incoming text is the winner
collision happend with box:788.78515625 and text:Trul solving on the basis of percent match boxes
the current box specification are
Rul
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:910.13671875 and text:Rul solving on the basis of percent match boxes
the current box specification are
True
((1182.8994140625, 1053.158203125), (1321.5869140625002, 1142.0048828125))
text2 i.e the incoming text is the winner
collision happend with box:1053.158203125 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falre
((1185.06640625, 526.5791015625), (1334.5888671875, 626.2607421875))
falre
((1180.732421875, 656.5986328125), (1297.75, 734.6103515625))
Trul
((1182.8994140625, 788.78515625), (1308.5849609375, 871.130859375))
Rul
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
True
((1182.8994140625, 1053.158203125), (1321.5869140625002, 1142.0048828125))
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
Tyue
((1156.8955078125, 1285.0263671875), (1302.083984375, 1373.873046875))
Folwe
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
Falu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
Tru
((1165.5634765624998, 1692.4208984375), (1315.0859375, 1781.267578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 775, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1187, '7': 1280, '8': 1419, '9': 1512, '10': 1649}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LRccyJJ.jpg
OCR detection done with doctr
left top x of SN: 790.4609375000001
bottom right x of SN: 1211.265625
left top x of T/F: 5599.507812500001
bottom right x of T/F: 6846.8203125
first t/f detection
TRUE
((5655.81640625, 2259.859375), (6257.828125, 2509.92578125))
TRUE
((5683.6015625, 2806.30078125), (6285.61328125, 3019.3203125))
TRUE
((5729.91015625, 3260.125), (6350.445312500001, 3473.14453125))
TRUE
((5692.86328125, 3908.4453125), (6294.875, 4158.51171875))
TRUE
((5729.91015625, 4491.93359375), (6230.04296875, 4667.90625))
False
((5729.91015625, 4973.54296875), (6211.51953125, 5195.82421875))
TRUE
((5776.21875, 5288.44140625), (6424.5390625, 5510.72265625))
Teese
((5841.05078125, 5473.67578125), (6304.13671875, 5658.91015625))
TRUE
((5702.125, 5983.0703125), (6304.13671875, 6186.828125))
Talse
((5831.7890625, 6520.25), (6331.921875000001, 6705.484375))
the
((5377.96484375, 7224.140625), (5600.246093750001, 7372.328125))
collision happend with box:7224.140625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5804.00390625, 7113.0), (6424.5390625, 7363.06640625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2296, '2': 2871, '3': 3260, '4': 3852, '5': 4445, '6': 5047, '7': 5445, '8': 6047, '9': 6455, '10': 7075}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WJstHO0.jpg
rotation started
['a', '40', 'verd', '-', 'Ve', '01', '-', 'X2014', 'SENO', 'RgX', 'tnans', 'SATAN', 'Puy', '-', '-', 'A', 'L', '-', '(', 'à', 'e', '3', '€', '-', ':', '-', '8', '€', '-', '€', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'à', 'E', 'e', 'I', 'I', 'E', 'I', 'is', 'I', '8a', 'I', 'I', '1', 'I', '1', 'E', 'à', 'I', 'a', 'e', 'I', 'of', '6', ':', 'a', 'is', '', 'I', 'I', 'E', '1', 'I', 'i', 'à', 'E', 'a', 'a', 'I', 'E', 'e', 'I', '1', 'of', '1', 'I', 'iE', 'I', 'I', 'E', 'I', 'I', 'f', 'I', '8', 'is', 'e', 'i', 'à', 'iE', '2', 'o', 'e', 'E', 'I', 'e', '-', 'I', 'à', '8', 'I', 'a', 'i', 'E', 'I', '', 'I', 'of', '-', 'à', 'a', 'I', 'is', '8', 'a', '0', 'I', 'I', 'I', 'I', 'I', '-', 'of', 'E', 'is', 'e', 'i', ':', '1', 'i', 'E', 'I', 'e', 'i', 'of', 'iis', 'e', 'e', 'E', '1', 'de', '2', 'I', 'I', '5', 'I', '1', 'E', '9', 'I', 'à', ':', '1', 'e', 'I', 'E', 'I', 'of', 'I', 'e', 'a', '8', 'E', ':', '8', '$', 'is', 'I', '8', 'I', 'à', 'I', 'I', 'a', 'I', 'I', ':', 'a', 'I', '11', 'E', 'I', '1', 'I', 'I', 'à', 'e', 'I', '<', 'I', 'a', 'S', '4', '10', '8', 'I', 'I', 'I', '1', 'E', 'I', '1', 'a', '2', 'o6', 'E', 'à', 'a', 'e', 'o', 'e', ':', 'i', 'E', 'I', 'I', '7', '11', '00', 'o', '19']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'in', 'capital', 'TRUE', 'or', 'FALSE', 'Write', 's', 'a', 'Dey', 'F', 'A', '6', '&', 'F', '', '4', '9.', '(10', 'pts)', 'number', 'here:', 'Write', 'your', 'roll', 'SN', 'Statement', '1', 'Typically,', 'deployment.', 'TRUE/FAL', '', 'than', 'SVM', 'for', 'TRUE', 'is', 'much', 'larger', 'for', 'KNN', 'the', 'storage', 'requirement', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalarity(z.)', 'vectors', 'I', 'and', 'y.', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'is', 'a', 'valid', 'distance', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRUE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'TRUE', 'FALSE', 'XRE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'TRUE']
rotation started
['oS', '6o', '0o', 'a', 'N', '11', '2', 'E', 'I', '2', 'F', 'P', '>', 'I', 'P', 'i', '-', 'E', 'p', 'I', 'I', '8', 'I', 'it', '€', '8', 'i', 'e', 'F', 'I', 'E', 'po', 'I', 'I', 'E', 'I', 'I', '€', 'E', 'I', '%', 'I', 'E', 'E', 'E', '8', 'de', 'I', 'I', 'I', 'E', 'E', 'E', '1', 'I', 'I', 'it', 'I', '3', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'it', 'f', 'a', 'I', 'I', 'Q', 'a', 'I', '8', 'I', 'B', 'it', 'I', 'of', 'I', 'I', 'I', 'I', 'p', 'a', 'E', 'e', 'I', '2', 'I', '8', '1', 'E', '-', 'I', 'E', 'I', 'E', 'E', 'I', 'I', 'E', 'I', '€', 'E', 'e', 'lt', 'I', '8', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'of', 'E', 'I', '8', 'I', '1', 'E', 'I', 'I', 'E', 'a', 'E', 'I', 'I', 'I', 'I', '2', '2', 'E', 'I', 'a', 'it', '4', 'E', '€', '9', '%', 'I', 'E', 'I', 'e', 'I', 'E', '2', 'E', 'I', 'I', '5', 'I', 'E', 'I', '1', 'I', 'I', 'E', 'F', 'I', 'F', 'a', '-', 'o', 'OT', '4', '6', 'E', 'E', 'E', 'a', '2', 'E', 'E', 'i', 'I', 'E', 'E', 'E', '2', 't', 'à', 'I', 'E', '2', 'E', 'à', 'I', 'I', 'it', 'I', 'I', 'à', 'à', 'à', '8', '-', 'CI', '-', '%A', '-', '-E', 'Ind', 'à', 'à', 'à', 'T', 'MANE', 'Corpe', '4', 'DATE', 'LE', '9', '0', 'y', 'ITLE', 'Dles']
rotation started
['"egep', 'uoosun', "'Mou", '01', 'ITOM', 'azire.iouas', 'gou', 'op', 'ge41', 'egep', 'Surureng', 'D0JL', 'ouy', 'uT', 'smegop', 'JO', 'esIOU', 'oyioeds', 'amadeo', '01', 'ureal', 'Keur', 'lapou', 'aya', 'se', "'saseai", '-UT', 'Sumayieno', 'Jo', 'YSLI', 'oun', "'WAS", 'ul', 'pgaurered', 'D', 'aya', 'Jo', 'anTea', 'y8ry', 'e', 'YAIM', 'OT', 'uonorpard', 'B', 'Suryeur', "'sesser", 'Jo', 'roqunu', 'e81er', 'B', 'YAIM', 'suerqoid', 'ssepprgmu', 'JOI', '6', 'D0JL', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo-SA-QuO', 'Bursn', '3031', 'eoeds', 'TeurBTo', 'ayy', 'UI', 'JBQUIT-uou', 'aq', 'ue', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsioop', 'OUL', '8', "'sapou", 'Jo', 'equnu', '047', '07', '[euoriodord', 'RX', '35783', 'Atpemp', 'SI', 'DOIL', 'UOISIDOC', 'auy', 'UI', 'uororpard', 'B', 'Suryeu', 'JOJ', 'pammbar', 'BUIL', 'UL', 'L', '20L', '"uornqugsip', 'ueissnes', 'B', 'SieMTe', 'SI', 'suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'amgxt', 'V', '9', '3S18', '-aId', 'uoamgeq', 'gord', 'B', 'SI', 'DAINO', '(DO4)', 'onsttagpereud', 'Surgerado', 'IBAIODOY', 'BUL', 'S', 'Treoay', 'pue', 'UOISIO', 'YIOMIOU', 'Temneu', 'aya', 'UI', 'squerpe.18', 'aya', 'agnduoo', '01', 'pasn', 'quorpe1s', 'OTIYM', "'sau810M1", 'ayy', 'agepdn', '01', 'pesn', 'SI', 'uoneBodoxdypeg', '#', '20YL', 'SI', 'queosap', '-f', 'pue', 'I', 'SIOQ0OA', 'aouensip', 'PITRA', 'B', 'SI', '(A-z)@gumpungousoy', '-', 'I', '&', 'Kure', 'IOJ', 'ougour', '3570d', 'Teuorsuotup-p', 'layissepp', 'reauil-uou', 'B', 'SI', 'NNY', '7', 'quottaumbar', 'a88101S', 'aya', 'KTeOIdAL', '3OYL', 'quauLkordap', 'S', '', 'R', 'So', 'o', 'y', 'A', 'F', 'Ls', 'A', 'I', 'ypnur', 'SI', 'NNX', '1OJ', '20s', 'L', 'JOJ', 'WAS', 'ueya', '103.101', 'quauagens', 'NS', 'TTOJI', 'mor', '291-M', '"IVA/anaL', ':a104', 'Jaqumu', 'OI)', '6', '221M1', '(sad', '10', 'SNAL', 'UI', 'aSTVA', 'Teardeo', 'Surumpuey', 'reopp', 'pue', 'S101101']
OCR detection done with doctr
left top x of SN: 6069.562499999999
bottom right x of SN: 6459.9765625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:24:23] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : WJstHO0.jpg
[2024/07/01 14:24:24] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:24:25] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.12257194519042969
[2024/07/01 14:24:26] ppocr DEBUG: rec_res num  : 40, elapsed : 1.3692667484283447
OCR detection done
left top x of SN: 6122.0
bottom right x of SN: 6445.0
left top y of SN: 7407.0
bottom right y of SN: 7664.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/WJstHO0.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3kYHjN0.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6558.000000000001
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
STRVE
((5481.968749999999, 1743.03125), (6114.156250000001, 1941.71875))
FALSE
((5463.906250000001, 2357.15625), (6150.28125, 2528.75))
TRU
((5355.531250000001, 2853.875), (5807.093749999999, 3034.5))
TRU
((5346.499999999999, 3477.03125), (5834.187499999999, 3684.75))
FALSE
((5518.093750000001, 4091.15625), (6222.531250000001, 4289.84375))
TRVE
((5418.75, 4687.21875), (6087.062500000001, 4849.78125))
FALSE
((5463.906250000001, 5147.8125), (6087.062500000001, 5319.40625))
FALSE
((5418.75, 5689.6875), (6032.875000000001, 5861.28125))
TRUE
((5436.812500000001, 6186.40625), (6014.8125, 6358.0))
FALSE
((5536.156249999999, 6818.59375), (6159.312499999999, 6990.1875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2564, '3': 2953, '4': 3540, '5': 4127, '6': 4723, '7': 5111, '8': 5716, '9': 6123, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : r9ByOWm.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Fake
((1526.5898437500002, 766.1865234375), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Fake
((1526.5898437500002, 766.1865234375), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
Falu
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NzBinsy.jpg
OCR detection done with doctr
left top x of T/F: 5239.609375
bottom right x of T/F: 6428.4921875
left top x of SN: 626.2421875
bottom right x of SN: 1034.953125
first t/f detection
TRUE
((5249.609375, 2021.8046875), (5798.515624999999, 2241.3671875))
TRUE.
((5222.1640625, 2579.859375), (5908.296875, 2790.2734375))
TRUE
((5222.1640625, 3092.171875), (5816.812499999999, 3311.734375))
Falle
((5176.421875, 3604.484375), (5725.328125, 3878.9375))
cf
((5277.0546875, 4235.7265625), (5688.734375, 4400.3984375))
False
((5313.6484375, 4034.4609375), (5789.3671875, 4254.0234375))
Folse
((5359.390625, 4592.515625), (5835.109375, 4775.484375))
fals
((5277.0546875, 5068.234375), (5761.921875, 5287.796875))
Palse
((5295.3515625, 5598.84375), (5789.3671875, 5827.5546875))
False
((5249.609375, 6074.5625), (5716.1796875, 6312.421875))
TRUE
((5249.609375, 6815.5859375), (5807.6640625, 7016.8515625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2149, '2': 2707, '3': 3073, '4': 3641, '5': 4189, '6': 4748, '7': 5113, '8': 5681, '9': 6065, '10': 6632}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PAaDQxm.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 310.11328125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1226.4609375
first t/f detection
FALSE
((884.5078125, 391.9140625), (967.828125, 428.9453125))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((884.5078125, 470.60546875), (966.28515625, 501.46484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:470.60546875 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 552.3828125), (958.5703125, 583.2421875))
text2 i.e the incoming text is the winner
collision happend with box:552.3828125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((872.1640625, 649.58984375), (952.3984374999999, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((887.5937499999999, 756.0546875), (958.5703125, 786.9140625))
collision happend with box:756.0546875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((878.3359375000001, 839.375), (952.3984374999999, 874.86328125))
text1 i.e the prev text is the winner
collision happend with box:756.0546875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((876.7929687499999, 922.6953125), (941.5976562499999, 955.09765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((884.5078125, 391.9140625), (967.828125, 428.9453125))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((884.5078125, 470.60546875), (966.28515625, 501.46484375))
true and false collision so given priority to text2 which is the incoming text
TRUE
((881.421875, 552.3828125), (958.5703125, 583.2421875))
TRVE
((872.1640625, 649.58984375), (952.3984374999999, 686.62109375))
TRUE
((887.5937499999999, 756.0546875), (958.5703125, 786.9140625))
TRVE
((878.3359375000001, 839.375), (952.3984374999999, 874.86328125))
TRUE
((876.7929687499999, 922.6953125), (941.5976562499999, 955.09765625))
FAL
((875.25, 1010.64453125), (927.7109375, 1041.50390625))
collision happend with box:1010.64453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((926.16796875, 1013.73046875), (957.02734375, 1041.50390625))
text1 i.e the prev text is the winner
FALSE
((875.25, 1090.87890625), (955.484375, 1126.3671875))
TRUE
((872.1640625, 1208.14453125), (949.3125, 1239.00390625))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': True, '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '6', '7', '9', '10']
the assigned keys are ['2', '3', '4', '5', '8']
['2', '3', '4', '5', '8', '2', '3', '4', '5', '8']
printing the number dict y_coordinate
{'2': 478, '3': 546, '4': 649, '5': 746, '8': 1018, '1': 178}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': True, '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XZZpu5U.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1146.8955078125
bottom right x of T/F: 1580.0957031250002
first t/f detection
falte
((1185.06640625, 524.412109375), (1334.5888671875, 626.2607421875))
collision happend with box:524.412109375 and text:falte solving on the basis of percent match boxes
the current box specification are
falee
((1178.5654296875, 654.431640625), (1297.75, 734.6103515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:654.431640625 and text:falee solving on the basis of percent match boxes
the current box specification are
Teuu
((1180.732421875, 784.451171875), (1310.751953125, 873.2978515625))
text2 i.e the incoming text is the winner
collision happend with box:784.451171875 and text:Teuu solving on the basis of percent match boxes
the current box specification are
Rul
((1191.5673828125, 910.13671875), (1328.087890625, 996.81640625))
text2 i.e the incoming text is the winner
collision happend with box:910.13671875 and text:Rul solving on the basis of percent match boxes
the current box specification are
Teue
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
text1 i.e the prev text is the winner
Tul
((1167.73046875, 1170.17578125), (1308.5849609375, 1241.6865234375))
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trur
((1156.8955078125, 1282.859375), (1302.083984375, 1373.873046875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1185.06640625, 524.412109375), (1334.5888671875, 626.2607421875))
falee
((1178.5654296875, 654.431640625), (1297.75, 734.6103515625))
Teuu
((1180.732421875, 784.451171875), (1310.751953125, 873.2978515625))
Rul
((1191.5673828125, 910.13671875), (1328.087890625, 996.81640625))
Teue
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
Tul
((1167.73046875, 1170.17578125), (1308.5849609375, 1241.6865234375))
Trur
((1156.8955078125, 1282.859375), (1302.083984375, 1373.873046875))
Folw
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
Folu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
Tre
((1165.5634765624998, 1690.25390625), (1315.0859375, 1781.267578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 777, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1189, '7': 1280, '8': 1419, '9': 1512, '10': 1649}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sJcae3x.jpg
OCR detection done with doctr
left top x of SN: 736.0234375000001
bottom right x of SN: 1144.7343749999998
left top x of T/F: 5422.578125
bottom right x of T/F: 6611.4609375
first t/f detection
FALSE
((5524.062499999999, 2168.1796875), (6210.1953125, 2378.59375))
TRUE
((5496.6171875, 2671.34375), (6118.7109375, 2927.5))
TRUE
((5514.9140625, 3165.359375), (6127.859375, 3375.7734375))
FALSE
((5542.359375, 3750.859375), (6201.046875, 3970.421875))
TRUE
((5514.9140625, 4299.765625), (6146.15625, 4519.328125))
FALSE
((5560.65625, 4830.375), (6237.640625, 5031.640625))
1FALSE
((5359.390625, 5223.7578125), (6265.085937499999, 5553.1015625))
TRUE
((5405.1328125, 5772.6640625), (5999.781250000001, 6019.671875))
TRUE
((5423.4296875, 6202.640625), (5972.3359375, 6422.203125))
TRUE
((5423.4296875, 6861.328125), (6045.5234375, 7080.890625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2186, '2': 2753, '3': 3137, '4': 3705, '5': 4263, '6': 4839, '7': 5223, '8': 5781, '9': 6175, '10': 6742}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FNjcH1n.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6458.65625
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
True
((5274.250000000001, 1734.0), (5716.78125, 2013.96875))
Tue
((5292.312499999999, 2275.875), (5752.906249999999, 2537.78125))
false
((5337.46875, 2718.40625), (5816.125000000001, 3052.5625))
Folse
((5319.406249999999, 3314.46875), (5789.031250000001, 3639.59375))
True
((5301.343750000001, 3973.75), (5779.999999999999, 4262.75))
False
((5319.406249999999, 4443.375), (5798.0625, 4759.46875))
Folse
((5310.375, 4949.125), (5725.812499999999, 5229.09375))
True
((5328.437500000001, 5518.09375), (5734.843750000001, 5743.875))
Tue
((5301.343750000001, 5987.71875), (5752.906249999999, 6249.625))
Thue
((5328.437500000001, 6565.71875), (5825.15625, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2546, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5039, '8': 5635, '9': 6023, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2EufWcq.jpg
rotation started
['E', '8', 'N', 'D3', 'E', 'I', '2', 'F', 'F', '5', 'I', 'P', 'I', 'E', 'I', 'I', 'p.', '8', 'I', 'e', '7', 'H', 'E', 'E', 'I', 'I', 'I', 'E', ':', 'I', 'i', '[', '8', 'I', '2', 'I', 'E', 'e', 'E', 'I', '8', 'a', 'I', '€', 'I', 'e', 'I', '!', '2', 'I', 'g', '1', 'I', '&', 'LE', 'I', 'I', 'E', 'E', 'F', 'I', '9', 'a', 'I', 'I', 'a', 'E', 'B', 'I', 'I', '8', 'a', 'f', '5', 'I', 'I', 'I', 'I', '8', '2', 'E', '1', 'I', 'E', 'i', 'I', 'E', '1', '&', 'E', 'I', 'E', 'E', 'I', 'g', '8', 'it', 'I', 'I', 'I', 'I', 'I', ':', 'I', 'of', 'LE', '8', 'I', '1', 'E', 'I', '£', 'le', '3', '-', 'I', 'I', 'I', 'I', 'I', '2', 'E', 'I', 'e', '1E', 'P', 'A', 'e', 'I', 'E', 'I', 'E', 'e', 'E', 'I', 'I', 'I', 'iE', 'I', 'E', 'I', 'F', 'F', 'I', '1', 'I', 'I', '7', 'E', 'o', '2', '', 'E', 'E', 'I', ':', '1', '2', 'I', 'I', 'I', 'I', 'I', 'E', '2', '1E', 'I', 'I', 'E', '2', 'E', '-', 'à', 'à', 'I', '1', 'I', 'E', 'E', 'I', 'E', 'E', 'I', 'tn', 'I', 'I', 'H', 'a', '-', 'à', '8', '-', 'q7', '-', '4', 'à', '(', '-', 'Ind', 'MAME', 'Conpe', 'l', 'DITE', 'DE', 'Op', 'ILE', '-']
rotation started
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/2EufWcq.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lqdSQBD.jpg
OCR detection done with doctr
left top x of T/F: 5899.148437500001
bottom right x of T/F: 7126.541015625
left top x of SN: 888.7695312499999
bottom right x of SN: 1301.31640625
first t/f detection
TRUE
((5957.595703124999, 2209.1953125), (6664.92578125, 2490.189453125))
TRUE
((6044.80078125, 2809.94140625), (6703.68359375, 3090.935546875))
FALSE
((6015.732421875, 3400.998046875), (6732.751953125, 3662.61328125))
FALSE
((6015.732421875, 3992.0546875), (6713.373046875, 4166.46484375))
TRUE
((5986.6640625, 4428.080078125), (6635.857421875, 4660.626953125))
TRUE
((5996.353515624999, 5077.2734375), (6713.373046875, 5338.888671875))
TRUE
((5996.353515624999, 5774.9140625), (6742.44140625, 6007.4609375))
TRUE
((6035.111328125, 6307.833984375), (6664.92578125, 6491.93359375))
FALSE
((6015.732421875, 6821.375), (6819.95703125, 7082.990234375))
TRUE
((6015.732421875, 7431.810546875), (6587.410156249999, 7654.66796875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2499, '2': 3071, '3': 3643, '4': 4214, '5': 4592, '6': 5174, '7': 5939, '8': 6521, '9': 6898, '10': 7674}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SMm9p1N.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6314.156250000001
left top x of SN: 673.4687499999999
bottom right x of SN: 1079.25
first t/f detection
TRUE
((5301.343750000001, 2023.0), (5834.187499999999, 2230.71875))
TRUE
((5247.156250000001, 2537.78125), (5834.187499999999, 2754.53125))
TRVE
((5247.156250000001, 3043.53125), (5752.906249999999, 3269.3125))
FALSE
((5301.343750000001, 3522.1875), (5906.4375, 3720.875))
FALSE
((5283.28125, 4145.34375), (5861.281249999999, 4344.03125))
TRVE
((5310.375, 4605.9375), (5761.937500000001, 4786.5625))
TRUE
((5355.531250000001, 5048.46875), (5888.374999999999, 5220.0625))
TRUE
((5337.46875, 5536.15625), (5861.281249999999, 5743.875))
TRUE
((5319.406249999999, 5969.65625), (5852.25, 6195.4375))
TRUE
((5337.46875, 6574.75), (5870.312500000001, 6782.46875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2700, '3': 3061, '4': 3603, '5': 4145, '6': 4696, '7': 5066, '8': 5626, '9': 5996, '10': 6556}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IRpxdDf.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1224.91796875
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 501.46484375))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:549.296875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((886.05078125, 757.59765625), (958.5703125, 786.9140625))
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
text1 i.e the prev text is the winner
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((876.7929687499999, 925.78125), (941.5976562499999, 955.09765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
FALSE
((884.5078125, 472.1484375), (966.28515625, 501.46484375))
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
TRUE
((886.05078125, 757.59765625), (958.5703125, 786.9140625))
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
TRUE
((876.7929687499999, 925.78125), (941.5976562499999, 955.09765625))
FAL
((875.25, 1012.1875), (927.7109375, 1041.50390625))
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((924.625, 1013.73046875), (957.02734375, 1039.9609375))
text1 i.e the prev text is the winner
FALSE
((876.7929687499999, 1093.96484375), (953.9414062500001, 1124.82421875))
TRUE
((872.1640625, 1208.14453125), (946.2265625, 1239.00390625))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 374, '2': 476, '3': 544, '4': 644, '5': 745, '6': 847, '7': 913, '8': 1015, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0MCLnne.jpg
OCR detection done with doctr
left top x of SN: 983.0312499999999
bottom right x of SN: 1391.7421875
left top x of T/F: 5514.062499999999
bottom right x of T/F: 6666.3515625
first t/f detection
A
((5725.328125, 2232.21875), (5807.6640625, 2287.109375))
collision happend with box:2232.21875 and text:A solving on the basis of percent match boxes
the current box specification are
TRUE
((5734.4765625, 2323.703125), (6228.4921875, 2543.265625))
text2 i.e the incoming text is the winner
PAU
((5606.3984375, 2643.8984375), (6008.9296875, 2826.8671875))
FAUE
((5578.953125, 3000.6875), (6100.4140625, 3220.25))
TRUE
((5707.031250000001, 3723.4140625), (6210.1953125, 3897.234375))
TAUE
((5606.3984375, 4217.4296875), (6118.7109375, 4391.25))
FALE
((5825.9609375, 4619.9609375), (6319.9765625, 4784.6328125))
TRUG
((5670.4375, 5251.203125), (6109.562499999999, 5425.0234375))
TRLE
((5606.3984375, 5681.1796875), (6008.9296875, 5873.296875))
TRUE
((5707.031250000001, 6129.453125), (6072.96875, 6257.53125))
TEUL
((5679.5859375, 6541.1328125), (6109.562499999999, 6724.1015625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2195, '2': 2744, '3': 3119, '4': 3677, '5': 4235, '6': 4793, '7': 5178, '8': 5745, '9': 6120, '10': 6678}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SWEGOOj.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 331.162109375
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((988.76953125, 507.568359375), (1032.275390625, 549.462890625))
collision happend with box:507.568359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 591.357421875), (1030.6640625, 626.806640625))
text2 i.e the incoming text is the winner
collision happend with box:591.357421875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((998.4375, 671.923828125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
T
((987.1582031249999, 884.619140625), (1030.6640625, 924.90234375))
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
oT
((1001.66015625, 970.01953125), (1079.00390625, 1011.9140625))
text2 i.e the incoming text is the winner
collision happend with box:970.01953125 and text:oT solving on the basis of percent match boxes
the current box specification are
F
((983.935546875, 1045.751953125), (1022.607421875, 1087.646484375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '5', '6']
the assigned keys are ['2', '3', '4', '7', '8', '9', '10']
['2', '3', '4', '7', '8', '9', '10', '2', '3', '4', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 509, '3': 578, '4': 684, '7': 952, '8': 1057, '9': 1127, '10': 1227, '1': 209}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6xcmfsB.jpg
OCR detection done with doctr
left top x of SN: 671.9843749999998
bottom right x of SN: 1071.5468749999998
left top x of T/F: 5065.7890625
bottom right x of T/F: 6245.5234375
first t/f detection
TRUE
((5139.828125, 1619.2734375), (5633.84375, 1793.09375))
FALSE
((5148.9765625, 2104.140625), (5707.031250000001, 2305.40625))
TRUE
((5130.6796875, 2543.265625), (5679.5859375, 2707.9375))
FALSE
((5094.0859375, 3092.171875), (5624.6953125, 3256.84375))
FALSE
((5103.234375, 3686.8203125), (5624.6953125, 3851.4921875))
FALSE
((5112.3828125, 4107.6484375), (5633.84375, 4281.46875))
TRUE
((5121.53125, 4528.4765625), (5624.6953125, 4738.890625))
TRUE.
((5103.234375, 5059.0859375), (5633.84375, 5232.90625))
TRUE
((5084.9375, 5479.9140625), (5615.546875, 5662.8828125))
TRUE
((5103.234375, 6047.1171875), (5615.546875, 6230.0859375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1665, '2': 2204, '3': 2570, '4': 3110, '5': 3641, '6': 4180, '7': 4537, '8': 5077, '9': 5434, '10': 5973}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IOj3f0x.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6603.156249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
first t/f detection
A
((6502.5, 650.25), (6556.6875, 704.4375))
Thsl
((5491.000000000001, 2158.46875), (6087.062500000001, 2366.1875))
Fase
((6132.218749999999, 2456.5), (6475.40625, 2718.40625))
Tauue
((5599.375000000001, 3224.15625), (6159.312499999999, 3422.84375))
Tuul
((5536.156249999999, 3612.5), (6114.156250000001, 3820.21875))
Felse
((5491.000000000001, 4208.5625), (6023.843749999999, 4461.4375))
False
((6069.0, 4669.15625), (6511.531249999999, 4885.90625))
collision happend with box:4669.15625 and text:False solving on the basis of percent match boxes
the current box specification are
Llee
((5554.21875, 4777.53125), (6114.156250000001, 5003.3125))
text1 i.e the prev text is the winner
false
((5491.000000000001, 5274.25), (5960.625, 5500.03125))
Trul
((5518.093750000001, 5807.09375), (5987.71875, 6023.84375))
Tue
((5518.093750000001, 6358.0), (6023.843749999999, 6574.75))
Tue
((5545.187500000001, 7053.40625), (6005.781250000001, 7270.15625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2736, '3': 3124, '4': 3702, '5': 4280, '6': 4885, '7': 5283, '8': 5888, '9': 6294, '10': 6908}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qet6ZdJ.jpg
OCR detection done with doctr
left top x of T/F: 5514.062499999999
bottom right x of T/F: 6831.0234375
left top x of SN: 562.203125
bottom right x of SN: 989.2109375000001
first t/f detection
TRUE
((5615.546875, 2223.0703125), (6255.9375, 2442.6328125))
TRUE
((5633.84375, 2680.4921875), (6265.085937499999, 2900.0546875))
FALSE
((5597.25, 3247.6953125), (6384.015625, 3421.515625))
FALSE
((5606.3984375, 3860.640625), (6319.9765625, 4034.4609375))
FALSE
((5615.546875, 4528.4765625), (6228.4921875, 4702.296875))
FALSE
((5496.6171875, 4985.8984375), (6201.046875, 5141.421875))
FALSE
((5588.1015625, 5443.3203125), (6347.421875, 5644.5859375))
TRUE
((5624.6953125, 5992.2265625), (6265.085937499999, 6193.4921875))
FALSe
((5578.953125, 6477.09375), (6292.531250000001, 6678.359375))
TRUE
((5560.65625, 7117.484375), (6164.453125, 7291.3046875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2250, '2': 2836, '3': 3238, '4': 3833, '5': 4418, '6': 5022, '7': 5415, '8': 6019, '9': 6422, '10': 7016}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VOWRKeG.jpg
OCR detection done with doctr
left top x of SN: 908.28125
bottom right x of SN: 1305.03125
left top x of T/F: 5228.124999999999
bottom right x of T/F: 6359.312499999999
first t/f detection
FALSE
((5301.343750000001, 1905.59375), (5825.15625, 2086.21875))
FALSE
((5310.375, 2429.40625), (5825.15625, 2610.03125))
TRUE
((5256.1875, 2844.84375), (5807.093749999999, 3052.5625))
TRUE
((5301.343750000001, 3368.65625), (5906.4375, 3612.5))
FALSE
((5346.499999999999, 3919.5625), (5825.15625, 4082.125))
TRUE
((5274.250000000001, 4425.3125), (5770.96875, 4605.9375))
PALSE
((5319.406249999999, 4840.75), (5942.562499999999, 5057.5))
TRUE
((5274.250000000001, 5328.4375), (5779.999999999999, 5509.0625))
TRUE
((5247.156250000001, 5725.8125), (5716.78125, 5897.40625))
TRUE
((5274.250000000001, 6339.9375), (5789.031250000001, 6511.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2528, '3': 2880, '4': 3395, '5': 3919, '6': 4443, '7': 4786, '8': 5319, '9': 5671, '10': 6213}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pzjmQaX.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6558.000000000001
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
first t/f detection
dabe
((5463.906250000001, 2312.0), (5861.281249999999, 2610.03125))
Jalas
((5445.84375, 2908.0625), (5807.093749999999, 3142.875))
drwe
((5536.156249999999, 3395.75), (5879.34375, 3630.5625))
Arae
((5491.000000000001, 3838.28125), (5915.468749999999, 4055.03125))
collision happend with box:3838.28125 and text:Arae solving on the basis of percent match boxes
the current box specification are
Jalae
((5897.406250000001, 3811.1875), (6358.000000000001, 4073.09375))
text2 i.e the incoming text is the winner
Jrwe
((5491.000000000001, 4398.21875), (5924.500000000001, 4669.15625))
dorue
((5527.125, 5138.78125), (5978.687500000001, 5418.75))
the
((5192.96875, 6177.375), (5400.687499999999, 6312.84375))
collision happend with box:6177.375 and text:the solving on the basis of percent match boxes
the current box specification are
oruc
((5581.3125, 6258.65625), (5987.71875, 6484.4375))
text2 i.e the incoming text is the winner
doue
((5644.531249999999, 6881.8125), (6041.90625, 7071.46875))
the final dict without editing {'1': 'NULL', '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': 'NULL', '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2411, '3': 2971, '4': 3540, '5': 3919, '6': 4497, '7': 5274, '8': 5852, '9': 6249, '10': 7044}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': 'NULL', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hhP1kex.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6792.812499999999
left top x of SN: 411.5625000000001
bottom right x of SN: 835.4062500000001
first t/f detection
TRUE
((5527.125, 2104.28125), (6367.03125, 2357.15625))
TRUE
((5554.21875, 2646.15625), (6339.9375, 2935.15625))
TRUE
((5608.40625, 3197.0625), (6394.125, 3486.0625))
FALSE
((5509.062499999999, 3766.03125), (6466.375000000001, 4136.3125))
FALSE
((5554.21875, 4461.4375), (6448.3125, 4750.4375))
FALS
((5554.21875, 4985.25), (6231.5625, 5292.3125))
FALSE
((5527.125, 5491.0), (6448.3125, 5743.875))
TRUE
((5518.093750000001, 6023.84375), (6294.781249999999, 6258.65625))
TRUE
((5527.125, 6475.40625), (6385.093750000001, 6728.28125))
TRUE
((5536.156249999999, 7152.75), (6385.093750000001, 7396.59375))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '4']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9', '10']
['2', '3', '5', '6', '7', '8', '9', '10', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2962, '3': 3386, '5': 4596, '6': 5220, '7': 5617, '8': 6258, '9': 6628, '10': 7252, '1': 2662}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MmuQQou.jpg
OCR detection done with doctr
left top x of T/F: 6031.625000000001
bottom right x of T/F: 7289.0546875
left top x of SN: 1439.921875
bottom right x of SN: 1854.859375
first t/f detection
TRUE
((6031.835937499999, 2447.265625), (6442.9765625, 2652.8359375))
TRUE
((5953.5234375, 2926.9296875), (6413.609375, 3161.8671875))
FALSE
((6012.2578125, 3445.75), (6511.5, 3641.53125))
FALSE
((5973.1015625, 4062.4609375), (6491.921875, 4258.2421875))
FALSE
((5933.9453125, 4640.015625), (6442.9765625, 4826.0078125))
FALSE
((5875.2109375, 5168.625), (6403.8203125, 5354.6171875))
TROE
((5875.2109375, 5589.5546875), (6335.296874999999, 5775.546875))
TROE
((5826.265625, 6108.375), (6266.7734375, 6304.15625))
TRUE
((5845.84375, 6529.3046875), (6286.351562499999, 6725.0859375))
TRUE
((5845.84375, 7038.3359375), (6335.296874999999, 7263.484375))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '2', '3', '4']
the assigned keys are ['5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'5': 4610, '6': 5158, '7': 5511, '8': 6108, '9': 6450, '10': 7018}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GUALkq5.jpg
OCR detection done with doctr
left top x of T/F: 5293.87109375
bottom right x of T/F: 6392.99609375
left top x of SN: 901.6015624999998
bottom right x of SN: 1303.8828125000002
first t/f detection
Tru
((5313.132812499999, 2713.68359375), (5831.7890625, 2935.96484375))
Trw
((5331.656249999999, 3186.03125), (5868.8359375, 3399.05078125))
faye
((5350.1796875, 3612.0703125), (5979.9765625, 3871.3984375))
falk
((5368.703125, 4195.55859375), (5915.14453125, 4427.1015625))
falye
((5387.2265625, 4816.09375), (5924.40625, 4992.06640625))
True
((5331.656249999999, 5269.91796875), (5831.7890625, 5445.890625))
True.
((5294.609375, 5705.21875), (5942.9296875, 5881.19140625))
True
((5322.394531249999, 6177.56640625), (5841.05078125, 6344.27734375))
True
((5303.87109375, 6631.390625), (5776.21875, 6816.625))
Trul
((5294.609375, 7196.35546875), (5748.43359375, 7372.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2834, '2': 3352, '3': 3704, '4': 4232, '5': 4760, '6': 5297, '7': 5649, '8': 6196, '9': 6557, '10': 7122}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8uEnJiI.jpg
OCR detection done with doctr
left top x of SN: 586.7031250000001
bottom right x of SN: 998.24609375
left top x of T/F: 5247.5625
bottom right x of T/F: 6457.828125
first t/f detection
FALSE
((5322.394531249999, 2435.83203125), (6007.76171875, 2611.8046875))
TRUE
((5285.34765625, 2926.703125), (5868.8359375, 3102.67578125))
Falu.
((5294.609375, 3269.38671875), (5868.8359375, 3547.23828125))
FALSE
((5266.82421875, 3926.96875), (5961.453125, 4139.98828125))
FALS
((5285.34765625, 4482.671875), (5850.3125, 4704.953125))
TRUE
((5220.515625, 5038.375), (5850.3125, 5251.39453125))
FALSE
((5239.0390625, 5455.15234375), (5896.62109375, 5658.91015625))
TRUE
((5201.9921875, 6020.1171875), (5785.48046875, 6233.13671875))
TRUE
((5239.0390625, 6418.37109375), (5887.359375, 6640.65234375))
TRUE
((5294.609375, 6964.8125), (5924.40625, 7187.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2435, '2': 2991, '3': 3371, '4': 3945, '5': 4501, '6': 5075, '7': 5445, '8': 6010, '9': 6381, '10': 6955}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TXVeZeI.jpg
OCR detection done with doctr
left top x of SN: 754.3203124999999
bottom right x of SN: 1153.8828125
left top x of T/F: 5312.796875
bottom right x of T/F: 6465.085937499999
first t/f detection
TRUE
((5368.539062499999, 1847.984375), (6036.375, 2113.2890625))
TRUE
((5359.390625, 2378.59375), (6054.671875, 2671.34375))
FALSE
((5350.2421875, 2890.90625), (6091.265625, 3192.8046875))
TRVE
((5368.539062499999, 3513.0), (6036.375, 3723.4140625))
FALS
((5313.6484375, 4098.5), (5862.554687500001, 4318.0625))
FALSE
((5313.6484375, 4574.21875), (6127.859375, 4812.078125))
FALSE
((5313.6484375, 5077.3828125), (6118.7109375, 5278.6484375))
TRUU
((5313.6484375, 5516.5078125), (5999.781250000001, 5772.6640625))
FAL
((5277.0546875, 5992.2265625), (5725.328125, 6211.7890625))
collision happend with box:5992.2265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((5743.625, 5983.078125), (6054.671875, 6184.34375))
text1 i.e the prev text is the winner
FALSE
((5313.6484375, 6605.171875), (6127.859375, 6852.1796875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2186, '2': 2726, '3': 3092, '4': 3631, '5': 4162, '6': 4711, '7': 5068, '8': 5617, '9': 5973, '10': 6531}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KikF8Hg.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6630.249999999999
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
first t/f detection
FALSE
((5463.906250000001, 1923.65625), (6087.062500000001, 2185.5625))
FALSE
((5454.874999999999, 2492.625), (6087.062500000001, 2709.375))
TRUE
((5373.593749999999, 2953.21875), (5969.656249999999, 3215.125))
TRUE
((5265.218749999999, 3639.59375), (5924.500000000001, 3892.46875))
TRUE
((5355.531250000001, 4262.75), (5942.562499999999, 4470.46875))
FALSE
((5409.718750000001, 4840.75), (6023.843749999999, 5012.34375))
FALSE
((5319.406249999999, 5301.34375), (5969.656249999999, 5509.0625))
FALS
((5427.781249999999, 5807.09375), (5924.500000000001, 6014.8125))
FALSE
((5427.781249999999, 6285.75), (6159.312499999999, 6493.46875))
TRUE
((5355.531250000001, 6926.96875), (5978.687500000001, 7134.6875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2068, '2': 2673, '3': 3070, '4': 3675, '5': 4280, '6': 4885, '7': 5301, '8': 5915, '9': 6321, '10': 6945}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dKh1074.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6765.718749999999
left top x of SN: 700.5624999999999
bottom right x of SN: 1115.375
first t/f detection
TRUG
((5617.437499999999, 2004.9375), (6204.46875, 2176.53125))
TRVE
((5572.281250000001, 2555.84375), (6141.250000000001, 2718.40625))
FALSE
((5590.343749999999, 3070.625), (6258.65625, 3278.34375))
FALSE
((5554.21875, 3675.71875), (6222.531250000001, 3838.28125))
TRVE
((5545.187500000001, 4280.8125), (6159.312499999999, 4443.375))
FALSE
((5509.062499999999, 4759.46875), (6159.312499999999, 4922.03125))
TFALSE
((5563.249999999999, 5238.125), (6330.906250000001, 5409.71875))
TRVE
((5500.03125, 5743.875), (6114.156250000001, 5906.4375))
TRVE
((5563.249999999999, 6195.4375), (6159.312499999999, 6358.0))
TRVE
((5518.093750000001, 6818.59375), (6078.031249999999, 6981.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3052, '4': 3630, '5': 4208, '6': 4795, '7': 5183, '8': 5770, '9': 6159, '10': 6746}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hOqd6O1.jpg
OCR detection done with doctr
left top x of SN: 461.5703124999999
bottom right x of SN: 879.4296875
left top x of T/F: 5541.507812500001
bottom right x of T/F: 6766.984375
first t/f detection
FALSE
((5606.3984375, 1765.6484375), (6283.3828125, 2030.953125))
TRUE
((5615.546875, 2323.703125), (6292.531250000001, 2616.453125))
FALSE
((5615.546875, 2927.5), (6329.125, 3174.5078125))
TRUE
((5588.1015625, 3476.40625), (6210.1953125, 3686.8203125))
TRUE
((5578.953125, 3906.3828125), (6228.4921875, 4153.390625))
FALSE
((5615.546875, 4656.5546875), (6319.9765625, 4903.5625))
TRUE
((5569.804687500001, 5287.796875), (6137.0078125, 5498.2109375))
TRVE
((5524.062499999999, 5809.2578125), (6201.046875, 6102.0078125))
FALSE
((5707.031250000001, 6376.4609375), (6429.7578125, 6641.765625))
TRUE
((5560.65625, 7053.4453125), (6127.859375, 7318.75))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1829, '2': 2406, '3': 2982, '4': 3567, '5': 3952, '6': 4537, '7': 5315, '8': 5900, '9': 6303, '10': 7080}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Lj8xMTS.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
TRVE
((5229.09375, 1833.34375), (5879.34375, 2086.21875))
TRUE
((5202.0, 2411.34375), (6005.781250000001, 2664.21875))
TRVE
((5247.156250000001, 3007.40625), (5960.625, 3260.28125))
TRUE
((5310.375, 3531.21875), (5897.406250000001, 3747.96875))
TRUF
((5292.312499999999, 4036.96875), (5933.53125, 4253.71875))
TRUR
((5328.437500000001, 4669.15625), (5996.749999999999, 4885.90625))
TRVE
((5265.218749999999, 5337.46875), (5861.281249999999, 5581.3125))
FALSE
((5319.406249999999, 5825.15625), (6005.781250000001, 6023.84375))
TRUP
((5364.5625, 6348.96875), (5987.71875, 6565.71875))
collision happend with box:6348.96875 and text:TRUP solving on the basis of percent match boxes
the current box specification are
the
((4976.21875, 6267.6875), (5211.031249999999, 6412.1875))
text1 i.e the prev text is the winner
FALSE
((5328.437500000001, 7008.25), (6023.843749999999, 7225.0))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['1', '2', '3', '4', '5', '9']
the assigned keys are ['6', '7', '8', '10']
printing the number dict y_coordinate
{'6': 4569, '7': 5319, '8': 5906, '10': 7071}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SUT4AWW.jpg
OCR detection done with doctr
left top x of SN: 107.65624999999997
bottom right x of SN: 329.55078125
left top x of T/F: 964.267578125
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 464.0625))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 502.734375), (1035.498046875, 551.07421875))
text2 i.e the incoming text is the winner
collision happend with box:502.734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1029.052734375, 631.640625))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((972.6562500000001, 791.162109375), (982.3242187500001, 802.44140625))
text2 i.e the incoming text is the winner
collision happend with box:791.162109375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 778.271484375), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 464.0625))
T
((985.546875, 502.734375), (1035.498046875, 551.07421875))
T
((983.935546875, 586.5234375), (1029.052734375, 631.640625))
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
T
((972.6562500000001, 791.162109375), (982.3242187500001, 802.44140625))
collision happend with box:791.162109375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 778.271484375), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
T
((985.546875, 884.619140625), (1032.275390625, 924.90234375))
ot
((1000.0488281250001, 966.796875), (1083.837890625, 1015.13671875))
collision happend with box:966.796875 and text:ot solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 580, '2': 509, '3': 578, '4': 679, '5': 781, '6': 884, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tjERJXl.jpg
OCR detection done with doctr
left top x of T/F: 5957.28515625
bottom right x of T/F: 7223.435546875
left top x of SN: 879.0800781249999
bottom right x of SN: 1301.31640625
first t/f detection
TRUE
((6054.490234375001, 2238.263671875), (6519.583984375, 2383.60546875))
TRUE
((6083.55859375, 2819.630859375), (6568.03125, 2994.041015625))
FALSE
((6015.732421875, 3381.619140625), (6568.03125, 3565.71875))
TRUE
((6073.869140625, 3933.91796875), (6548.65234375, 4079.259765625))
TRUE
((6102.9375, 4437.76953125), (6558.341796875, 4583.111328125))
FALSE
((5976.974609375, 5086.962890625), (6519.583984375, 5232.3046875))
TRUE
((6044.80078125, 5784.603515625), (6519.583984375, 5920.255859375))
TRUE
((6015.732421875, 6269.076171875), (6519.583984375, 6443.486328125))
TRUE
((6035.111328125, 6792.306640625), (6529.2734375, 6976.40625))
TRUE
((6025.421875, 7402.7421875), (6500.205078125001, 7577.15234375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2267, '2': 2839, '3': 3420, '4': 4011, '5': 4389, '6': 4980, '7': 5755, '8': 6327, '9': 6724, '10': 7499}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ESaXykv.jpg
OCR detection done with doctr
left top x of SN: 65.619140625
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Tyue
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
collision happend with box:625.748046875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
True
((1390.9394531250002, 756.212890625), (1504.4921875, 804.533203125))
text2 i.e the incoming text is the winner
collision happend with box:756.212890625 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1395.771484375, 884.26171875), (1523.8203125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:884.26171875 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Falr
((1398.1875, 1036.470703125), (1523.8203125, 1092.0390625))
text2 i.e the incoming text is the winner
collision happend with box:1036.470703125 and text:Falr solving on the basis of percent match boxes
the current box specification are
Flt
((1374.02734375, 1176.599609375), (1494.828125, 1237.0))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1176.599609375 and text:Flt solving on the basis of percent match boxes
the current box specification are
Fulau
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
True
((1390.9394531250002, 756.212890625), (1504.4921875, 804.533203125))
Fatte
((1395.771484375, 884.26171875), (1523.8203125, 942.24609375))
Falr
((1398.1875, 1036.470703125), (1523.8203125, 1092.0390625))
Flt
((1374.02734375, 1176.599609375), (1494.828125, 1237.0))
Fulau
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
False
((1410.267578125, 1449.609375), (1533.484375, 1510.009765625))
Tyue
((1381.275390625, 1577.658203125), (1506.908203125, 1623.5625))
True
((1407.8515625, 1700.875), (1511.740234375, 1758.859375))
Trt
((1376.443359375, 1882.076171875), (1487.580078125, 1930.396484375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 862, '2': 761, '3': 864, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SqzzLX5.jpg
OCR detection done with doctr
left top x of SN: 88.421875
bottom right x of SN: 306.484375
left top x of T/F: 863.8124999999999
bottom right x of T/F: 1230.8203125
first t/f detection
Feulse
((886.5, 418.6875), (959.4531249999999, 453.578125))
collision happend with box:418.6875 and text:Feulse solving on the basis of percent match boxes
the current box specification are
Trute
((884.9140625, 505.9140625), (973.7265625, 542.390625))
text2 i.e the incoming text is the winner
collision happend with box:505.9140625 and text:Trute solving on the basis of percent match boxes
the current box specification are
Truue
((881.7421875, 599.484375), (961.0390625, 629.6171875))
text2 i.e the incoming text is the winner
collision happend with box:599.484375 and text:Truue solving on the basis of percent match boxes
the current box specification are
Truue
((886.5, 688.296875), (967.3828125, 724.7734375))
text2 i.e the incoming text is the winner
collision happend with box:688.296875 and text:Truue solving on the basis of percent match boxes
the current box specification are
Tyuc
((892.84375, 800.8984375), (967.3828125, 838.9609375))
text1 i.e the prev text is the winner
True
((897.6015625, 881.78125), (972.140625, 919.84375))
collision happend with box:881.78125 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((897.6015625, 962.6640625), (978.484375, 1000.7265625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Feulse
((886.5, 418.6875), (959.4531249999999, 453.578125))
Trute
((884.9140625, 505.9140625), (973.7265625, 542.390625))
Truue
((881.7421875, 599.484375), (961.0390625, 629.6171875))
Truue
((886.5, 688.296875), (967.3828125, 724.7734375))
Tyuc
((892.84375, 800.8984375), (967.3828125, 838.9609375))
True
((897.6015625, 881.78125), (972.140625, 919.84375))
Tywe
((897.6015625, 962.6640625), (978.484375, 1000.7265625))
paye
((905.53125, 1048.3046875), (978.484375, 1083.1953125))
Tywe
((892.84375, 1129.1875), (970.5546875, 1170.421875))
Fale
((894.4296875, 1238.6171875), (972.140625, 1275.09375))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 418, '2': 520, '3': 585, '4': 688, '5': 789, '6': 891, '7': 957, '8': 1060, '9': 1129, '10': 1230}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RNxITzv.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1345.068359375
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 462.451171875))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 504.345703125), (1033.88671875, 551.07421875))
text2 i.e the incoming text is the winner
collision happend with box:504.345703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1032.275390625, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 884.619140625), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 462.451171875))
T
((985.546875, 504.345703125), (1033.88671875, 551.07421875))
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
F
((1000.0488281250001, 670.3125), (1032.275390625, 721.875))
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
T
((985.546875, 884.619140625), (1032.275390625, 923.291015625))
or
((1000.0488281250001, 966.796875), (1083.837890625, 1013.525390625))
collision happend with box:966.796875 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 576, '4': 681, '5': 781, '6': 883, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nV9zHTn.jpg
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6729.59375
left top x of SN: 528.96875
bottom right x of SN: 934.7499999999999
first t/f detection
TRVE
((5563.249999999999, 2077.1875), (6330.906250000001, 2366.1875))
FALSE
((5626.468750000001, 2691.3125), (6339.9375, 2953.21875))
TRUE
((5554.21875, 3215.125), (6177.375, 3477.03125))
FALSE
((5491.000000000001, 3874.40625), (6168.343750000001, 4118.25))
FALSE
((5472.9375, 4506.59375), (6177.375, 4705.28125))
TRUE
((5445.84375, 4994.28125), (6050.937499999999, 5247.15625))
TRUE
((5445.84375, 5500.03125), (6132.218749999999, 5761.9375))
TRUE
((5382.625000000001, 5987.71875), (6032.875000000001, 6231.5625))
TRUE
((5409.718750000001, 6439.28125), (6041.90625, 6683.125))
TRVE
((5409.718750000001, 7062.4375), (6023.843749999999, 7306.28125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2817, '3': 3215, '4': 3811, '5': 4389, '6': 4985, '7': 5373, '8': 5960, '9': 6348, '10': 6936}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Kk3EIE8.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/Kk3EIE8.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} Expected begin, end, and strides to be 1D equal size tensors, but got shapes [1], [2], and [1] instead. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GiTl4gv.jpg
OCR detection done with doctr
left top x of T/F: 5765.1572265625
bottom right x of T/F: 6933.1884765625
left top x of SN: 1264.3447265624998
bottom right x of SN: 1673.8730468750002
first t/f detection
TRUE
((6134.4189453125, 2185.5087890625), (6723.208984375001, 2434.99609375))
collision happend with box:2185.5087890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5805.095703125, 2325.2216796875), (6413.8447265625, 2624.6064453125))
text2 i.e the incoming text is the winner
FetsFASE
((5825.0546875, 2754.33984375), (6852.9423828125, 3083.6630859375))
FACSE
((5805.095703125, 3363.0888671875), (6553.5576171875, 3602.5966796875))
TRUE
((5835.0341796875, 3921.9404296875), (6533.5986328125, 4151.46875))
TRUE
((5835.0341796875, 4390.9765625), (6493.680664062499, 4630.484375))
Fr
((5805.095703125, 4899.9306640625), (6074.5419921875, 5129.458984375))
collision happend with box:4899.9306640625 and text:Fr solving on the basis of percent match boxes
the current box specification are
TRUE
((6084.521484375001, 4919.8896484375), (6743.16796875, 5159.3974609375))
text2 i.e the incoming text is the winner
FALSE
((5805.095703125, 5388.92578125), (6533.5986328125, 5668.3515625))
PALSE
((5944.80859375, 5708.26953125), (6653.3525390625, 5947.77734375))
EUe
((5864.97265625, 5887.900390625), (6473.7216796875, 6117.4287109375))
FALSE
((5805.095703125, 6366.916015625), (6533.5986328125, 6706.21875))
the
((5545.62890625, 7015.5830078125), (5775.1572265625, 7175.2548828125))
collision happend with box:7015.5830078125 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5904.890625, 6875.8701171875), (6633.3935546875, 7275.0498046875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2355, '2': 2894, '3': 3263, '4': 3812, '5': 4361, '6': 4919, '7': 5289, '8': 5847, '9': 6227, '10': 6796}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YaewHUB.jpg
OCR detection done with doctr
left top x of T/F: 5477.46875
bottom right x of T/F: 6739.539062499999
left top x of SN: 489.015625
bottom right x of SN: 906.8750000000001
first t/f detection
A
((5743.625, 2232.21875), (6100.4140625, 2470.078125))
T
((5752.7734375, 2817.71875), (5944.890625, 2991.5390625))
T>
((5670.4375, 3183.65625), (6137.0078125, 3476.40625))
T
((5606.3984375, 4016.1640625), (5853.40625, 4226.578125))
T
((5606.3984375, 4574.21875), (5853.40625, 4729.7421875))
A
((5615.546875, 5113.9765625), (5780.21875, 5333.5390625))
F
((5642.9921875, 5598.84375), (5798.515624999999, 5836.703125))
T
((5679.5859375, 6641.765625), (5880.8515625, 6824.734375))
F
((5716.1796875, 7099.1875), (5908.296875, 7382.7890625))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': 'NULL', '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2406, '2': 3000, '3': 3403, '4': 4016, '5': 4619, '6': 5232, '7': 5644, '8': 6266, '9': 6687, '10': 7309}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': 'NULL', '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J5RlmQv.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6377.375
left top x of SN: 330.2812500000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2519, '3': 3061, '4': 3630, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sKJHopD.jpg
OCR detection done with doctr
left top x of T/F: 5522.744140625
bottom right x of T/F: 6698.16796875
left top x of SN: 984.30859375
bottom right x of SN: 1398.634765625
first t/f detection
TRUE
((5542.1171875, 2390.126953125), (6198.23046875, 2605.70703125))
TRUE
((5654.593750000001, 2877.525390625), (6338.826171875, 3083.732421875))
False
((5738.951171875, 3383.669921875), (6320.080078125, 3561.7578125))
False
((5729.578125, 3955.42578125), (6273.21484375, 4133.513671875))
False
((5692.085937499999, 4536.5546875), (6291.9609375, 4742.76171875))
false
((5560.86328125, 5042.69921875), (6141.9921875, 5220.787109375))
True
((5692.085937499999, 5511.3515625), (6198.23046875, 5698.8125))
True
((5757.697265625, 5951.884765625), (6245.095703124999, 6129.97265625))
Trrue
((5813.935546875, 6458.029296875), (6329.453124999999, 6673.609375))
Trwe
((5785.816406249999, 7011.0390625), (6338.826171875, 7189.126953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2540, '2': 3074, '3': 3439, '4': 3983, '5': 4517, '6': 5070, '7': 5436, '8': 5998, '9': 6373, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Q9W8wOw.jpg
OCR detection done with doctr
left top x of SN: 202.04687499999997
bottom right x of SN: 438.39062500000006
left top x of T/F: 1295.53515625
bottom right x of T/F: 1733.2578125
first t/f detection
falue
((1336.0546875000002, 619.78125), (1472.21875, 723.078125))
collision happend with box:619.78125 and text:falue solving on the basis of percent match boxes
the current box specification are
falie
((1333.70703125, 755.9453125), (1444.0468750000002, 833.41796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:755.9453125 and text:falie solving on the basis of percent match boxes
the current box specification are
Tauu
((1329.01171875, 882.71875), (1462.828125, 969.58203125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:882.71875 and text:Tauu solving on the basis of percent match boxes
the current box specification are
AH
((1352.48828125, 1044.70703125), (1411.1796875, 1082.26953125))
text1 i.e the prev text is the winner
Tfur
((1331.359375, 1148.00390625), (1467.5234375, 1244.2578125))
collision happend with box:1148.00390625 and text:Tfur solving on the basis of percent match boxes
the current box specification are
Tyul
((1314.92578125, 1267.734375), (1451.08984375, 1340.51171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1267.734375 and text:Tyul solving on the basis of percent match boxes
the current box specification are
True
((1303.1875, 1385.1171875), (1448.7421875, 1471.98046875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falue
((1336.0546875000002, 619.78125), (1472.21875, 723.078125))
falie
((1333.70703125, 755.9453125), (1444.0468750000002, 833.41796875))
Tauu
((1329.01171875, 882.71875), (1462.828125, 969.58203125))
AH
((1352.48828125, 1044.70703125), (1411.1796875, 1082.26953125))
Tfur
((1331.359375, 1148.00390625), (1467.5234375, 1244.2578125))
Tyul
((1314.92578125, 1267.734375), (1451.08984375, 1340.51171875))
True
((1303.1875, 1385.1171875), (1448.7421875, 1471.98046875))
Faliue
((1321.96875, 1490.76171875), (1446.39453125, 1565.88671875))
Falue
((1319.62109375, 1610.4921875), (1444.0468750000002, 1685.6171875))
frue
((1314.92578125, 1793.609375), (1451.08984375, 1875.77734375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '5', '10']
the assigned keys are ['2', '3', '6', '7', '8', '9']
['2', '3', '6', '7', '8', '9', '2', '3', '6', '7', '8', '9']
printing the number dict y_coordinate
{'2': 772, '3': 861, '6': 1274, '7': 1366, '8': 1504, '9': 1596, '1': 472}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': True, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pgxC4RR.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 331.546875
left top x of T/F: 955.5
bottom right x of T/F: 1336.9453125
first t/f detection
Fall
((998.15625, 437.59375), (1086.328125, 488.2109375))
collision happend with box:437.59375 and text:Fall solving on the basis of percent match boxes
the current box specification are
Filfe
((1001.421875, 514.3359375), (1094.4921875, 561.6875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:514.3359375 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Tauuls
((1042.2421875, 597.609375), (1135.3125, 644.9609375))
text2 i.e the incoming text is the winner
collision happend with box:597.609375 and text:Tauuls solving on the basis of percent match boxes
the current box specification are
Bul
((978.5625, 705.375), (1081.4296875, 759.2578125))
text1 i.e the prev text is the winner
Toune
((968.765625, 800.078125), (1084.6953125, 853.9609375))
collision happend with box:800.078125 and text:Toune solving on the basis of percent match boxes
the current box specification are
pul
((976.9296875000001, 883.3515625), (1096.125, 930.703125))
text2 i.e the incoming text is the winner
collision happend with box:883.3515625 and text:pul solving on the basis of percent match boxes
the current box specification are
Tyue
((1030.8125, 969.890625), (1145.109375, 1017.2421875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fall
((998.15625, 437.59375), (1086.328125, 488.2109375))
collision happend with box:437.59375 and text:Fall solving on the basis of percent match boxes
the current box specification are
Filfe
((1001.421875, 514.3359375), (1094.4921875, 561.6875))
true and false collision so given priority to text2 which is the incoming text
Tauuls
((1042.2421875, 597.609375), (1135.3125, 644.9609375))
Bul
((978.5625, 705.375), (1081.4296875, 759.2578125))
Toune
((968.765625, 800.078125), (1084.6953125, 853.9609375))
pul
((976.9296875000001, 883.3515625), (1096.125, 930.703125))
Tyue
((1030.8125, 969.890625), (1145.109375, 1017.2421875))
Bue
((985.09375, 1058.0625), (1076.53125, 1108.6796875))
Seue
((991.625, 1278.4921875), (1073.265625, 1330.7421875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 427, '2': 532, '3': 600, '4': 702, '5': 804, '6': 906, '7': 973, '8': 1079, '9': 1147, '10': 1249}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jMBzTSY.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6684.437499999999
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5581.3125, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5527.125, 3052.5625), (6069.0, 3224.15625))
TRUE
((5590.343749999999, 3585.40625), (6078.031249999999, 3747.96875))
TRUE
((5626.468750000001, 4109.21875), (6087.062500000001, 4244.6875))
FALSE
((5527.125, 4750.4375), (6059.968750000001, 4885.90625))
TRUE
((5608.40625, 5445.84375), (6078.031249999999, 5581.3125))
TRUE
((5590.343749999999, 5933.53125), (6087.062500000001, 6105.125))
TRUE
((5626.468750000001, 6457.34375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3088, '4': 3675, '5': 4064, '6': 4642, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kJqpZlJ.jpg
OCR detection done with doctr
left top x of SN: 1363.552734375
bottom right x of SN: 1766.41015625
left top x of T/F: 5666.6015625
bottom right x of T/F: 6845.546875
first t/f detection
TRVE
((5754.1171875, 2509.568359375), (6238.58984375, 2693.66796875))
TRVE
((5725.048828125, 2994.041015625), (6228.900390625, 3178.140625))
FALSE
((5734.73828125, 3468.82421875), (6199.83203125, 3643.234375))
FALSE
((5754.1171875, 3992.0546875), (6238.58984375, 4185.84375))
FALSE
((5715.359375, 4573.421875), (6238.58984375, 4767.2109375))
FALIE
((5734.73828125, 5096.65234375), (6238.58984375, 5271.0625))
FALSE
((5715.359375, 5513.298828125), (6190.142578125, 5736.15625))
TRVE
((5676.6015625, 6017.150390625), (6112.626953125, 6210.939453125))
TRVE
((5734.73828125, 6453.17578125), (6228.900390625, 6637.275390625))
TRVE
((5686.291015625, 7034.54296875), (6102.9375, 7228.33203125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2548, '2': 3052, '3': 3400, '4': 3914, '5': 4418, '6': 4951, '7': 5300, '8': 5833, '9': 6181, '10': 6724}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gtyqlcL.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Toue
((5445.84375, 1986.875), (5969.656249999999, 2212.65625))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4244.6875), (5960.625, 4443.375))
Tue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Tue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : e38fphp.jpg
OCR detection done with doctr
left top x of SN: 957.1718750000001
bottom right x of SN: 1359.453125
left top x of T/F: 5516.15234375
bottom right x of T/F: 6670.84765625
first t/f detection
TRVE
((5526.15234375, 2046.83984375), (6026.28515625, 2259.859375))
FALSG
((5452.05859375, 2584.01953125), (6035.546875, 2787.77734375))
TRUE
((5507.62890625, 3000.796875), (5998.5, 3213.81640625))
FALSE
((5526.15234375, 3593.546875), (5979.9765625, 3778.78125))
FALSE
((5498.3671875, 4130.7265625), (5989.23828125, 4343.74609375))
FALSE
((5405.75, 4640.12109375), (5905.8828125, 4853.140625))
FALSE
((5452.05859375, 5056.8984375), (5896.62109375, 5242.1328125))
TRUE
((5424.2734375, 5594.078125), (5896.62109375, 5779.3125))
TRUE
((5452.05859375, 6047.90234375), (5933.66796875, 6223.875))
TRUE
((5424.2734375, 6510.98828125), (5831.7890625, 6677.69921875))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2046, '2': 2602, '3': 2973, '4': 3528, '5': 4075, '6': 4630, '7': 5001, '8': 5557, '9': 5927, '10': 6501}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vxiTFZD.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 331.546875
left top x of T/F: 955.5
bottom right x of T/F: 1338.578125
first t/f detection
falle
((996.5234375000001, 434.328125), (1089.59375, 489.84375))
collision happend with box:434.328125 and text:falle solving on the basis of percent match boxes
the current box specification are
filke
((999.7890625, 514.3359375), (1092.859375, 564.953125))
text1 i.e the prev text is the winner
collision happend with box:434.328125 and text:falle solving on the basis of percent match boxes
the current box specification are
fguls
((1042.2421875, 597.609375), (1136.9453125, 644.9609375))
text2 i.e the incoming text is the winner
collision happend with box:597.609375 and text:fguls solving on the basis of percent match boxes
the current box specification are
Bul
((976.9296875000001, 705.375), (1083.0625, 759.2578125))
text1 i.e the prev text is the winner
foure
((970.3984375, 798.4453125), (1084.6953125, 853.9609375))
collision happend with box:798.4453125 and text:foure solving on the basis of percent match boxes
the current box specification are
purl
((976.9296875000001, 881.71875), (1094.4921875, 927.4375))
text2 i.e the incoming text is the winner
collision happend with box:881.71875 and text:purl solving on the basis of percent match boxes
the current box specification are
Tuue
((1029.1796875, 966.625), (1145.109375, 1018.875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falle
((996.5234375000001, 434.328125), (1089.59375, 489.84375))
filke
((999.7890625, 514.3359375), (1092.859375, 564.953125))
fguls
((1042.2421875, 597.609375), (1136.9453125, 644.9609375))
Bul
((976.9296875000001, 705.375), (1083.0625, 759.2578125))
foure
((970.3984375, 798.4453125), (1084.6953125, 853.9609375))
purl
((976.9296875000001, 881.71875), (1094.4921875, 927.4375))
Tuue
((1029.1796875, 966.625), (1145.109375, 1018.875))
bue
((985.09375, 1059.6953125), (1078.1640625, 1110.3125))
fe
((991.625, 1156.03125), (1074.8984375, 1198.484375))
sue
((989.9921875, 1276.859375), (1073.265625, 1329.109375))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 600, '2': 532, '3': 599, '4': 703, '5': 804, '6': 906, '7': 973, '8': 1076, '9': 1144, '10': 1249}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VT1eUse.jpg
rotation started
['bf', '6', '00', '1', '', 'OT', '4', '', 'N', 'E', 'I', 'E', 'E', '7', 'a', 'I', 'I', 'I', 'E', 'e', 'E', '8', '8', 't', 'a', 'I', ':', 'E', 'I', 'I', 'I', 'E', '8', 'f', 'E', 'E', 'E', ':', 'E', 'I', 's', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', '2', 'I', '2', 'I', 'E', 'I', 'E', 'E', 'tn', 'I', 'E', 'E', 'of', 'a', 'Q', 'I', 'I', 'I', ':', 'B', '8', 'I', 'a', 'I', 'I', '9', 'I', 'I', '8', '2', 'a', 'E', 'I', 'E', 'E', 'I', 'E', 'I', 'I', 'E', 'I', '€', 'E', 'I', 'E', 'e', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'of', '8', 'I', 'I', 'E', 'I', 'I', 'E', 'E', 'it', '8', '€', '9', 'of', 'E', 'I', 'I', 'E', 'I', 'E', 'F', '11', '2', '16', 'E', 'E', '€', 'a', '9', 'E', 'DE', 'I', 'E', 'A', 'I', 'E', 'a', '-', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 'tn', 'I', '8', '€', 'I', '1', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 'it', 'E', 'E', 'I', '8', 'I', 'I', 'I', 'E', 'E', 'E', '2', 'I', 'I', 'I', 'E', 'E', 'E', 'I', 'E', 'e', 'I', '1', 'I', '€', ':', 't', 'I', 'I', 'I', 'I', ')', 'F', 'it', 'I', '8', ':', 'E', 'd', '4', '8', '?', '-', ':', '-', 'à', '€', '-', '€', 'I', 'V', '', 'A', '2', 'o6', '-', '2']
rotation started
['E0al', '"egep', 'uoosun', "'mou", '01', 'TTOM', 'azireioues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'eu4', 'UI', 'sTregop', 'JO', 'OSIOU', 'oyioeds', 'amgdes', '01', 'ureeT', 'Keu', 'lopour', 'o47', 'Se', "'SoseaIo", 'BRgp', '-UI', 'Sumay.reno', 'Jo', 'YSLI', 'ou9', "'WAS", 'uI', 'pojourered', 'D', 'o47', 'Jo', 'onTeA', 'y814', 'e', 'YAIM', 'OT', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'QUO-SA-QUO', 'Sursn', '303l', 'uororpard', 'B', 'Suryeur', "'sessero", 'Jo', 'pequnu', 'a81eT', 'B', 'Y9IM', 'sulerqoId', 'ssepprgmu', 'JOI', '6', 'Ens)', 'BEROT', '"aoeds', 'TBULSTIO', 'ouA', 'UI', 'JBOUII-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstop', 'OUL', '8', '2514122', 'sopou', 'Jo', 'requnu', 'au7', '07', 'Teuorgodoud', 'Atgpamp', 'SI', 'OOIL', 'UOISIDOC', 'ou7', 'ul', 'uonorpad', 'B', 'Suryeu', 'IOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '25743', '"uorgnqugsip', 'ueissnes', 'B', 'skenre', 'SI', 'suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'TeDay', 'pue', 'UOISIO', 'Joyl', '-ald', 'UOOMg0q', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'OISLIO90BIUD', 'Surgeredo', 'IOAIODOH', 'BUL', 'C', 'YIOMIOU', 'Temeu', 'o47', 'UI', 'squerpe.1s', 'au7', 'aanduoo', '07', 'posn', '35767', 'R', '5', 'SI', 'queosep', 'querpe1s', 'OTIYM', "'SQ481OM", 'au7', 'agepdn', '07', 'posn', 'SI', 'uone8odoxdypeg', '#', ':f', 'pue', 'I', 'SIO900A', 'aouegsip', 'PITBA', 'B', 'SI', "(A'z)@quopusgausoy", '-', 'I', 'S', 'Kue', 'IOJ', 'olIgOur', '30yl', '303l0', 'Teuorsueuup-p', 'layissel', 'reourr-uou', 'B', 'SI', 'NNY', '2', 'queurdordap', 'a8e.10qS', 'au1', 'STeordAL', 'I', 'IOJ', 'quetembal', '1981e1', 'yonu', 'SI', 'NNY', 'Indl', 'JOJ', 'IAS', 'ueyz', 'quouegess', 'NS', '991IM', '5an', 'X', 'SIVa/anaL', 'naqunu', 'IIOI', 'mor', ':a.104', 'Lay', 'mah', 'e', '(sad', 'O1)', "'6", '21LIM', 'IO', 'ENUL', 'UI', 'ASTVA', 'Teadeo', 'SI01101', 'Surgumpueu', 'reapo', 'pue']
rotation started
['of', 'of', '?', '4', 'à', 'a', '-', '-', ':', 'd', ':', 'X', '(', '', '-', '-', '&', 'N', ':', 'E', '-', '-', 'a', '-', 'a', 'E', 'a', 'I', '-', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'a', 'iE', 'I', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'I', '', 'I', 'e', 'I', 'iE', 'E', '1', 'I', 'is', 'e', 'I', 'iE', 'o', 'I', '-', 'I', 'E', 'I', 'a', '-', 'à', ':', 'o', 'E', '', 'I', 'of', 'I', 'E', 'E', 'U', 'I', 'I', 'of', 'E', 'I', 'is', 'a', '-', 'de', 'à', ':', 'of', 'I', 'a', 'E', 'de', 'I', 'I', 'I', '-', 'e', 'a', 's', ':', 'I', '5', 'a', 'a', 'I', 'e', 'I', 'iE', 'I', 'of', 'I', '(', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', 'I', '8', 'e', 'e', 'iE', 'i', '8', 'I', 'I', 'E', 'is', 'I', 'e', 'S', 'I', 'e', 'E', 'a', '8', 'I', 'is', '9', 'I', 'E', 'I', 'I', '1', '2', 'I', '11', 'I', 'I', 'C', '3', 'of', '5', '$', '2', '', 'I', ':', 'a', 'I', '3', 'E', 'I', 'I', '1', 'a', 'a', 'ot', 'E', 'à', 'a', 'e', 'o', ':', '8', 'is', 'I', 'I', 'I', 'E', '3', ':', 'E', 'I', 'of', 'I', '0', 'I', 'I', 'à', 'I', 'I', 'I', 'I', 'E', '8', 'I', 'T', 'E', 'à', 'A', 'E', 'à', '-', '€', 'I', 'I', '7', '11', '4', '10', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'TRUE', 'or', 'pts)', 'Write', '9.', '(10', 'a', 'A', 'prmra', 'number', 'here:', 'Write', 'your', 'roll', 'TRUE/FALSN', 'AP', 'SN', 'Statement', 'SVM', 'for', 'TRUE', 'URS', 'is', 'much', 'larger', 'than', 'requirement', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'deployment.', 'OTRUE', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'rebe', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'be', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Toas', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'TRUE', 'using', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'learn', 'may', '1208', 'TRUE', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:31:54] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : VT1eUse.jpg
[2024/07/01 14:31:55] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:31:55] ppocr DEBUG: dt_boxes num : 43, elapsed : 0.15572428703308105
[2024/07/01 14:31:57] ppocr DEBUG: rec_res num  : 43, elapsed : 1.9321069717407227
OCR detection done
left top x of SN: 562.0
bottom right x of SN: 968.0
left top y of SN: 1830.0
bottom right y of SN: 2124.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/VT1eUse.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XHbvbhu.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6684.437499999999
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
Toue
((5472.9375, 2059.125), (5933.53125, 2275.875))
Taue
((5355.531250000001, 2601.0), (5834.187499999999, 2826.78125))
Toue
((5463.906250000001, 3061.59375), (5852.25, 3278.34375))
Tue
((5319.406249999999, 3747.96875), (5725.812499999999, 3973.75))
Tue
((5364.5625, 4389.1875), (5807.093749999999, 4605.9375))
Fale
((5364.5625, 4858.8125), (5798.0625, 5075.5625))
Tyue
((5391.65625, 5400.6875), (5852.25, 5635.5))
Tue
((5409.718750000001, 5888.375), (5879.34375, 6105.125))
Toue
((5427.781249999999, 6367.03125), (5870.312500000001, 6583.78125))
fabe
((5391.65625, 7044.375), (5779.999999999999, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2754, '3': 3151, '4': 3738, '5': 4325, '6': 4922, '7': 5310, '8': 5906, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qwUhUnX.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 787.1113281249999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((804.69921875, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fohe
((810.7695312500001, 478.037109375), (879.0605468750001, 508.388671875))
text1 i.e the prev text is the winner
Fase
((801.6640625, 559.986328125), (877.54296875, 594.890625))
collision happend with box:559.986328125 and text:Fase solving on the basis of percent match boxes
the current box specification are
Faue
((804.69921875, 652.55859375), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fahe
((806.216796875, 736.025390625), (882.095703125, 766.376953125))
text1 i.e the prev text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 807.3515625), (876.025390625, 840.73828125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((804.69921875, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
Fohe
((810.7695312500001, 478.037109375), (879.0605468750001, 508.388671875))
Fase
((801.6640625, 559.986328125), (877.54296875, 594.890625))
Faue
((804.69921875, 652.55859375), (882.095703125, 687.462890625))
Fahe
((806.216796875, 736.025390625), (882.095703125, 766.376953125))
collision happend with box:736.025390625 and text:Fahe solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 807.3515625), (876.025390625, 840.73828125))
text2 i.e the incoming text is the winner
True
((803.181640625, 892.3359375), (869.955078125, 924.205078125))
collision happend with box:892.3359375 and text:True solving on the basis of percent match boxes
the current box specification are
Trwe
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
text1 i.e the prev text is the winner
Trwe
((795.5937499999999, 1065.33984375), (876.025390625, 1100.244140625))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 745, '7': 805, '8': 896, '9': 960, '10': 1053}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : z9iMChP.jpg
OCR detection done with doctr
left top x of SN: 157.98144531250003
bottom right x of SN: 380.828125
left top x of T/F: 1014.0654296875
bottom right x of T/F: 1397.166015625
first t/f detection
ET
((1010.3544921875, 457.6025390625), (1145.75, 531.298828125))
collision happend with box:457.6025390625 and text:ET solving on the basis of percent match boxes
the current box specification are
T
((1042.91796875, 551.865234375), (1096.0478515625, 601.5673828125))
text2 i.e the incoming text is the winner
collision happend with box:551.865234375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1042.91796875, 635.8447265625), (1087.478515625, 678.69140625))
text2 i.e the incoming text is the winner
collision happend with box:635.8447265625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1063.484375, 718.1103515625), (1099.4755859375, 771.240234375))
text2 i.e the incoming text is the winner
collision happend with box:718.1103515625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1087.478515625, 831.2255859375), (1121.755859375, 865.5029296875))
text2 i.e the incoming text is the winner
collision happend with box:831.2255859375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1058.3427734375, 932.34375), (1106.3310546875, 973.4765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
ET
((1010.3544921875, 457.6025390625), (1145.75, 531.298828125))
T
((1042.91796875, 551.865234375), (1096.0478515625, 601.5673828125))
T
((1042.91796875, 635.8447265625), (1087.478515625, 678.69140625))
F
((1063.484375, 718.1103515625), (1099.4755859375, 771.240234375))
T
((1087.478515625, 831.2255859375), (1121.755859375, 865.5029296875))
T
((1058.3427734375, 932.34375), (1106.3310546875, 973.4765625))
collision happend with box:932.34375 and text:T solving on the basis of percent match boxes
the current box specification are
directly
((933.23046875, 1007.75390625), (1015.49609375, 1038.603515625))
text2 i.e the incoming text is the winner
F
((1061.7705078125, 1093.447265625), (1097.76171875, 1138.0078125))
prediction
((916.091796875, 1180.8544921875), (1018.9238281250001, 1206.5625))
the
((984.646484375, 1314.5361328125), (1024.0654296875, 1341.9580078125))
oT
((1073.767578125, 1012.8955078125), (1157.7470703125, 1062.59765625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 462, '2': 565, '3': 634, '4': 736, '5': 838, '6': 940, '7': 1009, '8': 1112, '9': 1182, '10': 1287}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lvPI3dz.jpg
OCR detection done with doctr
left top x of SN: 339.3125
bottom right x of SN: 745.0937499999999
left top x of T/F: 5219.09375
bottom right x of T/F: 6359.312499999999
first t/f detection
TRUE
((5328.437500000001, 1526.28125), (5933.53125, 1779.15625))
FALSE
((5292.312499999999, 2095.25), (5897.406250000001, 2302.96875))
FALSE
((5310.375, 2655.1875), (5951.593750000001, 2871.9375))
TRUE
((5292.312499999999, 3133.84375), (6014.8125, 3350.59375))
TRUE
((5400.687499999999, 3594.4375), (6069.0, 3847.3125))
FALSE
((5337.46875, 4235.65625), (6168.343750000001, 4488.53125))
TRUE
((5319.406249999999, 4949.125), (5996.749999999999, 5156.84375))
FALCE
((5346.499999999999, 5436.8125), (6014.8125, 5644.53125))
TRVE
((5337.46875, 6014.8125), (6059.968750000001, 6258.65625))
TRUE
((5328.437500000001, 6610.875), (6050.937499999999, 6827.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1544, '2': 2095, '3': 2655, '4': 3224, '5': 3576, '6': 4145, '7': 4903, '8': 5472, '9': 5861, '10': 6647}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GUJBXzs.jpg
OCR detection done with doctr
left top x of T/F: 5707.861328125
bottom right x of T/F: 6886.1396484375
left top x of SN: 769.361328125
bottom right x of SN: 1208.2080078124998
first t/f detection
TRVE
((5775.3828125, 2051.599609375), (6235.554687500001, 2272.0986328125))
FALSE
((5784.969726562499, 2607.640625), (6312.249999999999, 2828.1396484375))
TRVE
((5727.4482421875, 3173.2685546875), (6254.728515624999, 3412.94140625))
TRUE
((5813.73046875, 4812.630859375), (6235.554687500001, 4994.7822265625))
CALSE
((5852.078125, 3719.72265625), (6350.597656250001, 3949.80859375))
TRUE
((5890.42578125, 4179.89453125), (6293.076171875001, 4419.5673828125))
TRUE
((5832.904296875, 5464.541015625), (6283.4892578125, 5646.6923828125))
FALSE
((5909.599609375, 5963.060546875), (6360.1845703125, 6154.798828125))
the
((5497.3623046875, 6375.2978515625), (5727.4482421875, 6538.275390625))
collision happend with box:6375.2978515625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5890.42578125, 6423.232421875), (6331.423828125, 6634.14453125))
text2 i.e the incoming text is the winner
TRUE
((5928.7734375, 7075.142578125), (6321.8369140625, 7276.4677734375))
the final dict without editing {'1': True, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['4', '5', '6']
the assigned keys are ['1', '2', '3', '7', '8', '9', '10']
['1', '2', '3', '7', '8', '9', '10', '1', '2', '3', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2099, '2': 2655, '3': 3211, '7': 5474, '8': 6049, '9': 6432, '10': 7190}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : obx0nEW.jpg
OCR detection done with doctr
left top x of SN: 960.2578125
bottom right x of SN: 1384.9843750000002
left top x of T/F: 5992.46875
bottom right x of T/F: 7210.7421875
first t/f detection
Tgul
((6031.835937499999, 2310.21875), (6511.5, 2496.2109375))
Taul
((6041.625000000001, 2966.0859375), (6540.8671875, 3112.921875))
Fale
((6129.7265625, 3524.0625), (6589.812499999999, 3719.84375))
Toe
((6080.78125, 4033.09375), (6599.6015625, 4219.0859375))
Trul
((6080.78125, 4532.3359375), (6619.1796875, 4708.5390625))
Taul
((6119.9375, 5149.046875), (6638.757812499999, 5344.828125))
Tae
((6119.9375, 5873.4375), (6717.0703125, 6049.640625))
Fraki
((6119.9375, 6382.46875), (6814.960937499999, 6754.453125))
Fotee
((6168.882812500001, 6891.5), (6648.546875000001, 7146.015625))
T9ue
((6208.0390625, 7175.3828125), (6775.804687500001, 7351.5859375))
Tael
((6168.882812500001, 7566.9453125), (6668.125, 7752.9375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2378, '2': 2946, '3': 3514, '4': 4091, '5': 4463, '6': 5041, '7': 5795, '8': 6372, '9': 6754, '10': 7518}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vrEo0y1.jpg
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 934.7499999999999
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6558.000000000001
first t/f detection
TRUE
((5463.906250000001, 2384.25), (5924.500000000001, 2601.0))
TRUE
((5373.593749999999, 2899.03125), (5861.281249999999, 3106.75))
FALSE
((5382.625000000001, 3422.84375), (5978.687500000001, 3621.53125))
TRU
((5382.625000000001, 3973.75), (5879.34375, 4181.46875))
FALSE
((5391.65625, 4587.875), (5996.749999999999, 4759.46875))
TRUE
((5337.46875, 5075.5625), (5897.406250000001, 5283.28125))
TRUE
((5436.812500000001, 5545.1875), (5951.593750000001, 5752.90625))
FAESE
((5391.65625, 6078.03125), (5996.749999999999, 6249.625))
collision happend with box:6078.03125 and text:FAESE solving on the basis of percent match boxes
the current box specification are
TRUE
((6023.843749999999, 6050.9375), (6538.624999999999, 6258.65625))
text2 i.e the incoming text is the winner
TRUE
((5391.65625, 6556.6875), (5942.562499999999, 6755.375))
TRUE
((5436.812500000001, 7252.09375), (5960.625, 7468.84375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2890, '3': 3287, '4': 3874, '5': 4461, '6': 5057, '7': 5454, '8': 6041, '9': 6448, '10': 7044}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZGGigCm.jpg
OCR detection done with doctr
left top x of SN: 321.2499999999999
bottom right x of SN: 736.0625
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6729.59375
first t/f detection
FALSE
((5644.531249999999, 1824.3125), (6240.593749999999, 2032.03125))
TRUE
((5635.5, 2402.3125), (6258.65625, 2619.0625))
FALSE
((5572.281250000001, 3061.59375), (6159.312499999999, 3278.34375))
TRUE
((5572.281250000001, 3594.4375), (6150.28125, 3766.03125))
TRUE
((5608.40625, 4091.15625), (6114.156250000001, 4298.875))
FALSE
((5554.21875, 4732.375), (6168.343750000001, 4940.09375))
TRUE
((5536.156249999999, 5454.875), (6105.124999999999, 5653.5625))
TRUE
((5500.03125, 5987.71875), (6087.062500000001, 6195.4375))
TRCE
((5581.3125, 6466.375), (6285.75, 6665.0625))
FALSE
((5554.21875, 7279.1875), (6204.46875, 7495.9375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2420, '3': 3016, '4': 3612, '5': 4000, '6': 4596, '7': 5400, '8': 6005, '9': 6421, '10': 7243}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vljoMvg.jpg
OCR detection done with doctr
left top x of SN: 306.04687499999983
bottom right x of SN: 733.0546875
left top x of T/F: 5578.1015625
bottom right x of T/F: 6721.2421875
first t/f detection
FALSE
((5578.953125, 2131.5859375), (6393.1640625, 2424.3359375))
FALSE
((5569.804687500001, 3357.4765625), (6356.5703125, 3659.375))
TRUE
((5606.3984375, 3869.7890625), (6255.9375, 4135.09375))
FALSE
((5597.25, 4308.9140625), (6319.9765625, 4565.0703125))
FALSE
((5597.25, 4921.859375), (6393.1640625, 5214.609375))
TRUE
((5688.734375, 5580.546875), (6438.90625, 5882.4453125))
TRUE
((5688.734375, 6147.75), (6365.71875, 6403.90625))
TRUE
((5725.328125, 7346.1953125), (6493.796875, 7657.2421875))
the final dict without editing {'1': False, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2259, '2': 2890}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2PvIZDE.jpg
OCR detection done with doctr
left top x of T/F: 5867.205078125
bottom right x of T/F: 7164.63671875
left top x of SN: 1022.8486328124998
bottom right x of SN: 1440.1064453124998
first t/f detection
Tue
((6015.60546875, 2461.5498046875), (6579.0927734375, 2698.8076171875))
False
((6015.60546875, 3034.9228515625), (6500.0068359375, 3291.9521484375))
True
((6094.69140625, 3558.8671875), (6608.75, 3806.0107421875))
folie
((5936.51953125, 4112.46875), (6381.377929687501, 4349.7265625))
True
((5976.0625, 4705.61328125), (6569.20703125, 4932.9853515625))
Tsue
((5946.4052734375, 5298.7578125), (6549.435546875, 5536.015625))
True
((6045.2626953125, 5773.2734375), (6588.978515625, 6020.4169921875))
False
((5966.1767578125, 6228.017578125), (6519.7783203125, 6514.7041015625))
Tue
((6015.60546875, 6732.1904296875), (6519.7783203125, 6979.333984375))
True
((6114.462890625, 7246.2490234375), (6608.75, 7542.8212890625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': True}
the unassigned keys are ['1', '2', '3', '4', '7']
the assigned keys are ['5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'5': 4715, '6': 5308, '8': 6307, '9': 6702, '10': 7285}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PJeMxbg.jpg
OCR detection done with doctr
left top x of T/F: 5597.728515625
bottom right x of T/F: 6829.390625
left top x of SN: 1078.0390625
bottom right x of SN: 1482.9921875
first t/f detection
TRVE
((5720.205078125, 2399.5), (6245.095703124999, 2633.826171875))
FALSE
((5645.220703125, 2896.271484375), (6226.349609375, 3111.8515625))
FALSE
((5635.84765625, 3355.55078125), (6198.23046875, 3571.130859375))
TRUE
((5673.33984375, 3946.052734375), (6179.484375, 4114.767578125))
FALSE
((5645.220703125, 4536.5546875), (6170.111328125, 4724.015625))
FALSE
((5635.84765625, 4948.96875), (6216.9765625, 5173.921875))
FALSE
((5598.355468749999, 5398.875), (6141.9921875, 5633.201171875))
FALSE
((5570.236328125001, 5886.2734375), (6057.634765624999, 6101.853515625))
TRUE
((5626.474609375, 6326.806640625), (6123.24609375, 6514.267578125))
TRV
((5598.355468749999, 6936.0546875), (5992.0234375, 7123.515625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2502, '2': 3036, '3': 3402, '4': 3946, '5': 4480, '6': 5033, '7': 5389, '8': 5933, '9': 6298, '10': 6851}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5VUV5Ds.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
collision happend with box:766.1865234375 and text:Falke solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CsJgfN3.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (952.802734375, 914.625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
F
((925.80859375, 879.69140625), (952.802734375, 914.625))
F
((924.220703125, 965.4375), (963.9179687500001, 1008.310546875))
T
((921.044921875, 1055.947265625), (949.626953125, 1082.94140625))
collision happend with box:1055.947265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((914.6933593750001, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
the.
((838.474609375, 1263.9609375), (878.171875, 1289.3671875))
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1271.900390625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 589, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1060, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qr2F5vt.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6819.906249999999
left top x of SN: 375.4374999999999
bottom right x of SN: 790.25
first t/f detection
TRUE
((5599.375000000001, 1941.71875), (6240.593749999999, 2158.46875))
TRVE
((5581.3125, 2438.4375), (6222.531250000001, 2682.28125))
FALSE
((5590.343749999999, 3179.0), (6258.65625, 3386.71875))
TRVE
((5536.156249999999, 3693.78125), (6114.156250000001, 3910.53125))
TRUE
((5608.40625, 4353.0625), (6376.062499999999, 4551.75))
FALSE
((5653.562500000001, 4876.875), (6249.625000000001, 5075.5625))
TRUE
((5626.468750000001, 5608.40625), (6159.312499999999, 5816.125))
TRUE
((5689.6875, 6141.25), (6294.781249999999, 6348.96875))
TRUE
((5707.750000000001, 6674.09375), (6222.531250000001, 6890.84375))
TRUE
((5725.812499999999, 7351.4375), (6240.593749999999, 7559.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2637, '3': 3224, '4': 3820, '5': 4217, '6': 4804, '7': 5599, '8': 6204, '9': 6610, '10': 7414}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RCTcSK5.jpg
OCR detection done with doctr
left top x of T/F: 6031.625000000001
bottom right x of T/F: 7406.5234375
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:34:06] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : RCTcSK5.jpg
[2024/07/01 14:34:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:34:08] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.16136407852172852
[2024/07/01 14:34:10] ppocr DEBUG: rec_res num  : 34, elapsed : 1.9752676486968994
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2097]
the false list is  []
the true list for xdirn [1068]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [1068, 6196]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [1068, 6196]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2097, 2443, 3101]
the false list is  []
the true list for xdirn [1068, 6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2097, 2443, 3101]
the false list is  []
the true list for xdirn [1068, 6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
first t/f detection
FALSE
[[6107.0, 3712.0], [6746.0, 3660.0], [6765.0, 3890.0], [6126.0, 3942.0]]
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4']
first t/f detection
the true list is  [2097, 2443, 4720]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2', '3', '4']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
will be zero.
[[1147.0, 4970.0], [1878.0, 4970.0], [1878.0, 5116.0], [1147.0, 5116.0]]
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
FALSE
[[6081.0, 5398.0], [6686.0, 5398.0], [6686.0, 5618.0], [6081.0, 5618.0]]
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443]
the false list is  []
the true list for xdirn [6196, 6154, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
the true list is  [2097, 2443, 6167]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
class label.
[[1168.0, 6380.0], [1836.0, 6380.0], [1836.0, 6526.0], [1168.0, 6526.0]]
the true list is  [2097, 2443, 6167]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
FALSE
[[6123.0, 6756.0], [6728.0, 6756.0], [6728.0, 6985.0], [6123.0, 6985.0]]
the true list is  [2097, 2443, 6167]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443, 6167]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443, 6167]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
the true list is  [2097, 2443, 6167, 7299]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144, 6123]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443, 6167, 7299]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144, 6123]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443, 6167, 7299]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144, 6123]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
first t/f detection
the true list is  [2097, 2443, 6167, 7299, 7946]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144, 6123, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
the true list is  [2097, 2443, 6167, 7299, 7946]
the false list is  []
the true list for xdirn [6196, 6154, 6175, 6144, 6123, 6175]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '4', '5']
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XtmUIuV.jpg
OCR detection done with doctr
left top x of T/F: 5770.21875
bottom right x of T/F: 6949.953125
left top x of SN: 644.5390625000001
bottom right x of SN: 1062.3984375
first t/f detection
TRUE
((5853.40625, 1802.2421875), (6484.6484375, 2003.5078125))
FALSE
((5871.703125, 2351.1484375), (6484.6484375, 2552.4140625))
FALSE
((5926.59375, 2964.09375), (6539.539062499999, 3174.5078125))
TRUE
((5780.21875, 3558.7421875), (6283.3828125, 3741.7109375))
TRVE
((5780.21875, 3988.71875), (6310.828125000001, 4199.1328125))
FALSE
((5807.6640625, 4674.8515625), (6384.015625, 4885.265625))
T
((5789.3671875, 5342.6875), (6045.5234375, 5498.2109375))
collision happend with box:5342.6875 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((6008.9296875, 5342.6875), (6356.5703125, 5489.0625))
text2 i.e the incoming text is the winner
TRVE
((5853.40625, 5864.1484375), (6338.2734375, 6047.1171875))
FALSE
((5899.1484375, 6449.6484375), (6484.6484375, 6623.46875))
TRUE
((5908.296875, 6980.2578125), (6429.7578125, 7154.078125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1857, '2': 2424, '3': 2991, '4': 3577, '5': 3961, '6': 4537, '7': 5324, '8': 5919, '9': 6321, '10': 7135}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uJgHSki.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6440.593749999999
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
False
((5364.5625, 1752.0625), (5825.15625, 1986.875))
FALSE
((5355.531250000001, 2375.21875), (5951.593750000001, 2628.09375))
TYWL
((5319.406249999999, 2989.34375), (5807.093749999999, 3169.96875))
FALSE
((5301.343750000001, 4642.0625), (5933.53125, 4849.78125))
Trwe
((5319.406249999999, 5310.375), (5734.843750000001, 5481.96875))
TrWC
((5283.28125, 5825.15625), (5734.843750000001, 5996.75))
TRVE
((5355.531250000001, 6403.15625), (5915.468749999999, 6610.875))
TRUE
((5274.250000000001, 6972.125), (5834.187499999999, 7188.875))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2528, '3': 3088, '4': 3657, '5': 4027, '6': 4596, '7': 5355, '8': 5924, '9': 6312, '10': 7080}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x6TAizQ.jpg
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6756.6875
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Palze
((5671.624999999999, 1454.03125), (6159.312499999999, 1734.0))
Folse
((5680.656250000001, 2004.9375), (6213.499999999999, 2321.03125))
Troul
((5536.156249999999, 2709.375), (6141.250000000001, 2953.21875))
Jalse
((5527.125, 3197.0625), (6240.593749999999, 3449.9375))
Zuue
((5581.3125, 3702.8125), (6096.09375, 3928.59375))
Jalie
((5509.062499999999, 4262.75), (6123.1875, 4506.59375))
Lel
((5527.125, 5057.5), (6204.46875, 5265.21875))
Juus
((5617.437499999999, 5554.21875), (6204.46875, 5770.96875))
Juub
((5680.656250000001, 6367.03125), (6348.968749999999, 6565.71875))
Tlull
((5599.375000000001, 6818.59375), (6141.250000000001, 7026.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1661, '2': 2230, '3': 2808, '4': 3377, '5': 3757, '6': 4344, '7': 5120, '8': 5707, '9': 6096, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nhDmSKc.jpg
OCR detection done with doctr
left top x of T/F: 5738.324218750001
bottom right x of T/F: 6951.240234375
left top x of SN: 815.5937499999999
bottom right x of SN: 1239.29296875
first t/f detection
TRUE
((5926.412109375, 2155.80078125), (6404.4375, 2333.888671875))
TRUE
((5935.785156250001, 2699.4375), (6376.318359375, 2868.15234375))
PALSE
((5926.412109375, 3233.701171875), (6423.183593749999, 3411.7890625))
FALSE
((5917.0390625, 3805.45703125), (6460.67578125, 3974.171875))
FALSE
((5898.29296875, 4395.958984375), (6441.9296875, 4574.046875))
PALSE
((5935.785156250001, 4920.849609375), (6413.810546875, 5098.9375))
TRUE
((5860.80078125, 5380.12890625), (6301.333984375001, 5548.84375))
TRUE
((5860.80078125, 5942.51171875), (6273.21484375, 6111.2265625))
TRUE
((5842.054687500001, 6439.283203125), (6301.333984375001, 6607.998046875))
TRUE
((5888.919921875, 7170.380859375), (6348.19921875, 7348.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2174, '2': 2765, '3': 3168, '4': 3758, '5': 4349, '6': 4958, '7': 5361, '8': 5961, '9': 6373, '10': 6982}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qDeau8F.jpg
OCR detection done with doctr
left top x of SN: 800.0625000000001
bottom right x of SN: 1208.7734375000002
left top x of T/F: 5742.7734375
bottom right x of T/F: 6913.359375
first t/f detection
Falle
((5954.039062499999, 1976.0625), (6594.4296875, 2241.3671875))
True
((5816.812499999999, 2561.5625), (6411.4609375, 2826.8671875))
faly
((5789.3671875, 3083.0234375), (6448.054687500001, 3348.328125))
TTWL
((5880.8515625, 3622.78125), (6502.9453125, 3833.1953125))
falke
((5862.554687500001, 4089.3515625), (6576.1328125, 4354.65625))
falke
((5798.515624999999, 4748.0390625), (6576.1328125, 5031.640625))
Tna
((5825.9609375, 5406.7265625), (6502.9453125, 5662.8828125))
Trw
((5761.921875, 5964.78125), (6484.6484375, 6175.1953125))
falle
((5789.3671875, 6431.3515625), (6438.90625, 6687.5078125))
Trul
((5825.9609375, 7053.4453125), (6466.3515625, 7273.0078125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1985, '2': 2543, '3': 3110, '4': 3677, '5': 4061, '6': 4629, '7': 5388, '8': 5964, '9': 6349, '10': 7126}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dmBFpeL.jpg
OCR detection done with doctr
left top x of SN: 375.4374999999999
bottom right x of SN: 799.2812499999999
left top x of T/F: 5625.5
bottom right x of T/F: 6856.031250000001
first t/f detection
TRUE
((5662.59375, 2059.125), (6240.593749999999, 2275.875))
FALSE
((5734.843750000001, 2655.1875), (6367.03125, 2871.9375))
FALSE
((5689.6875, 3224.15625), (6285.75, 3486.0625))
TRUE
((5662.59375, 3793.125), (6159.312499999999, 3973.75))
TRUE
((5707.750000000001, 4271.78125), (6213.499999999999, 4452.40625))
TRUE
((5671.624999999999, 4913.0), (6240.593749999999, 5111.6875))
TRUE
((5662.59375, 5590.34375), (6195.437500000001, 5816.125))
TRUE
((5671.624999999999, 6132.21875), (6240.593749999999, 6330.90625))
TRUE
((5707.750000000001, 6719.25), (6249.625000000001, 6945.03125))
TRUE
((5734.843750000001, 7324.34375), (6231.5625, 7532.0625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2691, '3': 3296, '4': 3901, '5': 4289, '6': 4876, '7': 5644, '8': 6231, '9': 6619, '10': 7405}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k0xTfJi.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5463.906250000001, 2519.71875), (5825.15625, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5409.718750000001, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
True
((5409.718750000001, 5373.59375), (5825.15625, 5572.28125))
Trve
((5427.781249999999, 5834.1875), (5825.15625, 6114.15625))
Fale
((5436.812500000001, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5816.125000000001, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3630, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7c7a0By.jpg
OCR detection done with doctr
left top x of T/F: 5340.2421875
bottom right x of T/F: 6510.828125000001
left top x of SN: 726.8750000000001
bottom right x of SN: 1135.5859375
first t/f detection
FALSE
((5386.8359375, 2021.8046875), (6036.375, 2241.3671875))
TRUE
((5395.984375, 2570.7109375), (6109.562499999999, 2790.2734375))
TRUE
((5341.09375, 3073.875), (6072.96875, 3293.4375))
FALSE
((5368.539062499999, 3631.9296875), (6054.671875, 3842.34375))
FALSE
((5405.1328125, 4244.875), (6091.265625, 4418.6953125))
F
((5377.6875, 4711.4453125), (5615.546875, 4931.0078125))
collision happend with box:4711.4453125 and text:F solving on the basis of percent match boxes
the current box specification are
ALSG
((5551.507812500001, 4720.59375), (6164.453125, 4921.859375))
text2 i.e the incoming text is the winner
FALSE
((5395.984375, 5205.4609375), (6091.265625, 5415.875))
TRUE
((5341.09375, 5690.328125), (5999.781250000001, 5900.7421875))
TRUE
((5405.1328125, 6129.453125), (6018.078125000001, 6330.71875))
FALSE
((5414.281250000001, 6778.9921875), (6072.96875, 6998.5546875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2195, '2': 2753, '3': 3119, '4': 3677, '5': 4235, '6': 4812, '7': 5187, '8': 5763, '9': 6147, '10': 6742}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3zxEEBC.jpg
OCR detection done with doctr
left top x of SN: 131.12109375000003
bottom right x of SN: 349.83984375
left top x of T/F: 909.68359375
bottom right x of T/F: 1274.55859375
first t/f detection
FALSE
((924.5234374999999, 419.453125), (1011.640625, 459.78515625))
collision happend with box:419.453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((921.296875, 503.34375), (1006.80078125, 542.0625))
text2 i.e the incoming text is the winner
collision happend with box:503.34375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((916.45703125, 587.234375), (998.7343750000001, 624.33984375))
text1 i.e the prev text is the winner
TRVE
((929.36328125, 684.03125), (1001.9609375, 714.68359375))
collision happend with box:684.03125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((922.91015625, 788.89453125), (1010.0273437500001, 821.16015625))
text2 i.e the incoming text is the winner
collision happend with box:788.89453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((926.13671875, 876.01171875), (1000.34765625, 906.6640625))
text1 i.e the prev text is the winner
collision happend with box:788.89453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((930.9765625, 956.67578125), (1001.9609375, 987.328125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((924.5234374999999, 419.453125), (1011.640625, 459.78515625))
FALSE
((921.296875, 503.34375), (1006.80078125, 542.0625))
TRVE
((916.45703125, 587.234375), (998.7343750000001, 624.33984375))
TRVE
((929.36328125, 684.03125), (1001.9609375, 714.68359375))
FALSE
((922.91015625, 788.89453125), (1010.0273437500001, 821.16015625))
TRVE
((926.13671875, 876.01171875), (1000.34765625, 906.6640625))
TRUE
((930.9765625, 956.67578125), (1001.9609375, 987.328125))
FALSE
((934.203125, 1045.40625), (1019.70703125, 1076.05859375))
collision happend with box:1045.40625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
prediction
((813.20703125, 1124.45703125), (910.0039062499999, 1153.49609375))
text1 i.e the prev text is the winner
FAL
((934.203125, 1127.68359375), (982.6015625, 1155.109375))
collision happend with box:1127.68359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((982.6015625, 1127.68359375), (1014.8671875, 1158.3359375))
text1 i.e the prev text is the winner
the
((877.73828125, 1261.5859375), (913.23046875, 1287.3984375))
collision happend with box:1261.5859375 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((937.4296875000001, 1242.2265625), (1016.48046875, 1271.265625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 417, '2': 517, '3': 587, '4': 687, '5': 785, '6': 888, '7': 956, '8': 1058, '9': 1127, '10': 1229}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ul9u6l6.jpg
OCR detection done with doctr
left top x of SN: 92.36718750000003
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1217.328125
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((903.4375000000001, 466.3359375), (926.5234375, 500.1953125))
text2 i.e the incoming text is the winner
collision happend with box:466.3359375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 535.59375), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
collision happend with box:535.59375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((897.28125, 634.09375), (926.5234375, 664.875))
text2 i.e the incoming text is the winner
collision happend with box:634.09375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 743.3671875), (924.9843750000001, 777.2265625))
text2 i.e the incoming text is the winner
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
F
((903.4375000000001, 466.3359375), (926.5234375, 500.1953125))
collision happend with box:466.3359375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 535.59375), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
T
((897.28125, 634.09375), (926.5234375, 664.875))
F
((897.28125, 743.3671875), (924.9843750000001, 777.2265625))
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
T
((891.125, 918.8203125), (924.9843750000001, 949.6015625))
F
((900.359375, 1005.0078125), (924.9843750000001, 1040.40625))
collision happend with box:1005.0078125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1083.5), (929.6015625, 1118.8984375))
text2 i.e the incoming text is the winner
F
((898.8203124999999, 1192.7734375), (928.0625, 1226.6328125))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 377, '2': 480, '3': 547, '4': 649, '5': 749, '6': 851, '7': 920, '8': 1021, '9': 1089, '10': 1191}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MgghiL8.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1318.41015625
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1349.486328125, 606.525390625), (1459.55078125, 667.412109375))
collision happend with box:606.525390625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 725.95703125), (1583.666015625, 786.84375))
text2 i.e the incoming text is the winner
collision happend with box:725.95703125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
LR
((1347.14453125, 1142.796875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1349.486328125, 606.525390625), (1459.55078125, 667.412109375))
True
((1482.96875, 725.95703125), (1583.666015625, 786.84375))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
LR
((1347.14453125, 1142.796875), (1457.208984375, 1201.341796875))
collision happend with box:1142.796875 and text:LR solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
Fase
((1349.486328125, 1283.3046875), (1457.208984375, 1339.5078125))
Falyi
((1337.77734375, 1393.369140625), (1457.208984375, 1454.255859375))
Truc
((1342.4609375, 1531.53515625), (1440.81640625, 1587.73828125))
Rt
((1361.1953125, 1655.650390625), (1457.208984375, 1700.14453125))
collision happend with box:1655.650390625 and text:Rt solving on the basis of percent match boxes
the current box specification are
Tyut
((1468.91796875, 1639.2578125), (1583.666015625, 1700.14453125))
text2 i.e the incoming text is the winner
Truc
((1356.5117187500002, 1814.892578125), (1466.576171875, 1873.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '5': 1135, '6': 1287, '7': 1391, '8': 1538, '9': 1641, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MV5KDC8.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 787.1113281249999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 434.02734375))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((810.7695312500001, 478.037109375), (880.5781250000001, 511.423828125))
text2 i.e the incoming text is the winner
collision happend with box:478.037109375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Faue
((801.6640625, 559.986328125), (877.54296875, 594.890625))
text2 i.e the incoming text is the winner
collision happend with box:559.986328125 and text:Faue solving on the basis of percent match boxes
the current box specification are
Faue
((806.216796875, 652.55859375), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
FaMe
((806.216796875, 736.025390625), (885.130859375, 766.376953125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 434.02734375))
text1 i.e the prev text is the winner
Fale
((810.7695312500001, 478.037109375), (880.5781250000001, 511.423828125))
Faue
((801.6640625, 559.986328125), (877.54296875, 594.890625))
Faue
((806.216796875, 652.55859375), (882.095703125, 687.462890625))
FaMe
((806.216796875, 736.025390625), (885.130859375, 766.376953125))
collision happend with box:736.025390625 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 807.3515625), (876.025390625, 840.73828125))
text2 i.e the incoming text is the winner
True
((803.181640625, 892.3359375), (869.955078125, 924.205078125))
Tywe
((795.5937499999999, 1066.857421875), (876.025390625, 1101.76171875))
True
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 745, '7': 805, '8': 898, '9': 959, '10': 1054}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lgTFx2j.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': False}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 598, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jz2iZTo.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 874.5234374999999
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((927.396484375, 789.181640625), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:789.181640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 914.625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
F
((927.396484375, 789.181640625), (955.978515625, 827.291015625))
F
((925.80859375, 879.69140625), (954.390625, 914.625))
F
((921.044921875, 963.849609375), (967.0937500000001, 1011.486328125))
T
((919.45703125, 1055.947265625), (951.21484375, 1084.529296875))
collision happend with box:1055.947265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((916.28125, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
the.
((838.474609375, 1263.9609375), (876.583984375, 1289.3671875))
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1271.900390625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1062, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y50hEHK.jpg
OCR detection done with doctr
left top x of SN: 175.67187500000003
bottom right x of SN: 396.98046875
left top x of T/F: 945.921875
bottom right x of T/F: 1311.2421875
first t/f detection
FALSE
((970.79296875, 449.4375), (1050.10546875, 482.484375))
collision happend with box:449.4375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((965.8359375, 527.09765625), (1050.10546875, 558.4921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:527.09765625 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((965.8359375, 606.41015625), (1040.19140625, 639.45703125))
text2 i.e the incoming text is the winner
collision happend with box:606.41015625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((955.921875, 708.85546875), (1028.625, 741.90234375))
text1 i.e the prev text is the winner
TRVE
((964.18359375, 811.30078125), (1036.88671875, 842.6953125))
collision happend with box:811.30078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((957.5742187500001, 897.22265625), (1026.97265625, 928.6171875))
text2 i.e the incoming text is the winner
collision happend with box:897.22265625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((950.96484375, 979.83984375), (1017.0585937499999, 1012.88671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((970.79296875, 449.4375), (1050.10546875, 482.484375))
collision happend with box:449.4375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((965.8359375, 527.09765625), (1050.10546875, 558.4921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:527.09765625 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((965.8359375, 606.41015625), (1040.19140625, 639.45703125))
text2 i.e the incoming text is the winner
TRVE
((955.921875, 708.85546875), (1028.625, 741.90234375))
TRVE
((964.18359375, 811.30078125), (1036.88671875, 842.6953125))
TRVE
((957.5742187500001, 897.22265625), (1026.97265625, 928.6171875))
TRVE
((950.96484375, 979.83984375), (1017.0585937499999, 1012.88671875))
FALSE
((949.3125, 1067.4140625), (1031.9296875, 1097.15625))
FALSE
((949.3125, 1150.03125), (1026.97265625, 1181.42578125))
TRUE
((944.35546875, 1262.390625), (1020.3632812500001, 1298.7421875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 434, '2': 530, '3': 599, '4': 702, '5': 799, '6': 900, '7': 968, '8': 1070, '9': 1138, '10': 1240}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3G7htqD.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRIE
((5192.96875, 1616.59375), (5707.750000000001, 1833.34375))
TRIE
((5183.9375, 2113.3125), (5626.468750000001, 2330.0625))
FALSE
((5211.031249999999, 2727.4375), (5707.750000000001, 2953.21875))
FALSE
((5220.062500000001, 3206.09375), (5698.718749999999, 3413.8125))
TRUE
((5238.124999999999, 3684.75), (5725.812499999999, 3865.375))
TRUE
((5165.875, 4298.875), (5725.812499999999, 4497.5625))
TRDE
((5229.09375, 4985.25), (5626.468750000001, 5174.90625))
TRUE
((5183.9375, 5391.65625), (5653.562500000001, 5572.28125))
FALSE
((5202.0, 5942.5625), (5707.750000000001, 6105.125))
TRUE
((5156.84375, 6502.5), (5662.59375, 6683.125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1643, '2': 2176, '3': 2718, '4': 3269, '5': 3621, '6': 4172, '7': 4885, '8': 5427, '9': 5789, '10': 6520}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bO9N14J.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6756.6875
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
FALSE
((5599.375000000001, 1607.5625), (6132.218749999999, 1815.28125))
TRUE
((5608.40625, 2212.65625), (6186.406249999999, 2384.25))
FALSE
((5590.343749999999, 2790.65625), (6168.343750000001, 2989.34375))
TRUE
((5590.343749999999, 3269.3125), (6186.406249999999, 3513.15625))
TRUE
((5527.125, 3820.21875), (6141.250000000001, 4036.96875))
FALSE
((5572.281250000001, 4470.46875), (6249.625000000001, 4687.21875))
TRUE
((5572.281250000001, 5247.15625), (6213.499999999999, 5454.875))
FALSE
((5617.437499999999, 5752.90625), (6276.718750000001, 5969.65625))
TRUE
((5581.3125, 6358.0), (6312.84375, 6610.875))
TRUE
((5644.531249999999, 7044.375), (6222.531250000001, 7252.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1616, '2': 2203, '3': 2790, '4': 3386, '5': 3784, '6': 4389, '7': 5192, '8': 5807, '9': 6213, '10': 7035}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nx4Jtjd.jpg
OCR detection done with doctr
left top x of SN: 1174.529296875
bottom right x of SN: 1594.0371093750002
left top x of T/F: 5844.9931640625
bottom right x of T/F: 7052.9423828125
first t/f detection
Halsc
((5845.013671875, 2914.01171875), (6393.885742187499, 3193.4375))
Halse
((5874.9521484375, 3403.0068359375), (6353.967773437501, 3642.5146484375))
ttue
((5854.9931640625, 3882.0224609375), (6334.0087890625, 4121.5302734375))
toul
((5934.8291015625, 4480.7919921875), (6503.66015625, 4710.3203125))
False
((5964.767578125, 5009.705078125), (6413.8447265625, 5199.3154296875))
Taue
((5884.931640625, 5488.720703125), (6373.9267578125, 5718.2490234375))
Truc
((5934.8291015625, 5977.7158203125), (6433.8037109375, 6207.244140625))
True
((5904.890625, 6476.6904296875), (6413.8447265625, 6666.30078125))
the
((5625.46484375, 7644.291015625), (5854.9931640625, 7803.962890625))
Tbe
((5994.7060546875, 6995.6240234375), (6433.8037109375, 7175.2548828125))
collision happend with box:6995.6240234375 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((6463.7421875, 6965.685546875), (6872.9013671875, 7175.2548828125))
text2 i.e the incoming text is the winner
Tue
((6044.603515625, 7514.5576171875), (6553.5576171875, 7714.1474609375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2923, '2': 3502, '3': 3882, '4': 4450, '5': 5019, '6': 5588, '7': 5967, '8': 6526, '9': 6905, '10': 7484}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Sm6e1Td.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1238.18359375
bottom right x of T/F: 1694.482421875
first t/f detection
folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:folu solving on the basis of percent match boxes
the current box specification are
falke
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:falke solving on the basis of percent match boxes
the current box specification are
Trut
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:853.8359375 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tvo
((1283.369140625, 996.923828125), (1424.111328125, 1097.7890625))
text1 i.e the prev text is the winner
Tyue
((1281.0234374999998, 1144.703125), (1421.7656250000002, 1247.9140625))
collision happend with box:1144.703125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tyul
((1273.986328125, 1395.693359375), (1424.111328125, 1489.521484375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
falke
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
Trut
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
Tvo
((1283.369140625, 996.923828125), (1424.111328125, 1097.7890625))
Tyue
((1281.0234374999998, 1144.703125), (1421.7656250000002, 1247.9140625))
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
Tyul
((1273.986328125, 1395.693359375), (1424.111328125, 1489.521484375))
True
((1278.677734375, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
False
((1271.640625, 1794.462890625), (1426.45703125, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 593, '2': 743, '3': 844, '4': 992, '5': 1142, '6': 1290, '7': 1388, '8': 1538, '9': 1637, '10': 1787}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DlrYDgV.jpg
OCR detection done with doctr
left top x of T/F: 5468.3203125
bottom right x of T/F: 6657.203125
left top x of SN: 726.8750000000001
bottom right x of SN: 1135.5859375
first t/f detection
TRUE
((5542.359375, 2159.03125), (6210.1953125, 2415.1875))
TRUE
((5560.65625, 2753.6796875), (6274.234375, 3000.6875))
FALSE
((5578.953125, 3211.1015625), (6283.3828125, 3421.515625))
TRUE
((5533.2109375, 3906.3828125), (6182.75, 4107.6484375))
FALSE
((5514.9140625, 4464.4375), (6228.4921875, 4674.8515625))
FALSE
((5551.507812500001, 4940.15625), (6182.75, 5141.421875))
FALSE
((5551.507812500001, 5443.3203125), (6210.1953125, 5653.734375))
TRUE
((5505.765624999999, 5955.6328125), (6155.304687500001, 6129.453125))
TRUE
((5551.507812500001, 6440.5), (6191.8984375, 6614.3203125))
TRUG
((5469.171875, 6998.5546875), (6164.453125, 7208.96875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2351, '2': 2918, '3': 3302, '4': 3869, '5': 4436, '6': 5013, '7': 5388, '8': 5964, '9': 6349, '10': 6934}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v10kqqM.jpg
OCR detection done with doctr
left top x of SN: 87.37500000000001
bottom right x of SN: 308.5078125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 577.44140625), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((912.0625, 683.4375), (946.8671875000001, 722.98828125))
collision happend with box:683.4375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 824.23828125))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((910.48046875, 874.86328125), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:874.86328125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
F
((916.8085937499999, 496.7578125), (942.12109375, 533.14453125))
F
((921.5546875, 577.44140625), (950.03125, 615.41015625))
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((912.0625, 683.4375), (946.8671875000001, 722.98828125))
T
((912.0625, 789.43359375), (940.5390625, 824.23828125))
T
((910.48046875, 874.86328125), (948.44921875, 912.83203125))
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1224.4921875), (935.7929687499999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': False}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 417, '2': 517, '3': 585, '4': 688, '5': 789, '6': 890, '8': 1059, '9': 1124, '10': 1226}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : STcovYo.jpg
OCR detection done with doctr
left top x of T/F: 5248.757812500001
bottom right x of T/F: 6419.34375
left top x of SN: 717.7265625000001
bottom right x of SN: 1126.4375
first t/f detection
TRUE
((5606.3984375, 1756.5), (6201.046875, 2021.8046875))
collision happend with box:1756.5 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5331.9453125, 1912.0234375), (5835.109375, 2177.328125))
text2 i.e the incoming text is the winner
FblsFASE
((5286.203125, 2314.5546875), (6319.9765625, 2634.75))
FACSE
((5277.0546875, 2945.796875), (5990.6328125, 3156.2109375))
TRUE
((5267.90625, 3476.40625), (5972.3359375, 3723.4140625))
TRUE
((5240.4609375, 3942.9765625), (5935.7421875, 4189.984375))
ATRUE
((5213.015625, 4464.4375), (6146.15625, 4720.59375))
FALSE
((5203.8671875, 4967.6015625), (5926.59375, 5232.90625))
PALSE
((5341.09375, 5278.6484375), (6036.375, 5498.2109375))
collision happend with box:5278.6484375 and text:PALSE solving on the basis of percent match boxes
the current box specification are
BUE
((5249.609375, 5434.171875), (5871.703125, 5681.1796875))
text1 i.e the prev text is the winner
FALSE
((5185.5703125, 5919.0390625), (5926.59375, 6257.53125))
FALSE
((5258.757812500001, 6449.6484375), (6045.5234375, 6852.1796875))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'UNASSIGNED', '9': False, '10': False}
the unassigned keys are ['1', '4', '5', '8']
the assigned keys are ['2', '3', '6', '7', '9', '10']
['2', '3', '6', '7', '9', '10', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'2': 2515, '3': 2881, '6': 4519, '7': 4866, '9': 5827, '10': 6394, '1': 2215}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'UNASSIGNED', '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VQI5gRv.jpg
OCR detection done with doctr
left top x of T/F: 5679.1005859375
bottom right x of T/F: 6809.444335937499
left top x of SN: 1258.2939453125
bottom right x of SN: 1668.3798828125
first t/f detection
TRUE
((5708.2744140625, 2425.4892578125), (6178.033203125, 2645.98828125))
TRUE
((5689.1005859375, 2933.595703125), (6168.4462890625, 3154.0947265625))
TRUE
((5689.1005859375, 3374.59375), (6130.0986328125, 3585.505859375))
FALSE
((5612.4052734375, 3949.80859375), (6158.859375, 4141.546875))
FALSE
((5669.9267578125, 4525.0234375), (6187.6201171875, 4716.76171875))
FALSE
((5631.5791015625, 5004.369140625), (6158.859375, 5196.107421875))
GALSE
((5602.818359375, 5416.6064453125), (6101.337890625, 5598.7578125))
TRUE
((5593.2314453125, 5953.4736328125), (6005.46875, 6135.625))
TRUE
((5526.123046875, 6336.9501953125), (5986.294921875, 6557.44921875))
TRUE
((5564.470703125, 6902.578125), (6005.46875, 7084.7294921875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2578, '2': 3096, '3': 3451, '4': 3988, '5': 4515, '6': 5061, '7': 5426, '8': 5963, '9': 6327, '10': 6892}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fj6yfEh.jpg
OCR detection done with doctr
left top x of SN: 163.83691406249997
bottom right x of SN: 386.1953125
left top x of T/F: 1020.6728515625
bottom right x of T/F: 1403.4951171875
first t/f detection
T
((1088.2802734375, 450.693359375), (1144.193359375, 501.5234375))
collision happend with box:450.693359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1040.8388671875, 538.798828125), (1095.0576171875, 589.62890625))
text2 i.e the incoming text is the winner
collision happend with box:538.798828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1039.14453125, 625.2099609375), (1084.8916015625, 667.568359375))
text2 i.e the incoming text is the winner
collision happend with box:625.2099609375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1054.3935546875, 708.232421875), (1089.974609375, 759.0625))
text2 i.e the incoming text is the winner
collision happend with box:708.232421875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1073.03125, 818.3642578125), (1122.1669921875, 860.72265625))
text2 i.e the incoming text is the winner
collision happend with box:818.3642578125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1040.8388671875, 921.71875), (1089.974609375, 962.3828125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1088.2802734375, 450.693359375), (1144.193359375, 501.5234375))
T
((1040.8388671875, 538.798828125), (1095.0576171875, 589.62890625))
T
((1039.14453125, 625.2099609375), (1084.8916015625, 667.568359375))
F
((1054.3935546875, 708.232421875), (1089.974609375, 759.0625))
T
((1073.03125, 818.3642578125), (1122.1669921875, 860.72265625))
T
((1040.8388671875, 921.71875), (1089.974609375, 962.3828125))
ao
((1013.7294921875, 1004.7412109375), (1062.865234375, 1042.0166015625))
collision happend with box:1004.7412109375 and text:ao solving on the basis of percent match boxes
the current box specification are
pr
((1052.69921875, 1003.046875), (1137.416015625, 1052.1826171875))
text2 i.e the incoming text is the winner
collision happend with box:1003.046875 and text:pr solving on the basis of percent match boxes
the current box specification are
F
((1040.8388671875, 1082.6806640625), (1076.419921875, 1126.7333984375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 452, '2': 557, '3': 625, '4': 728, '5': 830, '6': 931, '7': 999, '8': 1103, '9': 1174, '10': 1279}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 15KUC2C.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6240.593749999999, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HGxZ4n9.jpg
OCR detection done with doctr
left top x of SN: 91.615234375
bottom right x of SN: 310.259765625
left top x of T/F: 861.806640625
bottom right x of T/F: 1226.384765625
first t/f detection
Fele
((885.18359375, 423.603515625), (965.4453125, 457.7890625))
collision happend with box:423.603515625 and text:Fele solving on the basis of percent match boxes
the current box specification are
lyue
((882.2109374999999, 511.296875), (960.9863281250001, 541.0234375))
text2 i.e the incoming text is the winner
collision happend with box:511.296875 and text:lyue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 606.421875), (960.9863281250001, 640.607421875))
text2 i.e the incoming text is the winner
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tine
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
text1 i.e the prev text is the winner
Igtue
((877.751953125, 790.7265625), (950.58203125, 824.912109375))
collision happend with box:790.7265625 and text:Igtue solving on the basis of percent match boxes
the current box specification are
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 905.173828125))
text2 i.e the incoming text is the winner
collision happend with box:870.98828125 and text:Trwe solving on the basis of percent match boxes
the current box specification are
False
((885.18359375, 957.1953125), (956.52734375, 986.921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fele
((885.18359375, 423.603515625), (965.4453125, 457.7890625))
lyue
((882.2109374999999, 511.296875), (960.9863281250001, 541.0234375))
True
((877.751953125, 606.421875), (960.9863281250001, 640.607421875))
Tine
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
Igtue
((877.751953125, 790.7265625), (950.58203125, 824.912109375))
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 905.173828125))
False
((885.18359375, 957.1953125), (956.52734375, 986.921875))
collision happend with box:957.1953125 and text:False solving on the basis of percent match boxes
the current box specification are
Faje
((882.2109374999999, 1035.970703125), (950.58203125, 1068.669921875))
text1 i.e the prev text is the winner
Tyue
((880.7246093750001, 1159.3359375), (960.9863281250001, 1195.0078125))
the final dict without editing {'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '10']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9']
['1', '2', '3', '6', '7', '8', '9', '1', '2', '3', '6', '7', '8', '9']
printing the number dict y_coordinate
{'2': 432, '3': 499, '1': 502, '6': 802, '7': 868, '8': 970, '9': 1037}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': True, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CVgnnPz.jpg
OCR detection done with doctr
left top x of SN: 122.81250000000003
bottom right x of SN: 341.240234375
left top x of T/F: 912.14453125
bottom right x of T/F: 1275.85546875
first t/f detection
Ituf
((932.904296875, 375.0546875), (1008.22265625, 402.72265625))
collision happend with box:375.0546875 and text:Ituf solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((932.904296875, 479.578125), (1020.51953125, 510.3203125))
text2 i.e the incoming text is the winner
collision happend with box:479.578125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((925.21875, 554.896484375), (1003.611328125, 591.787109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:554.896484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((928.29296875, 684.013671875), (1000.537109375, 714.755859375))
text1 i.e the prev text is the winner
TRVE
((926.7558593749999, 747.03515625), (1003.611328125, 783.92578125))
collision happend with box:747.03515625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((923.681640625, 856.169921875), (1006.685546875, 886.912109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Ituf
((932.904296875, 375.0546875), (1008.22265625, 402.72265625))
collision happend with box:375.0546875 and text:Ituf solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((932.904296875, 479.578125), (1020.51953125, 510.3203125))
text2 i.e the incoming text is the winner
collision happend with box:479.578125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((925.21875, 554.896484375), (1003.611328125, 591.787109375))
true and false collision so given priority to text2 which is the incoming text
TRVE
((928.29296875, 684.013671875), (1000.537109375, 714.755859375))
collision happend with box:684.013671875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((926.7558593749999, 747.03515625), (1003.611328125, 783.92578125))
text2 i.e the incoming text is the winner
FALSE
((923.681640625, 856.169921875), (1006.685546875, 886.912109375))
FALSE
((923.681640625, 942.248046875), (1006.685546875, 972.990234375))
FALSE
((926.7558593749999, 1032.9375), (1008.22265625, 1062.142578125))
collision happend with box:1032.9375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((928.29296875, 1099.033203125), (1008.22265625, 1129.775390625))
text2 i.e the incoming text is the winner
Tef
((928.29296875, 1203.556640625), (1005.1484375, 1234.298828125))
collision happend with box:1203.556640625 and text:Tef solving on the basis of percent match boxes
the current box specification are
FALSE
((931.3671874999999, 1258.892578125), (1015.908203125, 1288.09765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 174
printing the number dict y_coordinate
{'9': 1117, '2': 474, '3': 545, '4': 651, '5': 757, '6': 866, '7': 936, '8': 1046, '10': 1223, '1': 174}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': True, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Q2a6ahU.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1574.625, 744.8203125))
collision happend with box:644.5078125 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
collision happend with box:1228.828125 and text:Trwv solving on the basis of percent match boxes
the current box specification are
Tyue
((1424.15625, 1349.203125), (1572.1171875, 1441.9921875))
text2 i.e the incoming text is the winner
collision happend with box:1349.203125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1574.625, 744.8203125))
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
Tyue
((1424.15625, 1349.203125), (1572.1171875, 1441.9921875))
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
falwe
((1429.171875, 1755.46875), (1584.6562500000002, 1858.2890625))
Fale
((1416.6328125, 1918.4765625), (1617.2578124999998, 2043.8671875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 900, '4': 1060, '5': 1218, '6': 1381, '7': 1489, '8': 1650, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YJ8QXIH.jpg
OCR detection done with doctr
left top x of SN: 388.3828124999999
bottom right x of SN: 806.2421875
left top x of T/F: 5632.9921875
bottom right x of T/F: 6840.171875
first t/f detection
TRUE
((5734.4765625, 1866.28125), (6292.531250000001, 2067.546875))
TRUE
((5780.21875, 2442.6328125), (6301.6796875, 2625.6015625))
FALSE
((5835.109375, 3073.875), (6356.5703125, 3293.4375))
TRUE
((5725.328125, 3604.484375), (6228.4921875, 3778.3046875))
FALSE
((5780.21875, 4089.3515625), (6255.9375, 4254.0234375))
TROE
((5780.21875, 4720.59375), (6265.085937499999, 4931.0078125))
TROE
((5761.921875, 5516.5078125), (6329.125, 5717.7734375))
TROE
((5780.21875, 5983.078125), (6319.9765625, 6156.8984375))
FALSE
((5780.21875, 6531.984375), (6338.2734375, 6742.3984375))
FALSE
((5771.0703125, 7163.2265625), (6255.9375, 7346.1953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1756, '2': 2360, '3': 2964, '4': 3567, '5': 3970, '6': 4574, '7': 5379, '8': 5992, '9': 6403, '10': 7218}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rZQ0RuV.jpg
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 862.5000000000001
left top x of T/F: 5544.21875
bottom right x of T/F: 6738.624999999999
first t/f detection
FALSE
((5653.562500000001, 1914.625), (6285.75, 2122.34375))
TRVE
((5617.437499999999, 2492.625), (6141.250000000001, 2709.375))
TRUE
((5545.187500000001, 3052.5625), (6069.0, 3305.4375))
PALSE
((5617.437499999999, 3576.375), (6285.75, 3793.125))
TRUE
((5644.531249999999, 4018.90625), (6213.499999999999, 4226.625))
FALSE
((5698.718749999999, 4696.25), (6285.75, 4940.09375))
TRUE
((5644.531249999999, 5400.6875), (6195.437500000001, 5617.4375))
FALSE
((5680.656250000001, 5942.5625), (6258.65625, 6150.28125))
TRUE
((5689.6875, 6520.5625), (6276.718750000001, 6764.40625))
FALSE
((5698.718749999999, 7071.46875), (6339.9375, 7333.375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2411, '3': 2998, '4': 3585, '5': 3973, '6': 4578, '7': 5382, '8': 5987, '9': 6394, '10': 7215}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0uMtPz0.jpg
OCR detection done with doctr
left top x of SN: 697.8437499999999
bottom right x of SN: 1109.38671875
left top x of T/F: 5803.265625
bottom right x of T/F: 7059.83984375
first t/f detection
Tre
((5915.14453125, 2157.98046875), (6304.13671875, 2343.21484375))
False
((5766.95703125, 2713.68359375), (6155.94921875, 2880.39453125))
Talse
((5776.21875, 3334.21875), (6165.2109375, 3519.453125))
Trl
((5850.3125, 3815.828125), (6211.51953125, 4001.0625))
Rue
((5831.7890625, 4278.9140625), (6230.04296875, 4473.41015625))
Talsl
((5831.7890625, 4899.44921875), (6239.3046875, 5084.68359375))
Tree
((5766.95703125, 5621.86328125), (6146.6875, 5844.14453125))
Fale
((5804.00390625, 6121.99609375), (6183.734375, 6307.23046875))
True
((5831.7890625, 6612.8671875), (6248.56640625, 6798.1015625))
Trul
((5766.95703125, 7372.328125), (6072.593749999999, 7520.515625))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['1', '3', '4']
the assigned keys are ['2', '5', '6', '7', '8', '9', '10']
['2', '5', '6', '7', '8', '9', '10', '2', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 3343, '5': 4269, '6': 4853, '7': 5658, '8': 6205, '9': 6603, '10': 7353, '1': 3043}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JR5NBIN.jpg
OCR detection done with doctr
left top x of SN: 216.720703125
bottom right x of SN: 437.10546875
left top x of T/F: 998.2285156250001
bottom right x of T/F: 1364.5
first t/f detection
F
((1048.61328125, 505.6875), (1076.70703125, 544.31640625))
collision happend with box:505.6875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1046.857421875, 588.212890625), (1073.1953125, 626.841796875))
text2 i.e the incoming text is the winner
collision happend with box:588.212890625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1052.125, 670.73828125), (1080.21875, 707.611328125))
text2 i.e the incoming text is the winner
collision happend with box:670.73828125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1045.1015625, 777.845703125), (1076.70703125, 812.962890625))
text2 i.e the incoming text is the winner
collision happend with box:777.845703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1041.58984375, 879.685546875), (1073.1953125, 916.55859375))
text2 i.e the incoming text is the winner
T.
((1031.0546875, 1051.759765625), (1080.21875, 1081.609375))
collision happend with box:1051.759765625 and text:T. solving on the basis of percent match boxes
the current box specification are
F
((1043.345703125, 1134.28515625), (1073.1953125, 1176.42578125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((1048.61328125, 505.6875), (1076.70703125, 544.31640625))
F
((1046.857421875, 588.212890625), (1073.1953125, 626.841796875))
F
((1052.125, 670.73828125), (1080.21875, 707.611328125))
T
((1045.1015625, 777.845703125), (1076.70703125, 812.962890625))
T
((1041.58984375, 879.685546875), (1073.1953125, 916.55859375))
T.
((1031.0546875, 1051.759765625), (1080.21875, 1081.609375))
F
((1043.345703125, 1134.28515625), (1073.1953125, 1176.42578125))
F
((1043.345703125, 1216.810546875), (1073.1953125, 1250.171875))
F
((1041.58984375, 1315.138671875), (1073.1953125, 1352.01171875))
collision happend with box:1315.138671875 and text:F solving on the basis of percent match boxes
the current box specification are
the
((962.576171875, 1348.5), (1001.205078125, 1376.59375))
text2 i.e the incoming text is the winner
T
((1045.1015625, 969.234375), (1080.21875, 1004.3515625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 498, '2': 600, '3': 667, '4': 770, '5': 870, '6': 972, '7': 1042, '8': 1143, '9': 1209, '10': 1313}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAyfJTA.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 330.0693359375
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1842.341796875
first t/f detection
Truc
((1416.1083984375, 630.0478515625), (1520.7109375, 678.7001953125))
collision happend with box:630.0478515625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 758.9765625), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:758.9765625 and text:True solving on the basis of percent match boxes
the current box specification are
Falke
((1425.8388671875, 883.0400390625), (1542.6044921875, 941.4228515625))
text2 i.e the incoming text is the winner
collision happend with box:883.0400390625 and text:Falke solving on the basis of percent match boxes
the current box specification are
falte
((1425.8388671875, 1016.833984375), (1530.44140625, 1080.08203125))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
collision happend with box:1191.982421875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Felse
((1413.67578125, 1320.9111328125), (1525.576171875, 1379.2939453125))
text2 i.e the incoming text is the winner
collision happend with box:1320.9111328125 and text:Felse solving on the basis of percent match boxes
the current box specification are
fatat
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Truc
((1416.1083984375, 630.0478515625), (1520.7109375, 678.7001953125))
True
((1420.9736328125, 758.9765625), (1525.576171875, 810.0615234375))
Falke
((1425.8388671875, 883.0400390625), (1542.6044921875, 941.4228515625))
falte
((1425.8388671875, 1016.833984375), (1530.44140625, 1080.08203125))
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
Felse
((1413.67578125, 1320.9111328125), (1525.576171875, 1379.2939453125))
fatat
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
Thue
((1425.8388671875, 1588.4990234375), (1528.0087890625, 1639.583984375))
Tuue
((1430.7041015624998, 1707.697265625), (1535.306640625, 1758.7822265625))
fabe
((1547.4697265625, 1447.4072265625), (1637.4765625, 1510.6552734375))
Thue
((1401.5126953125, 1885.2783203125), (1525.576171875, 1946.09375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 605, '2': 758, '3': 863, '4': 1031, '5': 1179, '6': 1335, '7': 1437, '8': 1595, '9': 1702, '10': 1858}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yArHNVc.jpg
OCR detection done with doctr
left top x of T/F: 5784.7421875
bottom right x of T/F: 7106.1484375
left top x of SN: 660.7968749999999
bottom right x of SN: 1072.33984375
first t/f detection
FALSE
((5887.359375, 1944.9609375), (6517.15625, 2167.2421875))
TRUE
((5776.21875, 2546.97265625), (6406.015625, 2797.0390625))
FALSE
((5813.265625, 3176.76953125), (6350.445312500001, 3362.00390625))
TRUE
((5915.14453125, 3825.08984375), (6600.51171875, 4047.37109375))
TALSE
((5896.62109375, 4288.17578125), (6702.390625, 4528.98046875))
Ea
((5841.05078125, 4834.6171875), (6081.855468749999, 4992.06640625))
collision happend with box:4834.6171875 and text:Ea solving on the basis of percent match boxes
the current box specification are
FALSE
((5804.00390625, 4992.06640625), (6535.6796875, 5242.1328125))
text2 i.e the incoming text is the winner
TRUE
((5785.48046875, 5584.81640625), (6341.183593750001, 5751.52734375))
TRUE
((5794.7421875, 6159.04296875), (6313.398437500001, 6344.27734375))
TRVE
((5822.52734375, 6696.22265625), (6396.75390625, 6872.1953125))
RUE
((5868.8359375, 7205.6171875), (6285.61328125, 7372.328125))
collision happend with box:7205.6171875 and text:RUE solving on the basis of percent match boxes
the current box specification are
A
((6396.75390625, 7316.7578125), (6470.84765625, 7400.11328125))
text1 i.e the prev text is the winner
Ress
((5933.66796875, 7464.9453125), (6461.5859375, 7631.65625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2741, '3': 3315, '4': 3889, '5': 4278, '6': 4853, '7': 5631, '8': 6205, '9': 6594, '10': 7372}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5NGPXWn.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1869.921875
first t/f detection
Tyuw
((1429.171875, 649.5234375), (1564.59375, 744.8203125))
collision happend with box:649.5234375 and text:Tyuw solving on the basis of percent match boxes
the current box specification are
falte
((1416.6328125, 769.8984375), (1569.6093749999998, 870.2109375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:falte solving on the basis of percent match boxes
the current box specification are
Tiol
((1426.6640625, 912.84375), (1559.578125, 1005.6328125))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1035.7265625), (1577.1328125, 1143.5625))
Trw
((1434.1875, 1233.84375), (1572.1171875, 1329.140625))
collision happend with box:1233.84375 and text:Trw solving on the basis of percent match boxes
the current box specification are
Tyoe
((1431.6796875, 1351.7109375), (1572.1171875, 1444.5))
text1 i.e the prev text is the winner
Tyue
((1416.6328125, 1507.1953125), (1579.640625, 1607.5078125))
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1567.1015625, 1705.3125))
text2 i.e the incoming text is the winner
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falw
((1426.6640625, 1750.453125), (1579.640625, 1855.78125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyuw
((1429.171875, 649.5234375), (1564.59375, 744.8203125))
falte
((1416.6328125, 769.8984375), (1569.6093749999998, 870.2109375))
Tiol
((1426.6640625, 912.84375), (1559.578125, 1005.6328125))
Tror
((1431.6796875, 1035.7265625), (1577.1328125, 1143.5625))
Trw
((1434.1875, 1233.84375), (1572.1171875, 1329.140625))
Tyoe
((1431.6796875, 1351.7109375), (1572.1171875, 1444.5))
Tyue
((1416.6328125, 1507.1953125), (1579.640625, 1607.5078125))
Fale
((1441.7109375, 1625.0625), (1567.1015625, 1705.3125))
Falw
((1426.6640625, 1750.453125), (1579.640625, 1855.78125))
Falke
((1416.6328125, 1920.984375), (1592.1796875, 2043.8671875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 2060
printing the number dict y_coordinate
{'1': 631, '2': 789, '3': 900, '4': 1060, '5': 1221, '6': 1384, '7': 1497, '8': 1647, '9': 1760, '10': 2060}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q084olr.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6738.624999999999
left top x of SN: 375.4374999999999
bottom right x of SN: 799.2812499999999
first t/f detection
FALSE
((5545.187500000001, 1824.3125), (6177.375, 2032.03125))
FALSE
((5563.249999999999, 2465.53125), (6258.65625, 2673.25))
TRUE
((5481.968749999999, 3070.625), (6069.0, 3278.34375))
TRUE
((5518.093750000001, 3603.46875), (6114.156250000001, 3811.1875))
TRGUE
((5527.125, 4000.84375), (6294.781249999999, 4208.5625))
TRUE
((5662.59375, 4217.59375), (6276.718750000001, 4425.3125))
FALSE
((5572.281250000001, 4768.5), (6312.84375, 5021.375))
TRUE
((5518.093750000001, 5409.71875), (6159.312499999999, 5617.4375))
TRUE
((5554.21875, 5987.71875), (6204.46875, 6186.40625))
TRUE
((5536.156249999999, 6502.5), (6168.343750000001, 6764.40625))
TRVE
((5617.437499999999, 7170.8125), (6195.437500000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2420, '3': 3007, '4': 3594, '5': 3973, '6': 4569, '7': 5355, '8': 5951, '9': 6358, '10': 7161}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k0R3DoI.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6332.218749999999
left top x of SN: 718.625
bottom right x of SN: 1124.40625
first t/f detection
FALSE
((5274.250000000001, 1977.84375), (5978.687500000001, 2194.59375))
TRUE
((5274.250000000001, 2537.78125), (5861.281249999999, 2754.53125))
TRUE
((5202.0, 2989.34375), (5807.093749999999, 3251.25))
FALSE
((5256.1875, 3567.34375), (5951.593750000001, 3784.09375))
TRU
((5265.218749999999, 4145.34375), (5725.812499999999, 4353.0625))
+RFALSE
((5283.28125, 4614.96875), (6240.593749999999, 4849.78125))
TRUE
((5283.28125, 5075.5625), (5879.34375, 5283.28125))
TRUE
((5283.28125, 5617.4375), (5807.093749999999, 5752.90625))
FALSE
((5319.406249999999, 5987.71875), (5942.562499999999, 6159.3125))
TRUG
((5274.250000000001, 6610.875), (5807.093749999999, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2366, '2': 2880, '3': 3233, '4': 3766, '5': 4289, '6': 4822, '7': 5165, '8': 5707, '9': 6069, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WjrciTI.jpg
OCR detection done with doctr
left top x of SN: 673.4921875000002
bottom right x of SN: 1093.1650390625
left top x of T/F: 5928.360351562501
bottom right x of T/F: 7221.681640624999
first t/f detection
TRVE
((5986.294921875, 2061.1865234375), (6532.7490234375, 2233.7509765625))
TRUE
((5842.491210937499, 2713.0966796875), (6369.771484374999, 2904.8349609375))
FALSE
((5928.7734375, 3326.6591796875), (6523.162109375, 3499.2236328125))
TRUE
((5919.1865234375, 3911.4609375), (6494.4013671875, 4093.6123046875))
FALSE
((5967.12109375, 4419.5673828125), (6542.3359375, 4592.1318359375))
TRUC
((5967.12109375, 5205.6943359375), (6465.640625000001, 5387.845703125))
TRUE
((6005.46875, 5800.0830078125), (6436.8798828125, 5982.234375))
FALSE
((6005.46875, 6327.36328125), (6590.2705078125, 6538.275390625))
TRUE
((6015.055664062499, 6931.3388671875), (6542.3359375, 7123.0771484375))
TRUE
((6034.2294921875, 7525.7275390625), (6465.640625000001, 7698.2919921875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': True}
the unassigned keys are ['1', '2', '7']
the assigned keys are ['3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'3': 3317, '4': 3911, '5': 4314, '6': 4898, '8': 6298, '9': 6701, '10': 7487}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LNZv5Pn.jpg
OCR detection done with doctr
left top x of SN: 684.37109375
bottom right x of SN: 1098.697265625
left top x of T/F: 5841.427734375
bottom right x of T/F: 7054.343750000001
first t/f detection
TRUE
((5926.412109375, 2118.30859375), (6441.9296875, 2305.76953125))
TRUE
((5888.919921875, 2671.318359375), (6413.810546875, 2896.271484375))
FALE
((5926.412109375, 3280.56640625), (6413.810546875, 3468.02734375))
TRUE
((5870.173828124999, 3777.337890625), (6385.69140625, 4002.291015625))
TRVE
((5898.29296875, 4470.943359375), (6470.048828125, 4686.5234375))
FALE
((5926.412109375, 4883.357421875), (6479.421875000001, 5108.310546875))
TRVE
((5907.666015625, 5164.548828125), (6507.541015625, 5370.755859375))
TRUE
((5917.0390625, 5633.201171875), (6395.064453125001, 5858.154296875))
TRVE
((5963.904296874999, 6129.97265625), (6451.302734375, 6354.92578125))
TRVE
((5982.650390625, 6692.35546875), (6535.66015625, 6917.30859375))
TKUG
((5926.412109375, 7348.46875), (6470.048828125, 7535.9296875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2052, '2': 2643, '3': 3233, '4': 3824, '5': 4227, '6': 4827, '7': 5623, '8': 6233, '9': 6636, '10': 7460}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SQ3PfSs.jpg
OCR detection done with doctr
left top x of T/F: 5642.140625
bottom right x of T/F: 6904.2109375
left top x of SN: 562.203125
bottom right x of SN: 970.9140625000001
first t/f detection
TRUE
((5734.4765625, 2396.890625), (6246.789062499999, 2579.859375))
FALSE
((5789.3671875, 2973.2421875), (6374.8671875, 3137.9140625))
FALSE
((5816.812499999999, 3485.5546875), (6402.312499999999, 3659.375))
FALSE
((5661.289062499999, 4116.796875), (6182.75, 4254.0234375))
FALSE
((5624.6953125, 4665.703125), (6237.640625, 4839.5234375))
FALSE
((5771.0703125, 5278.6484375), (6292.531250000001, 5415.875))
FALSE
((5780.21875, 5781.8125), (6329.125, 5955.6328125))
FALSE
((5652.140625, 6294.125), (6265.085937499999, 6467.9453125))
TRUE
((5670.4375, 6788.140625), (6210.1953125, 6961.9609375))
TRUE
((5707.031250000001, 7410.234375), (6201.046875, 7547.4609375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2451, '2': 3055, '3': 3458, '4': 4061, '5': 4665, '6': 5269, '7': 5672, '8': 6284, '9': 6687, '10': 7309}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : B4XCYz9.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6693.468750000001
left top x of SN: 655.4062500000001
bottom right x of SN: 1052.15625
first t/f detection
TRUG
((5509.062499999999, 2284.90625), (6195.437500000001, 2501.65625))
TRUE
((5536.156249999999, 2835.8125), (6078.031249999999, 3043.53125))
FALSE
((5427.781249999999, 3955.6875), (5978.687500000001, 4172.4375))
FALSG
((5481.968749999999, 4542.71875), (6150.28125, 4750.4375))
FALSE
((5481.968749999999, 5454.875), (6114.156250000001, 5671.625))
TRUE
((5491.000000000001, 5951.59375), (6023.843749999999, 6159.3125))
TRUE
((5445.84375, 6421.21875), (5996.749999999999, 6619.90625))
TRUE
((5581.3125, 6963.09375), (6150.28125, 7179.84375))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': 'NULL', '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2402, '2': 2971, '3': 3350, '4': 3919, '5': 4479, '6': 5048, '7': 5418, '8': 5987, '9': 6358, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': 'NULL', '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k3MGv5p.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6458.65625
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
first t/f detection
TRUE
((5301.343750000001, 1887.53125), (5924.500000000001, 2185.5625))
TRUE
((5328.437500000001, 2429.40625), (5996.749999999999, 2673.25))
Fatse
((5743.875, 2745.5), (6258.65625, 2971.28125))
Greee
((5436.812500000001, 2962.25), (5924.500000000001, 3142.875))
collision happend with box:2962.25 and text:Greee solving on the basis of percent match boxes
the current box specification are
Coacs
((5328.437500000001, 3124.8125), (5960.625, 3332.53125))
text2 i.e the incoming text is the winner
TRUE
((5364.5625, 3486.0625), (5996.749999999999, 3747.96875))
FALSE
((5373.593749999999, 4082.125), (6005.781250000001, 4325.96875))
TRUE
((5310.375, 4596.90625), (5951.593750000001, 4849.78125))
TRUE
((5445.84375, 5093.625), (6041.90625, 5301.34375))
Cotaias
((5463.906250000001, 5635.5), (6087.062500000001, 5807.09375))
collision happend with box:5635.5 and text:Cotaias solving on the basis of percent match boxes
the current box specification are
HLS
((5635.5, 5780.0), (5933.53125, 5924.5))
text1 i.e the prev text is the winner
Glaco
((5527.125, 6114.15625), (6132.218749999999, 6312.84375))
FALS
((5373.593749999999, 6285.75), (5897.406250000001, 6502.5))
TRUE
((5527.125, 6845.6875), (6096.09375, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2628, '3': 2998, '4': 3567, '5': 4127, '6': 4705, '7': 5093, '8': 5680, '9': 6078, '10': 6683}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AEvXq0w.jpg
OCR detection done with doctr
left top x of SN: 202.03906250000003
bottom right x of SN: 421.4580078125
left top x of T/F: 975.857421875
bottom right x of T/F: 1345.2470703125
first t/f detection
FALSE
((994.4267578125001, 469.599609375), (1083.5478515625, 510.732421875))
collision happend with box:469.599609375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((992.712890625, 551.865234375), (1078.40625, 592.998046875))
text2 i.e the incoming text is the winner
collision happend with box:551.865234375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((845.3203124999999, 634.130859375), (977.2880859375, 663.2666015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:634.130859375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRVE
((989.28515625, 639.2724609375), (1069.8369140625, 673.5498046875))
text1 i.e the prev text is the winner
collision happend with box:634.130859375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((958.435546875, 736.962890625), (982.4296875000001, 764.384765625))
text1 i.e the prev text is the winner
collision happend with box:634.130859375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRVE
((997.8544921875, 736.962890625), (1074.978515625, 762.6708984375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((994.4267578125001, 469.599609375), (1083.5478515625, 510.732421875))
FALSE
((992.712890625, 551.865234375), (1078.40625, 592.998046875))
d-dimensional
((845.3203124999999, 634.130859375), (977.2880859375, 663.2666015625))
collision happend with box:634.130859375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRVE
((989.28515625, 639.2724609375), (1069.8369140625, 673.5498046875))
text1 i.e the prev text is the winner
is
((958.435546875, 736.962890625), (982.4296875000001, 764.384765625))
collision happend with box:736.962890625 and text:is solving on the basis of percent match boxes
the current box specification are
TRVE
((997.8544921875, 736.962890625), (1074.978515625, 762.6708984375))
text2 i.e the incoming text is the winner
Pre-
((936.1552734374999, 836.3671875), (982.4296875000001, 862.0751953125))
collision happend with box:836.3671875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FAISE
((999.568359375, 839.794921875), (1086.9755859375, 872.3583984375))
text2 i.e the incoming text is the winner
distribution.
((864.1728515625, 935.771484375), (985.857421875, 964.9072265625))
collision happend with box:935.771484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((1002.99609375, 925.48828125), (1078.40625, 958.0517578125))
text1 i.e the prev text is the winner
collision happend with box:935.771484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((910.4472656250001, 1004.326171875), (989.28515625, 1035.17578125))
text1 i.e the prev text is the winner
collision happend with box:935.771484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRUE
((1006.423828125, 1006.0400390625), (1081.833984375, 1038.603515625))
text1 i.e the prev text is the winner
space.
((925.8720703125, 1110.5859375), (987.5712890624999, 1136.2939453125))
collision happend with box:1110.5859375 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((1011.5654296875, 1095.1611328125), (1100.6865234375, 1127.724609375))
text2 i.e the incoming text is the winner
prediction
((893.30859375, 1175.712890625), (992.712890625, 1206.5625))
collision happend with box:1175.712890625 and text:prediction solving on the basis of percent match boxes
the current box specification are
FALSE
((1011.5654296875, 1172.28515625), (1097.2587890625, 1211.7041015625))
text2 i.e the incoming text is the winner
the
((958.435546875, 1311.1083984375), (997.8544921875, 1338.5302734375))
collision happend with box:1311.1083984375 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((1018.4208984375, 1292.255859375), (1098.97265625, 1323.10546875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': False, '10': True}
the unassigned keys are ['1', '4', '6', '7']
the assigned keys are ['2', '3', '5', '8', '9', '10']
['2', '3', '5', '8', '9', '10', '2', '3', '5', '8', '9', '10']
printing the number dict y_coordinate
{'2': 570, '3': 637, '5': 839, '8': 1110, '9': 1180, '10': 1283, '1': 270}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : K4M2DDt.jpg
OCR detection done with doctr
left top x of SN: 562.203125
bottom right x of SN: 961.765625
left top x of T/F: 5523.2109375
bottom right x of T/F: 6675.5
first t/f detection
palle
((5688.734375, 1866.28125), (6274.234375, 2122.4375))
Tue
((5569.804687500001, 2342.0), (5972.3359375, 2579.859375))
Ahue
((5560.65625, 2918.3515625), (5990.6328125, 3147.0625))
Thul
((6018.078125000001, 3439.8125), (6420.609375, 3659.375))
collision happend with box:3439.8125 and text:Thul solving on the basis of percent match boxes
the current box specification are
Fall
((5560.65625, 3458.109375), (6018.078125000001, 3686.8203125))
true and false collision so given priority to text2 which is the incoming text
Thul
((5551.507812500001, 3888.0859375), (5981.484375, 4116.796875))
falle
((5679.5859375, 4501.03125), (6118.7109375, 4775.484375))
Tkue
((5661.289062499999, 5196.3125), (6063.8203125, 5434.171875))
Thul
((5551.507812500001, 5763.515625), (6091.265625, 6028.8203125))
Falbe
((5606.3984375, 6861.328125), (6018.078125000001, 7080.890625))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': 'NULL', '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1875, '2': 2442, '3': 3000, '4': 3567, '5': 3952, '6': 4519, '7': 5269, '8': 5845, '9': 6230, '10': 7007}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': 'NULL', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FikUEoA.jpg
OCR detection done with doctr
left top x of SN: 388.3828124999999
bottom right x of SN: 806.2421875
left top x of T/F: 5632.9921875
bottom right x of T/F: 6840.171875
first t/f detection
TRUE
((5734.4765625, 1866.28125), (6292.531250000001, 2067.546875))
TRUE
((5780.21875, 2451.78125), (6301.6796875, 2625.6015625))
FALSE
((5835.109375, 3073.875), (6356.5703125, 3293.4375))
TRUE
((5725.328125, 3604.484375), (6228.4921875, 3778.3046875))
FALSE
((5780.21875, 4089.3515625), (6255.9375, 4254.0234375))
TROE
((5789.3671875, 4729.7421875), (6255.9375, 4912.7109375))
TROE
((5771.0703125, 5525.65625), (6319.9765625, 5699.4765625))
TROE
((5789.3671875, 5983.078125), (6319.9765625, 6156.8984375))
FALSE
((5780.21875, 6531.984375), (6338.2734375, 6742.3984375))
FALSE
((5771.0703125, 7163.2265625), (6265.085937499999, 7346.1953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1756, '2': 2360, '3': 2964, '4': 3567, '5': 3970, '6': 4574, '7': 5379, '8': 5992, '9': 6403, '10': 7218}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A2sNCY3.jpg
OCR detection done with doctr
left top x of SN: 589.6484375000002
bottom right x of SN: 998.3593749999998
left top x of T/F: 5431.7265625
bottom right x of T/F: 6593.1640625
first t/f detection
T
((5386.8359375, 2662.1953125), (5560.65625, 2817.71875))
F
((5496.6171875, 3156.2109375), (5633.84375, 3275.140625))
T
((5432.578125, 3631.9296875), (5588.1015625, 3796.6015625))
F
((5441.7265625, 4052.7578125), (5560.65625, 4208.28125))
T
((5423.4296875, 4693.1484375), (5588.1015625, 4848.671875))
T
((5441.7265625, 5370.1328125), (5615.546875, 5543.953125))
T
((5432.578125, 5864.1484375), (5542.359375, 5964.78125))
A
((5460.0234375, 6294.125), (5606.3984375, 6477.09375))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1985, '2': 2543, '3': 3101, '4': 3659, '5': 4025, '6': 4601, '7': 5342, '8': 5909, '9': 6284, '10': 7035}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : n5LMW0T.jpg
OCR detection done with doctr
left top x of T/F: 5285.3515625
bottom right x of T/F: 6355.304687500001
left top x of SN: 964.7343749999998
bottom right x of SN: 1355.1484375000002
first t/f detection
TRUE
((5286.203125, 2204.7734375), (5816.812499999999, 2415.1875))
TRVE
((5267.90625, 2662.1953125), (5807.6640625, 2881.7578125))
TRUE
((5295.3515625, 3256.84375), (5844.2578125, 3476.40625))
BERJE
((5240.4609375, 3723.4140625), (6082.1171875, 3961.2734375))
collision happend with box:3723.4140625 and text:BERJE solving on the basis of percent match boxes
the current box specification are
FALSE
((5469.171875, 3888.0859375), (6155.304687500001, 4135.09375))
text2 i.e the incoming text is the winner
FALSE
((5240.4609375, 4272.3203125), (5844.2578125, 4473.5859375))
FALSE
((5222.1640625, 4702.296875), (5871.703125, 4903.5625))
FALSE
((5313.6484375, 5068.234375), (5835.109375, 5251.203125))
FALSE
((5313.6484375, 5534.8046875), (5835.109375, 5717.7734375))
EAE
((5313.6484375, 5983.078125), (5890.0, 6156.8984375))
collision happend with box:5983.078125 and text:EAE solving on the basis of percent match boxes
the current box specification are
TRUE
((5295.3515625, 6147.75), (5917.4453125, 6349.015625))
text2 i.e the incoming text is the winner
FALSE
((5304.5, 6586.875), (5908.296875, 6788.140625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2342, '2': 2854, '3': 3201, '4': 3714, '5': 4226, '6': 4748, '7': 5095, '8': 5626, '9': 5983, '10': 6522}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : faXTONV.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1968.8125), (5978.687500000001, 2221.6875))
false
((5427.781249999999, 2564.875), (5906.4375, 2826.78125))
True
((5509.062499999999, 3079.65625), (6005.781250000001, 3305.4375))
fale
((5364.5625, 3648.625), (5779.999999999999, 3874.40625))
Txue
((5400.687499999999, 4253.71875), (5951.593750000001, 4452.40625))
Teue
((5355.531250000001, 4840.75), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6023.84375))
True
((5409.718750000001, 6240.59375), (5915.468749999999, 6502.5))
Teue
((5500.03125, 6800.53125), (5960.625, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3160, '4': 3738, '5': 4325, '6': 4913, '7': 5301, '8': 5897, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BUtmjUM.jpg
OCR detection done with doctr
left top x of SN: 187.07421875
bottom right x of SN: 405.79296875
left top x of T/F: 955.9570312499999
bottom right x of T/F: 1322.4453125
first t/f detection
Faye
((978.8632812500001, 483.984375), (1056.30078125, 516.25))
collision happend with box:483.984375 and text:Faye solving on the basis of percent match boxes
the current box specification are
Tyuc
((974.0234375000001, 569.48828125), (1051.4609375, 601.75390625))
text2 i.e the incoming text is the winner
collision happend with box:569.48828125 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
True
((969.18359375, 667.8984375), (1051.4609375, 700.1640625))
text2 i.e the incoming text is the winner
collision happend with box:667.8984375 and text:True solving on the basis of percent match boxes
the current box specification are
Tune
((969.18359375, 766.30859375), (1048.234375, 803.4140625))
text1 i.e the prev text is the winner
Trwe
((965.9570312499999, 929.25), (1040.16796875, 967.96875))
collision happend with box:929.25 and text:Trwe solving on the basis of percent match boxes
the current box specification are
T9rue
((964.34375, 851.8125), (1038.5546875, 884.078125))
text2 i.e the incoming text is the winner
collision happend with box:851.8125 and text:T9rue solving on the basis of percent match boxes
the current box specification are
Falbe
((967.5703125, 1019.59375), (1040.16796875, 1048.6328125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Faye
((978.8632812500001, 483.984375), (1056.30078125, 516.25))
Tyuc
((974.0234375000001, 569.48828125), (1051.4609375, 601.75390625))
True
((969.18359375, 667.8984375), (1051.4609375, 700.1640625))
Tune
((969.18359375, 766.30859375), (1048.234375, 803.4140625))
Trwe
((965.9570312499999, 929.25), (1040.16796875, 967.96875))
collision happend with box:929.25 and text:Trwe solving on the basis of percent match boxes
the current box specification are
T9rue
((964.34375, 851.8125), (1038.5546875, 884.078125))
text2 i.e the incoming text is the winner
Falbe
((967.5703125, 1019.59375), (1040.16796875, 1048.6328125))
collision happend with box:1019.59375 and text:Falbe solving on the basis of percent match boxes
the current box specification are
Faje
((965.9570312499999, 1097.03125), (1035.328125, 1129.296875))
text1 i.e the prev text is the winner
Tyue
((959.50390625, 1216.4140625), (1041.78125, 1256.74609375))
the final dict without editing {'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['4', '8', '9']
the assigned keys are ['1', '2', '3', '5', '6', '7', '10']
['1', '2', '3', '5', '6', '7', '10', '1', '2', '3', '5', '6', '7', '10']
printing the number dict y_coordinate
{'1': 403, '2': 501, '3': 572, '5': 771, '6': 871, '7': 938, '10': 1208}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DiAuBgf.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6675.40625
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
first t/f detection
TRUE
((5436.812500000001, 1788.1875), (6078.031249999999, 2004.9375))
FALSE
((5518.093750000001, 2366.1875), (6186.406249999999, 2582.9375))
FALSE
((5500.03125, 2998.375), (6177.375, 3197.0625))
FALSE
((5491.000000000001, 3513.15625), (6204.46875, 3711.84375))
FALSE
((5572.281250000001, 3982.78125), (6231.5625, 4181.46875))
FALSE
((5518.093750000001, 4596.90625), (6186.406249999999, 4795.59375))
TRUE
((5518.093750000001, 5364.5625), (6114.156250000001, 5572.28125))
TRUE
((5518.093750000001, 5897.40625), (6132.218749999999, 6114.15625))
FALSE
((5563.249999999999, 6403.15625), (6204.46875, 6656.03125))
TRVE
((5518.093750000001, 7053.40625), (6177.375, 7261.125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2465, '3': 3061, '4': 3657, '5': 4046, '6': 4651, '7': 5445, '8': 6041, '9': 6448, '10': 7243}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UmqXxrS.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1181.703125
first t/f detection
fole
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
collision happend with box:402.724609375 and text:fole solving on the basis of percent match boxes
the current box specification are
Trosl
((835.2578125, 496.640625), (924.3984375, 544.39453125))
text2 i.e the incoming text is the winner
collision happend with box:496.640625 and text:Trosl solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text1 i.e the prev text is the winner
collision happend with box:496.640625 and text:Trosl solving on the basis of percent match boxes
the current box specification are
Frue
((914.84765625, 590.556640625), (988.0703125, 641.494140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:590.556640625 and text:Frue solving on the basis of percent match boxes
the current box specification are
Trud
((908.4804687499999, 681.2890625), (989.6621093749999, 738.59375))
text2 i.e the incoming text is the winner
collision happend with box:681.2890625 and text:Trud solving on the basis of percent match boxes
the current box specification are
falne
((817.748046875, 776.796875), (921.21484375, 842.060546875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
fole
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
Trosl
((835.2578125, 496.640625), (924.3984375, 544.39453125))
collision happend with box:496.640625 and text:Trosl solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text1 i.e the prev text is the winner
Frue
((914.84765625, 590.556640625), (988.0703125, 641.494140625))
Trud
((908.4804687499999, 681.2890625), (989.6621093749999, 738.59375))
falne
((817.748046875, 776.796875), (921.21484375, 842.060546875))
collision happend with box:776.796875 and text:falne solving on the basis of percent match boxes
the current box specification are
True
((824.115234375, 850.01953125), (922.8066406250001, 915.283203125))
text2 i.e the incoming text is the winner
Tue
((828.8906250000001, 935.9765625), (918.03125, 994.873046875))
Falu
((836.849609375, 1029.892578125), (918.03125, 1079.23828125))
Falue
((830.482421875, 1114.2578125), (925.9902343750001, 1173.154296875))
Falx
((830.482421875, 1217.724609375), (933.94921875, 1281.396484375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 561, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GMgHHm1.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/GMgHHm1.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} Expected begin, end, and strides to be 1D equal size tensors, but got shapes [2], [1], and [1] instead. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HIZNGdx.jpg
OCR detection done with doctr
left top x of SN: 324.34374999999994
bottom right x of SN: 733.0546875
left top x of T/F: 5568.953125
bottom right x of T/F: 6849.3203125
first t/f detection
Tsue.
((5743.625, 1939.46875), (6420.609375, 2140.734375))
Tsule
((5615.546875, 2589.0078125), (6265.085937499999, 2799.421875))
Falg.
((5716.1796875, 3165.359375), (6384.015625, 3412.3671875))
Tste
((5743.625, 3741.7109375), (6420.609375, 3915.53125))
Fell.
((5780.21875, 4235.7265625), (6521.2421875, 4455.2890625))
Tsule,
((5679.5859375, 4921.859375), (6411.4609375, 5141.421875))
Tsue.
((5734.4765625, 5644.5859375), (6438.90625, 5845.8515625))
Fellse
((5697.8828125, 6129.453125), (6265.085937499999, 6339.8671875))
tsue.
((5688.734375, 6751.546875), (6402.312499999999, 6961.9609375))
TSUe.
((5670.4375, 7410.234375), (6384.015625, 7574.90625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1976, '2': 2570, '3': 3165, '4': 3769, '5': 4162, '6': 4775, '7': 5571, '8': 6175, '9': 6586, '10': 7391}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NDKzZ1k.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 772.1874999999999
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6946.34375
first t/f detection
TRUE
((5789.031250000001, 1977.84375), (6367.03125, 2230.71875))
TRVE
((5897.406250000001, 2790.65625), (6358.000000000001, 2971.28125))
FALSE
((5834.187499999999, 3179.0), (6511.531249999999, 3422.84375))
FALSE
((5897.406250000001, 3693.78125), (6556.6875, 3937.625))
FALSE
((5843.218750000001, 4199.53125), (6475.40625, 4443.375))
FALSE
((5825.15625, 4949.125), (6511.531249999999, 5211.03125))
TRUE
((5906.4375, 5680.65625), (6394.125, 5960.625))
TRUE
((5888.374999999999, 6204.46875), (6493.468750000001, 6466.375))
TRUE
((5915.468749999999, 6773.4375), (6502.5, 7035.34375))
TRVE
((5852.25, 7441.75), (6493.468750000001, 7694.625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['1', '2', '8']
the assigned keys are ['3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'3': 3206, '4': 3820, '5': 4262, '6': 4822, '7': 5653, '9': 6647, '10': 7432}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kaXEAip.jpg
OCR detection done with doctr
left top x of T/F: 5636.5546875
bottom right x of T/F: 6819.03515625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:42:09] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : kaXEAip.jpg
[2024/07/01 14:42:10] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:42:11] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.16634654998779297
[2024/07/01 14:42:13] ppocr DEBUG: rec_res num  : 34, elapsed : 2.0686590671539307
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
SN:
[[798.0, 1472.0], [1045.0, 1472.0], [1045.0, 1581.0], [798.0, 1581.0]]
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5715.0, 2901.0], [6332.0, 2927.0], [6321.0, 3174.0], [5704.0, 3148.0]]
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341]
the false list is  []
the true list for xdirn [5757]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2341, 3461]
the false list is  []
the true list for xdirn [5757, 5655]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461]
the false list is  []
the true list for xdirn [5757, 5655]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461]
the false list is  []
the true list for xdirn [5757, 5655]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2341, 3461, 3932]
the false list is  []
the true list for xdirn [5757, 5655, 5658]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932]
the false list is  []
the true list for xdirn [5757, 5655, 5658]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932]
the false list is  []
the true list for xdirn [5757, 5655, 5658]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2341, 3461, 3932, 4594]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
class label
[[986.0, 5414.0], [1695.0, 5414.0], [1695.0, 5552.0], [986.0, 5552.0]]
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5648.0, 5740.0], [6230.0, 5740.0], [6230.0, 5947.0], [5648.0, 5947.0]]
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5599.0, 6342.0], [6230.0, 6342.0], [6230.0, 6510.0], [5599.0, 6510.0]]
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2341, 3461, 3932, 4594, 5187]
the false list is  []
the true list for xdirn [5757, 5655, 5658, 5717, 5688]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : a72tRvR.jpg
OCR detection done with doctr
left top x of SN: 763.4687499999999
bottom right x of SN: 1181.328125
left top x of T/F: 5578.1015625
bottom right x of T/F: 6812.7265625
first t/f detection
TRUE
((5642.9921875, 2259.6640625), (6219.34375, 2479.2265625))
TRUE
((5642.9921875, 2790.2734375), (6246.789062499999, 3000.6875))
TRUE
((5679.5859375, 3247.6953125), (6292.531250000001, 3448.9609375))
TRUE
((5642.9921875, 3906.3828125), (6228.4921875, 4125.9453125))
TRUE
((5652.140625, 4473.5859375), (6155.304687500001, 4647.40625))
False
((5661.289062499999, 4958.453125), (6127.859375, 5168.8671875))
TRUE
((5707.031250000001, 5269.5), (6329.125, 5489.0625))
Teese
((5752.7734375, 5461.6171875), (6219.34375, 5644.5859375))
TRUE
((5597.25, 5964.78125), (6201.046875, 6166.046875))
Talse
((5725.328125, 6504.5390625), (6228.4921875, 6678.359375))
TRUE
((5688.734375, 7099.1875), (6301.6796875, 7346.1953125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2186, '2': 2771, '3': 3156, '4': 3750, '5': 4336, '6': 4940, '7': 5342, '8': 5946, '9': 6349, '10': 6961}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vblP2gM.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((913.64453125, 496.7578125), (946.8671875000001, 537.890625))
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 580.60546875), (951.61328125, 616.9921875))
text2 i.e the incoming text is the winner
collision happend with box:580.60546875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((915.2265624999999, 688.18359375), (943.703125, 718.2421875))
text2 i.e the incoming text is the winner
collision happend with box:688.18359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 791.015625), (940.5390625, 821.07421875))
text2 i.e the incoming text is the winner
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1224.4921875), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((913.64453125, 496.7578125), (946.8671875000001, 537.890625))
F
((923.13671875, 580.60546875), (951.61328125, 616.9921875))
T
((915.2265624999999, 688.18359375), (943.703125, 718.2421875))
T
((912.0625, 791.015625), (940.5390625, 821.07421875))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1224.4921875), (935.7929687499999, 1259.296875))
the final dict without editing {'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': False, '10': False}
the unassigned keys are ['4', '7', '8']
the assigned keys are ['1', '2', '3', '5', '6', '9', '10']
['1', '2', '3', '5', '6', '9', '10', '1', '2', '3', '5', '6', '9', '10']
printing the number dict y_coordinate
{'2': 520, '3': 586, '1': 590, '5': 789, '6': 890, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MvHSRmI.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6711.531249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 745.0937499999999
first t/f detection
FALSE
((5635.5, 2004.9375), (6204.46875, 2131.375))
FALSE
((5635.5, 2573.90625), (6231.5625, 2772.59375))
TRUE
((5572.281250000001, 3215.125), (6069.0, 3377.6875))
TRUE
((5644.531249999999, 3775.0625), (6114.156250000001, 3982.78125))
TRUE
((5689.6875, 4253.71875), (6123.1875, 4425.3125))
TAVE
((5716.78125, 4931.0625), (6267.687499999999, 5129.75))
TRUE
((5653.562500000001, 5635.5), (6078.031249999999, 5816.125))
FALSE
((5599.375000000001, 6213.5), (6059.968750000001, 6348.96875))
FALSE
((5635.5, 6755.375), (6123.1875, 6936.0))
TRUE
((5671.624999999999, 7342.40625), (6132.218749999999, 7514.0))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2700, '3': 3287, '4': 3874, '5': 4262, '6': 4867, '7': 5671, '8': 6276, '9': 6674, '10': 7495}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v4aJrqY.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6648.3125
left top x of SN: 429.6249999999999
bottom right x of SN: 844.4375
first t/f detection
TRUE
((5509.062499999999, 1932.6875), (6195.437500000001, 2194.59375))
TRUE
((5590.343749999999, 2528.75), (6231.5625, 2781.625))
FALSE
((5554.21875, 3115.78125), (6267.687499999999, 3368.65625))
FALSE
((5554.21875, 3711.84375), (6240.593749999999, 3874.40625))
TRUE
((5536.156249999999, 4145.34375), (6168.343750000001, 4362.09375))
TRUE
((5545.187500000001, 4795.59375), (6240.593749999999, 5039.4375))
TRUE
((5545.187500000001, 5491.0), (6267.687499999999, 5707.75))
TRUE
((5572.281250000001, 6023.84375), (6195.437500000001, 6195.4375))
FALSE
((5554.21875, 6538.625), (6348.968749999999, 6782.46875))
TRUE
((5554.21875, 7143.71875), (6114.156250000001, 7351.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2682, '3': 3251, '4': 3829, '5': 4208, '6': 4786, '7': 5545, '8': 6123, '9': 6511, '10': 7288}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7T7pRQW.jpg
OCR detection done with doctr
left top x of SN: 220.67968749999994
bottom right x of SN: 461.66406250000006
left top x of T/F: 1394.13671875
bottom right x of T/F: 1850.615234375
first t/f detection
folu
((1437.169921875, 706.40234375), (1589.630859375, 800.419921875))
collision happend with box:706.40234375 and text:folu solving on the basis of percent match boxes
the current box specification are
Falke
((1437.169921875, 820.748046875), (1584.548828125, 907.142578125))
text2 i.e the incoming text is the winner
collision happend with box:820.748046875 and text:Falke solving on the basis of percent match boxes
the current box specification are
Trut
((1424.46484375, 947.798828125), (1574.3847656249998, 1051.98046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:947.798828125 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tiol
((1444.79296875, 1095.177734375), (1582.0078125, 1194.27734375))
text1 i.e the prev text is the winner
Trul
((1439.7109375, 1242.556640625), (1582.0078125, 1349.279296875))
collision happend with box:1242.556640625 and text:Trul solving on the basis of percent match boxes
the current box specification are
Trul
((1429.546875, 1379.771484375), (1579.466796875, 1458.54296875))
text2 i.e the incoming text is the winner
collision happend with box:1379.771484375 and text:Trul solving on the basis of percent match boxes
the current box specification are
fyul
((1437.169921875, 1499.19921875), (1582.0078125, 1588.134765625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
folu
((1437.169921875, 706.40234375), (1589.630859375, 800.419921875))
Falke
((1437.169921875, 820.748046875), (1584.548828125, 907.142578125))
Trut
((1424.46484375, 947.798828125), (1574.3847656249998, 1051.98046875))
Tiol
((1444.79296875, 1095.177734375), (1582.0078125, 1194.27734375))
Trul
((1439.7109375, 1242.556640625), (1582.0078125, 1349.279296875))
Trul
((1429.546875, 1379.771484375), (1579.466796875, 1458.54296875))
fyul
((1437.169921875, 1499.19921875), (1582.0078125, 1588.134765625))
hrue
((1437.169921875, 1621.16796875), (1574.3847656249998, 1702.48046875))
falye
((1439.7109375, 1748.21875), (1566.76171875, 1824.44921875))
Falue
((1429.546875, 1890.515625), (1579.466796875, 1981.9921875))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 698, '2': 848, '3': 947, '4': 1100, '5': 1247, '6': 1392, '7': 1494, '8': 1644, '9': 1743, '10': 1887}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : leDjQxO.jpg
OCR detection done with doctr
left top x of T/F: 5442.05859375
bottom right x of T/F: 6652.32421875
left top x of SN: 864.5546874999999
bottom right x of SN: 1276.0976562500002
first t/f detection
Trie
((5516.890625, 1935.69921875), (6044.80859375, 2167.2421875))
Tue
((5396.48828125, 2463.6171875), (5915.14453125, 2722.9453125))
TYue
((5628.031250000001, 2954.48828125), (6174.47265625, 3176.76953125))
False
((5544.67578125, 3621.33203125), (6155.94921875, 3834.3515625))
ere
((5563.19921875, 4195.55859375), (6091.117187499999, 4408.578125))
Tue
((5590.984375000001, 4399.31640625), (6202.2578125, 4603.07421875))
Tyue
((5507.62890625, 4742.0), (6026.28515625, 4917.97265625))
False
((5415.01171875, 5130.9921875), (5924.40625, 5390.3203125))
True
((5470.58203125, 5594.078125), (5924.40625, 5779.3125))
Falye
((5405.75, 6047.90234375), (5924.40625, 6233.13671875))
False
((5470.58203125, 6566.55859375), (5970.71484375, 6779.578125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2204, '2': 2750, '3': 3111, '4': 3658, '5': 4195, '6': 4751, '7': 5112, '8': 5649, '9': 6020, '10': 6566}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : T04C5Cf.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6729.59375
left top x of SN: 610.25
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5707.750000000001, 1977.84375), (6177.375, 2149.4375))
TRUE
((5716.78125, 2510.6875), (6150.28125, 2673.25))
PALSE
((5698.718749999999, 3043.53125), (6195.437500000001, 3224.15625))
FALSE
((5689.6875, 3621.53125), (6240.593749999999, 3784.09375))
FALSE
((5671.624999999999, 4217.59375), (6204.46875, 4380.15625))
FALSE
((5698.718749999999, 4741.40625), (6186.406249999999, 4903.96875))
TRUE
((5626.468750000001, 5192.96875), (6069.0, 5355.53125))
TRUE
((5626.468750000001, 5761.9375), (6023.843749999999, 5924.5))
TRUE
((5608.40625, 6258.65625), (6050.937499999999, 6430.25))
TRUE
((5644.531249999999, 6981.15625), (6096.09375, 7152.75))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 2998, '4': 3603, '5': 4190, '6': 4795, '7': 5202, '8': 5807, '9': 6213, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Kx9Dpvo.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1235.4609375
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:878.02734375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
F
((921.5546875, 579.0234375), (950.03125, 615.41015625))
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1222.91015625), (934.2109374999999, 1257.71484375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CrwqCnM.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/CrwqCnM.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZU7kvGx.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 672.8437500000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6874.093749999999
first t/f detection
tRuE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
Tvue
((5779.999999999999, 2438.4375), (6231.5625, 2619.0625))
CAIse
((5707.750000000001, 3142.875), (6231.5625, 3314.46875))
+pue
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5779.999999999999, 4172.4375), (6376.062499999999, 4389.1875))
TYUE
((5608.40625, 4849.78125), (6078.031249999999, 4985.25))
TRUE
((5590.343749999999, 5563.25), (6114.156250000001, 5698.71875))
Rue
((5852.25, 6114.15625), (6466.375000000001, 6276.71875))
Palte
((5734.843750000001, 6647.0), (6231.5625, 6854.71875))
falst
((5779.999999999999, 7161.78125), (6394.125, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2402, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6123, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jqj9QLY.jpg
OCR detection done with doctr
left top x of T/F: 5405.01171875
bottom right x of T/F: 6513.398437500001
left top x of SN: 984.95703125
bottom right x of SN: 1377.9765625
first t/f detection
TRUE
((5424.2734375, 2269.12109375), (5905.8828125, 2491.40234375))
TRUE
((5424.2734375, 2778.515625), (5905.8828125, 2991.53515625))
TRUE
((5424.2734375, 3204.5546875), (5868.8359375, 3417.57421875))
FALSE
((5377.96484375, 3778.78125), (5915.14453125, 3991.80078125))
FALSE
((5424.2734375, 4362.26953125), (5961.453125, 4575.2890625))
FALSE
((5415.01171875, 4853.140625), (5933.66796875, 5038.375))
GALSE
((5396.48828125, 5260.65625), (5887.359375, 5445.890625))
TRUE
((5387.2265625, 5797.8359375), (5794.7421875, 5973.80859375))
TRUE
((5331.656249999999, 6177.56640625), (5785.48046875, 6390.5859375))
TRUE
((5368.703125, 6742.53125), (5822.52734375, 6927.765625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2398, '2': 2926, '3': 3278, '4': 3815, '5': 4343, '6': 4880, '7': 5242, '8': 5779, '9': 6159, '10': 6714}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ef8ACCI.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6585.093750000001
first t/f detection
TRUE
((5391.65625, 2104.28125), (5852.25, 2284.90625))
TRUE
((5373.593749999999, 2628.09375), (5852.25, 2808.71875))
TRYE
((5346.499999999999, 3124.8125), (5816.125000000001, 3332.53125))
FALSE
((5382.625000000001, 3766.03125), (5915.468749999999, 3928.59375))
FALSE
((5355.531250000001, 4371.125), (5870.312500000001, 4533.6875))
FALSE
((5382.625000000001, 4903.96875), (5897.406250000001, 5066.53125))
TRUE
((5337.46875, 5364.5625), (5798.0625, 5572.28125))
FALSE
((5355.531250000001, 5906.4375), (5906.4375, 6069.0))
TRUE
((5346.499999999999, 6358.0), (5816.125000000001, 6565.71875))
TRUE
((5391.65625, 7017.28125), (5861.281249999999, 7188.875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2718, '3': 3115, '4': 3720, '5': 4325, '6': 4931, '7': 5328, '8': 5933, '9': 6330, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : w1cmMVA.jpg
OCR detection done with doctr
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6828.937500000001
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
FALSE
((5617.437499999999, 1941.71875), (6213.499999999999, 2158.46875))
CAISE
((5707.750000000001, 2528.75), (6348.968749999999, 2790.65625))
TRUG
((5734.843750000001, 2763.5625), (6285.75, 2980.3125))
FALSE
((5653.562500000001, 3133.84375), (6330.906250000001, 3377.6875))
TVUE
((5536.156249999999, 3666.6875), (6177.375, 3874.40625))
FALSE
((5563.249999999999, 4127.28125), (6195.437500000001, 4344.03125))
FALSE
((5590.343749999999, 4831.71875), (6231.5625, 5084.59375))
TRUE
((5527.125, 5536.15625), (6123.1875, 5743.875))
FALSE
((5581.3125, 6014.8125), (6240.593749999999, 6258.65625))
FOLSE
((5545.187500000001, 6547.65625), (6159.312499999999, 6791.5))
TROE
((5608.40625, 7152.75), (6240.593749999999, 7369.5))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '10']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9']
['1', '2', '3', '6', '7', '8', '9', '1', '2', '3', '6', '7', '8', '9']
printing the number dict y_coordinate
{'1': 2050, '2': 2619, '3': 3242, '6': 4777, '7': 5563, '8': 6123, '9': 6511}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAy4x2y.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6801.843750000001
left top x of SN: 276.0937500000001
bottom right x of SN: 681.875
first t/f detection
True
((5617.437499999999, 1715.9375), (6168.343750000001, 1977.84375))
Fals
((5635.5, 2348.125), (6177.375, 2610.03125))
False
((5536.156249999999, 2953.21875), (6096.09375, 3215.125))
Falv
((5554.21875, 3558.3125), (6032.875000000001, 3738.9375))
collision happend with box:3558.3125 and text:Falv solving on the basis of percent match boxes
the current box specification are
varianceluon
((4425.3125, 3495.09375), (5500.03125, 3820.21875))
text2 i.e the incoming text is the winner
Falye
((5626.468750000001, 4696.25), (6141.250000000001, 4913.0))
Tru
((5581.3125, 5436.8125), (6059.968750000001, 5599.375))
Fals
((6041.90625, 5933.53125), (6484.437499999999, 6141.25))
collision happend with box:5933.53125 and text:Fals solving on the basis of percent match boxes
the current box specification are
Tae
((5500.03125, 5933.53125), (5978.687500000001, 6159.3125))
text1 i.e the prev text is the winner
True
((5509.062499999999, 6529.59375), (6023.843749999999, 6782.46875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2492, '3': 3088, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6059, '9': 6457, '10': 7234}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Nqj6Ukg.jpg
OCR detection done with doctr
left top x of SN: 197.70996093749994
bottom right x of SN: 444.62890625
left top x of T/F: 1512.5537109375
bottom right x of T/F: 1995.5830078125
first t/f detection
Tywe
((1554.6748046875, 730.7548828125), (1699.2197265625, 835.1484375))
collision happend with box:730.7548828125 and text:Tywe solving on the basis of percent match boxes
the current box specification are
fole
((1541.291015625, 853.8857421875), (1699.2197265625, 963.6328125))
text2 i.e the incoming text is the winner
collision happend with box:853.8857421875 and text:fole solving on the basis of percent match boxes
the current box specification are
Trov
((1543.9677734375002, 987.7236328125), (1699.2197265625, 1100.1474609375))
text2 i.e the incoming text is the winner
collision happend with box:987.7236328125 and text:Trov solving on the basis of percent match boxes
the current box specification are
Trur
((1562.705078125, 1121.5615234375), (1699.2197265625, 1228.6318359375))
text2 i.e the incoming text is the winner
Truv
((1541.291015625, 1308.9345703125), (1699.2197265625, 1426.7119140625))
collision happend with box:1308.9345703125 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tyue
((1551.998046875, 1432.0654296875), (1704.5732421875, 1528.4287109375))
text1 i.e the prev text is the winner
Tyue
((1543.9677734375002, 1592.6708984375), (1712.603515625, 1689.0341796875))
collision happend with box:1592.6708984375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1570.7353515625, 1710.4482421875), (1701.8964843749998, 1790.7509765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tywe
((1554.6748046875, 730.7548828125), (1699.2197265625, 835.1484375))
fole
((1541.291015625, 853.8857421875), (1699.2197265625, 963.6328125))
Trov
((1543.9677734375002, 987.7236328125), (1699.2197265625, 1100.1474609375))
Trur
((1562.705078125, 1121.5615234375), (1699.2197265625, 1228.6318359375))
Truv
((1541.291015625, 1308.9345703125), (1699.2197265625, 1426.7119140625))
Tyue
((1551.998046875, 1432.0654296875), (1704.5732421875, 1528.4287109375))
Tyue
((1543.9677734375002, 1592.6708984375), (1712.603515625, 1689.0341796875))
Fale
((1570.7353515625, 1710.4482421875), (1701.8964843749998, 1790.7509765625))
Falwe
((1562.705078125, 1841.609375), (1715.2802734375, 1943.326171875))
Fale
((1549.3212890624998, 2004.8916015625), (1736.6943359375, 2130.69921875))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 985, '2': 877, '3': 985, '4': 1148, '5': 1306, '6': 1466, '7': 1573, '8': 1734, '9': 1844, '10': 2007}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jLVlBi4.jpg
OCR detection done with doctr
left top x of SN: 1014.7324218750002
bottom right x of SN: 1427.2792968750002
left top x of T/F: 5715.048828125
bottom right x of T/F: 6942.44140625
first t/f detection
TRWE
((5734.73828125, 2519.2578125), (6296.7265625, 2751.8046875))
TRWE
((5657.22265625, 3042.48828125), (6364.552734374999, 3265.345703125))
FALSE
((5744.427734375, 3497.892578125), (6325.794921875, 3730.439453125))
FALSE
((5695.98046875, 4069.5703125), (6345.173828125, 4331.185546875))
FALSE
((5695.98046875, 4699.384765625), (6248.279296875, 4922.2421875))
FALSE
((5715.359375, 5145.099609375), (6296.7265625, 5416.404296875))
FALSE
((5647.533203125001, 5629.572265625), (6248.279296875, 5862.119140625))
TRUETRUE
((5666.912109375, 6162.4921875), (6674.615234375, 6375.66015625))
FALSE
((5666.912109375, 6579.138671875), (6257.96875, 6860.1328125))
TRUE
((5637.84375, 7189.57421875), (6199.83203125, 7431.810546875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2567, '2': 3139, '3': 3526, '4': 4108, '5': 4670, '6': 5261, '7': 5639, '8': 6230, '9': 6617, '10': 7208}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tpPFzmO.jpg
OCR detection done with doctr
left top x of T/F: 5770.21875
bottom right x of T/F: 6949.953125
left top x of SN: 644.5390625000001
bottom right x of SN: 1062.3984375
first t/f detection
TRUE
((5853.40625, 1802.2421875), (6484.6484375, 2003.5078125))
FALSE
((5871.703125, 2351.1484375), (6484.6484375, 2552.4140625))
FALSE
((5926.59375, 2954.9453125), (6539.539062499999, 3174.5078125))
TRUE
((5780.21875, 3558.7421875), (6283.3828125, 3741.7109375))
TRVE
((5771.0703125, 3988.71875), (6310.828125000001, 4199.1328125))
FALSE
((5807.6640625, 4674.8515625), (6374.8671875, 4885.265625))
T
((5789.3671875, 5342.6875), (6045.5234375, 5498.2109375))
collision happend with box:5342.6875 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((6008.9296875, 5342.6875), (6356.5703125, 5489.0625))
text2 i.e the incoming text is the winner
TRVE
((5853.40625, 5864.1484375), (6338.2734375, 6047.1171875))
FALSE
((5890.0, 6449.6484375), (6484.6484375, 6623.46875))
TRUE
((5908.296875, 6980.2578125), (6429.7578125, 7154.078125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1857, '2': 2424, '3': 2991, '4': 3577, '5': 3952, '6': 4537, '7': 5324, '8': 5919, '9': 6321, '10': 7135}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gjQ3l7z.jpg
OCR detection done with doctr
left top x of T/F: 5719.91015625
bottom right x of T/F: 7013.531249999999
left top x of SN: 475.5624999999999
bottom right x of SN: 896.3671874999998
first t/f detection
TRUE
((5776.21875, 1889.390625), (6313.398437500001, 2056.1015625))
TRUE
((5618.769531250001, 2528.44921875), (6155.94921875, 2741.46875))
FALSE
((5720.6484375, 3176.76953125), (6285.61328125, 3315.6953125))
TRUE
((5692.86328125, 3750.99609375), (6267.08984375, 3917.70703125))
FALSE
((5739.171875, 4251.12890625), (6313.398437500001, 4417.83984375))
TRUC
((5739.171875, 5038.375), (6230.04296875, 5214.34765625))
TRUE
((5776.21875, 5631.125), (6202.2578125, 5797.8359375))
FALSE
((5776.21875, 6168.3046875), (6331.921875000001, 6344.27734375))
TRUE
((5785.48046875, 6761.0546875), (6294.875, 6937.02734375))
TRUE
((5776.21875, 7353.8046875), (6211.51953125, 7520.515625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1963, '2': 2565, '3': 3158, '4': 3750, '5': 4139, '6': 4742, '7': 5529, '8': 6140, '9': 6538, '10': 7335}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bd3p317.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6747.656250000001
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
first t/f detection
FALSE
((5608.40625, 1896.5625), (6168.343750000001, 2095.25))
FALSE
((5617.437499999999, 2456.5), (6258.65625, 2664.21875))
TTRUE
((5662.59375, 3007.40625), (6276.718750000001, 3206.09375))
TRUE
((5689.6875, 3522.1875), (6285.75, 3720.875))
TRUE
((5698.718749999999, 4009.875), (6276.718750000001, 4181.46875))
FALSE
((5671.624999999999, 4624.0), (6303.812500000001, 4831.71875))
TRUE
((5680.656250000001, 5346.5), (6249.625000000001, 5545.1875))
TRUE
((5779.999999999999, 5834.1875), (6321.874999999999, 6005.78125))
TRUE
((5644.531249999999, 6394.125), (6276.718750000001, 6592.8125))
TRUE
((5662.59375, 6990.1875), (6267.687499999999, 7206.9375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2519, '3': 3079, '4': 3657, '5': 4027, '6': 4614, '7': 5382, '8': 5969, '9': 6367, '10': 7152}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BJMdF88.jpg
OCR detection done with doctr
left top x of SN: 424.97656250000006
bottom right x of SN: 842.8359375000001
left top x of T/F: 5632.9921875
bottom right x of T/F: 6867.6171875
first t/f detection
TRUE
((5679.5859375, 1729.0546875), (6319.9765625, 1976.0625))
TRUE
((5679.5859375, 2305.40625), (6310.828125000001, 2570.7109375))
FALCE
((5688.734375, 2973.2421875), (6393.1640625, 3183.65625))
TRUE
((5697.8828125, 3531.296875), (6292.531250000001, 3750.859375))
TRUE
((5642.9921875, 4007.015625), (6265.085937499999, 4272.3203125))
FALSE
((5679.5859375, 4674.8515625), (6347.421875, 4931.0078125))
TRUE
((5597.25, 5360.984375), (6283.3828125, 5607.9921875))
TRUE
((5652.140625, 5973.9296875), (6265.085937499999, 6193.4921875))
FALSE
((5688.734375, 6440.5), (6319.9765625, 6705.8046875))
TRUE
((5642.9921875, 7126.6328125), (6274.234375, 7382.7890625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1802, '2': 2396, '3': 2982, '4': 3586, '5': 3970, '6': 4565, '7': 5342, '8': 5928, '9': 6330, '10': 7099}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dDKJWPG.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6485.75
left top x of SN: 718.625
bottom right x of SN: 1115.375
first t/f detection
Toe
((5572.281250000001, 2312.0), (6087.062500000001, 2483.59375))
false
((5509.062499999999, 2727.4375), (5888.374999999999, 2908.0625))
Troue
((5599.375000000001, 3242.21875), (6141.250000000001, 3468.0))
false
((5463.906250000001, 3811.1875), (5897.406250000001, 4036.96875))
Tnve
((5481.968749999999, 4452.40625), (5951.593750000001, 4614.96875))
Fabe
((5454.874999999999, 4903.96875), (5843.218750000001, 5093.625))
False
((5427.781249999999, 5319.40625), (5870.312500000001, 5545.1875))
Fale
((5500.03125, 5780.0), (5960.625, 5987.71875))
Tave
((5454.874999999999, 6240.59375), (5879.34375, 6457.34375))
True
((5400.687499999999, 6863.75), (5852.25, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2871, '3': 3242, '4': 3784, '5': 4335, '6': 4885, '7': 5247, '8': 5807, '9': 6177, '10': 6755}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZiJMj3P.jpg
OCR detection done with doctr
left top x of SN: 125.04394531249997
bottom right x of SN: 346.376953125
left top x of T/F: 980.0507812500001
bottom right x of T/F: 1361.99609375
first t/f detection
True
((995.0107421875001, 441.4365234375), (1080.9833984375, 491.0361328125))
collision happend with box:441.4365234375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((999.9707031250001, 524.1025390625), (1097.5166015625, 565.435546875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:524.1025390625 and text:False solving on the basis of percent match boxes
the current box specification are
false
((995.0107421875001, 598.501953125), (1104.1298828125, 653.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:598.501953125 and text:false solving on the basis of percent match boxes
the current box specification are
True
((990.0507812500001, 702.6611328125), (1085.943359375, 748.9541015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:702.6611328125 and text:True solving on the basis of percent match boxes
the current box specification are
fa
((985.0908203125, 805.1669921875), (1037.9970703125, 851.4599609375))
text1 i.e the prev text is the winner
collision happend with box:702.6611328125 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1042.95703125, 806.8203125), (1123.9697265625, 849.806640625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((995.0107421875001, 441.4365234375), (1080.9833984375, 491.0361328125))
False
((999.9707031250001, 524.1025390625), (1097.5166015625, 565.435546875))
collision happend with box:524.1025390625 and text:False solving on the basis of percent match boxes
the current box specification are
false
((995.0107421875001, 598.501953125), (1104.1298828125, 653.0615234375))
text2 i.e the incoming text is the winner
True
((990.0507812500001, 702.6611328125), (1085.943359375, 748.9541015625))
fa
((985.0908203125, 805.1669921875), (1037.9970703125, 851.4599609375))
collision happend with box:805.1669921875 and text:fa solving on the basis of percent match boxes
the current box specification are
True
((1042.95703125, 806.8203125), (1123.9697265625, 849.806640625))
text2 i.e the incoming text is the winner
False
((1003.27734375, 889.486328125), (1100.8232421875, 929.166015625))
True
((1003.27734375, 978.765625), (1087.5966796875, 1020.0986328125))
False
((1003.27734375, 1066.3916015625), (1095.86328125, 1104.41796875))
False
((1006.583984375, 1152.3642578125), (1090.9033203125, 1193.697265625))
False.
((1024.7705078125, 1254.8701171875), (1135.54296875, 1299.509765625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 434, '2': 537, '3': 606, '4': 710, '5': 813, '6': 915, '7': 983, '8': 1089, '9': 1158, '10': 1261}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JyjneLe.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6521.874999999999
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5463.906250000001, 2023.0), (5996.749999999999, 2239.75))
TRUE
((5427.781249999999, 2610.03125), (6041.90625, 2826.78125))
TRUE
((5328.437500000001, 3115.78125), (6050.937499999999, 3458.96875))
FALSE
((5373.593749999999, 3820.21875), (6050.937499999999, 4036.96875))
TRUE
((5319.406249999999, 4416.28125), (6050.937499999999, 4660.125))
FALSE
((5283.28125, 4958.15625), (5942.562499999999, 5165.875))
FALSE
((5283.28125, 5409.71875), (6069.0, 5644.53125))
TRUE
((5337.46875, 5924.5), (5987.71875, 6123.1875))
TRUE
((5310.375, 6367.03125), (5897.406250000001, 6574.75))
TRUE
((5310.375, 7062.4375), (5888.374999999999, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2853, '3': 3251, '4': 3838, '5': 4416, '6': 5003, '7': 5391, '8': 5978, '9': 6376, '10': 6963}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gPUwdE9.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 333.1796875
left top x of T/F: 955.5
bottom right x of T/F: 1336.9453125
first t/f detection
Fale
((998.15625, 435.9609375), (1086.328125, 486.578125))
collision happend with box:435.9609375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 564.953125))
text1 i.e the prev text is the winner
collision happend with box:435.9609375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Taus
((1037.34375, 591.078125), (1140.2109375, 649.859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:591.078125 and text:Taus solving on the basis of percent match boxes
the current box specification are
Bue
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
text1 i.e the prev text is the winner
Touue
((968.765625, 798.4453125), (1083.0625, 853.9609375))
collision happend with box:798.4453125 and text:Touue solving on the basis of percent match boxes
the current box specification are
yull
((976.9296875000001, 881.71875), (1096.125, 927.4375))
text2 i.e the incoming text is the winner
collision happend with box:881.71875 and text:yull solving on the basis of percent match boxes
the current box specification are
Tyue
((1030.8125, 969.890625), (1141.84375, 1017.2421875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fale
((998.15625, 435.9609375), (1086.328125, 486.578125))
collision happend with box:435.9609375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 564.953125))
text1 i.e the prev text is the winner
Taus
((1037.34375, 591.078125), (1140.2109375, 649.859375))
Bue
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
Touue
((968.765625, 798.4453125), (1083.0625, 853.9609375))
yull
((976.9296875000001, 881.71875), (1096.125, 927.4375))
Tyue
((1030.8125, 969.890625), (1141.84375, 1017.2421875))
bue
((985.09375, 1059.6953125), (1076.53125, 1110.3125))
fe
((991.625, 1156.03125), (1073.265625, 1198.484375))
sue
((988.359375, 1275.2265625), (1076.53125, 1332.375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 427, '2': 530, '3': 599, '4': 703, '5': 804, '6': 906, '7': 974, '8': 1077, '9': 1146, '10': 1249}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sOHz97N.jpg
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 961.765625
left top x of T/F: 5495.765624999999
bottom right x of T/F: 6657.203125
first t/f detection
TRUE
((5578.953125, 1866.28125), (5972.3359375, 2058.3984375))
FALSE
((5560.65625, 2424.3359375), (6045.5234375, 2607.3046875))
TRUE
((5487.46875, 2973.2421875), (5990.6328125, 3192.8046875))
TRUE
((5514.9140625, 4619.9609375), (5917.4453125, 4793.78125))
FALSE
((5588.1015625, 3531.296875), (6063.8203125, 3750.859375))
TRUE
((5606.3984375, 3979.5703125), (5990.6328125, 4217.4296875))
TRUE
((5533.2109375, 5269.5), (5954.039062499999, 5443.3203125))
FALSE
((5606.3984375, 5772.6640625), (6018.078125000001, 5955.6328125))
TRUE
((5542.359375, 6230.0859375), (5963.1875, 6413.0546875))
TRVE
((5569.804687500001, 6879.625), (5944.890625, 7062.59375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1838, '2': 2396, '3': 2954, '4': 3522, '5': 3897, '6': 4464, '7': 5214, '8': 5790, '9': 6175, '10': 6943}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RFcUFz0.jpg
OCR detection done with doctr
left top x of SN: 81.3671875
bottom right x of SN: 298.2109375
left top x of T/F: 794.51171875
bottom right x of T/F: 1147.28125
first t/f detection
Tyue
((809.1171875, 330.05859375), (888.9453125, 357.69140625))
collision happend with box:330.05859375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyuc
((812.1875, 405.28125), (888.9453125, 442.125))
text2 i.e the incoming text is the winner
collision happend with box:405.28125 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
Pae
((821.3984375, 483.57421875), (888.9453125, 515.8125))
text1 i.e the prev text is the winner
collision happend with box:405.28125 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
Faue
((813.72265625, 566.47265625), (888.9453125, 601.78125))
text2 i.e the incoming text is the winner
collision happend with box:566.47265625 and text:Faue solving on the basis of percent match boxes
the current box specification are
Falte
((815.2578125, 657.046875), (895.0859375, 693.890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:657.046875 and text:Falte solving on the basis of percent match boxes
the current box specification are
Fade
((818.328125, 741.48046875), (893.55078125, 772.18359375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((809.1171875, 330.05859375), (888.9453125, 357.69140625))
collision happend with box:330.05859375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyuc
((812.1875, 405.28125), (888.9453125, 442.125))
text2 i.e the incoming text is the winner
collision happend with box:405.28125 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
Pae
((821.3984375, 483.57421875), (888.9453125, 515.8125))
text1 i.e the prev text is the winner
Faue
((813.72265625, 566.47265625), (888.9453125, 601.78125))
Falte
((815.2578125, 657.046875), (895.0859375, 693.890625))
Fade
((818.328125, 741.48046875), (893.55078125, 772.18359375))
collision happend with box:741.48046875 and text:Fade solving on the basis of percent match boxes
the current box specification are
Falie
((818.328125, 813.6328125), (888.9453125, 847.40625))
text2 i.e the incoming text is the winner
True
((815.2578125, 896.53125), (885.875, 933.375))
collision happend with box:896.53125 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((815.2578125, 974.82421875), (884.3398437499999, 1005.52734375))
text1 i.e the prev text is the winner
thè
((761.52734375, 1088.42578125), (795.30078125, 1112.98828125))
collision happend with box:1088.42578125 and text:thè solving on the basis of percent match boxes
the current box specification are
True
((813.72265625, 1071.5390625), (893.55078125, 1106.84765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 122
printing the number dict y_coordinate
{'2': 422, '3': 480, '4': 572, '5': 663, '6': 758, '7': 818, '8': 910, '9': 971, '10': 1066, '1': 122}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IbBere6.jpg
OCR detection done with doctr
left top x of T/F: 5994.685546875
bottom right x of T/F: 7292.450195312501
left top x of SN: 1064.7548828125
bottom right x of SN: 1504.2216796875
first t/f detection
TRVE
((6144.3984375, 2275.32421875), (6743.16796875, 2504.8525390625))
TRUE
((6104.48046875, 2824.1962890625), (6693.2705078125, 3073.68359375))
FALSE
((6304.070312500001, 3941.8994140625), (6932.7783203125, 4181.4072265625))
FALSE
((6214.2548828125, 4630.484375), (6932.7783203125, 4850.033203125))
distribution.
((5186.3671875, 5299.1103515625), (6024.644531249999, 5468.76171875))
collision happend with box:5299.1103515625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((6264.15234375, 5219.2744140625), (6892.8603515625, 5448.802734375))
text1 i.e the prev text is the winner
directly
((5505.7109375, 5728.228515625), (6034.624023437501, 5917.8388671875))
collision happend with box:5728.228515625 and text:directly solving on the basis of percent match boxes
the current box specification are
False
((6324.029296875, 5698.2900390625), (6882.880859375, 5927.818359375))
true and false collision so given priority to text2 which is the incoming text
space.
((5605.505859374999, 6396.8544921875), (6034.624023437501, 6586.46484375))
collision happend with box:6396.8544921875 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUG
((6244.193359375, 6346.95703125), (6823.00390625, 6576.4853515625))
text2 i.e the incoming text is the winner
predietion
((5395.936523437501, 6815.9931640625), (6084.521484375001, 7005.603515625))
the
((5874.9521484375, 7704.16796875), (6124.439453125, 7873.8193359375))
TRUE
((6343.988281249999, 6855.9111328125), (6912.8193359375, 7085.439453125))
TRUG
((6423.82421875, 7614.3525390625), (7092.450195312501, 7843.880859375))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
the unassigned keys are ['1', '2', '3', '4', '5', '7']
the assigned keys are ['6', '8', '9', '10']
printing the number dict y_coordinate
{'6': 5309, '8': 6336, '9': 6746, '10': 7364}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JknFlEx.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1183.294921875
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
TTOL
((836.849609375, 499.82421875), (919.6230468750001, 545.986328125))
text2 i.e the incoming text is the winner
collision happend with box:499.82421875 and text:TTOL solving on the basis of percent match boxes
the current box specification are
Fake
((932.3574218750001, 491.865234375), (991.25390625, 539.619140625))
text1 i.e the prev text is the winner
collision happend with box:499.82421875 and text:TTOL solving on the basis of percent match boxes
the current box specification are
True
((913.2558593750001, 590.556640625), (989.6621093749999, 641.494140625))
text2 i.e the incoming text is the winner
collision happend with box:590.556640625 and text:True solving on the basis of percent match boxes
the current box specification are
Trud
((908.4804687499999, 679.697265625), (989.6621093749999, 740.185546875))
text2 i.e the incoming text is the winner
collision happend with box:679.697265625 and text:Trud solving on the basis of percent match boxes
the current box specification are
folne
((816.1562500000001, 776.796875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
TTOL
((836.849609375, 499.82421875), (919.6230468750001, 545.986328125))
collision happend with box:499.82421875 and text:TTOL solving on the basis of percent match boxes
the current box specification are
Fake
((932.3574218750001, 491.865234375), (991.25390625, 539.619140625))
text1 i.e the prev text is the winner
True
((913.2558593750001, 590.556640625), (989.6621093749999, 641.494140625))
Trud
((908.4804687499999, 679.697265625), (989.6621093749999, 740.185546875))
folne
((816.1562500000001, 776.796875), (921.21484375, 842.060546875))
collision happend with box:776.796875 and text:folne solving on the basis of percent match boxes
the current box specification are
True
((822.5234375000001, 851.611328125), (921.21484375, 915.283203125))
text2 i.e the incoming text is the winner
Tul
((828.8906250000001, 935.9765625), (918.03125, 994.873046875))
Falw
((835.2578125, 1029.892578125), (919.6230468750001, 1077.646484375))
Falie
((828.8906250000001, 1111.07421875), (927.58203125, 1174.74609375))
Falre
((830.482421875, 1216.1328125), (930.765625, 1281.396484375))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 561, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VxY3oie.jpg
OCR detection done with doctr
left top x of SN: 143.86914062499997
bottom right x of SN: 389.27441406249994
left top x of T/F: 1429.650390625
bottom right x of T/F: 1909.1201171875
first t/f detection
Tyue
((1499.8232421875, 701.14453125), (1599.2392578124998, 756.0849609375))
collision happend with box:701.14453125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
True
((1499.8232421875, 834.5712890625), (1609.7041015625, 889.51171875))
text2 i.e the incoming text is the winner
collision happend with box:834.5712890625 and text:True solving on the basis of percent match boxes
the current box specification are
fata
((1476.27734375, 960.1494140625), (1612.3203125, 1038.6357421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:960.1494140625 and text:fata solving on the basis of percent match boxes
the current box specification are
fask
((1609.7041015625, 941.8359375), (1716.96875, 1012.4736328125))
true and false collision so given priority to text2 which is the incoming text
Falk
((1507.6718750000002, 1114.505859375), (1635.8662109375, 1174.6787109375))
collision happend with box:1114.505859375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falk
((1507.6718750000002, 1258.3974609375), (1620.1689453125, 1313.337890625))
text2 i.e the incoming text is the winner
collision happend with box:1258.3974609375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Faeue
((1510.2880859375, 1402.2890625), (1628.017578125, 1467.6943359375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((1499.8232421875, 701.14453125), (1599.2392578124998, 756.0849609375))
True
((1499.8232421875, 834.5712890625), (1609.7041015625, 889.51171875))
fata
((1476.27734375, 960.1494140625), (1612.3203125, 1038.6357421875))
collision happend with box:960.1494140625 and text:fata solving on the basis of percent match boxes
the current box specification are
fask
((1609.7041015625, 941.8359375), (1716.96875, 1012.4736328125))
true and false collision so given priority to text2 which is the incoming text
Falk
((1507.6718750000002, 1114.505859375), (1635.8662109375, 1174.6787109375))
Falk
((1507.6718750000002, 1258.3974609375), (1620.1689453125, 1313.337890625))
Faeue
((1510.2880859375, 1402.2890625), (1628.017578125, 1467.6943359375))
Faln
((1523.369140625, 1533.099609375), (1641.0986328124998, 1595.888671875))
BThuL
((1455.34765625, 1679.607421875), (1609.7041015625, 1739.7802734375))
Tyue
((1505.0556640625, 1805.185546875), (1622.7851562499998, 1854.8935546875))
Trut
((1515.5205078124998, 1980.4716796875), (1633.25, 2043.2607421875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 688, '2': 850, '3': 957, '4': 1119, '5': 1276, '6': 1436, '7': 1540, '8': 1703, '9': 1807, '10': 1970}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cScH1M6.jpg
OCR detection done with doctr
left top x of T/F: 5404.281250000001
bottom right x of T/F: 6638.90625
left top x of SN: 754.3203124999999
bottom right x of SN: 1163.03125
first t/f detection
jul
((5496.6171875, 2195.625), (6137.0078125, 2415.1875))
Toue
((5505.765624999999, 2662.1953125), (5926.59375, 2836.015625))
Tue
((5514.9140625, 3229.3984375), (5926.59375, 3412.3671875))
Fale
((5469.171875, 3631.9296875), (5963.1875, 3970.421875))
Pelbe
((5496.6171875, 4199.1328125), (5999.781250000001, 4528.4765625))
Fabse
((5469.171875, 4656.5546875), (5917.4453125, 4921.859375))
True
((5606.3984375, 5269.5), (5999.781250000001, 5452.46875))
Tue
((5633.84375, 5745.21875), (6018.078125000001, 5919.0390625))
Tohe
((5615.546875, 6275.828125), (5972.3359375, 6449.6484375))
Tue.
((5524.062499999999, 6852.1796875), (6008.9296875, 7071.7421875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2159, '2': 2726, '3': 3101, '4': 3686, '5': 4226, '6': 4793, '7': 5168, '8': 5736, '9': 6120, '10': 6705}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lXzz6uS.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/lXzz6uS.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OEOMwNz.jpg
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6431.5625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:47:08] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : OEOMwNz.jpg
[2024/07/01 14:47:08] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:47:09] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.15978002548217773
[2024/07/01 14:47:11] ppocr DEBUG: rec_res num  : 32, elapsed : 2.147514820098877
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676]
the false list is  []
the true list for xdirn [1025]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946]
the false list is  []
the true list for xdirn [1025, 5281]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946]
the false list is  []
the true list for xdirn [1025, 5281]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
eployment.
[[1054.0, 2264.0], [1645.0, 2264.0], [1645.0, 2399.0], [1054.0, 2399.0]]
the true list is  [1676, 1946]
the false list is  []
the true list for xdirn [1025, 5281]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946]
the false list is  []
the true list for xdirn [1025, 5281]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915]
the false list is  []
the true list for xdirn [1025, 5281, 5304]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915]
the false list is  []
the true list for xdirn [1025, 5281, 5304]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
ctors x and y.
[[1064.0, 3208.0], [1842.0, 3208.0], [1842.0, 3343.0], [1064.0, 3343.0]]
the true list is  [1676, 1946, 2915]
the false list is  []
the true list for xdirn [1025, 5281, 5304]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
False
[[5287.0, 4049.0], [5894.0, 4024.0], [5905.0, 4274.0], [5298.0, 4299.0]]
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915, 3560, 4634]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915, 3560, 4634, 5077]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5251.0, 5616.0], [5872.0, 5616.0], [5872.0, 5857.0], [5251.0, 5857.0]]
the true list is  [1676, 1946, 2915, 3560, 4634, 5077]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095, 6686]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262, 5360]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095, 6686]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262, 5360]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095, 6686]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262, 5360]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fNB1Xh6.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frud
((1276.33203125, 1398.0390625), (1424.111328125, 1491.8671875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
frud
((1276.33203125, 1398.0390625), (1424.111328125, 1491.8671875))
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
Falue
((1273.986328125, 1794.462890625), (1426.45703125, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J4KSh3L.jpg
OCR detection done with doctr
left top x of SN: 366.40625
bottom right x of SN: 781.2187500000001
left top x of T/F: 5381.65625
bottom right x of T/F: 6639.281250000001
first t/f detection
TAUE
((5427.781249999999, 1896.5625), (6132.218749999999, 2185.5625))
LBUE
((5500.03125, 2420.375), (6177.375, 2718.40625))
FALSE
((5409.718750000001, 2953.21875), (6240.593749999999, 3332.53125))
FALSE
((5536.156249999999, 3486.0625), (6394.125, 3784.09375))
TRUE
((5527.125, 4091.15625), (6403.156249999999, 4389.1875))
TAUE
((5500.03125, 4678.1875), (6177.375, 4976.21875))
TRUE
((5481.968749999999, 5373.59375), (6177.375, 5617.4375))
TRUE
((5400.687499999999, 5770.96875), (6087.062500000001, 5978.6875))
TRUE
((5445.84375, 6358.0), (6240.593749999999, 6755.375))
TRUE
((5536.156249999999, 6917.9375), (6240.593749999999, 7161.78125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2384, '3': 2962, '4': 3540, '5': 3928, '6': 4506, '7': 5265, '8': 5843, '9': 6222, '10': 6990}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 17Eh4M5.jpg
rotation started
['o1', '6', '00', '2', 'o', 'F', '>', 'CT', 'A', '6', '2', 'E', 'I', 'E', 'F', 'F', '2', '7', 'a', 'I', 'I', ':', '2', '8', 'I', 'la', 'e', '€', 'E', 'H', 'E', 'I', 'I', '8', '2', 'E', 'E', 'I', 'a', 'I', 'e', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'E', 'iE', 'I', 'E', 'E', 'of', 'I', 'E', 'a', 'E', 'E', 'I', '8', 'a', 'I', 'I', 'I', '2', 'I', 'I', 'a', '1', '8', '3', 'E', 'E', 'E', 'I', 'E', '1', 'E', 'I', 'I', '€', 'E', 'I', '8', 'E', 'e', 'I', 'I', 'I', 'I', '8', '2', 'of', 'I', '-', 'I', '1', '£', '2', '-', 'I', 'E', 'I', 'I', 'I', 'E', 't', 'po', 'E', '2', 'f', ':', '€', 'E', 'I', 'I', 'E', 'F', '1', '2', 'so', '&', 'E', '-', 'E', '9', 'E', 'LE', 'I', 'I', 'I', 'I', '-', 'I', 'E', 'a', 'I', 'I', 'I', ':', 'E', 'I', ':', '2', 'I', 'I', 'la', 'E', 'I', '1', 'I', 'E', '2', 'iE', 'E', 'I', 'E', '2', 'E', 't', 'E', 'E', 'I', 'a', 'I', 'I', '7', 'n', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'E', 'e', 'I', '1', 'I', 'à', 'I', 'I', 'I', '7', 't', 'I', 'I']
rotation started
['"eep', 'uoosun', "'mou", '01', '1IOM', 'azijesaues', 'jou', 'op', '1841', 'eep', 'Bururez', 'ou', 'ur', 'smtenop', 'JO', 'osjou', 'outoads', 'anades', '07', 'ULIBOT', 'Keur', 'lapotu', 'au1', 'SB', "'sogears", '-Ul', 'Sunayrano', 'Jo', 'YSTI', 'o11', "'WAS", 'uI', 'tonoureded', 'D', 'oy2', 'jo', 'anjeA', '4814', 'e', 'Y3IM', 'OT', "'NAS", '2S0I-SA-auo', 'uBy1', 'JaMOIS', 'SI', 'WAS', 'a00-SA-auo', 'Bursn', 'uoporpaad', 'e', 'Suryeur', "'sossep", 'Jo', 'Jaqumnu', 'a8101', 'e', 'YAIM', 'suarqoud', 'ssepouihu', 'JOE', '6', '"ooeds', '[eursuo', 'aun', 'ur', 'iBott-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunog', 'uorsiap', 'OUL', '8', '"sopou', 'jo', 'Jaquinu', 'aua', '03', 'Teuonodoad', 'Atppamp', 'SI', 'OOIL', 'UOISDOCI', '011', 'ul', 'uororpald', 'B', 'Buryeur', 'IOJ', 'pammbor', 'OUIIL', 'OUL', '2', '"uornquuasip', 'UeIsSIBO', 'B', 'SAeMre', 'SI', 'suorgnquasip', 'uerssnes', 'OMI', 'jo', 'amexiu', 'V', '9', 'Teoay', 'pure', 'UOISD', '-BId', 'ueamgoq', 'nord', '8', 'SI', 'aAmo', '(bu)', 'D19S110900JBUD', 'Surerado', 'laataoey', 'aUL', 'S', 'YIOMaU', '[emou', 'oy2', 'ul', 'squaipe1s', 'au7', 'agnduoo', '03', 'posn', 'SI', 'quaosap', 'quorpe1s', 'TIYM', "'saustom", '241', 'agepdn', '01', 'posn', 'SI', 'tore@odoudypeg', 'F', 'f', 'pue', 'I', 'SIOJDOA', 'Kue', 'JOJ', 'Juugaur', 'Jouensip', 'PITRA', '8', 'SI', '(8=)umpusgaundo', '-', '1', 'E', 'jeuorsuoump-p', 'Jayissepo', 'meatug-uou', 'B', 'SI', 'NNY', '2', 'qlaur.fordap', 'quomambar', '08010qs', 'ati', 'AIBOIdAL', 'I', 'Ja81e1', 'ypnu', 'SI', 'NNY', 'JOJ', 'JOJ', 'INAS', 'uera', 'quotuagess', 'NS', 'isvalanuL', 'paqumu', 'TIO', 'mor', 'O1UM', ':0.0u', '011M', '(sad', 'Or)', "'6", 'ASTVI', '10', 'INAL', 'Teardeo', 'ul', 'meap', 'pure', 'sIanel', 'Burumpuet']
rotation started
['I', 'a', 'E', ':', 'I', '1', 'is', '2', 'E', 'I', 'iA', 'I', 'E', 'I', 'I', 'I', '4', 'a', 'iE', 'I', '1', 'I', '.s', 'I', 'E', 'I', 'a', 'I', 'I', 'e', 'iE', 'E', '1', 'E', 'I', '€', '.s', 'I', 'iE', '9', 'e', 'I', '-', 'e', 'I', 'E', 'a', 'I', 'a', '9', 'i', 'E', ':', 'a', 'I', 'of', 'I', 'o', 'E', 'D', '.', 'I', 'I', 'I', ':', 'I', 'of', 'is', '7', 'I', '-', 'e', 'à', 'E', 'I', 'a', '5', 'of', 'de', 'E', 'e', 'I', '1', 'o', 'I', 'à', 'a', '1', 'of', 'I', 'e', 'I', 'à', '5', 'a', '$', 'I', 'à', 'I', 'I', 'a', 'I', 'a', 'I', 'e', 'I', 'E', 'I', 'of', 'I', 'I', ':', 'E', '€', 'à', 'a', 'I', 'I', 'a', 'a', 'i', 'à', 'à', 'I', '1', 'of', 'a', 'a', '2', 'I', 'I', ':', 'e', 'I', 'I', 'o', '8', 'I', '1', 'is', ':', 'of', 'E', 'à', 'E', 'e', 'o', ':', '', 'i', '1', 'I', '1', 'is', 'e', 'f', 'I', '2', 'I', 'A', '8', 'I', 'E', '1', '1', '-', 'I', '22', '3', '2', '8', '-', 'I', 'e', 'I', '1', 'I', '6', 'I', 'I', 'd', 'i9', 'I', 'e', 'à', 'A', 'e', '&', ':', 'I', 'E', 'I', 'I', '2', '1', '4', 'i0', '6', 'N', '0o', '', '9']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/PALSE', 'SN', 'Statement', '1', 'Typically,', 'deployment.', 'is', 'much', 'larger', 'than', 'SVM', 'for', '-', 'T', 'the', 'storage', 'requirement', 'for', 'KNN', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-cowineSimalarityle,', 'y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'cision', 'and', 'Recall.', 'the', 'neural', 'F', 'gradients', 'in', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre', 'F', '-', 'T', 'T', 'F', 'T', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space,', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'Dr', 'details', 'in', 'the', 'data', 'that', 'T', 'training', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:48:06] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 17Eh4M5.jpg
[2024/07/01 14:48:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:48:07] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.12035799026489258
[2024/07/01 14:48:09] ppocr DEBUG: rec_res num  : 34, elapsed : 1.9783077239990234
OCR detection done
left top x of SN: 808.0
bottom right x of SN: 1174.0
left top y of SN: 1840.0
bottom right y of SN: 2124.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/17Eh4M5.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3pGCYEU.jpg
OCR detection done with doctr
left top x of SN: 198.46093749999997
bottom right x of SN: 443.4296875
left top x of T/F: 1514.30078125
bottom right x of T/F: 1997.7109375
first t/f detection
True
((1581.1484375000002, 733.60546875), (1700.2578125000002, 787.74609375))
collision happend with box:733.60546875 and text:True solving on the basis of percent match boxes
the current box specification are
Truc
((1554.0781249999998, 868.95703125), (1673.1874999999998, 933.92578125))
text2 i.e the incoming text is the winner
collision happend with box:868.95703125 and text:Truc solving on the basis of percent match boxes
the current box specification are
Falie
((1589.26953125, 998.89453125), (1708.3789062500002, 1055.7421875))
text2 i.e the incoming text is the winner
collision happend with box:998.89453125 and text:Falie solving on the basis of percent match boxes
the current box specification are
falke
((1573.0273437500002, 1153.1953125), (1686.72265625, 1210.04296875))
text2 i.e the incoming text is the winner
collision happend with box:1153.1953125 and text:falke solving on the basis of percent match boxes
the current box specification are
Falsc
((1567.61328125, 1315.6171875), (1678.6015625, 1372.46484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1315.6171875 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falje
((1559.4921875, 1467.2109375), (1686.72265625, 1518.64453125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
True
((1581.1484375000002, 733.60546875), (1700.2578125000002, 787.74609375))
Truc
((1554.0781249999998, 868.95703125), (1673.1874999999998, 933.92578125))
Falie
((1589.26953125, 998.89453125), (1708.3789062500002, 1055.7421875))
falke
((1573.0273437500002, 1153.1953125), (1686.72265625, 1210.04296875))
Falsc
((1567.61328125, 1315.6171875), (1678.6015625, 1372.46484375))
Falje
((1559.4921875, 1467.2109375), (1686.72265625, 1518.64453125))
Falte
((1578.44140625, 1597.1484375), (1697.5507812499998, 1651.2890625))
True
((1589.26953125, 1746.03515625), (1700.2578125000002, 1800.17578125))
True
((1583.85546875, 1859.73046875), (1686.72265625, 1927.40625))
True
((1573.0273437500002, 2065.46484375), (1667.7734375, 2122.3125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 722, '2': 885, '3': 993, '4': 1158, '5': 1318, '6': 1483, '7': 1591, '8': 1754, '9': 1865, '10': 2032}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RRYfaw8.jpg
OCR detection done with doctr
left top x of SN: 134.09765624999994
bottom right x of SN: 378.84375
left top x of T/F: 1451.2500000000002
bottom right x of T/F: 1930.59375
first t/f detection
Falx
((1469.01953125, 660.41015625), (1647.71875, 779.54296875))
collision happend with box:660.41015625 and text:Falx solving on the basis of percent match boxes
the current box specification are
Falwe
((1492.328125, 795.08203125), (1652.8984375, 885.7265625))
text2 i.e the incoming text is the winner
collision happend with box:795.08203125 and text:Falwe solving on the basis of percent match boxes
the current box specification are
True
((1481.9687499999998, 929.75390625), (1650.30859375, 1054.06640625))
text2 i.e the incoming text is the winner
collision happend with box:929.75390625 and text:True solving on the basis of percent match boxes
the current box specification are
Tiul
((1489.73828125, 1079.96484375), (1637.3593749999998, 1199.09765625))
text2 i.e the incoming text is the winner
collision happend with box:1079.96484375 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tul
((1494.91796875, 1235.35546875), (1652.8984375, 1349.30859375))
text2 i.e the incoming text is the winner
collision happend with box:1235.35546875 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tyue
((1497.5078125, 1377.796875), (1639.9492187499998, 1473.62109375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1469.01953125, 660.41015625), (1647.71875, 779.54296875))
Falwe
((1492.328125, 795.08203125), (1652.8984375, 885.7265625))
True
((1481.9687499999998, 929.75390625), (1650.30859375, 1054.06640625))
Tiul
((1489.73828125, 1079.96484375), (1637.3593749999998, 1199.09765625))
Tul
((1494.91796875, 1235.35546875), (1652.8984375, 1349.30859375))
Tyue
((1497.5078125, 1377.796875), (1639.9492187499998, 1473.62109375))
falre
((1484.5585937499998, 1522.828125), (1660.66796875, 1629.01171875))
Falu
((1492.328125, 1660.08984375), (1663.2578125, 1745.5546875))
falte
((1497.5078125, 1786.9921875), (1658.078125, 1893.17578125))
Falye
((1494.91796875, 1947.5625), (1660.66796875, 2051.15625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 660, '2': 820, '3': 927, '4': 1092, '5': 1248, '6': 1408, '7': 1517, '8': 1678, '9': 1786, '10': 1947}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OasYZ7w.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/OasYZ7w.jpg: {{function_node __wrapped__ScaleAndTranslate_device_/job:localhost/replica:0/task:0/device:CPU:0}} t must be 1-dimensional[1,32,35,3] [Op:ScaleAndTranslate] name: 
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LCB41h0.jpg
OCR detection done with doctr
left top x of T/F: 5367.6875
bottom right x of T/F: 6584.015625
left top x of SN: 543.9062499999999
bottom right x of SN: 952.6171875
first t/f detection
Tug
((5871.703125, 1921.171875), (6329.125, 2149.8828125))
False
((5441.7265625, 2607.3046875), (6027.2265625, 2872.609375))
false
((5670.4375, 3046.4296875), (6237.640625, 3348.328125))
Tquo
((5487.46875, 3778.3046875), (6091.265625, 4043.609375))
Tgue
((5386.8359375, 4427.84375), (5944.890625, 4647.40625))
Falsl
((5414.281250000001, 4912.7109375), (5954.039062499999, 5178.015625))
Tgue
((5423.4296875, 5370.1328125), (6018.078125000001, 5626.2890625))
Cul
((5450.875, 5992.2265625), (6008.9296875, 6202.640625))
false
((5542.359375, 6321.5703125), (6109.562499999999, 6632.6171875))
Falsa
((5578.953125, 6815.5859375), (6182.75, 7144.9296875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2259, '2': 2836, '3': 3220, '4': 3814, '5': 4382, '6': 4967, '7': 5351, '8': 5937, '9': 6330, '10': 6925}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0OdLk7m.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:416.5390625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 588.2421875), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:588.2421875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
TRUE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
collision happend with box:416.5390625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
FALSE
((824.58203125, 588.2421875), (900.89453125, 620.0390625))
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((865.91796875, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
FAL
((818.22265625, 769.484375), (865.91796875, 794.921875))
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((816.6328125, 925.2890625), (896.125, 957.0859375))
text1 i.e the prev text is the winner
TRVE
((821.40234375, 1000.01171875), (897.7148437500001, 1028.62890625))
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 484, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 836, '8': 931, '9': 996, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5vQyXpN.jpg
OCR detection done with doctr
left top x of SN: 772.6171875
bottom right x of SN: 1190.4765625
left top x of T/F: 5376.8359375
bottom right x of T/F: 6547.421875
first t/f detection
TRUE
((5450.875, 2287.109375), (6027.2265625, 2506.671875))
FALSE
((5441.7265625, 2771.9765625), (6008.9296875, 2991.5390625))
FALSE
((5441.7265625, 3220.25), (6018.078125000001, 3430.6640625))
TRUE
((5441.7265625, 3796.6015625), (6072.96875, 3997.8671875))
FALSE
((5395.984375, 4281.46875), (6027.2265625, 4528.4765625))
TRUE
((5450.875, 4802.9296875), (5990.6328125, 5013.34375))
FALSE
((5478.3203125, 5232.90625), (6082.1171875, 5452.46875))
FALSE
((5478.3203125, 5726.921875), (6118.7109375, 5928.1875))
FALSE
((5524.062499999999, 6147.75), (6137.0078125, 6394.7578125))
TRUE
((5487.46875, 6742.3984375), (6155.304687500001, 6989.40625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2259, '2': 2817, '3': 3192, '4': 3750, '5': 4308, '6': 4876, '7': 5242, '8': 5809, '9': 6184, '10': 6760}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NUQPQV8.jpg
OCR detection done with doctr
left top x of SN: 124.34960937499997
bottom right x of SN: 342.77734375
left top x of T/F: 912.14453125
bottom right x of T/F: 1278.9296875
first t/f detection
Teuf
((932.904296875, 373.517578125), (1006.685546875, 404.259765625))
collision happend with box:373.517578125 and text:Teuf solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((931.3671874999999, 478.041015625), (1018.982421875, 508.783203125))
text2 i.e the incoming text is the winner
collision happend with box:478.041015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((926.7558593749999, 556.43359375), (1003.611328125, 591.787109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:556.43359375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((926.7558593749999, 685.55078125), (1000.537109375, 714.755859375))
text1 i.e the prev text is the winner
TRVE
((928.29296875, 751.646484375), (1002.0742187500001, 782.388671875))
collision happend with box:751.646484375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((922.14453125, 854.6328125), (1009.7597656249999, 889.986328125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Teuf
((932.904296875, 373.517578125), (1006.685546875, 404.259765625))
collision happend with box:373.517578125 and text:Teuf solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((931.3671874999999, 478.041015625), (1018.982421875, 508.783203125))
text2 i.e the incoming text is the winner
collision happend with box:478.041015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((926.7558593749999, 556.43359375), (1003.611328125, 591.787109375))
true and false collision so given priority to text2 which is the incoming text
TRVE
((926.7558593749999, 685.55078125), (1000.537109375, 714.755859375))
collision happend with box:685.55078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((928.29296875, 751.646484375), (1002.0742187500001, 782.388671875))
text2 i.e the incoming text is the winner
FALSE
((922.14453125, 854.6328125), (1009.7597656249999, 889.986328125))
FALSE
((922.14453125, 940.7109375), (1009.7597656249999, 976.064453125))
FALSE
((926.7558593749999, 1032.9375), (1009.7597656249999, 1062.142578125))
collision happend with box:1032.9375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((926.7558593749999, 1097.49609375), (980.5546875, 1129.775390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1097.49609375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((980.5546875, 1100.5703125), (1009.7597656249999, 1129.775390625))
text1 i.e the prev text is the winner
TRef
((928.29296875, 1203.556640625), (1005.1484375, 1234.298828125))
collision happend with box:1203.556640625 and text:TRef solving on the basis of percent match boxes
the current box specification are
FALSE
((931.3671874999999, 1258.892578125), (1015.908203125, 1289.634765625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['2', '4', '5', '8', '9']
the assigned keys are ['1', '3', '6', '7', '10']
['1', '3', '6', '7', '10', '1', '3', '6', '7', '10']
printing the number dict y_coordinate
{'1': 650, '3': 551, '6': 868, '7': 936, '10': 1225}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8F8YMZl.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/8F8YMZl.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xhc4R2G.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6503.812500000001
left top x of SN: 817.9687500000001
bottom right x of SN: 1214.7187500000002
first t/f detection
FALSE
((5409.718750000001, 2077.1875), (6005.781250000001, 2275.875))
TRUE
((5337.46875, 2619.0625), (5807.093749999999, 2826.78125))
TRur
((5319.406249999999, 3106.75), (5816.125000000001, 3278.34375))
TRUE
((5328.437500000001, 3648.625), (5825.15625, 3829.25))
FALSE
((5373.593749999999, 3287.375), (5915.468749999999, 3458.96875))
TRDE
((5328.437500000001, 4226.625), (5933.53125, 4470.46875))
TRUE
((5328.437500000001, 4732.375), (5870.312500000001, 4949.125))
Tcog
((5274.250000000001, 5202.0), (5779.999999999999, 5364.5625))
collision happend with box:5202.0 and text:Tcog solving on the basis of percent match boxes
the current box specification are
FALSE
((5364.5625, 5355.53125), (5960.625, 5554.21875))
text2 i.e the incoming text is the winner
TRUE
((5400.687499999999, 5770.96875), (5915.468749999999, 5942.5625))
TRUE
((5229.09375, 6087.0625), (5752.906249999999, 6258.65625))
RALSS
((5337.46875, 5653.5625), (5906.4375, 5852.25))
TRVE
((5292.312499999999, 6647.0), (5834.187499999999, 6854.71875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2718, '3': 3079, '4': 3621, '5': 4163, '6': 4714, '7': 5075, '8': 5626, '9': 5996, '10': 6565}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GyyJzOi.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 663.8124999999999
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5608.40625, 1761.09375), (6159.312499999999, 1968.8125))
TRUE
((5644.531249999999, 2348.125), (6186.406249999999, 2519.71875))
FALSE
((5716.78125, 2962.25), (6240.593749999999, 3188.03125))
TRUE
((5626.468750000001, 3495.09375), (6114.156250000001, 3675.71875))
FALSE
((5680.656250000001, 3964.71875), (6168.343750000001, 4172.4375))
TROE
((5698.718749999999, 4633.03125), (6195.437500000001, 4813.65625))
TROE
((5707.750000000001, 5400.6875), (6267.687499999999, 5608.40625))
TROE
((5725.812499999999, 5861.28125), (6276.718750000001, 6059.96875))
FALSE
((5734.843750000001, 6439.28125), (6276.718750000001, 6656.03125))
FALSE
((5707.750000000001, 7035.34375), (6240.593749999999, 7243.0625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': False, '10': False}
the unassigned keys are ['1', '2', '7']
the assigned keys are ['3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6412, '3': 2962, '4': 3585, '5': 3973, '6': 4569, '8': 6014, '10': 7206}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1PPvSt1.jpg
OCR detection done with doctr
left top x of SN: 68.03515625000003
bottom right x of SN: 308.435546875
left top x of T/F: 1322.9550781250002
bottom right x of T/F: 1798.716796875
first t/f detection
Trur
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
collision happend with box:625.748046875 and text:Trur solving on the basis of percent match boxes
the current box specification are
True
((1388.5234375, 756.212890625), (1509.3242187500002, 811.78125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:756.212890625 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1398.1875, 884.26171875), (1523.8203125, 939.830078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:884.26171875 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Faln
((1400.6035156249998, 1034.0546875), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1034.0546875 and text:Faln solving on the basis of percent match boxes
the current box specification are
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1407.8515625, 1328.80859375), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Trur
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
True
((1388.5234375, 756.212890625), (1509.3242187500002, 811.78125))
Fatte
((1398.1875, 884.26171875), (1523.8203125, 939.830078125))
Faln
((1400.6035156249998, 1034.0546875), (1521.404296875, 1092.0390625))
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
Fula
((1407.8515625, 1328.80859375), (1526.236328125, 1374.712890625))
False
((1410.267578125, 1449.609375), (1533.484375, 1507.59375))
True
((1381.275390625, 1577.658203125), (1504.4921875, 1625.978515625))
Trve
((1407.8515625, 1703.291015625), (1511.740234375, 1761.275390625))
Tyue
((1376.443359375, 1882.076171875), (1487.580078125, 1930.396484375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 867, '2': 763, '3': 862, '4': 1017, '5': 1169, '6': 1326, '7': 1427, '8': 1580, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VcAzqW1.jpg
OCR detection done with doctr
left top x of T/F: 5506.890625
bottom right x of T/F: 6800.51171875
left top x of SN: 392.2070312500001
bottom right x of SN: 803.75
first t/f detection
TRUE
((5637.29296875, 1796.7734375), (6267.08984375, 2120.93359375))
FALSE
((5609.507812500001, 2408.046875), (6341.183593750001, 2704.421875))
TRUE
((5563.19921875, 2889.65625), (6396.75390625, 3297.171875))
TRUE
((5553.9375, 3602.80859375), (6294.875, 3899.18359375))
FALSE
((5609.507812500001, 4306.69921875), (6387.4921875, 4566.02734375))
TRVE
((5590.984375000001, 4899.44921875), (6267.08984375, 5158.77734375))
TRUE
((5637.29296875, 5399.58203125), (6387.4921875, 5668.171875))
FALSE
((5692.86328125, 5955.28515625), (6378.23046875, 6205.3515625))
TRUE
((5618.769531250001, 6446.15625), (6331.921875000001, 6742.53125))
FALSE
((5702.125, 7159.30859375), (6415.27734375, 7427.8984375))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2797, '3': 3204, '4': 3825, '5': 4436, '6': 5056, '7': 5464, '8': 6084, '9': 6492, '10': 7113}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Itmbytc.jpg
OCR detection done with doctr
left top x of SN: 94.76562500000003
bottom right x of SN: 315.048828125
left top x of T/F: 946.54296875
bottom right x of T/F: 1330.56640625
first t/f detection
F
((1001.66015625, 423.779296875), (1038.720703125, 468.896484375))
collision happend with box:423.779296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1014.5507812499999, 501.123046875), (1053.22265625, 549.462890625))
text2 i.e the incoming text is the winner
T
((988.76953125, 800.830078125), (1059.66796875, 850.78125))
collision happend with box:800.830078125 and text:T solving on the basis of percent match boxes
the current box specification are
8T
((950.0976562499999, 878.173828125), (1048.388671875, 926.513671875))
text2 i.e the incoming text is the winner
collision happend with box:878.173828125 and text:8T solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 968.408203125), (1024.21875, 1018.359375))
text2 i.e the incoming text is the winner
collision happend with box:968.408203125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((980.712890625, 1052.197265625), (1019.384765625, 1095.703125))
text2 i.e the incoming text is the winner
F
((1037.109375, 1253.61328125), (1069.3359375, 1301.953125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 410, '2': 514, '3': 583, '4': 688, '5': 791, '6': 892, '7': 960, '8': 1063, '9': 1132, '10': 1235}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0lnF9tq.jpg
OCR detection done with doctr
left top x of SN: 580.5000000000001
bottom right x of SN: 989.2109375000001
left top x of T/F: 5413.4296875
bottom right x of T/F: 6602.312499999999
first t/f detection
T
((5432.578125, 3631.9296875), (5588.1015625, 3796.6015625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '2', '8']
the assigned keys are ['3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'3': 3110, '4': 3668, '5': 4034, '6': 4601, '7': 5360, '9': 6284, '10': 7026}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AZ76rSV.jpg
OCR detection done with doctr
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6919.25
left top x of SN: 547.0312500000001
bottom right x of SN: 961.8437499999999
first t/f detection
TRUE
((5635.5, 2013.96875), (6249.625000000001, 2257.8125))
TRVE
((5617.437499999999, 2610.03125), (6222.531250000001, 2817.75))
TRue
((5599.375000000001, 3179.0), (6231.5625, 3395.75))
FALSE
((5581.3125, 3829.25), (6231.5625, 4027.9375))
FALSE
((5554.21875, 4461.4375), (6231.5625, 4669.15625))
TRUE
((5500.03125, 5021.375), (6096.09375, 5238.125))
FALSE
((5518.093750000001, 5527.125), (6258.65625, 5770.96875))
TRUE
((5554.21875, 6059.96875), (6195.437500000001, 6276.71875))
TRUE
((5572.281250000001, 6556.6875), (6150.28125, 6773.4375))
TRVE
((5518.093750000001, 7252.09375), (6177.375, 7450.78125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2835, '3': 3233, '4': 3829, '5': 4425, '6': 5048, '7': 5454, '8': 6069, '9': 6484, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fW3Q3I0.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5463.906250000001, 2519.71875), (5816.125000000001, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5400.687499999999, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
Trve
((5409.718750000001, 5373.59375), (5825.15625, 5572.28125))
Trve
((5427.781249999999, 5834.1875), (5825.15625, 6114.15625))
Fale
((5436.812500000001, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5816.125000000001, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3630, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NIDRNKM.jpg
rotation started
['11', '2', '00', '2', '', 'F', 'A', 'CT', 'a', 'N', '1', '2', 'P', '&', '1', 'E', '2', '8', 'I', '#', 'a', 'it', 'I', ':', 'I', 'I', 'I', 'E', 'I', 'se', 'E', 'I', 'E', 't', '2', 'I', 'I', 'E', 'I', 'I', '8', 'I', 'E', 'E', 'I', 'I', 'I', 'E', '8', 'I', 'E', 'I', 't', 'a', 'e', 'I', '4', '', '8', 'E', '-', 'a', '2', 'E', 'E', '1', 'I', 'E', 'E', '9', 'P', 'a', 'E', 'e', 'E', 'E', 'I', 'E', ':', '8', 'I', 'of', '2', '9', 'E', 'E', 'tn', 'E', 'f', 'I', 'Q', 'E', 'B', 'I', 'I', 'I', 'a', 'f', 'I', '8', '2', 'a', 'I', 'E', '-', 'I', 'I', 'E', '€', 'I', '8', 'I', 'E', 'I', 'e', 'I', 't', 'f', ':', '2', 'I', '1', 'g', '2', 'I', 'I', 'I', 'I', '2', '€', '9', 'f', 'I', 'E', 'I', 'E', 'F', 'I', 'I', 'I', 'I', '-', 'I', 'E', '9', '8', 'E', 'I', 'E', 'I', 'I', 'I', 'E', 'I', 'tn', 'I', 'p', '€', 'I', '1', 'I', 'E', '2', 'it', '-', 'I', 'E', '2', 'E', 'E', 'E', 'I', '2', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'g', 'a', 'i', '1', 'I', ':', 'I', 'E', 'it', 'I', 'I', 'I', '7', 'I', 't', 'I', '€', 'E', 'I', 'I', 'I', 'E', '€', 'I', 'E', '€', 'I', 'I']
rotation started
['aua', '-Ur', 'Surayaano', '"egep', 'ueosun', "'mou", '01', 'ITOM', 'azireioues', 'zou', 'op', '7e47', 'egep', 'Surureng', 'Jo', 'YSLI', 'eug', "'WAS", 'UI', 'pjeurered', 'D', 'ay7', 'Jo', 'OnTeA', 'y8ry', 'e', 'YIIM', 'OT', 'WAS', '1SAI-SA-BUO', 'ueya', 'JOMOTS', 'SI', 'WAS', 'OUO-SA-auo', 'Sursn', 'OPD', 'UI', 'sTegop', 'JO', 'osIou', 'oytoads', 'amgdes', '01', 'ULIBOT', 'Keu', 'se', "'soseaIo", 'lapou', 'aya', 'Mel', 'uonorpead', 'B', 'Suryeur', "'sessepo", 'Jo', 'pequnu', 'a81eT', 'B', 'YAIM', 'suerqoud', 'ssepprmur', 'JOI', '6', 'J', 'Y', 'eoeds', 'TeurBuo', 'au7', 'uI', 'meQuII-uou', 'aq', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uoisipep', 'AUL', '8', 'sapou', 'Jo', 'pequnu', 'au7', '07', 'Teuorodord', 'DAgJ', 'Atpaup', 'SI', 'BOIL', 'UOISIDOZI', 'ou7', 'UI', 'uomorpard', 'B', 'Suryeur', 'JOJ', 'pammbar', 'OWIL', 'OUL', 'L', 'MCL', '"uorgnqugsip', 'uerssnes', 'B', 'SAeMTe', 'SI', 'suorgnquasip', 'uerssnes', 'OM2', 'Jo', 'aIgXIU', 'V', '9', 'Teoay', 'pue', 'LOISIO', 'MoL', '-aId', 'uoamgeq', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'DmSuIeg0eIeUD', 'Sureiado', 'IOATODOY', 'BUL', 'C', 'oeyoy', '"YIOMIOU', 'Temeu', 'au7', 'UI', 'squerpels', 'au7', 'agnduoo', '01', 'pasn', 'PAE', 'SI', 'quaosap', 'querpe1s', 'OTIYM', "'S14810M", 'au7', 'agepdn', '01', 'pasn', 'SI', 'uomesodoxdypeg', '#', ':f', 'pue', 'I', 'SIO10OA', 'mo', 'Aue', 'IOJ', 'OLIgauI', 'aouensip', 'PITRA', 'B', 'SI', '@z)guoypusgaursoo', '-', 'I', '&', 'Teuorsueuump-P', 'Jayisselo', 'meOUIT-uou', 'B', 'SI', 'NNY', '2', 'DMOL', 'quaurdordap', 'JOJ', 'quotraumbar', 'a8e1og', 'aua', 'STeoidAL', 'I', 'ueya', '18181', 'yonur', 'SI', 'NNX', 'MmEL', 'JOJ', 'WAS', '"va/anuL', 'quauagess', 'NS', 'paqumnu', 'ITOI', 'mor', '31IM', ':amau', '211M', '(sad', 'OT)', '6', 'ul', 'aSTVI', 'IO', 'INUL', 'SIa11e1', 'Teardeo', 'reapo', 'pue', 'Suruumpureu']
rotation started
['E', 'à', 'E', 'I', 'à', 'N', 'is', 'I', 'I', '3', '2', '3', '3', ':', 'a', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'à', 'I', 'E', 'a', 'E', '/', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'I', 'a', 'I', 'I', 'a', '1', 'e', 'of', '6', ':', 'I', 'iE', '1', 'a', 'e', ':', 'I', 'I', 'I', 'of', 'I', '3', 'E', 'I', '1', 'ia', 'a', 's', 'E', 'à', 'E', 'e', 'o', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', '€', 'I', 'e', 'I', 'I', '', 'I', '8', 'is', 'e', 'e', 'I', 'i', 'iE', 'I', '8', 'I', 'E', 'I', ':', '1', 'I', 'e', 'iE', 'o', 'I', 'E', '1', 'I', '2', 'a', '-', '-', ':', 'a', 'o', 'a', 'of', 'I', 'E', 'E', '0', 'I', 'I', '-', 'of', 'de', 'I', '1', 'o', 'i', '-', 'a', 'e', ':', 's', '$', 'I', 'à', 'I', 'a', 'I', 'I', 'I', ':', '-', 'E', 'I', 'I', 'I', 'I', '1', 'E', '', 'is', 'I', 'I', '-', 'of', ':', 'is', 'e', 'à', ':', '2', 'I', 'is', 'e', 'S', 'I', 'E', 'e', 'E', 'a', 'A', 'I', 'is', 'o', 'I', 'a', ':', 'I', 'I', '1', 'I', 'E', '1', 'I', 'I', 'a', 'S2', 'I', 'a', 'e', 'E', 'I', 'of', 'I', 'I', 'I', 'I', 'E', '-', 'A', 'E', 'E', '7', '1', '4', '10', '', 'I', '0O', 'o', 'L', '9']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALS', 'Tywd', 'SN', 'Statement', 'than', 'SVM', 'for', 'is', 'much', 'larger', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', 'Tue', 'Su', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'd-dimensional', '3', '1', '-', 'cosineSimalarifyz.g)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'vectors', 'I', 'and', 'J.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TEEL', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Falsl', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyul', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TJul', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'Falad', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'r', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'original', 'space.', 'Tul', 'making', 'a', 'prediction', 'Toul', 'or', 'details', 'in', 'Fall', 'the']
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:50:24] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : NIDRNKM.jpg
[2024/07/01 14:50:25] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:50:26] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.13086676597595215
[2024/07/01 14:50:27] ppocr DEBUG: rec_res num  : 35, elapsed : 1.2582762241363525
OCR detection done
left top x of SN: 778.0
bottom right x of SN: 1155.0
left top y of SN: 1676.0
bottom right y of SN: 1961.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/NIDRNKM.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OAg9Tcu.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6494.781249999999
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5165.875, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5165.875, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5897.406250000001, 5102.65625))
FALSE
((5165.875, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5156.84375, 5825.15625), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6502.5))
TRVE
((5211.031249999999, 6999.21875), (5825.15625, 7170.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2293, '2': 2853, '3': 3233, '4': 3793, '5': 4362, '6': 4931, '7': 5310, '8': 5879, '9': 6267, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5ZXQiqK.jpg
OCR detection done with doctr
left top x of SN: 146.8935546875
bottom right x of SN: 369.251953125
left top x of T/F: 1003.7294921875
bottom right x of T/F: 1384.857421875
first t/f detection
T
((1034.0615234375, 543.8818359375), (1081.5029296875, 591.3232421875))
collision happend with box:543.8818359375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1047.6162109375, 708.232421875), (1084.8916015625, 760.7568359375))
text2 i.e the incoming text is the winner
T
((1044.2275390625, 923.4130859375), (1089.974609375, 962.3828125))
prediction
((896.8203125, 1167.3974609375), (1005.2578125, 1197.8955078125))
collision happend with box:1167.3974609375 and text:prediction solving on the basis of percent match boxes
the current box specification are
the
((967.982421875, 1304.638671875), (1010.3408203125001, 1331.748046875))
text1 i.e the prev text is the winner
collision happend with box:1167.3974609375 and text:prediction solving on the basis of percent match boxes
the current box specification are
0T
((1062.865234375, 1009.82421875), (1128.9443359375, 1043.7109375))
text1 i.e the prev text is the winner
collision happend with box:1167.3974609375 and text:prediction solving on the basis of percent match boxes
the current box specification are
F
((1051.0048828125, 1086.0693359375), (1081.5029296875, 1121.650390625))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '4', '7', '8']
the assigned keys are ['2', '3', '5', '6', '9', '10']
['2', '3', '5', '6', '9', '10', '2', '3', '5', '6', '9', '10']
printing the number dict y_coordinate
{'9': 177, '2': 560, '3': 623, '5': 830, '6': 931, '10': 1274, '1': 260}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0CtvlvW.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6377.375
left top x of SN: 321.2499999999999
bottom right x of SN: 727.0312500000001
first t/f detection
TRVE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5292.312499999999, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4876.875))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2510, '3': 3061, '4': 3621, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : I6Y9leA.jpg
OCR detection done with doctr
left top x of T/F: 5481.000000000001
bottom right x of T/F: 6702.5
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
first t/f detection
ToUe
((5536.156249999999, 1806.25), (6132.218749999999, 2059.125))
Falge
((5527.125, 2293.9375), (6213.499999999999, 2591.96875))
false
((5572.281250000001, 2926.125), (6105.124999999999, 3197.0625))
Toue.
((5572.281250000001, 3883.4375), (6376.062499999999, 4163.40625))
TOUe
((5599.375000000001, 4560.78125), (6222.531250000001, 4768.5))
fabe
((5707.750000000001, 5165.875), (6303.812500000001, 5472.9375))
toJe.
((5599.375000000001, 5780.0), (6276.718750000001, 6087.0625))
ToVe.
((5635.5, 6484.4375), (6358.000000000001, 6728.28125))
tove.
((5608.40625, 6963.09375), (6321.874999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2420, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5897, '9': 6294, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gMDq8yp.jpg
OCR detection done with doctr
left top x of SN: 93.357421875
bottom right x of SN: 309.16015625
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
collision happend with box:389.16015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((888.328125, 655.345703125), (961.490234375, 684.921875))
collision happend with box:655.345703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (966.16015625, 790.7734375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.7714843750001, 927.7578125), (958.3769531250001, 957.333984375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
TRUE
((888.328125, 655.345703125), (961.490234375, 684.921875))
FALSE
((883.658203125, 761.197265625), (966.16015625, 790.7734375))
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
TRUE
((886.7714843750001, 927.7578125), (958.3769531250001, 957.333984375))
FALSE
((889.8847656249999, 1016.486328125), (977.056640625, 1046.0625))
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((891.4414062500001, 1095.875), (941.25390625, 1127.0078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((941.25390625, 1098.98828125), (972.38671875, 1128.564453125))
text1 i.e the prev text is the winner
FALSE
((892.998046875, 1212.623046875), (972.38671875, 1240.642578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': True, '9': False, '10': False}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 390, '2': 490, '3': 558, '4': 658, '5': 759, '7': 927, '8': 1028, '9': 1098, '10': 1201}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yvobPIk.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Toue
((5445.84375, 1986.875), (5969.656249999999, 2212.65625))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4244.6875), (5960.625, 4443.375))
Tue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Tue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Tybelpt.jpg
OCR detection done with doctr
left top x of SN: 754.3203124999999
bottom right x of SN: 1172.1796875
left top x of T/F: 5294.5
bottom right x of T/F: 6492.531250000001
first t/f detection
TRUE
((5423.4296875, 2497.5234375), (5954.039062499999, 2717.0859375))
FALSE
((5405.1328125, 3000.6875), (6018.078125000001, 3165.359375))
TRUE
((5460.0234375, 3476.40625), (5963.1875, 3659.375))
TRUE
((5368.539062499999, 4034.4609375), (5862.554687500001, 4208.28125))
FALSE
((5460.0234375, 4601.6640625), (6027.2265625, 4766.3359375))
FALSE
((5368.539062499999, 5077.3828125), (5954.039062499999, 5242.0546875))
FALSE
((5368.539062499999, 5525.65625), (6072.96875, 5736.0703125))
TRUE
((5441.7265625, 6037.96875), (5899.1484375, 6175.1953125))
FALSE
((5423.4296875, 6541.1328125), (6045.5234375, 6696.65625))
TRUE
((5478.3203125, 7236.4140625), (5999.781250000001, 7401.0859375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2470, '2': 3028, '3': 3394, '4': 3961, '5': 4519, '6': 5086, '7': 5470, '8': 6047, '9': 6431, '10': 7026}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vpI8WEb.jpg
OCR detection done with doctr
left top x of T/F: 5598.40625
bottom right x of T/F: 6828.937500000001
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
FALSE
((5635.5, 1950.75), (6222.531250000001, 2158.46875))
CALSE
((5707.750000000001, 2528.75), (6348.968749999999, 2781.625))
TRUG
((5707.750000000001, 2772.59375), (6267.687499999999, 2980.3125))
FALSE
((5671.624999999999, 3133.84375), (6330.906250000001, 3386.71875))
TYUE
((5545.187500000001, 3675.71875), (6168.343750000001, 3883.4375))
FALSE
((5572.281250000001, 4136.3125), (6186.406249999999, 4344.03125))
FALSE
((5608.40625, 4849.78125), (6195.437500000001, 5066.53125))
TRUE
((5536.156249999999, 5545.1875), (6123.1875, 5743.875))
FALSE
((5590.343749999999, 6032.875), (6231.5625, 6231.5625))
FOLSE
((5572.281250000001, 6574.75), (6150.28125, 6791.5))
TRUE
((5608.40625, 7152.75), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2619, '3': 3197, '4': 3784, '5': 4172, '6': 4759, '7': 5527, '8': 6114, '9': 6511, '10': 7288}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nrdsLDa.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 763.15625
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5527.125, 1941.71875), (5843.218750000001, 2203.625))
Fle
((5445.84375, 2519.71875), (5825.15625, 2745.5))
Trve
((5409.718750000001, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5409.718750000001, 3711.84375), (5752.906249999999, 3946.65625))
False
((5418.75, 4271.78125), (5879.34375, 4506.59375))
Tre
((5364.5625, 4840.75), (5707.750000000001, 5039.4375))
True
((5418.75, 5373.59375), (5834.187499999999, 5572.28125))
Trve
((5427.781249999999, 5843.21875), (5825.15625, 6123.1875))
Fale
((5427.781249999999, 6358.0), (5825.15625, 6583.78125))
Tre
((5373.593749999999, 7080.5), (5798.0625, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2591, '3': 2998, '4': 3639, '5': 4244, '6': 4858, '7': 5256, '8': 5879, '9': 6285, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k2F7UH9.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 308.5078125
left top x of T/F: 870.421875
bottom right x of T/F: 1235.4609375
first t/f detection
F
((921.5546875, 414.4921875), (946.8671875000001, 452.4609375))
collision happend with box:414.4921875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 534.7265625))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((900.98828125, 958.7109375), (946.8671875000001, 990.3515625))
T
((912.0625, 685.01953125), (948.44921875, 722.98828125))
collision happend with box:685.01953125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 791.015625), (942.12109375, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:791.015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:878.02734375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((910.48046875, 1042.55859375), (937.375, 1083.69140625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((921.5546875, 414.4921875), (946.8671875000001, 452.4609375))
F
((918.390625, 496.7578125), (943.703125, 534.7265625))
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
T.
((900.98828125, 958.7109375), (946.8671875000001, 990.3515625))
T
((912.0625, 685.01953125), (948.44921875, 722.98828125))
T
((912.0625, 791.015625), (942.12109375, 822.65625))
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
F
((910.48046875, 1042.55859375), (937.375, 1083.69140625))
F
((908.8984375000001, 1126.40625), (938.95703125, 1156.46484375))
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 586, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1226}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wCaaOdq.jpg
OCR detection done with doctr
left top x of T/F: 5496.94921875
bottom right x of T/F: 6790.2705078125
left top x of SN: 970.6865234374999
bottom right x of SN: 1419.1201171875
first t/f detection
FALSE
((5516.5361328125, 2367.9677734375), (6149.2724609375, 2588.466796875))
T
((5506.94921875, 2876.07421875), (5784.969726562499, 3067.8125))
collision happend with box:2876.07421875 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5717.861328125, 2876.07421875), (6197.207031249999, 3096.5732421875))
text2 i.e the incoming text is the winner
T
((5516.5361328125, 3374.59375), (5717.861328125, 3547.158203125))
collision happend with box:3374.59375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5669.9267578125, 3365.0068359375), (6053.403320312501, 3556.7451171875))
text2 i.e the incoming text is the winner
FALSE
((5545.296875, 3940.2216796875), (6245.1416015625, 4122.373046875))
TRUE
((5574.0576171875, 4486.67578125), (6225.9677734375, 4697.587890625))
FALSE
((5574.0576171875, 4966.021484375), (6264.3154296875, 5186.5205078125))
FALSE
((5593.2314453125, 5387.845703125), (6283.4892578125, 5646.6923828125))
TRUE
((5621.9921875, 5886.365234375), (6225.9677734375, 6116.451171875))
prediction
((4902.9736328125, 6308.189453125), (5516.5361328125, 6480.75390625))
collision happend with box:6308.189453125 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5593.2314453125, 6336.9501953125), (6206.7939453125, 6547.8623046875))
text2 i.e the incoming text is the winner
the
((5315.2109375, 7046.3818359375), (5535.7099609375, 7209.359375))
collision happend with box:7046.3818359375 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5602.818359375, 6988.8603515625), (6283.4892578125, 7209.359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['3', '4', '5', '7', '8', '9']
the assigned keys are ['1', '2', '6', '10']
['1', '2', '6', '10', '1', '2', '6', '10']
printing the number dict y_coordinate
{'1': 2483, '2': 3029, '6': 5052, '10': 6892}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2xCuXpB.jpg
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 961.765625
left top x of T/F: 5504.9140625
bottom right x of T/F: 6675.5
first t/f detection
TRUE
((5551.507812500001, 1939.46875), (5944.890625, 2113.2890625))
FALSE
((5542.359375, 2497.5234375), (5990.6328125, 2634.75))
FALSE
((5551.507812500001, 3055.578125), (6027.2265625, 3229.3984375))
TRUE
((5533.2109375, 3595.3359375), (5899.1484375, 3732.5625))
FALSE
((5578.953125, 3979.5703125), (6045.5234375, 4162.5390625))
FALSE
((5542.359375, 4665.703125), (6018.078125000001, 4839.5234375))
TRUE
((5514.9140625, 5379.28125), (5899.1484375, 5543.953125))
TRUE
((5542.359375, 5873.296875), (5908.296875, 6010.5234375))
TRUE
((5560.65625, 6385.609375), (5963.1875, 6550.28125))
TRUE
((5578.953125, 6980.2578125), (5981.484375, 7144.9296875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1912, '2': 2479, '3': 3037, '4': 3613, '5': 3988, '6': 4555, '7': 5306, '8': 5882, '9': 6257, '10': 7026}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Bk5vzlP.jpg
OCR detection done with doctr
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRME
((5202.0, 2176.53125), (5761.937500000001, 2402.3125))
TRUE
((5138.78125, 2700.34375), (5798.0625, 2917.09375))
FALSE
((5238.124999999999, 3169.96875), (5816.125000000001, 3386.71875))
FALSE
((5211.031249999999, 3757.0), (5834.187499999999, 3973.75))
FALSE
((5220.062500000001, 4362.09375), (5761.937500000001, 4578.84375))
FALSE
((5256.1875, 4795.59375), (5852.25, 5057.5))
FALSE
((5211.031249999999, 5292.3125), (5816.125000000001, 5509.0625))
TRUETKUE
((5247.156250000001, 5816.125), (6249.625000000001, 6023.84375))
FALSE
((5247.156250000001, 6249.625), (5825.15625, 6511.53125))
RUE
((5391.65625, 6836.65625), (5816.125000000001, 7053.40625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2517
printing the number dict y_coordinate
{'2': 2817, '3': 3215, '4': 3784, '5': 4362, '6': 4940, '7': 5328, '8': 5906, '9': 6312, '10': 6872, '1': 2517}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bFD9eUD.jpg
rotation started
['of', '6', '00', '', 'o', 'CT', '4', 'a', 'N', 'LH', 'I', '2', '8', 'I', 'iE', ':', '8', 'a', 'I', 'I', 'I', 'I', 'E', 'I', 'ee', 'E', 'I', '3', 'it', 'I', 'I', 'E', 'a', 'I', '8', 'I', 'I', 'E', 'E', '1', 'I', 'E', 'I', '8', 'I', 'E', 'I', 'it', 'a', '€', 'E', 'I', 'I', '11', '2', 's', 'E', 'E', '-', 'E', '2', 'E', 'E', 'I', 'E', 'I', 'E', 'F', 'B', 'I', 'I', 'e', 'E', 'I', 'I', '€', 'I', 'E', 'I', 'E', 'E', '8', 'I', 'of', '2', 'I', 'I', 'E', 'E', 'E', 'E', '-', 'lE', 'of', 'I', 'I', 'Q', 'E', 'E', 'P', 'of', 'I', 'I', 'I', 'p', 'I', 'I', 'F', '>', 'I', 'F', 'a', 'F', 'I', 'E', 'f', '8', 'E', 'I', 'a', 'I', 'E', 'I', 'it', 'I', 'a', '€', 'I', '1', '1', '8', 'I', 'E', 'E', '2', 'I', 'E', 'E', 'lE', 'I', '-', 'E', '2', 'E', 'I', 'E', '€', 'E', 'g', '8', 'I', 'I', '2', 'I', 'f', 'i', 'DB', '1', 'E', 'I', 'I', 'I', 'I', '2', '2', '€', '2', 'of', 'I', 'E', 'I', 'E', 'F', 'it', 'E', 'E', 'I', 'a', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'E', '8e', 'I', 'I', '1', ':', 'it', 'I', 'I', 'I', 'I', 'F', 't', 'I', '-', 'i', 'i', '-', 'A', '-', '-', 'E', ':', '-', 'I', 'a', '-', 'O', '141']
rotation started
['eep', 'uoosun', "'Mou", '01', 'TTOM', 'azire.oues', 'jou', 'op', 'gey1', 'ejep', 'Surureng', 'oul', 'ul', 'sipezop', 'JO', 'osTou', 'oypeds', 'emgdeo', '01', 'UIeOT', 'Keur', 'popour', 'au1', 'se', "'soseaId", '-UIT', 'Sumayiono', 'Jo', 'YSII', 'ou1', "'IAS", 'uI', 'popourered', 'D', 'auy', 'jo', 'onTeA', '4814', 'e', 'YAIM', 'OI', 'Dul,', 'w', 'INAS', '980.I-SA-OUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Ouo-SA-OtO', 'Bursn', 'PMAL', 'PAL', 'aof', 'uonorpad', 'B', 'Suryeur', "'sossepp", 'Jo', 'poqunu', '081e1', 'B', 'YAIM', 'sularqod', 'ssepprmu', 'JOI', '6', 'eoeds', 'TeurSTo', 'ou4', 'uT', 'JeOUII-uou', '0q', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoop', 'OUL', '8', '"sopou', 'Jo', 'roqunu', 'au7', '01', 'reuorodoud', 'Appaup', 'SI', 'OOIL', 'LOISIDOC', 'ou4', 'ul', 'uororpard', 'B', 'Suryeur', 'JOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '"uornquasip', 'uerssneD', 'B', 'SRenre', 'SI', 'suorgnquasip', 'uerssnes', 'OMI', 'Jo', 'amgXI', 'V', '9', '2L', '2MAL', 'TreDOH', 'pue', 'UOISIO', '-ld', 'udamgoq', 'gord', 'B', 'SI', 'OAINO', '(Do4)', 'onstutagpereud', 'Surgerado', 'IOAIODOH', 'OUL', 'S', 'YIOMIOU', '[emou', 'ou7', 'uI', 'squerpe1s', 'au4', 'agnduoo', '01', 'posn', 'DMGL', 'SI', 'quaosap', 'querpe.8', 'OTIYM', "'sq81OM", 'oU9', 'agepdn', '01', 'posn', 'SI', 'uoneBodoxdypeg', '#', ':f', 'pue', 'I', 'SIO1DOA', 'R7I', 'Kue', 'JOJ', 'ouIgour', 'oouensip', 'PITBA', 'B', 'SI', '(Az/Aquopuagausoy', '-', 'I', '&', 'Teuorsuauump-P', 'Jayissep', 'JeOUII-uou', 'e', 'SI', 'NNY', '2', 'muL', 'DYML', 'quaurdordap', 'quouaumbar', 'a8e1oqs', 'aul', 'STeoidAL', 'I', 'ueys', '108101', 'yponur', 'SI', 'NNX', 'JOJ', 'JOJ', 'WAS', 'quauagess', 'NS', 'MIVA/AnaL', 'Joqunu', 'ITO.I', 'mor', 'O9LIM', ':0.OU', 'OO1M', '(sad', 'OT)', '6', 'Ul', 'ASTVA', 'IO', 'ANUL', 'S.I09101', 'Tuarduo', 'Surguumpurey', '1BOpD', 'pure']
rotation started
['%', '-', 'CR', 'MIy', 'I', '2', 'à', 'à', '2', 'à', '2', '2', 'I', 'I', '2', 's', 'E', 'a', '-', 'i', 'is', '2', 'a', 'I', 'is', 'I', 'E', 'I', 'E', 'e', 'E', 'I', '1', 'I', 'i', 'I', 'E', 'I', 'I', 'I', 'I', 'd', 'I', 'e', 'of', 'a', '-', 'I', '1', 'E', ':', '8', ':', 'e', 'I', 'e', 'I', 'a', 'I', 'E', 'I', 'of', ':', '1', 'I', 'iis', 'e', 'I', 'a', 'o', 'I', 'I', '-', 'I', 'E', ':', 'o', 'a', '-', '-', 'E', 'a', 'I', 'of', 'I', 'E', 'I', 'I', 'I', 'I', 'of', 'E', 'is', '4', 'a', '-', ':', 'I', 'a', 'I', 'I', 'I', 'à', 'a', '1', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', 'I', '8', 'e', 'e', 'a', 'i', 'o', 'I', 'I', 'I', 'of', 'de', '2', 'I', 'is', 'e', 'de', '-', 'I', '5', 'I', 'I', 'E', '8', 'I', 'à', ':', 'E', 'e', 'E', 'of', 'I', 'e', '', 'I', '#', 'E', ':', 's', '5', 'is', 'a', 'I', '9', 'I', 'à', 'I', 'I', 'I', ':', 'I', '1', '-', '1', 'I', 'I', 'I', 'I', 'T', 'à', '.', '<', 'I', 'e', 'a', 'E', '€', 'I', '1', 'E', '-', 'e', 'E', '-', 'E', 'e', 'o', ':', '8', 'is', 'i', 'I', 'i', 'I', 'I', 'I', 'à', 'à', 'I', '€', 'I', 'I', '7', '1', '2', 'S', '4', '12', '6', '-', '00', '', '09']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', '1', 'roll', 'number', 'here:', '', 'HA', 'Write', 'your', 'TRUE/FAISI', 'Twl', 'True', 'SN', 'Statement', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'metric', 'for', 'd-dimensional', '3', '1', '-', 'cosine-Simalaritylr.u)', 'is', 'a', 'valid', 'distance', 'any', 'Falye', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'Tque', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyue', 'True', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'Falxe', 'True', 'Tyue', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'M', 'Ca', 'AA', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'Truee']
OCR detection done with doctr
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 14:52:44] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : bFD9eUD.jpg
[2024/07/01 14:52:45] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 14:52:46] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.11902761459350586
[2024/07/01 14:52:48] ppocr DEBUG: rec_res num  : 41, elapsed : 2.103250026702881
OCR detection done
left top x of SN: 330.0
bottom right x of SN: 736.0
left top y of SN: 1748.0
bottom right y of SN: 2024.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/bFD9eUD.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WbvDqtc.jpg
OCR detection done with doctr
left top x of T/F: 5840.3125
bottom right x of T/F: 7096.88671875
left top x of SN: 558.9179687500001
bottom right x of SN: 961.1992187500001
first t/f detection
Trul
((5961.453125, 1861.60546875), (6331.921875000001, 2093.1484375))
False
((5822.52734375, 2417.30859375), (6267.08984375, 2648.8515625))
False
((5850.3125, 3074.890625), (6239.3046875, 3297.171875))
Thue
((5841.05078125, 3658.37890625), (6211.51953125, 3852.875))
Tauu
((5831.7890625, 4093.6796875), (6155.94921875, 4297.4375))
Falac
((5813.265625, 4742.0), (6230.04296875, 4973.54296875))
Taue
((5822.52734375, 5510.72265625), (6183.734375, 5695.95703125))
Falee
((5878.09765625, 6103.47265625), (6257.828125, 6288.70703125))
Taue
((5841.05078125, 6575.8203125), (6267.08984375, 6816.625))
Tux
((5859.57421875, 7242.6640625), (6192.99609375, 7501.9921875))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2293
printing the number dict y_coordinate
{'6': 4779, '2': 2593, '3': 3186, '4': 3778, '5': 4177, '7': 5575, '8': 6177, '9': 6585, '10': 7390, '1': 2293}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9ho2npk.jpg
OCR detection done with doctr
left top x of SN: 68.03515625000003
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
collision happend with box:625.748046875 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1386.107421875, 753.796875), (1509.3242187500002, 809.365234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:753.796875 and text:True solving on the basis of percent match boxes
the current box specification are
Falte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:886.677734375 and text:Falte solving on the basis of percent match boxes
the current box specification are
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1036.470703125 and text:Falh solving on the basis of percent match boxes
the current box specification are
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1405.435546875, 1326.392578125), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
True
((1386.107421875, 753.796875), (1509.3242187500002, 809.365234375))
Falte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
Fula
((1405.435546875, 1326.392578125), (1526.236328125, 1374.712890625))
False
((1410.267578125, 1449.609375), (1535.900390625, 1507.59375))
Trut
((1381.275390625, 1577.658203125), (1506.908203125, 1625.978515625))
True
((1407.8515625, 1703.291015625), (1511.740234375, 1761.275390625))
Trut
((1374.02734375, 1879.66015625), (1489.99609375, 1935.228515625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 864, '2': 761, '3': 862, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1688, '10': 1841}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : o6iFate.jpg
OCR detection done with doctr
left top x of SN: 644.5390625000001
bottom right x of SN: 1044.1015625
left top x of T/F: 5367.6875
bottom right x of T/F: 6574.8671875
first t/f detection
TRUE
((5441.7265625, 2085.84375), (5917.4453125, 2305.40625))
TRUE
((5496.6171875, 2634.75), (6008.9296875, 2845.1640625))
TRUE
((5487.46875, 3128.765625), (6008.9296875, 3394.0703125))
TRUE
((5533.2109375, 3824.046875), (6008.9296875, 4043.609375))
TRUE
((5514.9140625, 4446.140625), (5981.484375, 4656.5546875))
TRUE
((5542.359375, 4995.046875), (5999.781250000001, 5168.8671875))
FALSE
((5569.804687500001, 5425.0234375), (6045.5234375, 5644.5859375))
TRUE
((5478.3203125, 5973.9296875), (5954.039062499999, 6147.75))
TRUE
((5551.507812500001, 6458.796875), (6072.96875, 6632.6171875))
TRUE
((5533.2109375, 7071.7421875), (5999.781250000001, 7245.5625))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2451, '2': 3018, '3': 3394, '4': 3979, '5': 4519, '6': 5086, '7': 5461, '8': 6037, '9': 6422, '10': 7016}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y2z8DRH.jpg
OCR detection done with doctr
left top x of T/F: 5488.3671875
bottom right x of T/F: 6781.98828125
left top x of SN: 540.3945312499998
bottom right x of SN: 970.4609375000001
first t/f detection
TRUE
((5683.6015625, 2213.55078125), (6192.99609375, 2389.5234375))
TRUE
((5655.81640625, 2769.25390625), (6128.1640625, 2945.2265625))
FALSE
((5618.769531250001, 3278.6484375), (6331.921875000001, 3491.66796875))
TRUE
((5618.769531250001, 3880.66015625), (6146.6875, 4065.89453125))
FALSE
((5628.031250000001, 4482.671875), (6248.56640625, 4695.69140625))
FALSE
((5590.984375000001, 5029.11328125), (6118.902343749999, 5205.0859375))
FALSE
((5535.4140625, 5473.67578125), (6100.378906249999, 5677.43359375))
TRVE
((5553.9375, 5983.0703125), (6081.855468749999, 6168.3046875))
TRUE
((5590.984375000001, 6455.41796875), (6118.902343749999, 6668.4375))
TRVE
((5553.9375, 7113.0), (6146.6875, 7316.7578125))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2278, '2': 2898, '3': 3269, '5': 4473, '6': 5066, '7': 5464, '8': 6075, '9': 6464, '10': 7048}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RZH24s7.jpg
OCR detection done with doctr
left top x of SN: 565.0937499999999
bottom right x of SN: 979.90625
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6449.625000000001
first t/f detection
Halse
((5229.09375, 2429.40625), (5770.96875, 2700.34375))
Halse
((5265.218749999999, 2917.09375), (5716.78125, 3142.875))
ttue
((5220.062500000001, 3395.75), (5680.656250000001, 3621.53125))
toue
((5283.28125, 3973.75), (5852.25, 4226.625))
False
((5310.375, 4515.625), (5734.843750000001, 4696.25))
Taue
((5220.062500000001, 5003.3125), (5689.6875, 5211.03125))
Truc
((5238.124999999999, 5481.96875), (5725.812499999999, 5698.71875))
True
((5202.0, 5987.71875), (5698.718749999999, 6159.3125))
Tbe
((5256.1875, 6502.5), (5716.78125, 6674.09375))
collision happend with box:6502.5 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((5752.906249999999, 6475.40625), (6150.28125, 6665.0625))
text2 i.e the incoming text is the winner
Tue
((5301.343750000001, 7008.25), (5825.15625, 7215.96875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3034, '3': 3413, '4': 3991, '5': 4551, '6': 5120, '7': 5491, '8': 6059, '9': 6430, '10': 7008}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : feQ7tcB.jpg
OCR detection done with doctr
left top x of T/F: 5386.48828125
bottom right x of T/F: 6550.445312500001
left top x of SN: 1077.5742187499998
bottom right x of SN: 1479.8554687500002
first t/f detection
TRVE
((5461.3203125, 2250.59765625), (5942.9296875, 2435.83203125))
TRVE
((5442.796875, 2741.46875), (5933.66796875, 2917.44140625))
FALSE
((5442.796875, 3213.81640625), (5896.62109375, 3389.7890625))
FALSE
((5461.3203125, 3741.734375), (5933.66796875, 3926.96875))
FALIE
((5405.75, 4325.22265625), (5933.66796875, 4501.1953125))
FALSE
((5424.2734375, 4843.87890625), (5924.40625, 5010.58984375))
FALSE
((5405.75, 5279.1796875), (5868.8359375, 5464.4140625))
TRUE
((5368.703125, 5770.05078125), (5794.7421875, 5955.28515625))
TRVE
((5415.01171875, 6205.3515625), (5905.8828125, 6372.0625))
TRVE
((5368.703125, 6788.83984375), (5785.48046875, 6964.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2380, '2': 2889, '3': 3223, '4': 3741, '5': 4251, '6': 4788, '7': 5130, '8': 5658, '9': 6020, '10': 6557}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Zfq18VD.jpg
OCR detection done with doctr
left top x of T/F: 5761.0703125
bottom right x of T/F: 7078.03125
left top x of SN: 928.140625
bottom right x of SN: 1346.0
first t/f detection
TRUE
((5825.9609375, 2268.8125), (6329.125, 2479.2265625))
TRUE
((5798.515624999999, 2890.90625), (6310.828125000001, 3073.875))
TRUE
((5807.6640625, 3339.1796875), (6301.6796875, 3522.1484375))
FALSE
((5771.0703125, 3988.71875), (6329.125, 4189.984375))
FALSE
((5844.2578125, 4629.109375), (6347.421875, 4793.78125))
TRUE
((5825.9609375, 5178.015625), (6292.531250000001, 5315.2421875))
Teve
((5743.625, 5644.5859375), (6201.046875, 5809.2578125))
TRUE
((5816.812499999999, 6175.1953125), (6237.640625, 6339.8671875))
PRU
((5780.21875, 6705.8046875), (6164.453125, 6870.4765625))
collision happend with box:6705.8046875 and text:PRU solving on the basis of percent match boxes
the current box specification are
FALSE
((6201.046875, 6714.953125), (6704.2109375, 6852.1796875))
text2 i.e the incoming text is the winner
TRUE.
((5816.812499999999, 7263.859375), (6393.1640625, 7428.53125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2460, '2': 3028, '3': 3403, '4': 3988, '5': 4565, '6': 5159, '7': 5543, '8': 6156, '9': 6559, '10': 7172}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : j6uC3Xk.jpg
OCR detection done with doctr
left top x of T/F: 5523.2109375
bottom right x of T/F: 6821.875
left top x of SN: 333.4921875
bottom right x of SN: 751.3515625000001
first t/f detection
True
((5725.328125, 2232.21875), (6484.6484375, 2579.859375))
True
((5780.21875, 2909.203125), (6576.1328125, 3211.1015625))
Tu
((5569.804687500001, 3467.2578125), (6484.6484375, 3805.75))
Falul
((5578.953125, 4043.609375), (6438.90625, 4418.6953125))
Falu
((5679.5859375, 4647.40625), (6484.6484375, 4995.046875))
Trul
((5569.804687500001, 5242.0546875), (6402.312499999999, 5534.8046875))
Falle
((5569.804687500001, 5763.515625), (6475.5, 6092.859375))
Truue
((5496.6171875, 6248.3828125), (6310.828125000001, 6577.7265625))
Tuu
((5597.25, 6696.65625), (6374.8671875, 7044.296875))
Trl
((5542.359375, 7401.0859375), (6374.8671875, 7757.875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2433, '2': 3055, '3': 3467, '4': 4089, '5': 4693, '6': 5315, '7': 5717, '8': 6330, '9': 6733, '10': 7337}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uGqNWz5.jpg
OCR detection done with doctr
left top x of SN: 853.0859375000001
bottom right x of SN: 1276.78515625
left top x of T/F: 5541.490234375
bottom right x of T/F: 6745.033203125
first t/f detection
Halsc
((5504.625, 2624.453125), (6057.634765624999, 2905.64453125))
dalse
((5532.744140625, 3121.224609375), (5992.0234375, 3346.177734375))
ttue
((5476.505859375, 3599.25), (5945.158203125, 3814.830078125))
toue
((5532.744140625, 4189.751953125), (6085.75390625, 4414.705078125))
False
((5542.1171875, 4714.642578125), (5973.27734375, 4902.103515625))
Tauc
((5429.640625, 5202.041015625), (5907.666015625, 5417.62109375))
Truc
((5439.013671875, 5680.06640625), (5926.412109375, 5895.646484375))
Truc
((5392.1484375, 6176.837890625), (5898.29296875, 6364.298828125))
T
((5429.640625, 6682.982421875), (5898.29296875, 6898.5625))
collision happend with box:6682.982421875 and text:T solving on the basis of percent match boxes
the current box specification are
False
((5917.0390625, 6664.236328125), (6338.826171875, 6889.189453125))
text2 i.e the incoming text is the winner
Tue
((5467.1328125, 7198.5), (6001.396484375, 7423.453125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2596, '2': 3177, '3': 3552, '4': 4114, '5': 4686, '6': 5248, '7': 5623, '8': 6195, '9': 6570, '10': 7151}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uKXbpyN.jpg
OCR detection done with doctr
left top x of SN: 144.9140625
bottom right x of SN: 362.109375
left top x of T/F: 858.9843749999999
bottom right x of T/F: 1211.296875
first t/f detection
Tyue
((873.8359375000001, 370.3359375), (956.3125000000001, 401.0625))
collision happend with box:370.3359375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Trwe
((877.0703125000001, 446.34375), (961.1640625, 483.5390625))
text2 i.e the incoming text is the winner
collision happend with box:446.34375 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Fole
((885.15625, 525.5859375), (956.3125000000001, 557.9296875))
text2 i.e the incoming text is the winner
collision happend with box:525.5859375 and text:Fole solving on the basis of percent match boxes
the current box specification are
Fase
((877.0703125000001, 606.4453125), (954.6953125, 643.640625))
text2 i.e the incoming text is the winner
collision happend with box:606.4453125 and text:Fase solving on the basis of percent match boxes
the current box specification are
Fakc
((880.3046875000001, 698.625), (959.5468750000001, 737.4375))
text1 i.e the prev text is the winner
FaMe
((881.921875, 782.71875), (957.9296875, 815.0625))
collision happend with box:782.71875 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fase
((883.5390625, 855.4921875), (953.0781250000001, 887.8359375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((873.8359375000001, 370.3359375), (956.3125000000001, 401.0625))
collision happend with box:370.3359375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Trwe
((877.0703125000001, 446.34375), (961.1640625, 483.5390625))
text2 i.e the incoming text is the winner
collision happend with box:446.34375 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Fole
((885.15625, 525.5859375), (956.3125000000001, 557.9296875))
text2 i.e the incoming text is the winner
Fase
((877.0703125000001, 606.4453125), (954.6953125, 643.640625))
Fakc
((880.3046875000001, 698.625), (959.5468750000001, 737.4375))
FaMe
((881.921875, 782.71875), (957.9296875, 815.0625))
collision happend with box:782.71875 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fase
((883.5390625, 855.4921875), (953.0781250000001, 887.8359375))
text2 i.e the incoming text is the winner
True
((880.3046875000001, 939.5859375), (949.8437500000001, 973.546875))
collision happend with box:939.5859375 and text:True solving on the basis of percent match boxes
the current box specification are
prediction
((770.3359375, 1010.7421875), (859.28125, 1035.0))
text1 i.e the prev text is the winner
collision happend with box:939.5859375 and text:True solving on the basis of percent match boxes
the current box specification are
Trwe
((878.6875, 1017.2109375), (948.2265624999999, 1047.9375))
text1 i.e the prev text is the winner
thé
((823.703125, 1128.796875), (859.28125, 1154.671875))
collision happend with box:1128.796875 and text:thé solving on the basis of percent match boxes
the current box specification are
Trwe
((878.6875, 1112.625), (959.5468750000001, 1149.8203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': False, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '7']
the assigned keys are ['2', '3', '4', '5', '6', '8', '9', '10']
['2', '3', '4', '5', '6', '8', '9', '10', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'2': 464, '3': 522, '4': 616, '5': 706, '6': 800, '8': 955, '9': 1012, '10': 1107, '1': 164}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': False, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qlwikIg.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6675.40625
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
Taue
((5472.9375, 2050.09375), (5933.53125, 2275.875))
Thue
((5346.499999999999, 2601.0), (5834.187499999999, 2826.78125))
Taue
((5463.906250000001, 3061.59375), (5852.25, 3278.34375))
Tue
((5310.375, 3747.96875), (5725.812499999999, 3973.75))
Tue
((5364.5625, 4389.1875), (5807.093749999999, 4605.9375))
Fale
((5355.531250000001, 4858.8125), (5798.0625, 5075.5625))
Tyue
((5391.65625, 5400.6875), (5852.25, 5635.5))
Tue
((5409.718750000001, 5888.375), (5879.34375, 6105.125))
Toue
((5427.781249999999, 6367.03125), (5870.312500000001, 6583.78125))
fabe
((5391.65625, 7044.375), (5779.999999999999, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2754, '3': 3151, '4': 3747, '5': 4325, '6': 4922, '7': 5310, '8': 5906, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xPcfWPI.jpg
OCR detection done with doctr
left top x of T/F: 5468.3203125
bottom right x of T/F: 6657.203125
left top x of SN: 726.8750000000001
bottom right x of SN: 1135.5859375
first t/f detection
TRUE
((5533.2109375, 2159.03125), (6201.046875, 2406.0390625))
TRUE
((5569.804687500001, 2744.53125), (6255.9375, 3000.6875))
FALSE
((5569.804687500001, 3192.8046875), (6301.6796875, 3439.8125))
TRUE
((5533.2109375, 3906.3828125), (6173.6015625, 4116.796875))
FALSE
((5514.9140625, 4464.4375), (6228.4921875, 4665.703125))
FALSG
((5551.507812500001, 4940.15625), (6191.8984375, 5141.421875))
FALSE
((5551.507812500001, 5443.3203125), (6201.046875, 5644.5859375))
TRUE
((5514.9140625, 5955.6328125), (6155.304687500001, 6129.453125))
TRUE
((5533.2109375, 6422.203125), (6201.046875, 6632.6171875))
TRUE
((5469.171875, 6989.40625), (6164.453125, 7208.96875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2351, '2': 2909, '3': 3302, '4': 3869, '5': 4436, '6': 5013, '7': 5397, '8': 5964, '9': 6358, '10': 6934}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bUvk9iA.jpg
OCR detection done with doctr
left top x of T/F: 5589.375000000001
bottom right x of T/F: 6756.6875
left top x of SN: 1170.1875000000002
bottom right x of SN: 1566.9375000000002
first t/f detection
True
((5716.78125, 2266.84375), (6177.375, 2492.625))
Trus
((5779.999999999999, 2745.5), (6150.28125, 2998.375))
True
((5698.718749999999, 3215.125), (6141.250000000001, 3431.875))
True
((5644.531249999999, 6683.125), (6078.031249999999, 6917.9375))
Jalso
((5653.562500000001, 3784.09375), (6258.65625, 4027.9375))
Jalse
((5635.5, 4325.96875), (6159.312499999999, 4542.71875))
Srue
((5662.59375, 4768.5), (6132.218749999999, 5039.4375))
Jrue
((5689.6875, 5211.03125), (6123.1875, 5445.84375))
True
((5671.624999999999, 5698.71875), (6105.124999999999, 5924.5))
True
((5635.5, 6150.28125), (6114.156250000001, 6376.0625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2844, '3': 3197, '4': 3729, '5': 4253, '6': 4786, '7': 5147, '8': 5689, '9': 6050, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SpbJje9.jpg
OCR detection done with doctr
left top x of T/F: 5623.84375
bottom right x of T/F: 6885.9140625
left top x of SN: 406.6796875
bottom right x of SN: 824.5390625000001
first t/f detection
lpzue
((6557.835937499999, 320.1953125), (6859.734375, 466.5703125))
FALSE
((5688.734375, 1994.359375), (6548.6875, 2232.21875))
TRUE
((5697.8828125, 2579.859375), (6512.09375, 2836.015625))
FALSE
((5642.9921875, 3256.84375), (6448.054687500001, 3549.59375))
TRVE
((5661.289062499999, 3796.6015625), (6246.789062499999, 4052.7578125))
FALS
((5707.031250000001, 4272.3203125), (6246.789062499999, 4482.734375))
FALSE
((5578.953125, 4967.6015625), (6457.203125, 5205.4609375))
epegs
((5661.289062499999, 5681.1796875), (6420.609375, 5937.3359375))
TRUE
((5697.8828125, 5937.3359375), (6374.8671875, 6111.15625))
T
((5679.5859375, 6184.34375), (5935.7421875, 6403.90625))
collision happend with box:6184.34375 and text:T solving on the basis of percent match boxes
the current box specification are
RVE
((5908.296875, 6184.34375), (6356.5703125, 6413.0546875))
text2 i.e the incoming text is the winner
FALSE
((5670.4375, 6742.3984375), (6530.390625, 7026.0))
PTRVE
((5578.953125, 7364.4921875), (6448.054687500001, 7620.6484375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2717, '3': 3302, '4': 3897, '5': 4290, '6': 4885, '7': 5672, '8': 6266, '9': 6669, '10': 7455}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FVofCFc.jpg
OCR detection done with doctr
left top x of SN: 233.08886718749994
bottom right x of SN: 476.62792968749994
left top x of T/F: 1515.337890625
bottom right x of T/F: 1987.4365234375
first t/f detection
Tue
((1565.0498046875, 728.0517578125), (1670.9482421875, 783.6484375))
collision happend with box:728.0517578125 and text:Tue solving on the basis of percent match boxes
the current box specification are
True
((1575.6396484375, 860.4248046875), (1681.5380859375, 913.3740234375))
text2 i.e the incoming text is the winner
collision happend with box:860.4248046875 and text:True solving on the basis of percent match boxes
the current box specification are
Falk
((1583.58203125, 987.5029296875), (1694.775390625, 1040.4521484375))
text2 i.e the incoming text is the winner
collision happend with box:987.5029296875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1588.876953125, 1125.1708984375), (1689.4804687499998, 1180.767578125))
text2 i.e the incoming text is the winner
collision happend with box:1125.1708984375 and text:falk solving on the basis of percent match boxes
the current box specification are
Falk
((1575.6396484375, 1294.6083984375), (1684.185546875, 1347.5576171875))
text2 i.e the incoming text is the winner
collision happend with box:1294.6083984375 and text:Falk solving on the basis of percent match boxes
the current box specification are
false
((1580.9345703125, 1426.9814453125), (1689.4804687499998, 1479.9306640625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Tue
((1565.0498046875, 728.0517578125), (1670.9482421875, 783.6484375))
True
((1575.6396484375, 860.4248046875), (1681.5380859375, 913.3740234375))
Falk
((1583.58203125, 987.5029296875), (1694.775390625, 1040.4521484375))
falk
((1588.876953125, 1125.1708984375), (1689.4804687499998, 1180.767578125))
Falk
((1575.6396484375, 1294.6083984375), (1684.185546875, 1347.5576171875))
false
((1580.9345703125, 1426.9814453125), (1689.4804687499998, 1479.9306640625))
fada
((1572.9921875, 1556.70703125), (1708.0126953125, 1617.5986328125))
collision happend with box:1556.70703125 and text:fada solving on the basis of percent match boxes
the current box specification are
fase
((1721.2500000000002, 1551.412109375), (1805.9687499999998, 1612.3037109375))
text2 i.e the incoming text is the winner
Tyue
((1586.2294921875, 1990.890625), (1700.0703125, 2043.83984375))
The
((1596.8193359375, 1686.4326171875), (1700.0703125, 1739.3818359375))
True
((1604.76171875, 1808.2158203125), (1713.3076171874998, 1861.1650390625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 720, '2': 876, '3': 982, '4': 1138, '5': 1294, '6': 1450, '7': 1556, '8': 1712, '9': 1818, '10': 1975}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hr0SaFm.jpg
OCR detection done with doctr
left top x of SN: 1087.1953125
bottom right x of SN: 1504.2314453125
left top x of T/F: 5582.9560546875
bottom right x of T/F: 6788.507812499999
first t/f detection
FALSE
((5621.400390625, 2588.4345703125), (6095.47265625, 2759.1005859375))
FALSE
((5649.8447265625, 3128.876953125), (6085.991210937501, 3299.54296875))
FALSE
((5697.251953125, 3565.0234375), (6142.8798828125, 3745.1708984375))
TRUE
((5668.8076171875, 4067.5400390625), (6067.0283203125, 4238.2060546875))
TRUE
((5649.8447265625, 4645.908203125), (6095.47265625, 4816.57421875))
TRUE
((5630.8818359375, 5157.90625), (6076.509765625001, 5338.0537109375))
TRUE
((5678.2890625, 5603.5341796875), (6085.991210937501, 5774.2001953125))
TRUE
((5706.7333984375, 6106.05078125), (6142.8798828125, 6286.1982421875))
TRUE
((5725.6962890625, 6551.6787109375), (6180.8056640625, 6731.826171875))
TRUE.
((5763.622070312499, 7215.3798828125), (6266.138671875, 7386.0458984375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2616, '2': 3157, '3': 3527, '4': 4086, '5': 4645, '6': 5214, '7': 5594, '8': 6162, '9': 6551, '10': 7130}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 89Qr0VM.jpg
OCR detection done with doctr
left top x of SN: 1062.3916015625
bottom right x of SN: 1489.53515625
left top x of T/F: 5709.033203125
bottom right x of T/F: 6917.493164062499
first t/f detection
TRUE
((5877.205078125, 2649.37890625), (6500.0068359375, 2926.1796875))
FRUE
((5867.3193359375, 3558.8671875), (6559.3212890625, 3796.125))
FALSE
((5985.9482421875, 4152.01171875), (6707.607421874999, 4379.3837890625))
FALSE
((5916.748046875001, 4755.0419921875), (6618.6357421875, 4982.4140625))
FALSE
((5916.748046875001, 5130.7001953125), (6608.75, 5358.072265625))
collision happend with box:5130.7001953125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
ORE
((5966.1767578125, 5278.986328125), (6569.20703125, 5496.47265625))
text1 i.e the prev text is the winner
FALSE
((5916.748046875001, 5684.3017578125), (6628.521484375, 5901.7880859375))
TRUE
((5916.748046875001, 6148.931640625), (6509.892578125, 6386.189453125))
TRVE
((5976.0625, 6643.21875), (6588.978515625, 6920.01953125))
the
((5491.6611328125, 7354.9921875), (5719.033203125, 7503.2783203125))
collision happend with box:7354.9921875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5946.4052734375, 7325.3349609375), (6628.521484375, 7562.5927734375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2649, '2': 3202, '3': 3588, '4': 4161, '5': 4715, '6': 5298, '7': 5674, '8': 6247, '9': 6633, '10': 7216}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eW2yoSH.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6774.750000000001
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
FALSE
((5581.3125, 2095.25), (6123.1875, 2312.0))
TRUE
((5572.281250000001, 2700.34375), (6041.90625, 2880.96875))
FALSE
((5581.3125, 3251.25), (6168.343750000001, 3495.09375))
TRUE
((5608.40625, 3829.25), (6105.124999999999, 4009.875))
FALSE
((5617.437499999999, 4262.75), (6159.312499999999, 4470.46875))
TRUE
((5635.5, 4949.125), (6087.062500000001, 5156.84375))
TRUE
((5617.437499999999, 5689.6875), (6059.968750000001, 5861.28125))
TRVE
((5626.468750000001, 6186.40625), (6114.156250000001, 6367.03125))
TRVE
((5635.5, 6773.4375), (6132.218749999999, 6945.03125))
FALSE
((5689.6875, 7396.59375), (6231.5625, 7559.15625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2203, '2': 2790, '3': 3368, '4': 3955, '5': 4335, '6': 4931, '7': 5707, '8': 6294, '9': 6683, '10': 7477}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9X9qVWN.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1882.53125
first t/f detection
falte
((1441.3203125, 627.1484375), (1624.1328124999998, 741.40625))
collision happend with box:627.1484375 and text:falte solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trur
((1433.703125, 934.375), (1591.125, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Rul
((1446.3984374999998, 1079.1015625), (1613.9765625, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1079.1015625 and text:Rul solving on the basis of percent match boxes
the current box specification are
gru
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
text1 i.e the prev text is the winner
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
collision happend with box:1388.8671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1441.3203125, 627.1484375), (1624.1328124999998, 741.40625))
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
Trur
((1433.703125, 934.375), (1591.125, 1035.9375))
Rul
((1446.3984374999998, 1079.1015625), (1613.9765625, 1180.6640625))
gru
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
fale
((1423.546875, 1645.3125), (1573.3515624999998, 1734.1796875))
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 627, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Onp7BQB.jpg
OCR detection done with doctr
left top x of SN: 121.27539062500003
bottom right x of SN: 341.240234375
left top x of T/F: 913.681640625
bottom right x of T/F: 1275.85546875
first t/f detection
Itve
((932.904296875, 373.517578125), (1006.685546875, 402.72265625))
collision happend with box:373.517578125 and text:Itve solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1028.205078125, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((931.3671874999999, 474.966796875), (989.77734375, 513.39453125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:474.966796875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((988.240234375, 479.578125), (1020.51953125, 505.708984375))
text1 i.e the prev text is the winner
collision happend with box:474.966796875 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
text2 i.e the incoming text is the winner
collision happend with box:557.970703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((926.7558593749999, 682.4765625), (1003.611328125, 717.830078125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Itve
((932.904296875, 373.517578125), (1006.685546875, 402.72265625))
collision happend with box:373.517578125 and text:Itve solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1028.205078125, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((931.3671874999999, 474.966796875), (989.77734375, 513.39453125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:474.966796875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((988.240234375, 479.578125), (1020.51953125, 505.708984375))
text1 i.e the prev text is the winner
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
TRVE
((926.7558593749999, 682.4765625), (1003.611328125, 717.830078125))
collision happend with box:682.4765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((931.3671874999999, 753.18359375), (1002.0742187500001, 782.388671875))
text2 i.e the incoming text is the winner
FALSE
((922.14453125, 854.6328125), (1008.22265625, 889.986328125))
FALSE
((920.607421875, 940.7109375), (1011.296875, 976.064453125))
FALSE
((928.29296875, 1032.9375), (1011.296875, 1062.142578125))
collision happend with box:1032.9375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((928.29296875, 1099.033203125), (1008.22265625, 1129.775390625))
text2 i.e the incoming text is the winner
TRrf
((931.3671874999999, 1203.556640625), (1005.1484375, 1232.76171875))
collision happend with box:1203.556640625 and text:TRrf solving on the basis of percent match boxes
the current box specification are
FAISE
((931.3671874999999, 1258.892578125), (1015.908203125, 1288.09765625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': False, '3': True, '4': 'UNASSIGNED', '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': False, '10': False}
the unassigned keys are ['4', '6', '7']
the assigned keys are ['1', '2', '3', '5', '8', '9', '10']
['1', '2', '3', '5', '8', '9', '10', '1', '2', '3', '5', '8', '9', '10']
printing the number dict y_coordinate
{'2': 476, '3': 545, '1': 651, '5': 757, '8': 1048, '9': 1122, '10': 1223}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': 'UNASSIGNED', '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uSpnyHB.jpg
OCR detection done with doctr
left top x of T/F: 5239.609375
bottom right x of T/F: 6346.15625
left top x of SN: 818.3593749999998
bottom right x of SN: 1217.9218749999998
first t/f detection
TRUE
((5277.0546875, 2140.734375), (5752.7734375, 2360.296875))
TRUE
((5286.203125, 2634.75), (5761.921875, 2863.4609375))
TRUE
((5295.3515625, 3064.7265625), (5743.625, 3293.4375))
FALSE
((5267.90625, 3641.078125), (5816.812499999999, 3860.640625))
FALSE
((5350.2421875, 4226.578125), (5871.703125, 4436.9921875))
FALSE
((5341.09375, 4702.296875), (5871.703125, 4912.7109375))
GALSE
((5322.796875, 5095.6796875), (5844.2578125, 5324.390625))
TRUE
((5350.2421875, 5672.03125), (5752.7734375, 5836.703125))
TRUE
((5331.9453125, 6065.4140625), (5752.7734375, 6248.3828125))
TRUE
((5368.539062499999, 6614.3203125), (5816.812499999999, 6797.2890625))
the
((5039.1953125, 6797.2890625), (5249.609375, 6952.8125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2433, '2': 2964, '3': 3311, '4': 3842, '5': 4382, '6': 4921, '7': 5269, '8': 5818, '9': 6184, '10': 6751}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KGv7TpN.jpg
OCR detection done with doctr
left top x of SN: 99.82812499999997
bottom right x of SN: 315.453125
left top x of T/F: 882.40625
bottom right x of T/F: 1248.265625
first t/f detection
fate
((899.8281250000001, 280.546875), (996.3124999999999, 322.109375))
collision happend with box:280.546875 and text:fate solving on the basis of percent match boxes
the current box specification are
True
((920.609375, 341.40625), (994.828125, 375.546875))
text2 i.e the incoming text is the winner
collision happend with box:341.40625 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((913.1875, 408.203125), (996.3124999999999, 437.890625))
text1 i.e the prev text is the winner
collision happend with box:341.40625 and text:True solving on the basis of percent match boxes
the current box specification are
Fase
((920.609375, 480.9375), (990.3749999999999, 510.625))
text2 i.e the incoming text is the winner
collision happend with box:480.9375 and text:Fase solving on the basis of percent match boxes
the current box specification are
FALSE
((908.734375, 567.03125), (991.859375, 604.140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:567.03125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((905.765625, 678.359375), (959.203125, 708.046875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
fate
((899.8281250000001, 280.546875), (996.3124999999999, 322.109375))
collision happend with box:280.546875 and text:fate solving on the basis of percent match boxes
the current box specification are
True
((920.609375, 341.40625), (994.828125, 375.546875))
text2 i.e the incoming text is the winner
collision happend with box:341.40625 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((913.1875, 408.203125), (996.3124999999999, 437.890625))
text1 i.e the prev text is the winner
Fase
((920.609375, 480.9375), (990.3749999999999, 510.625))
FALSE
((908.734375, 567.03125), (991.859375, 604.140625))
FAL
((905.765625, 678.359375), (959.203125, 708.046875))
collision happend with box:678.359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((963.65625, 679.84375), (996.3124999999999, 708.046875))
text1 i.e the prev text is the winner
FALSE
((913.1875, 764.453125), (1002.25, 798.59375))
Fale
((911.703125, 850.546875), (993.3437500000001, 884.6875))
collision happend with box:850.546875 and text:Fale solving on the basis of percent match boxes
the current box specification are
Ltr
((910.2187500000001, 923.28125), (987.4062500000001, 945.546875))
text2 i.e the incoming text is the winner
collision happend with box:923.28125 and text:Ltr solving on the basis of percent match boxes
the current box specification are
TRUE
((917.640625, 955.9375), (1002.25, 990.078125))
text2 i.e the incoming text is the winner
collision happend with box:955.9375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
prediction
((791.46875, 1016.796875), (886.46875, 1040.546875))
text1 i.e the prev text is the winner
collision happend with box:955.9375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
True
((923.578125, 1019.765625), (1003.7343750000001, 1056.875))
text2 i.e the incoming text is the winner
the
((855.296875, 1147.421875), (889.4375, 1172.65625))
collision happend with box:1147.421875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((936.9375, 1120.703125), (1015.609375, 1148.90625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 473, '2': 408, '3': 475, '4': 577, '5': 678, '6': 780, '7': 849, '8': 950, '9': 1018, '10': 1120}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tYiDdZY.jpg
OCR detection done with doctr
left top x of T/F: 5879.76953125
bottom right x of T/F: 7145.919921875001
left top x of SN: 694.9804687499999
bottom right x of SN: 1117.216796875
first t/f detection
TRUE
((5947.90625, 1957.26953125), (6597.099609375, 2218.884765625))
TRUE
((5976.974609375, 2528.947265625), (6606.7890625, 2819.630859375))
FALCE
((5996.353515624999, 3178.140625), (6723.062500000001, 3439.755859375))
TRUE
((6035.111328125, 3759.5078125), (6635.857421875, 4001.744140625))
TRVE
((5996.353515624999, 4243.98046875), (6626.167968749999, 4515.28515625))
FALCE
((6054.490234375001, 4902.86328125), (6732.751953125, 5183.857421875))
or
((5715.359375, 5086.962890625), (5880.080078125, 5203.236328125))
the
((5666.912109375, 5648.951171875), (5899.458984375, 5803.982421875))
collision happend with box:5648.951171875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5996.353515624999, 5590.814453125), (6693.994140625, 5852.4296875))
text2 i.e the incoming text is the winner
TRUE
((6073.869140625, 6210.939453125), (6693.994140625, 6433.796875))
FALSE
((6141.695312499999, 6676.033203125), (6771.509765624999, 6947.337890625))
collision happend with box:6676.033203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((5695.98046875, 6656.654296875), (5928.52734375, 6811.685546875))
text1 i.e the prev text is the winner
TRUE
((6102.9375, 7363.984375), (6752.130859375, 7635.2890625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6946
printing the number dict y_coordinate
{'1': 2121, '2': 2722, '3': 3304, '4': 3904, '5': 4292, '6': 4883, '7': 5668, '8': 6259, '9': 6646, '10': 6946}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xsXKhSL.jpg
OCR detection done with doctr
left top x of SN: 1096.0976562500002
bottom right x of SN: 1498.3789062500002
left top x of T/F: 5580.984375000001
bottom right x of T/F: 6717.15625
first t/f detection
TRUE
((5563.19921875, 2185.765625), (6137.42578125, 2389.5234375))
TRUE
((5581.722656250001, 2667.375), (6137.42578125, 2880.39453125))
FALSE
((5618.769531250001, 3102.67578125), (6192.99609375, 3306.43359375))
FALSE
((5618.769531250001, 3704.6875), (6202.2578125, 3908.4453125))
FALSE
((5665.078125, 4251.12890625), (6211.51953125, 4427.1015625))
FALSE
((5618.769531250001, 4751.26171875), (6220.78125, 4927.234375))
FALSE
((5637.29296875, 5177.30078125), (6239.3046875, 5399.58203125))
TRUE
((5581.722656250001, 5705.21875), (6072.593749999999, 5881.19140625))
TRUE
((5637.29296875, 6084.94921875), (6202.2578125, 6288.70703125))
FALSE
((5711.38671875, 6742.53125), (6294.875, 6946.2890625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2213, '2': 2769, '3': 3130, '4': 3686, '5': 4232, '6': 4788, '7': 5158, '8': 5714, '9': 6094, '10': 6668}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WxtTFL6.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1032.275390625, 417.333984375), (1083.837890625, 462.451171875))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 505.95703125), (1035.498046875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:505.95703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 588.134765625), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:588.134765625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((998.4375, 670.3125), (1033.88671875, 723.486328125))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 884.619140625), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1032.275390625, 417.333984375), (1083.837890625, 462.451171875))
T
((985.546875, 505.95703125), (1035.498046875, 552.685546875))
T
((983.935546875, 588.134765625), (1025.830078125, 628.41796875))
F
((998.4375, 670.3125), (1033.88671875, 723.486328125))
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
T
((987.1582031249999, 884.619140625), (1032.275390625, 923.291015625))
f
((951.708984375, 966.796875), (995.21484375, 1005.46875))
collision happend with box:966.796875 and text:f solving on the basis of percent match boxes
the current box specification are
or
((1001.66015625, 970.01953125), (1083.837890625, 1011.9140625))
text2 i.e the incoming text is the winner
collision happend with box:970.01953125 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1020.99609375, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 578, '4': 679, '5': 781, '6': 883, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : g2XWJ8f.jpg
OCR detection done with doctr
left top x of T/F: 5719.91015625
bottom right x of T/F: 6957.9609375
left top x of SN: 429.25390625000006
bottom right x of SN: 840.7968749999999
first t/f detection
False
((5674.33984375, 2000.53125), (6183.734375, 2222.8125))
True
((5868.8359375, 2593.28125), (6359.707031250001, 2815.5625))
False
((5776.21875, 3352.7421875), (6220.78125, 3575.0234375))
True
((5785.48046875, 3834.3515625), (6359.707031250001, 4065.89453125))
False
((5766.95703125, 4315.9609375), (6276.3515625, 4584.55078125))
False
((5887.359375, 5010.58984375), (6368.968750000001, 5223.609375))
Tyue
((5748.43359375, 5733.00390625), (6248.56640625, 5918.23828125))
True
((5739.171875, 6242.3984375), (6211.51953125, 6464.6796875))
True
((5729.91015625, 6788.83984375), (6248.56640625, 7011.12109375))
Trul
((5766.95703125, 7427.8984375), (6165.2109375, 7668.703125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2065, '2': 2667, '3': 3260, '4': 3862, '5': 4260, '6': 4862, '7': 5658, '8': 6251, '9': 6649, '10': 7446}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eGngzyy.jpg
OCR detection done with doctr
left top x of T/F: 5562.460937500001
bottom right x of T/F: 6763.46484375
left top x of SN: 910.8632812500002
bottom right x of SN: 1322.40625
first t/f detection
A
((6656.08203125, 296.375), (6711.65234375, 361.20703125))
TRUE
((5655.81640625, 2102.41015625), (6248.56640625, 2324.69140625))
TRUE
((5711.38671875, 2648.8515625), (6202.2578125, 2861.87109375))
TRUE
((5646.5546875, 3130.4609375), (6202.2578125, 3362.00390625))
FALSE
((5683.6015625, 3713.94921875), (6230.04296875, 3936.23046875))
TRUE
((5637.29296875, 4315.9609375), (6220.78125, 4538.2421875))
FALSE
((5711.38671875, 4816.09375), (6304.13671875, 5029.11328125))
FALSE
((5711.38671875, 5306.96484375), (6294.875, 5529.24609375))
TRUE
((5692.86328125, 5825.62109375), (6183.734375, 6010.85546875))
TRUE
((5729.91015625, 6297.96875), (6211.51953125, 6510.98828125))
TRUE.
((5665.078125, 6937.02734375), (6276.3515625, 7140.78515625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2287, '2': 2843, '3': 3223, '4': 3788, '5': 4334, '6': 4908, '7': 5279, '8': 5844, '9': 6223, '10': 6798}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eMa8BlA.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6386.406249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2086.21875))
TRUE
((5220.062500000001, 2411.34375), (5933.53125, 2655.1875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5310.375, 3540.25), (5897.406250000001, 3738.9375))
TRUE
((5292.312499999999, 4046.0), (5924.500000000001, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4876.875))
TRVE
((5283.28125, 5346.5), (5834.187499999999, 5572.28125))
FALSE
((5328.437500000001, 5825.15625), (6014.8125, 6032.875))
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
collision happend with box:6348.96875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
the
((4976.21875, 6276.71875), (5192.96875, 6412.1875))
text1 i.e the prev text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2501, '3': 3061, '4': 3630, '5': 4000, '6': 4560, '7': 5319, '8': 5906, '9': 6285, '10': 7062}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XiPBY60.jpg
OCR detection done with doctr
left top x of SN: 478.1640625
bottom right x of SN: 929.9824218749999
left top x of T/F: 5925.785156250001
bottom right x of T/F: 7204.3125
first t/f detection
Fele
((6179.484375, 2118.30859375), (6713.748046875, 2380.75390625))
Tyue
((6123.24609375, 2736.9296875), (6629.390625, 2961.8828125))
False
((6132.619140625, 3355.55078125), (6629.390625, 3580.50390625))
Tyue
((6029.515625000001, 3936.6796875), (6479.421875000001, 4152.259765625))
Trve
((6104.5, 4433.451171875), (6591.8984375, 4620.912109375))
Fose
((6132.619140625, 5098.9375), (6648.13671875, 5361.3828125))
Tue
((6038.888671875, 5923.765625), (6498.16796875, 6111.2265625))
Fale
((6226.349609375, 6411.1640625), (6648.13671875, 6664.236328125))
Fabe
((6151.365234374999, 7020.412109375), (6610.644531249999, 7198.5))
Tsue
((6104.5, 7685.8984375), (6516.914062499999, 7863.986328125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2024, '2': 2643, '3': 3280, '4': 3936, '5': 4320, '6': 4948, '7': 5783, '8': 6411, '9': 6832, '10': 7667}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SevT653.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6856.031250000001
first t/f detection
FALSE
((5752.906249999999, 1824.3125), (6448.3125, 2041.0625))
TRUE
((5743.875, 2420.375), (6367.03125, 2637.125))
FALSE
((5770.96875, 3034.5), (6421.21875, 3251.25))
TRUE
((5716.78125, 3576.375), (6303.812500000001, 3784.09375))
TRUE
((5752.906249999999, 4082.125), (6412.187500000001, 4298.875))
FALSE
((5734.843750000001, 4714.3125), (6385.093750000001, 4922.03125))
TRUE
((5798.0625, 5454.875), (6385.093750000001, 5662.59375))
TRUE
((5816.125000000001, 5969.65625), (6421.21875, 6213.5))
FALSE
((5716.78125, 6601.84375), (6367.03125, 6818.59375))
FALSE
((5770.96875, 7197.90625), (6403.156249999999, 7405.625))
the final dict without editing {'1': False, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['3', '7', '8', '9']
the assigned keys are ['1', '2', '4', '5', '6', '10']
['1', '2', '4', '5', '6', '10', '1', '2', '4', '5', '6', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2447, '4': 3648, '5': 4055, '6': 4651, '10': 7306}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hJTSb28.jpg
OCR detection done with doctr
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
left top x of T/F: 5625.5
bottom right x of T/F: 6874.093749999999
first t/f detection
FALSE
((5680.656250000001, 1878.5), (6123.1875, 2095.25))
TRUE
((5536.156249999999, 2411.34375), (5960.625, 2637.125))
TRUE
((5572.281250000001, 4696.25), (6014.8125, 4913.0))
FALSE
((5626.468750000001, 3079.65625), (6123.1875, 3287.375))
TRJ6
((5554.21875, 3558.3125), (5951.593750000001, 3738.9375))
TRIE
((5608.40625, 4036.96875), (6123.1875, 4262.75))
TROE
((5554.21875, 5373.59375), (5942.562499999999, 5554.21875))
TRUE
((5554.21875, 5915.46875), (5951.593750000001, 6105.125))
TRUE
((5572.281250000001, 6475.40625), (5996.749999999999, 6656.03125))
TROE
((5563.249999999999, 7107.59375), (5924.500000000001, 7279.1875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2375, '3': 2962, '4': 3558, '5': 3937, '6': 4533, '7': 5310, '8': 5897, '9': 6285, '10': 7053}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ROdYDt2.jpg
OCR detection done with doctr
left top x of SN: 806.2207031250001
bottom right x of SN: 1229.919921875
left top x of T/F: 5747.697265625
bottom right x of T/F: 6904.375
first t/f detection
dorue
((5823.30859375, 2015.205078125), (6263.841796875, 2249.53125))
daha
((5757.697265625, 2530.72265625), (6160.73828125, 2821.287109375))
Jalas
((5720.205078125, 3130.59765625), (6104.5, 3374.296875))
drue
((5804.5625, 3608.623046875), (6160.73828125, 3861.6953125))
braole
((5720.205078125, 4039.783203125), (6610.644531249999, 4302.228515625))
Jrwe
((5720.205078125, 4630.28515625), (6151.365234374999, 4883.357421875))
dosue
((5738.951171875, 5352.009765625), (6179.484375, 5633.201171875))
Sorut
((5738.951171875, 6476.775390625), (6151.365234374999, 6711.1015625))
Jrue
((5776.443359375, 7095.396484375), (6188.857421875, 7320.349609375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 7179, '2': 2521, '3': 3083, '4': 3655, '5': 4030, '6': 4611, '7': 5380}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vHWNFJ2.jpg
OCR detection done with doctr
left top x of T/F: 5670.656250000001
bottom right x of T/F: 6937.312500000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5798.0625, 1986.875), (6358.000000000001, 2212.65625))
FALSE
((5870.312500000001, 2591.96875), (6466.375000000001, 2790.65625))
TRVE
((5897.406250000001, 2790.65625), (6348.968749999999, 2971.28125))
FALSE
((5861.281249999999, 3188.03125), (6403.156249999999, 3413.8125))
FALSE
((5906.4375, 3711.84375), (6457.343749999999, 3919.5625))
FALSE
((5852.25, 4199.53125), (6457.343749999999, 4443.375))
FALSE
((5834.187499999999, 4949.125), (6502.5, 5202.0))
TRUE
((5897.406250000001, 5680.65625), (6394.125, 5951.59375))
TRUE
((5888.374999999999, 6213.5), (6484.437499999999, 6466.375))
TRVE
((5924.500000000001, 6791.5), (6439.281250000001, 7017.28125))
TRUE
((5879.34375, 7450.78125), (6439.281250000001, 7676.5625))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2610, '3': 3188, '4': 3811, '5': 4217, '6': 4831, '7': 5635, '8': 6240, '9': 6637, '10': 7441}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OsPw2qc.jpg
OCR detection done with doctr
left top x of T/F: 5182.96875
bottom right x of T/F: 6386.406249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 736.0625
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2510, '3': 3061, '4': 3630, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jzWkUcH.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fale
((5463.906250000001, 2519.71875), (5816.125000000001, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5400.687499999999, 3693.78125), (5743.875, 3946.65625))
Fabe
((5436.812500000001, 4271.78125), (5870.312500000001, 4506.59375))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
True
((5418.75, 5373.59375), (5816.125000000001, 5563.25))
Trve
((5436.812500000001, 5852.25), (5816.125000000001, 6105.125))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
Tre
((5373.593749999999, 7062.4375), (5816.125000000001, 7324.34375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3621, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DyEbp6j.jpg
OCR detection done with doctr
left top x of SN: 87.544921875
bottom right x of SN: 322.96484375
left top x of T/F: 1179.390625
bottom right x of T/F: 1617.720703125
first t/f detection
faly
((1220.4257812500002, 554.19921875), (1366.734375, 649.521484375))
collision happend with box:554.19921875 and text:faly solving on the basis of percent match boxes
the current box specification are
fabre
((1220.4257812500002, 684.990234375), (1331.265625, 758.14453125))
text2 i.e the incoming text is the winner
collision happend with box:684.990234375 and text:fabre solving on the basis of percent match boxes
the current box specification are
Tauu
((1213.775390625, 806.9140625), (1349.0, 900.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:806.9140625 and text:Tauu solving on the basis of percent match boxes
the current box specification are
Ruv
((1229.29296875, 933.271484375), (1366.734375, 1024.16015625))
text1 i.e the prev text is the winner
Truu
((1220.4257812500002, 1077.36328125), (1360.083984375, 1168.251953125))
collision happend with box:1077.36328125 and text:Truu solving on the basis of percent match boxes
the current box specification are
Tul
((1204.908203125, 1194.853515625), (1342.349609375, 1272.44140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1194.853515625 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1191.6074218749998, 1305.693359375), (1340.1328125, 1396.58203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
faly
((1220.4257812500002, 554.19921875), (1366.734375, 649.521484375))
fabre
((1220.4257812500002, 684.990234375), (1331.265625, 758.14453125))
Tauu
((1213.775390625, 806.9140625), (1349.0, 900.01953125))
Ruv
((1229.29296875, 933.271484375), (1366.734375, 1024.16015625))
Truu
((1220.4257812500002, 1077.36328125), (1360.083984375, 1168.251953125))
Tul
((1204.908203125, 1194.853515625), (1342.349609375, 1272.44140625))
True
((1191.6074218749998, 1305.693359375), (1340.1328125, 1396.58203125))
folw
((1213.775390625, 1416.533203125), (1340.1328125, 1496.337890625))
Folue
((1209.341796875, 1534.0234375), (1337.916015625, 1613.828125))
True
((1200.474609375, 1709.150390625), (1353.43359375, 1808.90625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 571, '2': 709, '3': 800, '4': 939, '5': 1075, '6': 1212, '7': 1303, '8': 1443, '9': 1536, '10': 1673}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VrcsNov.jpg
OCR detection done with doctr
left top x of SN: 699.4296875
bottom right x of SN: 1108.140625
left top x of T/F: 5578.1015625
bottom right x of T/F: 6748.6875
first t/f detection
FALSE
((5697.8828125, 1912.0234375), (6219.34375, 2085.84375))
TRUE
((5679.5859375, 2451.78125), (6164.453125, 2671.34375))
FALSE
((5761.921875, 3000.6875), (6347.421875, 3220.25))
TRUE
((5752.7734375, 3513.0), (6210.1953125, 3695.96875))
TRUG
((5615.546875, 3942.9765625), (6063.8203125, 4125.9453125))
FALSE
((5679.5859375, 4601.6640625), (6127.859375, 4784.6328125))
TRUS
((5716.1796875, 5232.90625), (6210.1953125, 5415.875))
TRUG
((5615.546875, 5745.21875), (6109.562499999999, 5928.1875))
TRUE
((5661.289062499999, 6175.1953125), (6127.859375, 6385.609375))
TRVE
((5743.625, 6843.03125), (6210.1953125, 7007.703125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1857, '2': 2415, '3': 2973, '4': 3540, '5': 3915, '6': 4473, '7': 5214, '8': 5772, '9': 6147, '10': 6879}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6jHuOGj.jpg
rotation started
['bE', 'OT', '1', '€', 'N', 'L1', '2', 'I', 'E', 'I', '2', 'E', 'E', 'a', 'LH', 'I', '2', 'I', 'I', 'E', '€', '8', 'E', '8', 'I', '8', 'a', 'tn', 'I', 'I', 'E', 'I', 'I', 'f', 'I', 'E', 'E', 'I', '8', 'E', 'E', 'a', 'a', 'I', '6', 'I', 'I', 'I', '8', 'I', 'f', '2', 'E', 'E', 'it', '3', 'I', 'I', 'I', 'E', 'I', 'E', 'E', 'it', 'I', 'E', '%', 'E', 'Q', 'a', 'I', 'I', 'I', '2', 'B', '8', 'it', 'I', 'I', 'I', 'of', 'I', 'I', 'I', 'a', '2', '1', '8', '-', '2', 'E', 'I', 'E', 'I', 'E', '1', 'E', 'E', 'I', '€', 'E', 'I', '8', 'I', 'E', '8', 't', 'I', 'I', 'I', 'E', 'I', 'E', '-', 'I', 'of', '8', 'I', '1', 'E', 'I', 'E', 'p', '2', 'I', 'I', ':', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'p', 't', '€', 'E', '€', '9', 'f', 'I', 'E', 'I', 'E', 'E', '8', 'E', 'I', 'I', 'I', 'it', 'I', 'E', 'I', 'I', '1', 'E', 'F', 'I', 'I', '7', 'o', '00', '-', 'o', 'E', 'A', 's', 'a', 'E', '-', 'E', '9', 'E', 'E', 'i', 'I', 'E', 'E', 'I', 'I', 'I', 'I', 'I', 'E', 'I', 'I', 'E', 'E', 'tn', 'E', 'I', 'E', '2', 'e', 'B', '6', 'I', 'it', 'E', '€', 'm', '2', 'I', 'I', '-', '-', ':', 'à', 'à', '-', ':', '2', 'I']
rotation started
['"egep', 'uoosun', 'mou', '07', 'ITOM', 'azirelaue8', 'qou', 'op', '7e47', 'egep', 'Surureng', 'aua', 'UI', 'sTregop', 'JO', 'OSIOU', 'oytoeds', 'angdes', '07', 'UIeeT', 'Keur', 'lapour', 'au7', 'Se', "'SosenI", 'a0yL', '-Ul', 'SurnyIOno', 'Jo', 'YSII', 'au7', "'WAS", 'ur', 'regeurered', 'D', 'ay4', 'Jo', 'anTeA', 'y814', 'B', 'YAIM', 'OT', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Ouo-SA-QUO', 'Sursn', '3S1H', 'f', 'uomgorpard', 'B', 'Suryeur', "'sossero", 'Jo', 'poqunu', 'a8.rel', 'B', 'YAIM', 'suarqoId', 'sseporamu', 'JOH', '6', '"ooeds', '[eurstIo', 'au4', 'UI', 'JeQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsipap', 'OUL', '8', '35145', "'sapou", 'Jo', 'poqunu', 'o47', '07', 'Teuorgiodord', '3031', 'Atppaup', 'SI', 'OOIL', 'UOISIDOC', 'au4', 'uI', 'uororpaad', 'B', 'Suryeur', 'IOJ', 'pambar', 'OUIL', 'OUL', 'L', '25195', '"uornquasip', 'uerssneD', 'B', 'SieMre', 'SI', 'suornquasip', 'uerssneD', 'OM7', 'Jo', 'OINQXIUI', 'V', '9', '90y)', '-OId', 'Loamgoq', 'gord', 'e', 'SI', 'OAIO', '(DoH)', 'orsutegpe.eud', 'Surgeiedo', 'IOAIODOY', 'OUL', 'S', '2071', 'SI', 'queosop', 'querpe.18', 'OTIYM', "'s2481OM", 'ay7', 'agepdn', '09', 'pasn', 'SI', 'uome@odoxdypeg', '4', '703L', 'Teuorsuteuup-p', 'Aue', 'IOJ', 'OLIOUI', 'aourensip', 'PITEA', 'B', 'SI', "(@'z/lgumpusgauson", '-', 'I', '&', 'TTBDOH', 'pue', 'UOISIO', '"YIOMIOU', '[emou', 'ay4', 'UI', 'squerpeIs', 'ay4', 'aanduoo', '07', 'pasn', ':f', 'pue', 'I', 'SIO100A', '"IayIsseo', 'meQUIT-uou', 'B', 'SI', 'NNY', '2', '203L', 'queurfordap', '1a81el', 'yonur', 'SI', 'NNY', 'JOJ', 'queutemmbal', 'a8eIoQs', 'au7', 'SeordoL', 'I', '3031', 'JOJ', 'WAS', 'ueya', 'queuragens', 'NS', 'aSTVA/nHL', ':0104', 'Jaqunu', 'ITO.I', 'mor', 'BALIM', 'E0', 'OTU', 'BALIM', '(sad', 'OT)', '6', 'Teaideo', 'UI', 'ISTVI', 'IO', 'ANUL', 'Supumpuey', 'meop', 'pue', 'SI09101']
rotation started
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/6jHuOGj.jpg: {{function_node __wrapped__ScaleAndTranslate_device_/job:localhost/replica:0/task:0/device:CPU:0}} t must be 1-dimensional[32,128] [Op:ScaleAndTranslate] name: 
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nWCK5mU.jpg
OCR detection done with doctr
left top x of T/F: 5488.3671875
bottom right x of T/F: 6781.98828125
left top x of SN: 540.3945312499998
bottom right x of SN: 961.1992187500001
first t/f detection
TRUE
((5683.6015625, 2213.55078125), (6183.734375, 2389.5234375))
TRUE
((5665.078125, 2769.25390625), (6137.42578125, 2935.96484375))
FALSE
((5637.29296875, 3306.43359375), (6294.875, 3482.40625))
TRUE
((5628.031250000001, 3889.921875), (6137.42578125, 4056.6328125))
FALSE
((5646.5546875, 4510.45703125), (6230.04296875, 4686.4296875))
FALSE
((5590.984375000001, 5019.8515625), (6118.902343749999, 5205.0859375))
FALSE
((5553.9375, 5510.72265625), (6072.593749999999, 5677.43359375))
TRVE
((5553.9375, 5983.0703125), (6081.855468749999, 6168.3046875))
TRU
((5600.246093750001, 6464.6796875), (5970.71484375, 6649.9140625))
TRUE
((5563.19921875, 7131.5234375), (6128.1640625, 7307.49609375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2269, '2': 2861, '3': 3260, '4': 3862, '5': 4464, '6': 5066, '7': 5464, '8': 6066, '9': 6464, '10': 7066}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hSIB9dp.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6585.093750000001
left top x of SN: 456.7187499999999
bottom right x of SN: 862.5000000000001
first t/f detection
TBNE
((5427.781249999999, 1697.875), (6050.937499999999, 1905.59375))
FALSE
((5445.84375, 2248.78125), (6032.875000000001, 2456.5))
FALS
((5500.03125, 1914.625), (6014.8125, 2086.21875))
FALSE
((5509.062499999999, 2808.71875), (6213.499999999999, 3016.4375))
TRUE
((5436.812500000001, 3350.59375), (6105.124999999999, 3549.28125))
TRUE
((5463.906250000001, 5220.0625), (6050.937499999999, 5391.65625))
TRU
((5491.000000000001, 5716.78125), (5987.71875, 5888.375))
TRUE
((5491.000000000001, 6258.65625), (6204.46875, 6475.40625))
FALSE
((5554.21875, 6917.9375), (6258.65625, 7116.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2339, '3': 2890, '4': 3449, '5': 3820, '6': 4389, '7': 5147, '8': 5734, '9': 6132, '10': 6908}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AUFftAQ.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6738.624999999999
left top x of SN: 285.125
bottom right x of SN: 699.9375000000001
first t/f detection
TRUE
((5545.187500000001, 1625.625), (6186.406249999999, 1878.5))
TRUE
((5554.21875, 2185.5625), (6195.437500000001, 2483.59375))
FALCE
((5572.281250000001, 2844.84375), (6285.75, 3097.71875))
TRUE
((5590.343749999999, 3422.84375), (6195.437500000001, 3666.6875))
TRUE
((5554.21875, 3901.5), (6168.343750000001, 4172.4375))
FALSE
((5599.375000000001, 4569.8125), (6267.687499999999, 4831.71875))
TRUE
((5536.156249999999, 5256.1875), (6204.46875, 5509.0625))
TRUE
((5590.343749999999, 5879.34375), (6204.46875, 6078.03125))
FALSE
((5644.531249999999, 6339.9375), (6267.687499999999, 6601.84375))
TRUE
((5599.375000000001, 7026.3125), (6240.593749999999, 7279.1875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2393, '3': 2980, '4': 3567, '5': 3973, '6': 4560, '7': 5346, '8': 5924, '9': 6312, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : U1tXBng.jpg
OCR detection done with doctr
left top x of SN: 217.45507812499994
bottom right x of SN: 435.34667968749994
left top x of T/F: 1003.6396484375
bottom right x of T/F: 1368.5009765625
first t/f detection
FALSE
((1026.8193359375, 472.8212890625), (1112.4873046875, 504.123046875))
collision happend with box:472.8212890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((1015.287109375, 532.1298828125), (1109.1923828125, 570.021484375))
text2 i.e the incoming text is the winner
collision happend with box:532.1298828125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((1008.6972656249999, 614.5029296875), (1087.775390625, 645.8046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:614.5029296875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((1007.0498046874999, 741.357421875), (1079.5380859375, 774.306640625))
text1 i.e the prev text is the winner
TRVE
((1005.40234375, 805.6083984375), (1077.890625, 840.205078125))
collision happend with box:805.6083984375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((995.517578125, 912.693359375), (1049.8837890625, 947.2900390625))
text2 i.e the incoming text is the winner
collision happend with box:912.693359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1038.3515625, 914.3408203125), (1079.5380859375, 943.9951171875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((1026.8193359375, 472.8212890625), (1112.4873046875, 504.123046875))
collision happend with box:472.8212890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((1015.287109375, 532.1298828125), (1109.1923828125, 570.021484375))
text2 i.e the incoming text is the winner
TRUE
((1008.6972656249999, 614.5029296875), (1087.775390625, 645.8046875))
TRVE
((1007.0498046874999, 741.357421875), (1079.5380859375, 774.306640625))
collision happend with box:741.357421875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((1005.40234375, 805.6083984375), (1077.890625, 840.205078125))
text2 i.e the incoming text is the winner
FAL
((995.517578125, 912.693359375), (1049.8837890625, 947.2900390625))
collision happend with box:912.693359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1038.3515625, 914.3408203125), (1079.5380859375, 943.9951171875))
text1 i.e the prev text is the winner
FALSE
((990.5751953124999, 998.361328125), (1077.890625, 1031.310546875))
FAL
((992.22265625, 1088.9716796875), (1046.5888671875, 1120.2734375))
collision happend with box:1088.9716796875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1044.94140625, 1090.619140625), (1076.2431640625, 1120.2734375))
text1 i.e the prev text is the winner
collision happend with box:1088.9716796875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((990.5751953124999, 1156.517578125), (1072.9482421875, 1187.8193359375))
true and false collision so given priority to text2 which is the incoming text
TR*F
((988.927734375, 1260.3076171875), (1066.3583984375, 1291.609375))
collision happend with box:1260.3076171875 and text:TR*F solving on the basis of percent match boxes
the current box specification are
FALSE
((988.927734375, 1316.3212890625), (1072.9482421875, 1347.623046875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are ['1', '4']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9', '10']
['2', '3', '5', '6', '7', '8', '9', '10', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1172, '2': 530, '3': 599, '5': 813, '6': 920, '7': 991, '8': 1102, '10': 1280, '1': 230}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zQshA2F.jpg
OCR detection done with doctr
left top x of SN: 571.3515625000001
bottom right x of SN: 989.2109375000001
left top x of T/F: 5687.8828125
bottom right x of T/F: 6867.6171875
first t/f detection
TRUE
((5807.6640625, 2094.9921875), (6301.6796875, 2268.8125))
TRUE
((5707.031250000001, 2589.0078125), (6219.34375, 2762.828125))
TRUE
((5725.328125, 3201.953125), (6310.828125000001, 3375.7734375))
FALSE
((5697.8828125, 3760.0078125), (6210.1953125, 3933.828125))
FALSE
((5679.5859375, 4162.5390625), (6274.234375, 4382.1015625))
FALS
((5679.5859375, 4857.8203125), (6109.562499999999, 5040.7890625))
TRUE
((5633.84375, 5516.5078125), (6182.75, 5690.328125))
TRUE
((5642.9921875, 6083.7109375), (6146.15625, 6266.6796875))
TRUE
((5670.4375, 6596.0234375), (6265.085937499999, 6806.4375))
FALSE
((5716.1796875, 6843.03125), (6228.4921875, 7026.0))
FALSE
((5688.734375, 7218.1171875), (6210.1953125, 7391.9375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2021, '2': 2607, '3': 3192, '4': 3787, '5': 4171, '6': 4766, '7': 5553, '8': 6138, '9': 6541, '10': 7318}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R4Lqvlx.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:753.087890625 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1418.40625, 895.69921875), (1591.041015625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:895.69921875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tiul
((1420.9082031250002, 1040.8125), (1581.033203125, 1158.404296875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1040.8125 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tul
((1433.41796875, 1198.435546875), (1591.041015625, 1306.01953125))
text2 i.e the incoming text is the winner
collision happend with box:1198.435546875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
falye
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
Trul
((1418.40625, 895.69921875), (1591.041015625, 1010.7890625))
Tiul
((1420.9082031250002, 1040.8125), (1581.033203125, 1158.404296875))
Tul
((1433.41796875, 1198.435546875), (1591.041015625, 1306.01953125))
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
Falye
((1420.9082031250002, 1903.986328125), (1588.5390625, 2009.068359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1468, '8': 1631, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fWen73r.jpg
OCR detection done with doctr
left top x of T/F: 5599.507812500001
bottom right x of T/F: 6800.51171875
left top x of SN: 836.76953125
bottom right x of SN: 1248.3124999999998
first t/f detection
FALSE
((5581.722656250001, 2065.36328125), (6128.1640625, 2287.64453125))
TRUE
((5600.246093750001, 2658.11328125), (6072.593749999999, 2843.34765625))
FALSE
((5618.769531250001, 3167.5078125), (6202.2578125, 3389.7890625))
FALSE
((5572.460937500001, 3750.99609375), (6211.51953125, 3964.015625))
TRUE
((5563.19921875, 4334.484375), (6091.117187499999, 4519.71875))
TRUE
((5563.19921875, 4871.6640625), (6091.117187499999, 5056.8984375))
FALSE
((5572.460937500001, 5297.703125), (6128.1640625, 5510.72265625))
TRUE
((5581.722656250001, 5816.359375), (6109.640624999999, 6029.37890625))
FALSE
((5563.19921875, 6260.921875), (6137.42578125, 6473.94140625))
TRVE
((5581.722656250001, 6964.8125), (6054.070312499999, 7187.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2759, '3': 3139, '4': 3713, '5': 4278, '6': 4853, '7': 5242, '8': 5807, '9': 6186, '10': 6779}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jiooheu.jpg
OCR detection done with doctr
left top x of SN: 99.599609375
bottom right x of SN: 323.10546875
left top x of T/F: 956.2109375
bottom right x of T/F: 1338.623046875
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((972.6562500000001, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((966.2109375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1014.5507812499999, 791.162109375), (1096.728515625, 837.890625))
text1 i.e the prev text is the winner
False
((972.6562500000001, 873.33984375), (1070.947265625, 912.01171875))
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
Trve
((972.6562500000001, 965.185546875), (1056.4453125, 1005.46875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((972.6562500000001, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
True
((966.2109375, 689.6484375), (1054.833984375, 729.931640625))
Trve
((1014.5507812499999, 791.162109375), (1096.728515625, 837.890625))
False
((972.6562500000001, 873.33984375), (1070.947265625, 912.01171875))
Trve
((972.6562500000001, 965.185546875), (1056.4453125, 1005.46875))
False
((972.6562500000001, 1050.5859375), (1062.890625, 1089.2578125))
False
((974.267578125, 1135.986328125), (1058.056640625, 1176.26953125))
False
((990.3808593750001, 1239.111328125), (1093.505859375, 1284.228515625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 584, '2': 509, '3': 578, '4': 681, '5': 784, '6': 889, '8': 1061, '9': 1129, '10': 1232}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kc3HJAc.jpg
OCR detection done with doctr
left top x of T/F: 5868.09765625
bottom right x of T/F: 7059.83984375
left top x of SN: 808.984375
bottom right x of SN: 1220.52734375
first t/f detection
TRbE
((6035.546875, 2093.1484375), (6591.25, 2269.12109375))
TROE
((5961.453125, 2667.375), (6544.94140625, 2880.39453125))
FALSE
((6017.0234375, 2871.1328125), (6554.203125, 3084.15234375))
FALSE
((5924.40625, 3297.171875), (6581.98828125, 3473.14453125))
TROE
((5859.57421875, 3880.66015625), (6470.84765625, 4084.41796875))
FALSE
((5915.14453125, 4325.22265625), (6526.41796875, 4528.98046875))
TROE
((5859.57421875, 4908.7109375), (6396.75390625, 5093.9453125))
TROE
((5905.8828125, 5603.33984375), (6424.5390625, 5816.359375))
TRUE
((5878.09765625, 6149.78125), (6387.4921875, 6335.015625))
FALSE
((5942.9296875, 6594.34375), (6554.203125, 6807.36328125))
TROE
((5896.62109375, 7316.7578125), (6415.27734375, 7501.9921875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2204, '2': 2769, '3': 3324, '4': 3899, '5': 4278, '6': 4853, '7': 5631, '8': 6214, '9': 6612, '10': 7409}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OKJ3j3G.jpg
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
left top x of T/F: 5517.125
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5527.125, 2104.28125), (6041.90625, 2321.03125))
TRUE
((5536.156249999999, 2646.15625), (6078.031249999999, 2862.90625))
FALSE
((5581.3125, 3233.1875), (6195.437500000001, 3449.9375))
TRUE
((5545.187500000001, 3729.90625), (6114.156250000001, 3937.625))
TRUE
((5572.281250000001, 4208.5625), (6150.28125, 4425.3125))
FALSE
((5572.281250000001, 4876.875), (6213.499999999999, 5084.59375))
TRUE
((5545.187500000001, 5599.375), (6105.124999999999, 5816.125))
TRUE
((5563.249999999999, 6050.9375), (6141.250000000001, 6258.65625))
FALSE
((5572.281250000001, 6610.875), (6123.1875, 6818.59375))
TRUE
((5563.249999999999, 7206.9375), (6096.09375, 7414.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2591, '3': 3169, '4': 3747, '5': 4127, '6': 4705, '7': 5472, '8': 6041, '9': 6430, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 89atndp.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 663.8124999999999
left top x of T/F: 5679.6875
bottom right x of T/F: 6955.374999999999
first t/f detection
Faye
((5942.562499999999, 1905.59375), (6439.281250000001, 2167.5))
True
((5852.25, 2537.78125), (6394.125, 2754.53125))
False
((5897.406250000001, 3160.9375), (6376.062499999999, 3377.6875))
True
((5807.093749999999, 3738.9375), (6231.5625, 3919.5625))
Tave
((5879.34375, 4217.59375), (6367.03125, 4425.3125))
Fose
((5915.468749999999, 4913.0), (6403.156249999999, 5138.78125))
Toue
((5825.15625, 5716.78125), (6276.718750000001, 5897.40625))
False.
((6014.8125, 6213.5), (6475.40625, 6439.28125))
Falye
((5942.562499999999, 6818.59375), (6394.125, 6990.1875))
Tove
((5888.374999999999, 7468.84375), (6303.812500000001, 7649.46875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1887, '2': 2510, '3': 3133, '4': 3766, '5': 4181, '6': 4804, '7': 5644, '8': 6276, '9': 6701, '10': 7532}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8e9QLg4.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
collision happend with box:1003.734375 and text:Tisr solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
text1 i.e the prev text is the winner
Tue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
collision happend with box:1232.328125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Fale
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
folre
((1121.890625, 629.671875), (1244.5, 714.875))
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
Tue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Fale
((1142.671875, 1332.078125), (1244.5, 1398.578125))
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cODChJY.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6756.6875
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5472.9375, 2528.75), (5816.125000000001, 2727.4375))
Trve
((5418.75, 3088.6875), (5834.187499999999, 3332.53125))
Tre
((5391.65625, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5346.499999999999, 4822.6875), (5716.78125, 5039.4375))
Trve
((5400.687499999999, 5355.53125), (5825.15625, 5572.28125))
Trve
((5418.75, 5843.21875), (5825.15625, 6114.15625))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
Tre
((5382.625000000001, 7080.5), (5807.093749999999, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3621, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : d698jqy.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
F
((998.4375, 670.3125), (1033.88671875, 725.09765625))
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1019.384765625, 783.10546875), (1059.66796875, 820.166015625))
text2 i.e the incoming text is the winner
collision happend with box:783.10546875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 886.23046875), (1027.44140625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:886.23046875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1022.607421875, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['3', '7']
the assigned keys are ['1', '2', '4', '5', '6', '8', '9', '10']
['1', '2', '4', '5', '6', '8', '9', '10', '1', '2', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 407, '2': 509, '4': 683, '5': 783, '6': 881, '8': 1057, '9': 1129, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : seedZky.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6458.65625
left top x of SN: 583.15625
bottom right x of SN: 988.9374999999999
first t/f detection
TRVE
((5418.75, 1923.65625), (5870.312500000001, 2104.28125))
TRUE
((5418.75, 2564.875), (5816.125000000001, 2700.34375))
FALSE
((5454.874999999999, 2962.25), (5987.71875, 3188.03125))
FALSE
((5445.84375, 3585.40625), (5897.406250000001, 3757.0))
FALS
((5472.9375, 4208.5625), (5834.187499999999, 4380.15625))
TRUE
((5409.718750000001, 4768.5), (5861.281249999999, 4931.0625))
FALSE
((5400.687499999999, 5247.15625), (5897.406250000001, 5409.71875))
FALSE
((5536.156249999999, 5734.84375), (5996.749999999999, 5915.46875))
TRUG
((5400.687499999999, 6168.34375), (5852.25, 6339.9375))
TRUE
((5463.906250000001, 6863.75), (5897.406250000001, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2691, '3': 3061, '4': 3630, '5': 4190, '6': 4759, '7': 5129, '8': 5689, '9': 6069, '10': 6647}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DrHXuVC.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/DrHXuVC.jpg: Tensor's shape (1, 32, 194, 3) is not compatible with supplied shape [1, 32, 128, 3].
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jVAcbJd.jpg
OCR detection done with doctr
left top x of SN: 69.88476562500001
bottom right x of SN: 319.939453125
left top x of T/F: 1390.892578125
bottom right x of T/F: 1873.60546875
first t/f detection
Faly
((1405.896484375, 610.4765625), (1591.041015625, 738.076171875))
collision happend with box:610.4765625 and text:Faly solving on the basis of percent match boxes
the current box specification are
falee
((1428.4140624999998, 748.083984375), (1593.54296875, 845.66015625))
text2 i.e the incoming text is the winner
collision happend with box:748.083984375 and text:falee solving on the basis of percent match boxes
the current box specification are
Trud
((1423.41015625, 903.205078125), (1583.53515625, 1008.287109375))
text2 i.e the incoming text is the winner
collision happend with box:903.205078125 and text:Trud solving on the basis of percent match boxes
the current box specification are
Tiur
((1418.40625, 1043.314453125), (1581.033203125, 1158.404296875))
text2 i.e the incoming text is the winner
collision happend with box:1043.314453125 and text:Tiur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1198.435546875 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Faly
((1405.896484375, 610.4765625), (1591.041015625, 738.076171875))
falee
((1428.4140624999998, 748.083984375), (1593.54296875, 845.66015625))
Trud
((1423.41015625, 903.205078125), (1583.53515625, 1008.287109375))
Tiur
((1418.40625, 1043.314453125), (1581.033203125, 1158.404296875))
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
Falre
((1415.904296875, 1478.654296875), (1588.5390625, 1583.736328125))
Falw
((1430.916015625, 1613.759765625), (1591.041015625, 1698.826171875))
False
((1423.41015625, 1743.861328125), (1583.53515625, 1848.943359375))
Falye
((1418.40625, 1903.986328125), (1583.53515625, 2011.5703125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 893, '2': 775, '3': 880, '4': 1050, '5': 1200, '6': 1368, '7': 1468, '8': 1628, '9': 1738, '10': 1898}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gWKDGZp.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 333.1796875
left top x of T/F: 953.8671875
bottom right x of T/F: 1338.578125
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text1 i.e the prev text is the winner
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Tauls
((1038.9765625, 592.7109375), (1140.2109375, 648.2265625))
text2 i.e the incoming text is the winner
collision happend with box:592.7109375 and text:Tauls solving on the basis of percent match boxes
the current box specification are
Bul
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
text1 i.e the prev text is the winner
loue
((968.765625, 798.4453125), (1083.0625, 853.9609375))
collision happend with box:798.4453125 and text:loue solving on the basis of percent match boxes
the current box specification are
pul
((976.9296875000001, 883.3515625), (1094.4921875, 929.0703125))
text2 i.e the incoming text is the winner
collision happend with box:883.3515625 and text:pul solving on the basis of percent match boxes
the current box specification are
Tque
((1029.1796875, 966.625), (1145.109375, 1018.875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text1 i.e the prev text is the winner
Tauls
((1038.9765625, 592.7109375), (1140.2109375, 648.2265625))
Bul
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
loue
((968.765625, 798.4453125), (1083.0625, 853.9609375))
pul
((976.9296875000001, 883.3515625), (1094.4921875, 929.0703125))
Tque
((1029.1796875, 966.625), (1145.109375, 1018.875))
bue
((983.4609375, 1056.4296875), (1078.1640625, 1111.9453125))
fre
((991.625, 1156.03125), (1073.265625, 1198.484375))
sue
((991.625, 1278.4921875), (1074.8984375, 1329.109375))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 427, '2': 530, '3': 599, '4': 702, '5': 804, '6': 906, '7': 974, '8': 1077, '9': 1146, '10': 1249}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gaFls3o.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6485.75
left top x of SN: 718.625
bottom right x of SN: 1115.375
first t/f detection
Toe
((5572.281250000001, 2312.0), (6087.062500000001, 2483.59375))
False
((5509.062499999999, 2718.40625), (5888.374999999999, 2908.0625))
True
((5599.375000000001, 3242.21875), (6141.250000000001, 3468.0))
false
((5463.906250000001, 3811.1875), (5897.406250000001, 4036.96875))
Tnve
((5481.968749999999, 4452.40625), (5951.593750000001, 4614.96875))
Fabe
((5454.874999999999, 4903.96875), (5843.218750000001, 5093.625))
False
((5427.781249999999, 5319.40625), (5870.312500000001, 5545.1875))
Fale
((5500.03125, 5780.0), (5960.625, 5987.71875))
Tave
((5454.874999999999, 6240.59375), (5879.34375, 6457.34375))
True
((5400.687499999999, 6863.75), (5852.25, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2871, '3': 3242, '4': 3784, '5': 4335, '6': 4885, '7': 5247, '8': 5807, '9': 6177, '10': 6755}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HS8kvmW.jpg
OCR detection done with doctr
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6386.406249999999
left top x of SN: 926.3437500000001
bottom right x of SN: 1323.0937500000002
first t/f detection
TRVE
((5310.375, 2149.4375), (5789.031250000001, 2330.0625))
TRVE
((5292.312499999999, 2637.125), (5770.96875, 2808.71875))
FALJE
((5283.28125, 3115.78125), (5734.843750000001, 3278.34375))
FALSE
((5301.343750000001, 3648.625), (5779.999999999999, 3820.21875))
FALJE
((5265.218749999999, 4226.625), (5770.96875, 4398.21875))
FALIE
((5274.250000000001, 4741.40625), (5770.96875, 4903.96875))
FALSE
((5247.156250000001, 5165.875), (5725.812499999999, 5373.59375))
TRVE
((5202.0, 5653.5625), (5644.531249999999, 5861.28125))
TRVE
((5265.218749999999, 6096.09375), (5743.875, 6267.6875))
TRVE
((5202.0, 6674.09375), (5635.5, 6881.8125))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 3097, '2': 2763, '3': 3097, '4': 3612, '5': 4127, '6': 4651, '7': 5003, '8': 5518, '9': 5870, '10': 6421}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GgtAhBF.jpg
OCR detection done with doctr
left top x of SN: 112.35937500000003
bottom right x of SN: 333.1796875
left top x of T/F: 970.1953125
bottom right x of T/F: 1351.640625
first t/f detection
F
((980.1953125, 429.4296875), (1016.1171875, 462.0859375))
collision happend with box:429.4296875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1042.2421875, 419.6328125), (1091.2265625, 468.6171875))
text2 i.e the incoming text is the winner
collision happend with box:419.6328125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((996.5234375000001, 507.8046875), (1047.140625, 558.421875))
text2 i.e the incoming text is the winner
collision happend with box:507.8046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((991.625, 592.7109375), (1037.34375, 635.1640625))
text2 i.e the incoming text is the winner
collision happend with box:592.7109375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1011.21875, 674.3515625), (1047.140625, 728.234375))
text2 i.e the incoming text is the winner
collision happend with box:674.3515625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1030.8125, 785.3828125), (1078.1640625, 826.203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((980.1953125, 429.4296875), (1016.1171875, 462.0859375))
collision happend with box:429.4296875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1042.2421875, 419.6328125), (1091.2265625, 468.6171875))
text2 i.e the incoming text is the winner
T
((996.5234375000001, 507.8046875), (1047.140625, 558.421875))
T
((991.625, 592.7109375), (1037.34375, 635.1640625))
F
((1011.21875, 674.3515625), (1047.140625, 728.234375))
T
((1030.8125, 785.3828125), (1078.1640625, 826.203125))
T
((1003.0546874999999, 886.6171875), (1048.7734375, 927.4375))
oT
((1017.7500000000001, 973.15625), (1101.0234375, 1015.609375))
a
((968.765625, 1142.96875), (988.359375, 1164.1953125))
F
((1003.0546874999999, 1049.8984375), (1038.9765625, 1092.3515625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 424, '2': 529, '3': 594, '4': 698, '5': 801, '6': 902, '7': 971, '8': 1076, '9': 1146, '10': 1245}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mCkySBG.jpg
rotation started
['oE', '6', '00', '', 'o', 'OT', '4', '3', 'N', 'L', '2', '2', 'a', 'E', 'I', 'I', 'tn', 'it', 'a', 'I', 'm', '9', '3', 'X', 'I', 'E', 'I', 'E', 'I', 'E', 'I', 'I', 'E', 'f', 'a', 'I', 'A', 'E', '8', '8', 'X', 'a', 'H', ':', 'E', 'e', ':', 'I', '9', 'E', 'I', 'E', '2', 't', 'E', 'L', 'E', 'E', 'I', '8', 'E', 'I', 'E', 'I', ':', '8', 'E', 'f', 'of', 'e', 't', 'E', 'E', 'E', 'I', 'of', 'I', 'E', 'I', 'I', 'E', ':', 'I', 'E', 'I', 'F', 'E', 'I', 'E', 'E', 'F', 'P', 'E', 'I', 'a', 'I', 'f', 'I', '7', '8', 'E', '€', '2', 'a', 'I', 'E', 'I', 'a', 'E', 'I', 'E', 'I', 'iE', 'I', 'I', 'I', 'E', 'E', 'E', 'i', 'X', 'I', 'E', 'E', 'I', 'S', 'I', 'E', 'E', 'a', 'E', 'f', 'of', 'it', 'I', 'E', 'I', 'E', '8', 'E', 'V', 'E', 'I', 'I', '€', 'e', 'E', 'I', 'à', 'I', 'A', 'I', ':', '-', 'A', '00', 'I', 'E', '8', '', 'I', '2', 'X', 'E', 'E', '9', 'E', 'E', '3', 'lo', '8', 'E', 'F', '-', '9', '-', 'E', 'I', '-', 'E', 'E', 't', 'II', 'tn', 'A', 'e', 'E', 'E', '€', '3', 'e', 'X', 'LE', '2', 'LE', 'E', '8', '9', 'A', 'E', 'E', 'e', '€', 'E', 'F', '0', '8', '2', 'à', 'I', 'I', 'I', 'I', 'I', 'I', 'I', '€', 'I', 'I', '7', 'P', 'F', '1', 'I', 'E', 'E', 'i', '-', 'E', 'U', '1)', 'I']
rotation started
['de', "'o0eds-aq", 'ur', 'SISEq', 'au4', 'Jo', 'Quo', 'SI', "Clo't-l'ar't))", '=', 'a', 'OI', 'sl', '7', 'ueyz', '1998018', 'SI', 'X', 'Jo', 'OnTBA', 'pegoodxe', 'OUL', 'X', 'ouloonno', 'YAIM', 'peTToI', 'SI', 'arp', 'OUL', '"a0eJ', 'ge44', 'uo', 'poqunu', 'MAL', 'aua', '07', 'Teuorn.odord', 'SI', 'dn', 'Suruoo', 'a0eJ', 'B', 'Jo', 'Kauqeqoid', 'au4', 'ge44', 'OS', 'popeol', 'SI', 'arp', 'V', '6', '"gosezep', 'ou7', 'UI', 'SIOITANO', '07', 'BATAISUOS', 'SI', 'VIT', '8', 'mot', 'TAL', 'Taqel', 'ssero', '0>', '(x)0', 'asgpas', 'ay7', 'UOALS', 'quopuedopur', 'ATreuorampuos', 'OIe', 'samgeel', 'Ire', '7844', 'sounsse', 'sakeg', 'BATEN', 'L', 'NTY', 'JO', '0', '>', '(x)0', 'IoyAte', '"OT', 'OOUBLIEA', 'DAmeBou', 'BABY', 'asnu', 'A', 'JO', 'X', 'Jo', 'QUO', 'AseOT', '9e', 'ueya', '0', '>', '(X', 'x)ao0', 'ge47', 'yons', 'SOIqELIBA', 'wopuer', 'penTeA-TeeI', 'OM7', 'OIe', 'A', 'pue', 'X', 'JI', '9', '"OIOZ', 'aq', 'ITIM', 'TL', 'XuITEUI', 'BOUeLIEAOD', 'oy7', 'Jo', 'yuel', 'o49', 'uoyn', 'x=S', 'MOITOI', 'Ataoexo', 'suornquasip', 'egep', 'JI', 'S', '(f)aoupruoa', '<', '(r)aoupriDa', 'JI', "Llo'T]", '09', 'squrod', 'egep-IG', 'p00ford', 'ITIM', 'VOd', 'BUL', '#', 'ueya', '1990018', 'aq', 'ues', 'uorgoung', 'sseur', 'Kauiqeqod', 'au4', 'JO', 'onTeA', 'a47', 'I', 'remomgred', 'B', 'JOI', '&', 'Mos', 'api', '"ouo', 'Apuapuadapur', 'm', 'VOd', 'Bursn', 'ssepp', 'yoeo', 'Jo', 'sordures', 'gooford', 'OM', 'JI', 'VIT', '09', 'quoreamba', 'sawooaq', 'VOd', '3', '"D', 'qurod', 'ayn', 'pue', 'ULSTIO', 'au7', 'uDaMgaq', 'mL', 'aouegsip', 'ueoprong', 'oy4', '01', '[enbo', 'SI', ',DD', 'XIIgEUI', 'auy', 'Jo', '00819', 'B', 'uaua', 'pl', 'D', 'D', 'JI', 'I', 'aSTVA/ANHL', 'quouagens', 'NS', ':0.OY', 'poqunu', 'ITO.I', 'mor', 'BJ1M', 'Surumpuey', 'meOpo', 'pue', '109191', 'reardes', 'uI', 'ISIVI', 'JO', 'INHL', 'OALIM', '(sad', 'OT)', '9']
rotation started
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/mCkySBG.jpg: {{function_node __wrapped__Reshape_device_/job:localhost/replica:0/task:0/device:GPU:0}} Input to reshape is a tensor with 2 values, but the requested shape has 8 [Op:Reshape]
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : E0RhGxf.jpg
OCR detection done with doctr
left top x of SN: 375.4374999999999
bottom right x of SN: 790.25
left top x of T/F: 5688.718749999999
bottom right x of T/F: 6937.312500000001
first t/f detection
TRUE
((5743.875, 1905.59375), (6330.906250000001, 2113.3125))
TRUE
((5798.0625, 2546.8125), (6367.03125, 2718.40625))
FALSE
((5770.96875, 3188.03125), (6385.093750000001, 3350.59375))
TKUE
((5680.656250000001, 3720.875), (6240.593749999999, 3883.4375))
FALSE
((5834.187499999999, 4190.5), (6403.156249999999, 4362.09375))
FALSE
((5698.718749999999, 4894.9375), (6358.000000000001, 5066.53125))
TRVE
((5752.906249999999, 5536.15625), (6321.874999999999, 5734.84375))
CRUE
((5716.78125, 6132.21875), (6267.687499999999, 6294.78125))
TRUE
((5743.875, 6701.1875), (6348.968749999999, 6872.78125))
TRUE
((5644.531249999999, 7342.40625), (6186.406249999999, 7504.96875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2546, '3': 3142, '4': 3757, '5': 4154, '6': 4768, '7': 5563, '8': 6168, '9': 6574, '10': 7369}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DFGByuP.jpg
OCR detection done with doctr
left top x of SN: 75.7470703125
bottom right x of SN: 312.7490234375
left top x of T/F: 1171.2451171875
bottom right x of T/F: 1607.0605468749998
first t/f detection
faly
((1209.74609375, 548.095703125), (1354.443359375, 642.3681640625))
collision happend with box:548.095703125 and text:faly solving on the basis of percent match boxes
the current box specification are
falie
((1203.1689453125, 675.25390625), (1321.5576171875, 754.1796875))
text2 i.e the incoming text is the winner
collision happend with box:675.25390625 and text:falie solving on the basis of percent match boxes
the current box specification are
TL
((1203.1689453125, 802.412109375), (1332.51953125, 894.4921875))
text1 i.e the prev text is the winner
Ruv
((1214.130859375, 927.3779296875), (1352.2509765625, 1015.0732421875))
collision happend with box:927.3779296875 and text:Ruv solving on the basis of percent match boxes
the current box specification are
Tfur
((1203.1689453125, 1069.8828125), (1341.2890625, 1161.962890625))
text2 i.e the incoming text is the winner
collision happend with box:1069.8828125 and text:Tfur solving on the basis of percent match boxes
the current box specification are
Tu
((1185.6298828125, 1190.4638671875), (1325.9423828125, 1262.8125))
text1 i.e the prev text is the winner
True
((1172.4755859375, 1302.275390625), (1317.1728515625, 1392.1630859375))
collision happend with box:1302.275390625 and text:True solving on the basis of percent match boxes
the current box specification are
Foliue
((1192.20703125, 1411.89453125), (1317.1728515625, 1486.435546875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
faly
((1209.74609375, 548.095703125), (1354.443359375, 642.3681640625))
falie
((1203.1689453125, 675.25390625), (1321.5576171875, 754.1796875))
TL
((1203.1689453125, 802.412109375), (1332.51953125, 894.4921875))
Ruv
((1214.130859375, 927.3779296875), (1352.2509765625, 1015.0732421875))
Tfur
((1203.1689453125, 1069.8828125), (1341.2890625, 1161.962890625))
Tu
((1185.6298828125, 1190.4638671875), (1325.9423828125, 1262.8125))
True
((1172.4755859375, 1302.275390625), (1317.1728515625, 1392.1630859375))
Foliue
((1192.20703125, 1411.89453125), (1317.1728515625, 1486.435546875))
Falue
((1185.6298828125, 1528.0908203125), (1314.98046875, 1604.82421875))
Tru
((1174.6679687499998, 1710.05859375), (1332.51953125, 1799.9462890625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 552, '2': 690, '3': 780, '4': 920, '5': 1056, '6': 1194, '7': 1284, '8': 1422, '9': 1517, '10': 1653}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u9Wer6S.jpg
OCR detection done with doctr
left top x of T/F: 5349.390625
bottom right x of T/F: 6593.1640625
left top x of SN: 626.2421875
bottom right x of SN: 1034.953125
first t/f detection
True
((5395.984375, 1829.6875), (5844.2578125, 2104.140625))
Due
((5395.984375, 2369.4453125), (5871.703125, 2634.75))
false
((5441.7265625, 2808.5703125), (5917.4453125, 3137.9140625))
False
((5405.1328125, 3403.21875), (5890.0, 3732.5625))
Tue
((5395.984375, 4061.90625), (5862.554687500001, 4354.65625))
Folse
((5395.984375, 4546.7734375), (5880.8515625, 4839.5234375))
Folse
((5368.539062499999, 5031.640625), (5798.515624999999, 5333.5390625))
Thue
((5386.8359375, 5607.9921875), (5798.515624999999, 5836.703125))
Tue
((5359.390625, 6102.0078125), (5798.515624999999, 6339.8671875))
Thue
((5377.6875, 6650.9140625), (5862.554687500001, 6925.3671875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1994, '2': 2570, '3': 2945, '4': 3522, '5': 4080, '6': 4665, '7': 5059, '8': 5644, '9': 6028, '10': 6623}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k3fXpaB.jpg
OCR detection done with doctr
left top x of T/F: 5349.44140625
bottom right x of T/F: 6633.80078125
left top x of SN: 846.0312499999999
bottom right x of SN: 1248.3124999999998
first t/f detection
FALSE
((5368.703125, 2232.07421875), (5979.9765625, 2445.09375))
TRUE
((5331.656249999999, 2741.46875), (6017.0234375, 2945.2265625))
TRUE
((5331.656249999999, 3232.33984375), (5850.3125, 3408.3125))
FALSE
((5340.91796875, 3806.56640625), (6035.546875, 3973.27734375))
TRUE
((5368.703125, 4343.74609375), (5989.23828125, 4556.765625))
FALSE
((5359.44140625, 4825.35546875), (6026.28515625, 5029.11328125))
FALSE
((5359.44140625, 5251.39453125), (6035.546875, 5501.4609375))
TRUE
((5350.1796875, 5733.00390625), (5952.19140625, 5955.28515625))
TRUE
((5331.656249999999, 6196.08984375), (5942.9296875, 6399.84765625))
FALSE
((5322.394531249999, 6844.41015625), (6007.76171875, 7057.4296875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2287, '2': 2834, '3': 3195, '4': 3741, '5': 4288, '6': 4843, '7': 5214, '8': 5770, '9': 6140, '10': 6705}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9jJTcYP.jpg
OCR detection done with doctr
left top x of SN: 434.1250000000001
bottom right x of SN: 842.8359375000001
left top x of T/F: 5660.4375
bottom right x of T/F: 6867.6171875
first t/f detection
FALSE
((5716.1796875, 2058.3984375), (6420.609375, 2305.40625))
EROE
((5734.4765625, 2616.453125), (6420.609375, 2881.7578125))
FALSE
((5707.031250000001, 2826.8671875), (6429.7578125, 3137.9140625))
FALSE
((5670.4375, 3339.1796875), (6402.312499999999, 3604.484375))
TRUE
((5642.9921875, 3878.9375), (6274.234375, 4080.203125))
FALSE
((5661.289062499999, 4308.9140625), (6457.203125, 4601.6640625))
FAESE
((5661.289062499999, 4976.75), (6365.71875, 5269.5))
TRUE
((5707.031250000001, 5251.203125), (6329.125, 5470.765625))
TRUC
((5670.4375, 5708.625), (6356.5703125, 5955.6328125))
TRUE
((5642.9921875, 6239.234375), (6255.9375, 6449.6484375))
FALSE
((5661.289062499999, 6778.9921875), (6356.5703125, 7026.0))
TRUE
((5661.289062499999, 7410.234375), (6255.9375, 7629.796875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2094, '2': 2689, '3': 3284, '4': 3878, '5': 4272, '6': 4876, '7': 5672, '8': 6275, '9': 6678, '10': 7492}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QboFh7Q.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/QboFh7Q.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} Expected begin, end, and strides to be 1D equal size tensors, but got shapes [2], [1], and [1] instead. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rxCG3WE.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
TRUE
((5382.625000000001, 1968.8125), (6186.406249999999, 2248.78125))
TRUE
((5364.5625, 2429.40625), (6385.093750000001, 2754.53125))
FE
((5310.375, 2727.4375), (5978.687500000001, 2944.1875))
TRVE
((5355.531250000001, 2926.125), (6249.625000000001, 3179.0))
EfE
((5337.46875, 3233.1875), (5825.15625, 3440.90625))
FALSÉ
((5382.625000000001, 3621.53125), (6159.312499999999, 3973.75))
FALSE
((5301.343750000001, 4380.15625), (6050.937499999999, 4551.75))
TRUE
((5283.28125, 4885.90625), (5960.625, 5048.46875))
FALSE
((5283.28125, 5310.375), (6168.343750000001, 5554.21875))
TRUE
((5310.375, 5888.375), (5969.656249999999, 6059.96875))
TRUE
((5310.375, 6439.28125), (5870.312500000001, 6610.875))
TRUE
((5310.375, 7008.25), (5960.625, 7170.8125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2745, '3': 3133, '4': 3729, '5': 4298, '6': 4894, '7': 5283, '8': 5879, '9': 6267, '10': 6863}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bztNZnR.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 785.5937499999999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fole
((810.7695312500001, 478.037109375), (877.54296875, 509.90625))
text2 i.e the incoming text is the winner
collision happend with box:478.037109375 and text:Fole solving on the basis of percent match boxes
the current box specification are
Fabe
((801.6640625, 559.986328125), (876.025390625, 594.890625))
text2 i.e the incoming text is the winner
collision happend with box:559.986328125 and text:Fabe solving on the basis of percent match boxes
the current box specification are
Fahe
((804.69921875, 651.041015625), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:651.041015625 and text:Fahe solving on the basis of percent match boxes
the current box specification are
FaMe
((804.69921875, 736.025390625), (882.095703125, 766.376953125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
Fole
((810.7695312500001, 478.037109375), (877.54296875, 509.90625))
Fabe
((801.6640625, 559.986328125), (876.025390625, 594.890625))
Fahe
((804.69921875, 651.041015625), (882.095703125, 687.462890625))
FaMe
((804.69921875, 736.025390625), (882.095703125, 766.376953125))
collision happend with box:736.025390625 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fabe
((806.216796875, 807.3515625), (872.990234375, 839.220703125))
text2 i.e the incoming text is the winner
True
((803.181640625, 892.3359375), (868.4375, 924.205078125))
Trwe
((797.1113281249999, 1066.857421875), (876.025390625, 1103.279296875))
Tywe
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 743, '7': 805, '8': 898, '9': 959, '10': 1053}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lyr0YBB.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6639.281250000001
left top x of SN: 637.34375
bottom right x of SN: 1043.125
first t/f detection
TRUE
((5463.906250000001, 2068.15625), (6050.937499999999, 2275.875))
FALSE
((5436.812500000001, 2582.9375), (6141.250000000001, 2754.53125))
TRUE
((5445.84375, 3061.59375), (6059.968750000001, 3260.28125))
TRUE
((5427.781249999999, 3675.71875), (6059.968750000001, 3874.40625))
FALSE
((5454.874999999999, 4271.78125), (6213.499999999999, 4470.46875))
TRUE
((5391.65625, 4714.3125), (5924.500000000001, 4931.0625))
FALSE
((5445.84375, 5247.15625), (6050.937499999999, 5418.75))
TRUE
((5382.625000000001, 5698.71875), (5924.500000000001, 5906.4375))
FALSE
((5445.84375, 6240.59375), (6141.250000000001, 6439.28125))
FALSE
((5427.781249999999, 6881.8125), (6069.0, 7053.40625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2095, '2': 2673, '3': 3061, '4': 3648, '5': 4217, '6': 4795, '7': 5165, '8': 5743, '9': 6132, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6EoSuEJ.jpg
OCR detection done with doctr
left top x of T/F: 5385.984375
bottom right x of T/F: 6593.1640625
left top x of SN: 498.1640625000001
bottom right x of SN: 906.8750000000001
first t/f detection
STRVE
((5533.2109375, 1783.9453125), (6173.6015625, 1985.2109375))
FALSE
((5514.9140625, 2387.7421875), (6210.1953125, 2589.0078125))
TRU
((5405.1328125, 2900.0546875), (5853.40625, 3083.0234375))
TRUE
((5414.281250000001, 3503.8515625), (6109.562499999999, 3723.4140625))
FALSE
((5588.1015625, 4135.09375), (6301.6796875, 4336.359375))
TRVE
((5496.6171875, 4729.7421875), (6164.453125, 4894.4140625))
FALSE
((5560.65625, 5196.3125), (6182.75, 5370.1328125))
FALSE
((5505.765624999999, 5736.0703125), (6127.859375, 5909.890625))
TRU
((5542.359375, 6239.234375), (5935.7421875, 6413.0546875))
FALSE
((5642.9921875, 6861.328125), (6265.085937499999, 7035.1484375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2058, '2': 2643, '3': 3028, '4': 3613, '5': 4208, '6': 4793, '7': 5196, '8': 5790, '9': 6202, '10': 6806}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : r53EbYv.jpg
OCR detection done with doctr
left top x of SN: 93.357421875
bottom right x of SN: 309.16015625
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
collision happend with box:389.16015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((889.8847656249999, 655.345703125), (961.490234375, 684.921875))
collision happend with box:655.345703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (966.16015625, 792.330078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.7714843750001, 927.7578125), (959.93359375, 957.333984375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
TRUE
((889.8847656249999, 655.345703125), (961.490234375, 684.921875))
FALSE
((883.658203125, 761.197265625), (966.16015625, 792.330078125))
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
TRUE
((886.7714843750001, 927.7578125), (959.93359375, 957.333984375))
FALSE
((891.4414062500001, 1016.486328125), (977.056640625, 1046.0625))
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((891.4414062500001, 1095.875), (941.25390625, 1127.0078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((941.25390625, 1098.98828125), (972.38671875, 1128.564453125))
text1 i.e the prev text is the winner
FALSE
((892.998046875, 1212.623046875), (972.38671875, 1240.642578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1293, '2': 490, '3': 558, '4': 658, '5': 758, '6': 867, '7': 927, '8': 1028, '9': 1098, '10': 1201}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : keUAEPk.jpg
OCR detection done with doctr
left top x of T/F: 5541.490234375
bottom right x of T/F: 6726.287109375
left top x of SN: 768.7285156249998
bottom right x of SN: 1183.0546875
first t/f detection
Tsue
((5607.728515625, 2465.111328125), (6067.0078125, 2652.572265625))
Frue
((5485.87890625, 3027.494140625), (5954.53125, 3205.58203125))
Colse
((5551.490234375, 3477.400390625), (6123.24609375, 3702.353515625))
Troue
((5504.625, 4030.41015625), (6029.515625000001, 4217.87109375))
Folde
((5457.759765625, 4470.943359375), (5992.0234375, 4658.404296875))
TAR
((5429.640625, 4864.611328125), (5832.681640625, 5042.69921875))
collision happend with box:4864.611328125 and text:TAR solving on the basis of percent match boxes
the current box specification are
FRR
((6048.26171875, 4855.23828125), (6395.064453125001, 5033.326171875))
text2 i.e the incoming text is the winner
collision happend with box:4855.23828125 and text:FRR solving on the basis of percent match boxes
the current box specification are
it
((5401.521484375, 4686.5234375), (5626.474609375, 4855.23828125))
text1 i.e the prev text is the winner
batwer
((5654.593750000001, 4677.150390625), (6235.72265625, 4845.865234375))
Taue
((5476.505859375, 5145.802734375), (5973.27734375, 5323.890625))
Trau
((5448.38671875, 5501.978515625), (6010.76953125, 5670.693359375))
Falbe
((5467.1328125, 5989.376953125), (5907.666015625, 6167.46484375))
Tau
((5523.37109375, 6504.89453125), (6010.76953125, 6692.35546875))
Tme
((5560.86328125, 7001.666015625), (5992.0234375, 7179.75390625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2530, '2': 3093, '3': 3477, '4': 4058, '5': 4630, '6': 5211, '7': 5595, '8': 6176, '9': 6570, '10': 7142}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UmIo7nf.jpg
OCR detection done with doctr
left top x of SN: 91.79296874999997
bottom right x of SN: 309.76171875
left top x of T/F: 874.83984375
bottom right x of T/F: 1241.4609375
first t/f detection
FALSE
((894.33203125, 430.3125), (976.59765625, 461.953125))
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 509.4140625), (967.10546875, 545.80078125))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRUE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
collision happend with box:691.34765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 794.1796875), (956.03125, 825.8203125))
text1 i.e the prev text is the winner
TRVE
((883.2578125, 882.7734375), (960.77734375, 912.83203125))
collision happend with box:882.7734375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text2 i.e the incoming text is the winner
collision happend with box:968.203125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((891.16796875, 1058.37890625), (967.10546875, 1090.01953125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((894.33203125, 430.3125), (976.59765625, 461.953125))
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 509.4140625), (967.10546875, 545.80078125))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
TRUE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
TRVE
((889.5859375, 794.1796875), (956.03125, 825.8203125))
TRVE
((883.2578125, 882.7734375), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (967.10546875, 1090.01953125))
FALSE
((897.49609375, 1140.64453125), (981.3437499999999, 1170.703125))
FAL
((899.078125, 1235.56640625), (952.8671875, 1267.20703125))
collision happend with box:1235.56640625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((956.03125, 1237.1484375), (987.671875, 1268.7890625))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': True, '10': False}
the unassigned keys are ['1', '3', '4', '6', '7']
the assigned keys are ['2', '5', '8', '9', '10']
['2', '5', '8', '9', '10', '2', '5', '8', '9', '10']
printing the number dict y_coordinate
{'2': 525, '5': 795, '8': 1067, '9': 1137, '10': 1238, '1': 225}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WqsQ2oM.jpg
rotation started
['1n', '-', '00', '', '', 'OT', '', 'a', 'N', 'I', 'E', 'E', '9', 'P', 'I', 'I', 'a', 'I', '2', '8', 'I', 'it', 'E', 'e', 'E', 'e', 'f', 'I', 'E', 'I', '8', 'E', 'E', 's', 'I', 'E', 'a', 'I', ':', 'E', 'I', 'I', '8', 'I', 'of', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'I', 't', 'I', 'E', 'E', 'E', 'f', 'I', 'I', 'E', 'Q', 'I', 'à', 'B', '8', '2', 'I', 'I', '%', 'I', 'I', 'p', '8', '2', 'E', 'I', 'I', 'E', '-', 'I', 'E', 'I', 'E', 'I', '€', 'E', 'I', '8', 'E', 'e', 'I', 'I', 'I', 'I', ':', '2', 'I', 'of', '8', 'I', 'I', 'E', 'E', 'I', 'I', 'I', 'I', ':', '2', '2', 'a', 't', '€', '€', '9', '%', 'e', 'I', 'I', 'I', 'E', 'I', 'E', 'F', '1', '2', 's', '8', 'E', '-', '-', '2', 'E', 'E', '1', 'I', 'E', 'E', 'P', 'A', 'I', 'E', '&', 'I', 'I', 'I', 'I', 'I', 'E', 'a', 'I', 'I', 'I', ':', 'a', '3', 'I', 'tn', 'I', 'p', '€', 'I', '1', 'I', 'E', '2', 't', 'L', 'E', 'E', '2', 'E', 'it', 'B', 'E', 'I', 'a', 'I', 'I', ':', 't', 'I', 'I', 'I', 'E', 'E', 'E', 'I', 'g', 'a', 'I', '1', 'I', 'I', 'I', '7', 'it', 'I', '€', 'E', 'I', 'E', 'I', 'E', '€', 'I', '€', '€', 'I', 'I']
rotation started
['"egep', 'uoosun', "'mou", '01', 'TTOM', 'ezire.iouas', 'gou', 'op', 'ge47', 'eep', 'Burureng', 'oua', 'uT', 'sTregop', 'JO', 'OSIOU', 'oytpads', 'agdes', '07', 'ureal', 'Keur', 'lapour', 'ay7', 'se', "'soseaI", 'OPD', '-UI', 'Surayieno', 'Jo', 'YSLI', 'aua', "'WAS", 'uI', 'pegeurered', 'D', 'o47', 'jo', 'onTeA', 'y8ry', 'e', 'Y9IM', 'OI', 'WAS', '1SOI-SA-BU0', 'ueyz', 'JOMOTS', 'SI', 'WAS', 'Ouo-SA-QUO', 'Sursn', 'Mel', 'uonorperd', 'B', 'Suryeur', "'sasserp", 'Jo', 'roqunu', 'a81eT', 'B', 'YAIM', 'suarqoid', 'ssepormu', 'JOH', '6', 'J', 'Ma', 'aoeds', '[eurSto', 'eu7', 'UI', 'JeBuII-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uoisiop', 'OUL', '8', '"sapou', 'Jo', 'pqunu', 'a47', '07', 'Teuorodo.d', 'DAU', 'J', 'Atgpaup', 'SI', 'DOIL', 'UOISIDOT', 'au7', 'ul', 'uoporpard', 'B', 'Suryeur', 'IOJ', 'pammbar', 'BUIL', 'OUL', 'L', '-', 'MCL', '"uornquasip', 'uerssnes', 'B', 'SienTe', 'SI', 'Suornquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIUI', 'V', '9', 'Tredey', 'pue', 'UOISIO', 'MoL', '-aId', 'uoomgeq', 'nord', 'B', 'SI', 'OAIND', '(DOH)', 'orsutegpereud', 'Sureado', 'IBAIODOY', 'AUL', 'C', '-', 'oyos', '1E', 'a', '-A', 'moy', '"YIOMIOU', 'Temou', 'au7', 'UI', 'squarpers', 'au7', 'agnduoo', '07', 'pesn', 'OTIYM', "'sa481aM", 'au7', 'agepdn', '07', 'pasn', 'SI', 'uone@odoxdypeg', '#', 'SI', 'quaosap', 'querpers', ':f', 'pue', 'I', 'SIOQDOA', 'Aue', 'JOJ', 'oLIgauI', 'aouensip', 'PITRA', 'B', 'SI', '(@-z/Auopuagausoy', '-', 'I', '&', '[euorsueuup-P', 'payissep', 'mBAuII-uou', 'B', 'SI', 'NNY', '2', 'MOL', 'quaurkordap', 'quottazmbar', 'a8e10gs', 'aui', 'KTBOIdAL', 'I', '1a81e1', 'yonur', 'SI', 'NNX', 'JOJ', 'Tmsy', 'JOJ', 'WAS', 'ueyz', 'quauagess', 'NS', 'MIVa/anuL', 'paqunu', 'ITOI', 'mor', 'OALIM', ':a10u', '21LM', '(sad', 'O1)', '6', 'ASTVA', 'IO', 'ENUL', 'peardeo', 'ul', 'reapo', 'pue', 'S.211el', '-Supumpurey']
rotation started
['3', 'I', ':', 'LL', '3', '-', 'E', '3', '3', '', 'is', 'I', '3', '3', 'I', '2', '2', 'a', 'E', 'a', '-', '1', 'is', 'E', 'a', 'I', 'à', 'I', 'I', 'I', 'E', 'e', 'E', 'I', '1', 'I', 'iis', 'I', 'a', '2', 'of', '6', ':', 'is', 'a', 'I', '2', '', 'I', 'à', 'E', 'a', 'I', '-', 'e', 'I', 'e', '1', 'I', 'E', 'E', '1', 'I', 'I', 'I', '8', 'is', 'e', 'I', 'iE', 'o', 'e', 'E', '1', 'I', ':', 'e', 'I', 'a', 'a', 'I', 'à', ':', 'o', 'i', '-', '', 'I', 'of', 'I', 'E', '8', 'E', '', 'I', 'I', 'I', 'of', 'E', 'I', 'is', 'E', 'I', 'I', 'de', 'à', ':', 'is', 'e', 'I', 'a', 'de', '-', 'of', 'de', 'S', 'I', 'E', 'I', 'I', '8', 'I', 'à', 'à', 'E', 'I', 'of', 'I', 'e', 'a', 'I', 'i2', 'H', '8', 'I', '2', 'I', '5', 'a', '8', '$', 'à', 'I', 'I', 'I', 'I', '2', '11', 'I', 'I', 'I', 'a', 'S2', 'a', '1', 'a', 'iE', 'I', 'I', 'I', 'à', 'a', 'I', 'I', '3', 'E', 'I', '1', 'ia', 'a', 's', 'E', 'à', 'E', 'e', 'o', 'I', 'of', 'I', 'I', '1', ':', 'a', 'is', 'I', '2', 'a', ':', 'I', 'e', 'I', '1', 'I', 'I', 'I', 'E', '€', 'à', '', 'à', 'à', ':', 'I', 'E', 'I', 'I', '7', '11', '4', '12', '', 'I', '0O', 'o', 'L', '9']
rotation started
['clear', 'handwriting.', 'letters', 'and', 'in', 'capital', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/FALS', 'SN', 'Statement', 'than', 'SVM', 'for', 'Towl', 'for', 'KNN', 'is', 'much', 'larger', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', 'Toywl', 'Tu', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', 'while', 'gradient', 'descent', 'is', 'Tutl', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Falsl', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyl', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TJul', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'Falad', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Tul', 'A', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'Toul', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'overfitting', 'in-', 'Falal', 'specific', 'noise', 'or', 'details', 'in', 'the']
OCR detection done with doctr
left top x of SN: 745.1718749999998
bottom right x of SN: 1153.8828125
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:04:04] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : WqsQ2oM.jpg
[2024/07/01 15:04:05] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:04:06] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.1887509822845459
[2024/07/01 15:04:08] ppocr DEBUG: rec_res num  : 36, elapsed : 1.598097324371338
OCR detection done
left top x of SN: 800.0
bottom right x of SN: 1172.0
left top y of SN: 1786.0
bottom right y of SN: 2072.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/WqsQ2oM.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RZzR3WP.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
collision happend with box:766.1865234375 and text:Falke solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0c7xEno.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text1 i.e the prev text is the winner
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
collision happend with box:1330.0 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
folte
((1123.96875, 627.59375), (1244.5, 714.875))
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dcKPZ70.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 492.8437500000001
bottom right x of SN: 898.625
first t/f detection
FALSE
((5274.250000000001, 1950.75), (5942.562499999999, 2194.59375))
FALSE
((5400.687499999999, 2492.625), (6032.875000000001, 2745.5))
A
((5211.031249999999, 2998.375), (5373.593749999999, 3160.9375))
collision happend with box:2998.375 and text:A solving on the basis of percent match boxes
the current box specification are
TRUE
((5400.687499999999, 2962.25), (5987.71875, 3179.0))
text2 i.e the incoming text is the winner
FALSE
((5355.531250000001, 3639.59375), (6050.937499999999, 3847.3125))
FALSE
((5346.499999999999, 4181.46875), (5996.749999999999, 4380.15625))
FALSE
((5391.65625, 4759.46875), (5978.687500000001, 4931.0625))
FALSE
((5382.625000000001, 5229.09375), (6014.8125, 5391.65625))
FALSE
((5364.5625, 5780.0), (5987.71875, 5951.59375))
TRUE
((5454.874999999999, 6222.53125), (6059.968750000001, 6430.25))
TRUE
((5400.687499999999, 6836.65625), (5987.71875, 7080.5))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3043, '4': 3621, '5': 4199, '6': 4777, '7': 5165, '8': 5752, '9': 6141, '10': 6728}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dYAaz7m.jpg
OCR detection done with doctr
left top x of SN: 598.7968749999998
bottom right x of SN: 1016.6562499999999
left top x of T/F: 5715.328125
bottom right x of T/F: 6913.359375
first t/f detection
True
((5944.890625, 2122.4375), (6429.7578125, 2342.0))
Pulse
((5871.703125, 2753.6796875), (6384.015625, 2936.6484375))
Pals
((5853.40625, 3302.5859375), (6274.234375, 3522.1484375))
True
((5807.6640625, 3787.453125), (6228.4921875, 3970.421875))
Tyue
((5771.0703125, 4272.3203125), (6210.1953125, 4455.2890625))
Falsc
((5734.4765625, 4949.3046875), (6246.789062499999, 5159.71875))
True
((5734.4765625, 5626.2890625), (6274.234375, 5845.8515625))
True
((5752.7734375, 6147.75), (6219.34375, 6358.1640625))
True
((5752.7734375, 6714.953125), (6237.640625, 6943.6640625))
True
((5825.9609375, 7327.8984375), (6283.3828125, 7538.3125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2698, '3': 3284, '4': 3869, '5': 4254, '6': 4848, '7': 5617, '8': 6211, '9': 6605, '10': 7391}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : baS4IPn.jpg
OCR detection done with doctr
left top x of SN: 607.9453124999999
bottom right x of SN: 1016.6562499999999
left top x of T/F: 5257.90625
bottom right x of T/F: 6474.234375
first t/f detection
TRUE
((5423.4296875, 2287.109375), (6036.375, 2543.265625))
FRUE
((5386.8359375, 3174.5078125), (6082.1171875, 3430.6640625))
FALSE
((5487.46875, 3778.3046875), (6201.046875, 3997.8671875))
FALSE
((5405.1328125, 4382.1015625), (6109.562499999999, 4592.515625))
FALSE
((5405.1328125, 4757.1875), (6072.96875, 4967.6015625))
collision happend with box:4757.1875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
ORUE
((5414.281250000001, 4903.5625), (6036.375, 5113.9765625))
text1 i.e the prev text is the winner
FALSE
((5377.6875, 5315.2421875), (6091.265625, 5516.5078125))
TRUE
((5368.539062499999, 5781.8125), (5935.7421875, 6001.375))
TRVE
((5414.281250000001, 6275.828125), (6018.078125000001, 6531.984375))
TRUE
((5359.390625, 6934.515625), (6054.671875, 7181.5234375))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2277, '2': 2845, '3': 3220, '4': 3787, '5': 4354, '6': 4921, '7': 5296, '8': 5873, '9': 6257, '10': 6833}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PJF97Sn.jpg
OCR detection done with doctr
left top x of SN: 457.0390625
bottom right x of SN: 877.8437499999999
left top x of T/F: 5794.00390625
bottom right x of T/F: 7004.269531249999
first t/f detection
Faye
((5794.7421875, 1954.22265625), (6359.707031250001, 2130.1953125))
faue
((5813.265625, 2584.01953125), (6331.921875000001, 2769.25390625))
falye
((5711.38671875, 3195.29296875), (6313.398437500001, 3399.05078125))
Frue-
((5757.6953125, 3815.828125), (6220.78125, 3982.5390625))
TuR
((5804.00390625, 4251.12890625), (6387.4921875, 4427.1015625))
fale
((5859.57421875, 4899.44921875), (6489.37109375, 5112.46875))
Frue
((5813.265625, 5686.6953125), (6341.183593750001, 5862.66796875))
falyo
((5804.00390625, 6214.61328125), (6285.61328125, 6436.89453125))
Toue.
((5804.00390625, 6835.1484375), (6396.75390625, 7048.16796875))
True
((5841.05078125, 7511.25390625), (6415.27734375, 7687.2265625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2009, '2': 2602, '3': 3213, '4': 3815, '5': 4223, '6': 4843, '7': 5668, '8': 6297, '9': 6733, '10': 7576}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wN4cbxp.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1349.0654296875
bottom right x of T/F: 1821.873046875
first t/f detection
Tyut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
collision happend with box:645.755859375 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1411.626953125, 778.4111328125), (1526.7617187500002, 838.4814453125))
text2 i.e the incoming text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fpsn
((1386.59765625, 908.5634765625), (1524.2587890625, 978.6455078125))
text1 i.e the prev text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
faek
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
text1 i.e the prev text is the winner
Falte
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
collision happend with box:1058.7392578125 and text:Falte solving on the basis of percent match boxes
the current box specification are
Falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1203.9091796875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Faeu
((1421.6386718749998, 1349.0791015625), (1539.2763671875, 1411.65234375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
True
((1411.626953125, 778.4111328125), (1526.7617187500002, 838.4814453125))
fpsn
((1386.59765625, 908.5634765625), (1524.2587890625, 978.6455078125))
collision happend with box:908.5634765625 and text:fpsn solving on the basis of percent match boxes
the current box specification are
faek
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
text2 i.e the incoming text is the winner
Falte
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
Falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
Faeu
((1421.6386718749998, 1349.0791015625), (1539.2763671875, 1411.65234375))
Falh
((1436.65625, 1476.728515625), (1554.2939453125, 1536.798828125))
BThu
((1366.57421875, 1624.4013671875), (1524.2587890625, 1684.4716796875))
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
Trut
((1426.6445312500002, 1924.7529296875), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 788, '3': 896, '4': 1056, '5': 1213, '6': 1374, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jzBnw4J.jpg
OCR detection done with doctr
left top x of T/F: 5173.46875
bottom right x of T/F: 6392.99609375
left top x of SN: 660.7968749999999
bottom right x of SN: 1072.33984375
first t/f detection
TRVE
((5239.0390625, 2009.79296875), (5933.66796875, 2389.5234375))
RAXFFAISE
((5377.96484375, 2639.58984375), (6267.08984375, 2889.65625))
FALSE
((5276.0859375, 3111.9375), (6100.378906249999, 3445.359375))
FALSE
((5229.77734375, 3676.90234375), (6017.0234375, 3973.27734375))
TRUE
((5229.77734375, 4260.390625), (5979.9765625, 4603.07421875))
PALSE
((5201.9921875, 4825.35546875), (5998.5, 5121.73046875))
PALSE
((5266.82421875, 5279.1796875), (6100.378906249999, 5575.5546875))
TRUE
((5220.515625, 5825.62109375), (5878.09765625, 6084.94921875))
TRUE
((5229.77734375, 6233.13671875), (5868.8359375, 6492.46484375))
TR
((5192.73046875, 6853.671875), (5581.722656250001, 7187.09375))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'NULL', '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2426, '2': 2963, '3': 3324, '4': 3871, '5': 4408, '6': 4955, '7': 5316, '8': 5862, '9': 6223, '10': 6779}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'NULL', '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JcwfXfG.jpg
OCR detection done with doctr
left top x of SN: 83.9365234375
bottom right x of SN: 328.169921875
left top x of T/F: 1406.3125
bottom right x of T/F: 1896.3701171875
first t/f detection
falu
((1449.7138671875, 629.4873046875), (1637.275390625, 747.6767578125))
collision happend with box:629.4873046875 and text:falu solving on the basis of percent match boxes
the current box specification are
falbe
((1452.283203125, 786.216796875), (1591.02734375, 876.1435546875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:786.216796875 and text:falbe solving on the basis of percent match boxes
the current box specification are
Taue
((1452.283203125, 932.6689453125), (1609.0126953125, 1043.150390625))
text2 i.e the incoming text is the winner
collision happend with box:932.6689453125 and text:Taue solving on the basis of percent match boxes
the current box specification are
Tiov
((1465.1298828125, 1076.5517578125), (1637.275390625, 1184.4638671875))
text1 i.e the prev text is the winner
TfuL
((1459.9912109375, 1248.697265625), (1626.998046875, 1359.1787109375))
collision happend with box:1248.697265625 and text:TfuL solving on the basis of percent match boxes
the current box specification are
Tue
((1439.4365234374998, 1384.8720703125), (1603.8740234374998, 1477.3681640625))
text1 i.e the prev text is the winner
Taur
((1426.58984375, 1515.908203125), (1603.8740234374998, 1623.8203125))
collision happend with box:1515.908203125 and text:Taur solving on the basis of percent match boxes
the current box specification are
falue
((1452.283203125, 1652.0830078125), (1603.8740234374998, 1742.009765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1449.7138671875, 629.4873046875), (1637.275390625, 747.6767578125))
falbe
((1452.283203125, 786.216796875), (1591.02734375, 876.1435546875))
Taue
((1452.283203125, 932.6689453125), (1609.0126953125, 1043.150390625))
Tiov
((1465.1298828125, 1076.5517578125), (1637.275390625, 1184.4638671875))
TfuL
((1459.9912109375, 1248.697265625), (1626.998046875, 1359.1787109375))
Tue
((1439.4365234374998, 1384.8720703125), (1603.8740234374998, 1477.3681640625))
Taur
((1426.58984375, 1515.908203125), (1603.8740234374998, 1623.8203125))
falue
((1452.283203125, 1652.0830078125), (1603.8740234374998, 1742.009765625))
fFalre
((1449.7138671875, 1788.2578125), (1603.8740234374998, 1878.1845703125))
True
((1436.8671874999998, 1996.3740234375), (1624.4287109375002, 2111.994140625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 927, '2': 819, '3': 927, '4': 1089, '5': 1253, '6': 1415, '7': 1526, '8': 1682, '9': 1798, '10': 1957}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Vlo8tqw.jpg
OCR detection done with doctr
left top x of T/F: 5525.4140625
bottom right x of T/F: 6707.89453125
left top x of SN: 679.3203124999999
bottom right x of SN: 1090.8632812500002
first t/f detection
S
((6192.99609375, 166.7109375), (6591.25, 555.703125))
a
((6322.660156250001, 1426.3046875), (6656.08203125, 1759.7265625))
TRUE
((5581.722656250001, 2111.671875), (6192.99609375, 2333.953125))
FALE
((5572.460937500001, 2658.11328125), (6192.99609375, 2880.39453125))
TRUE
((5646.5546875, 3213.81640625), (6285.61328125, 3426.8359375))
FALJE
((5581.722656250001, 3834.3515625), (6248.56640625, 4047.37109375))
FALSE
((5655.81640625, 4464.1484375), (6294.875, 4677.16796875))
FALE
((5590.984375000001, 4973.54296875), (6248.56640625, 5195.82421875))
TRUE
((5535.4140625, 5455.15234375), (6146.6875, 5658.91015625))
TRUE
((5479.84375, 6010.85546875), (6109.640624999999, 6214.61328125))
TRUE
((5572.460937500001, 6381.32421875), (6137.42578125, 6585.08203125))
TRUE
((5581.722656250001, 7075.953125), (6155.94921875, 7251.92578125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2324, '2': 2908, '3': 3287, '4': 3871, '5': 4445, '6': 5029, '7': 5418, '8': 6010, '9': 6399, '10': 6992}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IEH3YjW.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 880.5624999999999
first t/f detection
Tue
((5445.84375, 1986.875), (5987.71875, 2239.75))
falie
((5436.812500000001, 2564.875), (5924.500000000001, 2826.78125))
True
((5500.03125, 3097.71875), (6014.8125, 3323.5))
folie
((5346.499999999999, 3630.5625), (5798.0625, 3892.46875))
Truve
((5382.625000000001, 4244.6875), (5960.625, 4452.40625))
Tsue
((5346.499999999999, 4831.71875), (5942.562499999999, 5048.46875))
True
((5454.874999999999, 5310.375), (5978.687500000001, 5527.125))
False
((5373.593749999999, 5761.9375), (5915.468749999999, 6032.875))
Tue
((5418.75, 6240.59375), (5933.53125, 6511.53125))
True
((5500.03125, 6791.5), (5969.656249999999, 7062.4375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2772, '3': 3169, '4': 3747, '5': 4316, '6': 4903, '7': 5328, '8': 5906, '9': 6303, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : N1HDgWz.jpg
OCR detection done with doctr
left top x of T/F: 5376.8359375
bottom right x of T/F: 6547.421875
left top x of SN: 726.8750000000001
bottom right x of SN: 1135.5859375
first t/f detection
TRuE
((5487.46875, 1747.3515625), (5963.1875, 1976.0625))
TALE
((5542.359375, 2268.8125), (5990.6328125, 2451.78125))
TRUE
((5551.507812500001, 2653.046875), (6018.078125000001, 2863.4609375))
FALSE
((5542.359375, 3284.2890625), (6127.859375, 3485.5546875))
FALSE
((5560.65625, 3988.71875), (6118.7109375, 4189.984375))
FALSE
((5524.062499999999, 4409.546875), (6082.1171875, 4583.3671875))
FALSE
((5469.171875, 4857.8203125), (6045.5234375, 5059.0859375))
TRUE
((5460.0234375, 5379.28125), (5935.7421875, 5543.953125))
FALSE
((5514.9140625, 5818.40625), (6127.859375, 6019.671875))
TRVE
((5423.4296875, 6449.6484375), (5944.890625, 6632.6171875))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1875, '2': 2433, '3': 2808, '4': 3366, '5': 3924, '6': 4482, '7': 4857, '8': 5415, '9': 5800, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : od6O51t.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 692.9296875), (968.6875, 729.31640625))
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
TRVE
((889.5859375, 692.9296875), (968.6875, 729.31640625))
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
FAL
((900.6601562500001, 1233.984375), (954.44921875, 1267.20703125))
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 596, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kSgH2u5.jpg
OCR detection done with doctr
left top x of SN: 91.615234375
bottom right x of SN: 307.287109375
left top x of T/F: 861.806640625
bottom right x of T/F: 1224.8984375
first t/f detection
Fale
((885.18359375, 425.08984375), (963.958984375, 454.81640625))
collision happend with box:425.08984375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tyuc
((880.7246093750001, 509.810546875), (958.013671875, 539.537109375))
text1 i.e the prev text is the winner
True
((877.751953125, 606.421875), (959.5, 640.607421875))
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tne
((877.751953125, 704.51953125), (959.5, 746.13671875))
text1 i.e the prev text is the winner
Tqtue
((877.751953125, 790.7265625), (952.068359375, 824.912109375))
collision happend with box:790.7265625 and text:Tqtue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 870.98828125), (955.0410156249999, 905.173828125))
text2 i.e the incoming text is the winner
collision happend with box:870.98828125 and text:True solving on the basis of percent match boxes
the current box specification are
Faoc
((886.669921875, 961.654296875), (953.5546875000001, 983.94921875))
text1 i.e the prev text is the winner
collision happend with box:870.98828125 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((882.2109374999999, 1035.970703125), (949.095703125, 1065.697265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fale
((885.18359375, 425.08984375), (963.958984375, 454.81640625))
Tyuc
((880.7246093750001, 509.810546875), (958.013671875, 539.537109375))
True
((877.751953125, 606.421875), (959.5, 640.607421875))
Tne
((877.751953125, 704.51953125), (959.5, 746.13671875))
Tqtue
((877.751953125, 790.7265625), (952.068359375, 824.912109375))
True
((877.751953125, 870.98828125), (955.0410156249999, 905.173828125))
Faoc
((886.669921875, 961.654296875), (953.5546875000001, 983.94921875))
collision happend with box:961.654296875 and text:Faoc solving on the basis of percent match boxes
the current box specification are
Fale
((882.2109374999999, 1035.970703125), (949.095703125, 1065.697265625))
text2 i.e the incoming text is the winner
Tyue
((877.751953125, 1154.876953125), (959.5, 1192.03515625))
the final dict without editing {'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 331, '2': 432, '3': 500, '5': 700, '6': 801, '7': 869, '8': 970, '9': 1035, '10': 1137}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KKfbb39.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6422.531250000001
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5292.312499999999, 1905.59375), (5924.500000000001, 2149.4375))
TRVE
((5355.531250000001, 2447.46875), (5924.500000000001, 2664.21875))
FALSE
((5211.031249999999, 2989.34375), (5770.96875, 3206.09375))
FALSE
((5337.46875, 3540.25), (5978.687500000001, 3784.09375))
FALSE
((5328.437500000001, 4154.375), (6032.875000000001, 4371.125))
FALSE
((5247.156250000001, 4678.1875), (5915.468749999999, 4885.90625))
FALSE
((5274.250000000001, 5192.96875), (6023.843749999999, 5391.65625))
FALSE
((5238.124999999999, 5698.71875), (5825.15625, 5870.3125))
TRVE
((5337.46875, 6177.375), (5861.281249999999, 6358.0))
FALSE
((5319.406249999999, 6773.4375), (6023.843749999999, 7017.28125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2610, '3': 3007, '4': 3585, '5': 4172, '6': 4759, '7': 5147, '8': 5743, '9': 6132, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fSgibgb.jpg
OCR detection done with doctr
left top x of T/F: 5284.609375
bottom right x of T/F: 6680.109375
left top x of SN: 568.1796875000001
bottom right x of SN: 979.72265625
first t/f detection
drus
((5405.75, 2898.91796875), (5841.05078125, 3130.4609375))
True
((5507.62890625, 3380.52734375), (5933.66796875, 3621.33203125))
True
((5498.3671875, 4075.15625), (5961.453125, 4288.17578125))
Trve
((5452.05859375, 4649.3828125), (5905.8828125, 4871.6640625))
Toe
((5516.890625, 5232.87109375), (5961.453125, 5445.890625))
True
((5470.58203125, 5825.62109375), (5942.9296875, 6047.90234375))
tue
((5526.15234375, 6270.18359375), (6007.76171875, 6538.7734375))
prediction
((4646.2890625, 6733.26953125), (5313.132812499999, 6937.02734375))
collision happend with box:6733.26953125 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tue
((5526.15234375, 6798.1015625), (6026.28515625, 7066.69140625))
text2 i.e the incoming text is the winner
the
((5081.58984375, 7603.87109375), (5313.132812499999, 7770.58203125))
collision happend with box:7603.87109375 and text:the solving on the basis of percent match boxes
the current box specification are
True
((5572.460937500001, 7501.9921875), (6091.117187499999, 7761.3203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2621, '2': 3186, '3': 3565, '4': 4139, '5': 4714, '6': 5306, '7': 5705, '8': 6335, '9': 6751, '10': 7390}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KYwE0DO.jpg
rotation started
['o5', 'o', '00', 't', 'it', '>', 'II', 'I', 'I', 't', 't', 'A', 'E', 'E', '€', '2', '9', 'E', 'F', 'e', 'L', 'à', 'E', 'E', 'E', 'I', '2', 'a', 'I', 'A', '5', '8', '8', 'X', 'a', 'H', 'I', '9', 'I', 'I', 'I', 'E', 'E', 'it', '2', 'e', 'E', 'E', 'I', 'E', 'I', ':', 'f', 'e', 'E', 'e', 'E', 'I', 'f', 'I', 't', 'E', 'I', 'I', 'E', 'I', 'E', 'F', 'I', 'E', 'E', 'I', '1', '8', 'of', 'I', 'p', 'E', 'à', 'a', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'H', 'I', 'I', 'I', 'I', 'E', 'X', 'I', 'E', 'E', 'E', '-', 'E', 'f', 'it', 'I', 'E', ':', 'V', 'I', '€', 'à', 'I', 'I', 'A', '€', '8', 'I', 'A', '00', '0', 'I', '2', 'X', 'E', 'E', '9', 'E', '-', '', 'OT', '4', '3', '2', 'LH', '2', 'LE', 'e', 'a', '2', 'm', 'I', 'R', ':', 'I', 'I', 'E', 'I', 'I', 'E', ':', '8', 'a', 'E', '3', '1', 'E', '8', 'E', 'of', 'E', 'I', 'E', 'E', 'E', 'P', 'a', 'I', 'a', 'it', 'I', 'a', '8', 'E', 'I', 'o', 'E', 'E', 'E', 'E', 'o', 'E', 'E', 'a', 'I', '2', 'E', 'R', 'E', 'e', 'E', 'E', 'LE', 'E', '8', '2', 'e', 'E', 'E', '-', '3', 'X', 'e', 'I', 'E', 'I', 'E', '9', 'I', 'E', 'I', 'f', '&', '€', 'I', '9', 'I', 'I', 'I', 'I', ':', 'à', 'à', '-', 'E', 'à', 'à', 'E', ':', ':', 'I', '3', 'aR', '-', 'ERTO', 'Lms,', 'a', 'Nam']
rotation started
['gagl', '"aoeds-ae', 'UI', 'SISEq', 'au4', 'Jo', 'Quo', 'SI', "Co'T-l'zr't)", '=', 'a', 'OT', "'4", 'ueya', '1990018', 'SI', 'X', 'Jo', 'anTeA', 'pagoadxe', 'OUL', '"X', 'quooqno', 'YAIM', 'poTloI', 'SI', 'arp', 'OUL', '"a0e]', 'ge47', 'uo', 'roqunu', 'JOJL', 'aya', '01', 'Teuorodord', 'SI', 'dn', 'Suruoo', 'aoeJ', 'e', 'Jo', 'Kamiqeqoud', 'a47', 'ge41', 'OS', 'papeor', 'SI', 'arp', 'V', '6', '"gosezep', 'a47', 'UI', 'SIOITANO', '07', 'BATAISUOS', 'SI', 'VIT', '8', 'InyL', 'Taqel', 'ssero', '0>', '(x)0', '3nJL', 'ay7', 'UBALS', 'quepuedepur', 'ATeuomipuos', 'OIe', 'samgee]', 'ITe', 'ge47', 'sounsse', 'sakeg', 'BATEN', 'L', 'IO', '0', '>', '(x)0', '1O491O', '"OT', 'OOUBLIEA', 'aAmeBeu', 'BABY', 'asnu', 'A', 'IO', 'X', 'Jo', 'Quo', '9SeOT', '78', '38785', 'uayn', '0', '>', '(A', 'x)ao0', 'ge47', 'yons', 'SOIqELIBA', 'wopue', 'panrea-Teal', 'OM7', 'OIE', 'A', 'pue', 'X', 'JI', '9', '"OIOZ', 'aq', 'ITIM', 'aNaL', 'xugeur', 'OOUELIEAOD', 'a47', 'Jo', 'yuel', 'e47', 'uayn', "'X=X", 'MOITOJ', 'Atpexa', 'suornquasip', 'egep', 'JI', 'C', '(f)aoupr.oa', '<', '(r)aoupruDa', 'JI', 'zlo', "'T]", '07', 'squrod', 'Bgep-QE', 'goaford', 'ITIM', 'VOd', 'OUL', 'F', '38741', '"QUo', '35711', 'ueya', '1990018', 'aq', 'ued', 'uomouny', 'ssew', 'Kamiqeqord', 'o44', 'Jo', 'anTeA', 'ayy', 'a', 'remorred', 'B', 'JOI', '&', 'Apuapuadapur', '38701', 'VOd', 'Sursn', 'ssepo', 'yoea', 'Jo', 'sardures', 'goaford', 'OM', 'JI', 'VOT', '07', 'quereamba', 'SouoDaq', 'VOd', '2', '"D', 'qurod', 'aya', 'pue', 'ULSIIO', 'ayt', 'UOaM10q', 'ay7', '01', '[enba', 'SI', ',0D', 'XIIqeu', 'au4', 'Jo', '90817', 'B', 'uayn', 'pl', 'D', 'D', 'JI', 'I', 'anyL', 'TSTVA/ANHL', '2', 's', 'i', '(', '', 'd', '-', 'chne', '', 'souensip', 'ueapiona', 'quawagens', 'NS', ':0.104', 'paqunu', 'IIOI', 'mor', 'B9LIM', 'IN', 'reg', 'IO', 'INUL', 'SALIM', '(sid', 'OT)', '9', 'Suruumpuey', 'meepp', 'pue', '197191', 'Teaides', 'uI', 'ASTVI']
rotation started
['UEN', 'a', 'e', 'ed', '.', 'A', '-', '1', ':', ':', ':', '5', 'E', ':', 'E', ':', 'à', 'à', 'S', '-', '4', ':', 'of', '1', ':', 'I', 'e', 'E', 'I', ':', '00', '5', '0', 'V', 'V', '8', 'I', '-', 'a', 'd', 'E', 'I', 'I', 'I', 'I', '-', 'a', 'I', 'e', '2', '8', 'à', 'I', 'I', 'I', '-', 'I', 'I', 'A', 'de', 'e', 'o', 'of', ':', 'I', 'I', '11', 'e', 'is', ':', ':', 's', 'I', '0', 'e', 'I', '-', 'd', '11', 'e', 'I', 'e', '-', 'a', 'of', '-', 'of', 'e', '8', 'à', 'I', 'E', 'I', 'E', 'E', 'e', '5', '8', 'I', '8', 'I', 'E', 'XX', '3', 'E', '€', 'E', 'a', 'of', 'e', '1', '8', '', 'I', 'E', 'I', 'I', '€', ':', 'W', 'a', 'E', 'V', 'e', '8', '$', 'e', 'X', 'I', 'E', 'E', '1E', 'I', '1E', 'I', 'a', '8', 'E', '1E', 't', '€', 'I', '7', '11', '3', '4', '10', 'I', 'I', 'is', 'e', 'E', 'X', 'I', 'I', '&', 'a', 'E', 'a', 'of', 'E', 'I', '1', 'I', 'e', 'I', 'e', 'a', 'iE', 'is', 'of', 'I', 'I', ':', 'e', 'de', '8', 'I', 'A', 'I', 'E', 'is', ':', 'I', '8', '0', 'a', '4', ':', 'I', '8', ':', 'I', 'I', ':', 'is', 'is', 'de', 'I', 'II', '4', 'a', 'A', '-', '1', 'is', 'A', '00', '0', 'I', '3', 'E', 'E', '-', '2', 'I', 'E', '-', 'S', 'E', '€', 'E', 'e', '6', 'I', 'I', '1', 'I', '-', 'I', 'I', 'M', '19', 'a', '6o']
rotation started
['in', 'capital', 'letter', 'and', 'clear', 'handwriting.', '6.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'Guyp', 'S', 'a', 'de', 'B.93', 'AI', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSA', 'TRUE', 'SN', 'Statement', '1', 'If', 'a', '€', 'Rd,', 'then', 'a', 'trace', 'of', 'the', 'matrix', 'aat', 'is', 'equal', 'to', 'the', 'Euclidean', 'distance', 'between', 'the', 'origin', 'and', 'the', 'point', 'a.', '2', 'PCA', 'becomes', 'equivalent', 'to', 'LDA', 'if', 'we', 'project', 'samples', 'of', 'each', 'class', 'using', 'PCA', 'FALSE', 'independently.', '3', 'For', 'a', 'particular', 'I,', 'the', 'value', 'of', 'the', 'probability', 'mass', 'function', 'can', 'be', 'greater', 'than', 'FALSE', 'one.', '4', 'The', 'PCA', 'will', '2D-data', 'if', '>', 'FALSE', 'project', 'points', 'to', '[1,0J7', 'variance(r)', 'variance(y).', '5', 'If', 'data', 'distributions', 'exactly', 'follow', 'y=X,', 'then', 'the', 'rank', 'of', 'the', 'covariance', 'matrix', 'TRUE', 'will', 'be', 'zero.', '6', 'If', 'X', 'and', 'Y', 'are', 'two', 'real-valued', 'random', 'variables', 'such', 'that', 'Cou(X,Y)', '<', '0', 'then', 'at', 'least', 'one', 'of', 'X', 'or', 'Y', 'must', 'have', 'negative', 'variance', 'i.e.', 'either', 'a(X)', '<', '0', 'or', 'FALSE', 'a(Y)<0.', 'class', 'label.', '7', 'Naive', 'Bayes', 'assumes', 'that', 'all', 'features', 'are', 'conditionally', 'independent', 'given', 'the', 'TRUE', 'TRUE', '8', 'LDA', 'is', 'sensitive', 'to', 'outliers', 'in', 'the', 'dataset.', '9', 'A', 'die', 'is', 'loaded', 'SO', 'that', 'the', 'probability', 'of', 'a', 'face', 'coming', 'up', 'is', 'proportional', 'to', 'the', 'TRUE', 'number', 'on', 'that', 'face.', 'The', 'die', 'is', 'rolled', 'with', 'outcome', 'X.', 'The', 'expected', 'value', 'of', 'X', 'is', 'greater', 'than', '4.', '10', 'B', '=', '([1,1.1-1,0)', 'is', 'one', 'of', 'the', 'basis', 'in', '2D-space.', 'TRUE']
OCR detection done with doctr
left top x of SN: 438.515625
bottom right x of SN: 850.0585937499999
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:06:45] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : KYwE0DO.jpg
[2024/07/01 15:06:46] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:06:47] ppocr DEBUG: dt_boxes num : 44, elapsed : 0.12871670722961426
[2024/07/01 15:06:49] ppocr DEBUG: rec_res num  : 44, elapsed : 2.338980197906494
OCR detection done
left top x of SN: 493.0
bottom right x of SN: 889.0
left top y of SN: 1679.0
bottom right y of SN: 1968.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/KYwE0DO.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GdDku30.jpg
OCR detection done with doctr
left top x of T/F: 5837.5478515625
bottom right x of T/F: 7125.09375
left top x of SN: 993.19140625
bottom right x of SN: 1420.3349609375
first t/f detection
True
((5995.833984375, 2431.892578125), (6519.7783203125, 2669.150390625))
False
((6005.7197265625, 3015.1513671875), (6470.349609375, 3262.294921875))
True
((6084.8056640625, 3539.095703125), (6579.0927734375, 3766.4677734375))
fabe
((5946.4052734375, 4092.697265625), (6381.377929687501, 4329.955078125))
True
((5995.833984375, 4705.61328125), (6549.435546875, 4893.4423828125))
Teue
((5956.291015625, 5288.8720703125), (6539.5498046875, 5516.244140625))
True
((6055.1484375, 5753.501953125), (6579.0927734375, 5980.8740234375))
False
((5985.9482421875, 6218.1318359375), (6539.5498046875, 6494.9326171875))
True
((6055.1484375, 6702.533203125), (6539.5498046875, 6959.5625))
True
((6144.1201171875, 7246.2490234375), (6608.75, 7503.2783203125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2590, '2': 3173, '3': 3558, '4': 4152, '5': 4735, '6': 5328, '7': 5713, '8': 6316, '9': 6722, '10': 7325}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rijC15L.jpg
OCR detection done with doctr
left top x of SN: 1181.0205078125
bottom right x of SN: 1608.1640625
left top x of T/F: 5886.976562500001
bottom right x of T/F: 7105.322265625
first t/f detection
TRVE
((5887.0908203125, 2619.7216796875), (6460.4638671875, 2856.9794921875))
TRUE
((5817.890625, 3153.5517578125), (6519.7783203125, 3371.0380859375))
FALSE
((5896.976562500001, 3608.2958984375), (6490.12109375, 3835.66796875))
FALSE
((5847.5478515625, 4191.5546875), (6480.2353515625, 4428.8125))
FALSE
((5827.7763671875, 4804.470703125), (6381.377929687501, 5031.8427734375))
FALSE
((5857.43359375, 5259.21484375), (6430.806640625, 5506.3583984375))
FALSE
((5778.34765625, 5733.73046875), (6371.492187500001, 5970.98828125))
TRUETKUE
((5798.119140625, 6267.560546875), (6796.5791015625, 6494.9326171875))
FALSE
((5778.34765625, 6682.76171875), (6381.377929687501, 6969.4482421875))
TRME
((5748.6904296875, 7295.677734375), (6302.2919921875, 7542.8212890625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2649, '2': 3232, '3': 3618, '4': 4201, '5': 4764, '6': 5348, '7': 5733, '8': 6316, '9': 6702, '10': 7305}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WacNh4T.jpg
OCR detection done with doctr
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6729.59375
first t/f detection
True
((5554.21875, 1688.84375), (5906.4375, 1878.5))
False
((5572.281250000001, 2185.5625), (5879.34375, 2393.28125))
Falie
((5590.343749999999, 2745.5), (5906.4375, 2944.1875))
False
((5509.062499999999, 3215.125), (5843.218750000001, 3440.90625))
Trve
((5536.156249999999, 3648.625), (5888.374999999999, 3874.40625))
Tre
((5563.249999999999, 4335.0), (5906.4375, 4560.78125))
Tirve
((5572.281250000001, 4949.125), (5951.593750000001, 5120.71875))
Falte
((5554.21875, 5418.75), (5861.281249999999, 5617.4375))
True
((5554.21875, 5942.5625), (5933.53125, 6159.3125))
Flse
((6032.875000000001, 6547.65625), (6358.000000000001, 6728.28125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1616, '2': 2167, '3': 2718, '4': 3278, '5': 3648, '6': 4199, '7': 4931, '8': 5491, '9': 5861, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H2iPb1j.jpg
OCR detection done with doctr
left top x of SN: 208.52343749999997
bottom right x of SN: 430.3828125
left top x of T/F: 985.015625
bottom right x of T/F: 1353.732421875
first t/f detection
Fale
((1005.48046875, 495.3359375), (1080.478515625, 531.962890625))
collision happend with box:495.3359375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Thue
((1003.736328125, 582.54296875), (1096.17578125, 622.658203125))
text1 i.e the prev text is the winner
Truc
((1003.736328125, 674.982421875), (1080.478515625, 711.609375))
collision happend with box:674.982421875 and text:Truc solving on the basis of percent match boxes
the current box specification are
Truue
((1007.2246093749999, 769.166015625), (1087.455078125, 807.537109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:769.166015625 and text:Truue solving on the basis of percent match boxes
the current box specification are
Trwc
((1012.45703125, 875.55859375), (1087.455078125, 920.90625))
text1 i.e the prev text is the winner
True
((1012.45703125, 955.7890625), (1092.6875, 997.6484375))
collision happend with box:955.7890625 and text:True solving on the basis of percent match boxes
the current box specification are
Tuue
((1015.9453125, 1041.251953125), (1092.6875, 1077.87890625))
text2 i.e the incoming text is the winner
collision happend with box:1041.251953125 and text:Tuue solving on the basis of percent match boxes
the current box specification are
pale
((1019.4335937499999, 1124.970703125), (1094.431640625, 1159.853515625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fale
((1005.48046875, 495.3359375), (1080.478515625, 531.962890625))
Thue
((1003.736328125, 582.54296875), (1096.17578125, 622.658203125))
Truc
((1003.736328125, 674.982421875), (1080.478515625, 711.609375))
Truue
((1007.2246093749999, 769.166015625), (1087.455078125, 807.537109375))
Trwc
((1012.45703125, 875.55859375), (1087.455078125, 920.90625))
True
((1012.45703125, 955.7890625), (1092.6875, 997.6484375))
Tuue
((1015.9453125, 1041.251953125), (1092.6875, 1077.87890625))
pale
((1019.4335937499999, 1124.970703125), (1094.431640625, 1159.853515625))
Tywe
((998.5039062499999, 1208.689453125), (1087.455078125, 1250.548828125))
Fale
((1007.2246093749999, 1316.826171875), (1090.943359375, 1351.708984375))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['1', '6']
the assigned keys are ['2', '3', '4', '5', '7', '8', '9', '10']
['2', '3', '4', '5', '7', '8', '9', '10', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1215, '2': 601, '3': 669, '4': 774, '5': 873, '7': 1041, '8': 1145, '10': 1316, '1': 301}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UXsG00l.jpg
OCR detection done with doctr
left top x of T/F: 5562.281250000001
bottom right x of T/F: 6837.96875
left top x of SN: 303.1875000000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5617.437499999999, 1752.0625), (6159.312499999999, 1923.65625))
TRUE
((5463.906250000001, 2384.25), (5996.749999999999, 2601.0))
FALSE
((5572.281250000001, 3034.5), (6132.218749999999, 3169.96875))
TRUE
((5536.156249999999, 3612.5), (6123.1875, 3784.09375))
FALSE
((5590.343749999999, 4118.25), (6159.312499999999, 4280.8125))
TRUC
((5590.343749999999, 4903.96875), (6078.031249999999, 5075.5625))
TRUE
((5626.468750000001, 5491.0), (6059.968750000001, 5662.59375))
FALSE
((5626.468750000001, 6014.8125), (6195.437500000001, 6213.5))
TRUE
((5644.531249999999, 6628.9375), (6150.28125, 6800.53125))
TRUE
((5653.562500000001, 7234.03125), (6059.968750000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2474, '3': 3070, '4': 3666, '5': 4055, '6': 4651, '7': 5445, '8': 6041, '9': 6448, '10': 7243}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F4DRxwk.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6539.9375
left top x of SN: 610.25
bottom right x of SN: 1016.0312499999999
first t/f detection
TRUE
((5409.718750000001, 2059.125), (5879.34375, 2275.875))
TRUE
((5445.84375, 2628.09375), (5960.625, 2808.71875))
TRUE
((5445.84375, 3115.78125), (5951.593750000001, 3377.6875))
TRUE
((5463.906250000001, 3802.15625), (5933.53125, 4018.90625))
TRUE
((5427.781249999999, 4425.3125), (5897.406250000001, 4633.03125))
TRUE
((5463.906250000001, 4967.1875), (5906.4375, 5147.8125))
FALSE
((5481.968749999999, 5400.6875), (5960.625, 5617.4375))
TRUE
((5373.593749999999, 5951.59375), (5843.218750000001, 6123.1875))
TRVE
((5436.812500000001, 6439.28125), (5960.625, 6601.84375))
TRUE
((5400.687499999999, 7053.40625), (5879.34375, 7215.96875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2908, '3': 3278, '4': 3856, '5': 4407, '6': 4985, '7': 5355, '8': 5933, '9': 6321, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BLK52Gc.jpg
OCR detection done with doctr
left top x of SN: 91.79296874999997
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (962.359375, 914.4140625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
TRUE
((886.421875, 882.7734375), (962.359375, 914.4140625))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1142.2265625), (979.7617187500001, 1170.703125))
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((952.8671875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 593, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1240}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IZoP6L9.jpg
OCR detection done with doctr
left top x of T/F: 5459.171875
bottom right x of T/F: 6584.015625
left top x of SN: 626.2421875
bottom right x of SN: 1034.953125
first t/f detection
Talse
((5633.84375, 1610.125), (6091.265625, 1847.984375))
Trabs
((5661.289062499999, 2186.4765625), (6127.859375, 2406.0390625))
Calk
((5816.812499999999, 2360.296875), (6265.085937499999, 2589.0078125))
pall
((5835.109375, 2936.6484375), (6283.3828125, 3174.5078125))
Poux
((5944.890625, 3339.1796875), (6402.312499999999, 3577.0390625))
AHUd
((5743.625, 3705.1171875), (6255.9375, 3878.9375))
collision happend with box:3705.1171875 and text:AHUd solving on the basis of percent match boxes
the current box specification are
palx
((5844.2578125, 3851.4921875), (6292.531250000001, 4071.0546875))
text2 i.e the incoming text is the winner
False
((5597.25, 4363.8046875), (6100.4140625, 4583.3671875))
Txea
((5725.328125, 5022.4921875), (6210.1953125, 5251.203125))
palx
((5771.0703125, 5232.90625), (6201.046875, 5415.875))
True
((5661.289062499999, 5690.328125), (6118.7109375, 5864.1484375))
collision happend with box:5690.328125 and text:True solving on the basis of percent match boxes
the current box specification are
Friclg
((5725.328125, 5553.1015625), (6246.789062499999, 5726.921875))
text2 i.e the incoming text is the winner
Palk
((5752.7734375, 6220.9375), (6182.75, 6394.7578125))
Pal
((5853.40625, 6879.625), (6091.265625, 7016.8515625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1802, '2': 2323, '3': 2863, '4': 3412, '5': 3769, '6': 4336, '7': 5086, '8': 5672, '9': 6065, '10': 6870}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Hj9MaiP.jpg
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 916.6875000000001
left top x of T/F: 5598.40625
bottom right x of T/F: 6792.812499999999
first t/f detection
Tue
((5752.906249999999, 1887.53125), (6285.75, 2113.3125))
false
((5680.656250000001, 2438.4375), (6339.9375, 2691.3125))
false
((5770.96875, 3061.59375), (6339.9375, 3260.28125))
Cue
((5689.6875, 3576.375), (6294.781249999999, 3747.96875))
Taue.
((5680.656250000001, 4082.125), (6303.812500000001, 4325.96875))
falie
((5752.906249999999, 4614.96875), (6339.9375, 4931.0625))
Tue.
((5626.468750000001, 5355.53125), (6339.9375, 5554.21875))
Taue.
((5707.750000000001, 5888.375), (6358.000000000001, 6096.09375))
F
((5716.78125, 6385.09375), (5933.53125, 6601.84375))
collision happend with box:6385.09375 and text:F solving on the basis of percent match boxes
the current box specification are
Aobe
((5942.562499999999, 6394.125), (6529.59375, 6647.0))
text2 i.e the incoming text is the winner
Teue
((5816.125000000001, 6719.25), (6312.84375, 6899.875))
Tawe
((5716.78125, 7080.5), (6267.687499999999, 7288.21875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2483, '3': 3061, '4': 3648, '5': 4027, '6': 4624, '7': 5400, '8': 5996, '9': 6394, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IUmBbJR.jpg
OCR detection done with doctr
left top x of SN: 1361.6093749999998
bottom right x of SN: 1776.5468750000002
left top x of T/F: 5708.5859375
bottom right x of T/F: 6887.703125
first t/f detection
Trve
((5816.476562500001, 2848.6171875), (6139.515625, 3073.765625))
Falle
((5806.6875, 3338.0703125), (6198.25, 3543.640625))
True
((5875.2109375, 3710.0546875), (6276.5625, 3964.5703125))
Falle
((5865.421875, 4287.609375), (6217.828125, 4542.125))
Pre
((5454.28125, 4826.0078125), (5718.5859375, 4982.6328125))
collision happend with box:4826.0078125 and text:Pre solving on the basis of percent match boxes
the current box specification are
Falsl
((5914.3671875, 4796.640625), (6345.085937500001, 5051.15625))
text2 i.e the incoming text is the winner
distribution.
((5033.351562500001, 5354.6171875), (5738.1640625, 5521.03125))
collision happend with box:5354.6171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tiul
((5875.2109375, 5325.25), (6227.6171875, 5530.8203125))
text1 i.e the prev text is the winner
directly
((5297.65625, 5726.6015625), (5747.953125, 5902.8046875))
collision happend with box:5726.6015625 and text:directly solving on the basis of percent match boxes
the current box specification are
True
((5885.0, 5755.96875), (6256.984375, 5971.328125))
text2 i.e the incoming text is the winner
space.
((5395.546875, 6313.9453125), (5757.7421875, 6460.78125))
collision happend with box:6313.9453125 and text:space. solving on the basis of percent match boxes
the current box specification are
Thue
((5963.3125, 6225.84375), (6384.2421875, 6470.5703125))
text2 i.e the incoming text is the winner
prediction
((5209.554687500001, 6656.5625), (5787.109375, 6832.765625))
collision happend with box:6656.5625 and text:prediction solving on the basis of percent match boxes
the current box specification are
Falle
((5992.679687500001, 6607.6171875), (6423.3984375, 6852.34375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Trve
((5816.476562500001, 2848.6171875), (6139.515625, 3073.765625))
Falle
((5806.6875, 3338.0703125), (6198.25, 3543.640625))
True
((5875.2109375, 3710.0546875), (6276.5625, 3964.5703125))
Falle
((5865.421875, 4287.609375), (6217.828125, 4542.125))
Pre
((5454.28125, 4826.0078125), (5718.5859375, 4982.6328125))
collision happend with box:4826.0078125 and text:Pre solving on the basis of percent match boxes
the current box specification are
Falsl
((5914.3671875, 4796.640625), (6345.085937500001, 5051.15625))
text2 i.e the incoming text is the winner
distribution.
((5033.351562500001, 5354.6171875), (5738.1640625, 5521.03125))
collision happend with box:5354.6171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tiul
((5875.2109375, 5325.25), (6227.6171875, 5530.8203125))
text1 i.e the prev text is the winner
directly
((5297.65625, 5726.6015625), (5747.953125, 5902.8046875))
collision happend with box:5726.6015625 and text:directly solving on the basis of percent match boxes
the current box specification are
True
((5885.0, 5755.96875), (6256.984375, 5971.328125))
text2 i.e the incoming text is the winner
space.
((5395.546875, 6313.9453125), (5757.7421875, 6460.78125))
Thue
((5963.3125, 6225.84375), (6384.2421875, 6470.5703125))
prediction
((5209.554687500001, 6656.5625), (5787.109375, 6832.765625))
collision happend with box:6656.5625 and text:prediction solving on the basis of percent match boxes
the current box specification are
Falle
((5992.679687500001, 6607.6171875), (6423.3984375, 6852.34375))
text2 i.e the incoming text is the winner
Falie
((6012.2578125, 7204.75), (6423.3984375, 7449.4765625))
the
((5601.1171875, 7400.53125), (5836.0546875, 7557.15625))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2926, '2': 3435, '3': 3778, '4': 4326, '5': 4845, '6': 5393, '7': 5755, '8': 6313, '9': 6685, '10': 7253}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lx19RYA.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 826.3749999999999
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRIJE
((5192.96875, 1625.625), (5707.750000000001, 1833.34375))
TRIJE
((5183.9375, 2122.34375), (5626.468750000001, 2330.0625))
FALSE
((5202.0, 2718.40625), (5716.78125, 2971.28125))
FALSE
((5220.062500000001, 3206.09375), (5698.718749999999, 3413.8125))
TRUE
((5238.124999999999, 3684.75), (5725.812499999999, 3865.375))
TRUE
((5174.90625, 4298.875), (5725.812499999999, 4497.5625))
TRDE
((5229.09375, 4985.25), (5626.468750000001, 5174.90625))
TRUE
((5183.9375, 5391.65625), (5653.562500000001, 5572.28125))
FALSE
((5202.0, 5942.5625), (5707.750000000001, 6105.125))
TRUE
((5156.84375, 6502.5), (5662.59375, 6683.125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1643, '2': 2176, '3': 2718, '4': 3260, '5': 3621, '6': 4172, '7': 4885, '8': 5427, '9': 5789, '10': 6520}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : t4fbUW1.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1977.84375), (5978.687500000001, 2230.71875))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
false
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5400.687499999999, 4244.6875), (5960.625, 4443.375))
Teue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5310.375), (5960.625, 5527.125))
False
((5373.593749999999, 5780.0), (5915.468749999999, 6032.875))
Toue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2772, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Sb9xEDW.jpg
OCR detection done with doctr
left top x of T/F: 5908.837890625
bottom right x of T/F: 7194.367187499999
left top x of SN: 946.90625
bottom right x of SN: 1378.83203125
first t/f detection
TRUE
((6073.869140625, 2451.431640625), (6587.410156249999, 2635.53125))
TRUE
((6025.421875, 2994.041015625), (6509.89453125, 3178.140625))
FALSE
((5986.6640625, 3536.650390625), (6703.68359375, 3711.060546875))
TRUE
((5938.216796875, 4098.638671875), (6529.2734375, 4311.806640625))
FALSE
((5938.216796875, 4718.763671875), (6548.65234375, 4941.62109375))
FALSE
((5870.390625000001, 5241.994140625), (6442.068359374999, 5464.8515625))
FALSE
((5812.253906249999, 5726.466796875), (6345.173828125, 5910.56640625))
TRVE
((5812.253906249999, 6220.62890625), (6335.484375, 6414.41796875))
TRUE
((5841.322265625, 6685.72265625), (6354.86328125, 6908.580078125))
TRUE
((5725.048828125, 7344.60546875), (6354.86328125, 7567.462890625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['1', '7', '8']
the assigned keys are ['2', '3', '4', '5', '6', '9', '10']
['2', '3', '4', '5', '6', '9', '10', '2', '3', '4', '5', '6', '9', '10']
printing the number dict y_coordinate
{'2': 3061, '3': 3459, '4': 4069, '5': 4660, '6': 5271, '9': 6685, '10': 7247, '1': 2761}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hTdvXQF.jpg
OCR detection done with doctr
left top x of SN: 443.27343750000017
bottom right x of SN: 861.1328124999999
left top x of T/F: 5697.031250000001
bottom right x of T/F: 6940.804687500001
first t/f detection
FALS
((5716.1796875, 1985.2109375), (6274.234375, 2186.4765625))
TRUE
((5789.3671875, 2552.4140625), (6429.7578125, 2771.9765625))
FALSE
((5716.1796875, 3110.46875), (6530.390625, 3357.4765625))
TRUE
((5670.4375, 3668.5234375), (6347.421875, 3888.0859375))
FAESE
((5679.5859375, 4162.5390625), (6411.4609375, 4409.546875))
FALSE
((5734.4765625, 4876.1171875), (6448.054687500001, 5095.6796875))
TRUE
((5688.734375, 5543.953125), (6301.6796875, 5754.3671875))
FALSE
((5725.328125, 6083.7109375), (6411.4609375, 6248.3828125))
TRUE
((5688.734375, 6650.9140625), (6255.9375, 6870.4765625))
TRUE
((5688.734375, 7263.859375), (6265.085937499999, 7474.2734375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1875, '2': 2479, '3': 3073, '4': 3677, '5': 4080, '6': 4684, '7': 5489, '8': 6102, '9': 6504, '10': 7318}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nG4XW3E.jpg
OCR detection done with doctr
left top x of SN: 102.82226562499997
bottom right x of SN: 321.494140625
left top x of T/F: 956.2109375
bottom right x of T/F: 1337.01171875
first t/f detection
True
((971.044921875, 427.001953125), (1056.4453125, 473.73046875))
collision happend with box:427.001953125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((969.4335937499999, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
fe
((958.154296875, 787.939453125), (1008.10546875, 834.66796875))
text1 i.e the prev text is the winner
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1095.1171875, 834.66796875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((971.044921875, 427.001953125), (1056.4453125, 473.73046875))
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((969.4335937499999, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
fe
((958.154296875, 787.939453125), (1008.10546875, 834.66796875))
collision happend with box:787.939453125 and text:fe solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1095.1171875, 834.66796875))
text2 i.e the incoming text is the winner
False
((974.267578125, 874.951171875), (1070.947265625, 912.01171875))
True
((972.6562500000001, 963.57421875), (1056.4453125, 1005.46875))
False
((972.6562500000001, 1052.197265625), (1062.890625, 1089.2578125))
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
False
((991.9921875, 1242.333984375), (1098.33984375, 1281.005859375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 578, '2': 509, '3': 578, '4': 681, '5': 784, '6': 887, '7': 955, '8': 1060, '9': 1129, '10': 1235}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wGegiaZ.jpg
rotation started
['1E', '6', '0', 'CI', '1', 'os', 't', '1', '2', 'E', 'I', '9', 'F', 'E', 'I', 'T', 'po', 'I', 'I', 'I', '2', '€', 'E', 'E', '8', 'I', '1', 'E', 'a', 'I', 'I', 'E', '9', 'I', 'I', 'I', 'E', 'a', 'I', '8', 'a', 'I', 's', 'E', 'E', '1', 'I', 'E', 'I', 'I', '8', 'I', 'f', '2', 'I', 'I', 'g', 'E', 'iE', 'I', '2', 'E', 'ta', 'I', 'E', 'I', 'E', 'Q', 'E', '%', 'B', 'I', 'I', 'E', 'I', 'I', 'I', 'a', 'f', 'I', 'I', '8', 'iE', 'I', 'I', '1', '8', 'I', 'E', 'E', '2', 'I', 'po', 'E', '1', 'la', 'É', 'I', 'I', 'L', 'E', '6', 'I', 'I', '8', 'I', 'LE', 'I', 'e', 'I', 'a', 'I', '€', 'a', '2', 'I', 'f', 'E', '8', 'I', '1', 'F', 'I', '1', 'E', 'p', 'I', '2', 'I', 'I', '3', 'I', 'I', 'I', 'E', 'E', 'I', 'tn', 'e', ':', 'E', '€', 'A', 'f', 'I', 'E', 'I', 'E', 'à', 'a', 'F', 'I', 'I', 'I', 't', 'E', 'I', 'I', 'E', 'F', 'I', '1', 'I', 'I', 'I', '7', 'E', 'I', 'à', 'à', 'I', ':', 'N', 'o', 'P', 'A', 's', 'E', 'E', '-', 'a', 'A', '2', 'E', 'I', 'I', 'I', '7', 'I', 'L', 'E', '2', 't', '1', 'I', 'E', '2', '9', 'i', 'I', 'E', 'E', 'I', ':', 'a', 'I', 'I', 'D', 'E', ':', 'a', 'a', '-', 'I']
rotation started
['e2ep', 'uoosun', "'mou", '03', 'Tem', 'ez1e13098', 'jou', 'op', '3847', 'ezep', 'Bururenz', 'au7', 'ut', 'sielap', 'Jo', 'asjour', 'oypads', 'amades', '04', 'uear', 'Keur', '[apottr', 'ays', 'se', "'saseals", '-us', 'Sunagrono', 'Jo', 'ysu', 'aua', "'IAS", 'ur', 'Jaleurered', 'D', 'aua', 'Jo', 'anfeA', 'yary', '8', 'YIIAL', 'OT', 'SAyL', "'WAS", '1801-SA-000', 'ue41', 'JOMOTS', 'SI', 'NAS', 'auo-SA-200', 'Suzsn', 'Inal', 'uororpard', 'e', 'Suppeuz', "'sossepp", 'Jo', 'Jaqunt', 'a8181', 'e', 'YorAn', 'suargoud', 'ssepoumur', '101', '6', '9sae', 'raoeds', 'peursto', 'au4', 'ur', 'neaul-tou', 'aq', 'ured', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uotstap', 'OUL', '8', 'D', 'Inat', '35703', '42091', "'sopou", 'Jo', 'zaquhd', 'au1', '02', 'reuonrodord', 'Spgoomp', 'SI', 'BOIL', 'TorsIeE', '917', 'ur', 'uonopard', 'B', 'Sutyeur', 'JOJ', 'pamnbar', 'atUIL', 'AUL', '2', 'POYL', 'Tonnqusip', 'aeissnes', 'B', 'SKeMTe', 'St', 'Suornquosmp', 'uerssnes', 'OM7', 'Jo', 'BIIXIILZ', 'V', '9', 'Treay', 'ptre', 'torsto', '3GyL', '-Bxd', 'uaamzaq', 'gord', 'B', 'SI', 'aAmo', '(b08)', 'onsuagpe.reyp', 'Sureado', 'Jaaraoey', 'OUL', 'S', 'YIOMIOU', 'Temnau', 'aus', 'uI', 'squarpe1s', 'ay2', 'aanduoo', '03', 'pasn', 'JNyL', 'SI', 'quaosap', 'quaspers', 'apgA', "'say8ram", 'aup', 'ogepdn', '03', 'pasn', 'SI', 'u0ne80doxdypeg', '+', 'Smft', 'jvtorsuoup-p', 'Aue', 'JOJ', 'oragauz', 'aDueASIp', 'PITBA', 'e', 'SI', '(4-z)@umpungatupoy', '1', 'I', 'S', '35101', '-R', 'pue', 'I', 'S1010a1', 'ayissep', 'reautl-nou', '8', 'SI', 'NNX', '2', 'Inyt', '35148', 'agva/anHr', '-auautriordap', 'quouagess', 'NS', '108101', 'ypnu', 'SI', 'NNX', 'JOJ', 'quotaumber', 'ase101s', 'au', 'eoidA', 'I', '101', 'WAS', 'ueu9', 'tasau', 'saqunn', 'Ijou', 'mor', 'O1UM', 'OAULHL', '(sid', 'ot)', '6', '10', 'INUL', 'Teades', 'UI', 'SSTVE', 'Rurguzmpuey', 'Jeapo', 'pue', 'S1011ar']
rotation started
['I', ':', '2', '2', 'I', ':', 'L', '8', '-', 'I', ':', 'I', 'e', '€', 'E', 'a', 'E', ':', 'I', '1', 'ls', 'E', 'e', 'I', 'is', 'E', 'a', 'e', 'I', 'I', 'A', 'LE', 'is', 'I', 'I', 'I', 'I', '2', 'I', 'd', 'I', '1', 'à', 'I', 'a', 'off', '5', 'a', '', 'a', 'I', '$', 'is', 'E', ':', 'I', 'I', 'i', 'à', 'a', ':', 'a', 'I', 'I', 'I', 'E', 'a', 'I', 'I', 'I', '#', 'I', 'of', ':', 'I', 'i', 'I', 'TI', '8', 'is', 'De', 'iE', '0o', 'e', 'i', 'I', 'I', '7', 'e', 'I', 'E', 'I', '7', 'a', 'i', '.E', 'a', 'I', 'E', ':', 'a', 'o', 'is', 'a', 'I', 'de', 'I', 'S', '8', 'a', 'I', 'I', '', 'I', 'i', '1', 'I', 'I', 'of', ':', 'I', '3', 'a', '1', 'is', 'e', ':', ':', '2', 'e', 'I', 'E', 'I', 'a', 'E', 'of', 'de', 's', 'I', 'E', 'I', 'I', '1', 'à', 'e', 'I', 'E', 'I', '%', 'I', '8', 'à', 'a', 'a', '6', 'I', 'e', 'm', '8', 'I', 'E', 'i', 'a', '3', 'I', ':', 'I', 'à', 'I', 'ad', '1', ']', '1', 'I', 'I', 'I', '2', '1', 'I', 'I', 'I', 'e', 'I', 'A', 'à', 'I', 'à', 'E', 'I', 'E', 'I', 'I', 'a', 'i', '#', '1', '0o', '9', 'of', 'I', '1', 'E', 'I', '1', 'in', '2', 't', 'E', 'à', 'E', 'e', 'd', '5', '1', '6', 'N']
rotation started
['letters', 'and', 'clear', 'handwriting,', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'of', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALBE', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'FALSE', '1', 'Typically:', 'the', 'storage', 'tequirement', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'RRUE', '3', '1-coin-Stmalanitytr.', '3)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRaur', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRUE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'vectors', 'I', 'and', 'y-', 'FAYSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'TREE', 'cision', 'and', 'Recall,', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'Teosr', 'FALSE', 'TRUE', 'TRUE', 'TRVE', 'proportional', 'to', 'the', 'pumber', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'RADSE', '9', 'For', 'multiclass', 'problens', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-VS-rest', 'SVM,', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'as', 'the', 'model', 'learn', 'to', 'capture', 'noise', 'specific', 'creases,', 'may', 'or', 'details', 'in', 'the']
OCR detection done with doctr
left top x of SN: 1390.9765625
bottom right x of SN: 1805.9140624999998
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:09:36] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : wGegiaZ.jpg
[2024/07/01 15:09:37] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:09:38] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.16823983192443848
[2024/07/01 15:09:40] ppocr DEBUG: rec_res num  : 40, elapsed : 2.0460400581359863
OCR detection done
left top x of SN: 1460.0
bottom right x of SN: 1799.0
left top y of SN: 2203.0
bottom right y of SN: 2479.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/wGegiaZ.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : I3rHIGa.jpg
OCR detection done with doctr
left top x of SN: 734.8906250000002
bottom right x of SN: 1155.6953125
left top x of T/F: 5497.62890625
bottom right x of T/F: 6680.109375
first t/f detection
TRUE
((5683.6015625, 2148.71875), (6239.3046875, 2315.4296875))
FALSE
((5692.86328125, 2667.375), (6211.51953125, 2852.609375))
FALSE
((5637.29296875, 3176.76953125), (6192.99609375, 3352.7421875))
TRUE
((5516.890625, 3760.2578125), (6044.80859375, 3945.4921875))
TROE
((5563.19921875, 4362.26953125), (6091.117187499999, 4528.98046875))
TROE
((5516.890625, 4853.140625), (6035.546875, 5019.8515625))
TROE
((5526.15234375, 5306.96484375), (6017.0234375, 5473.67578125))
TRU
((5553.9375, 5807.09765625), (5905.8828125, 5983.0703125))
FALSE
((5590.984375000001, 6260.921875), (6100.378906249999, 6427.6328125))
TRUE
((5563.19921875, 6853.671875), (6044.80859375, 7038.90625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2111, '2': 2685, '3': 3065, '4': 3639, '5': 4223, '6': 4806, '7': 5195, '8': 5788, '9': 6177, '10': 6779}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RDvyz0H.jpg
OCR detection done with doctr
left top x of SN: 102.15625000000003
bottom right x of SN: 322.1953125
left top x of T/F: 886.4921875
bottom right x of T/F: 1253.4453125
first t/f detection
F
((934.9296875, 426.015625), (960.5546874999999, 462.8515625))
collision happend with box:426.015625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((933.328125, 507.6953125), (958.9531249999999, 542.9296875))
text2 i.e the incoming text is the winner
collision happend with box:507.6953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((936.53125, 589.375), (965.359375, 626.2109375))
text2 i.e the incoming text is the winner
T.
((910.90625, 968.9453125), (962.1562499999999, 1000.9765625))
T
((926.921875, 698.28125), (962.1562499999999, 733.515625))
collision happend with box:698.28125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((926.921875, 800.78125), (954.1484375, 834.4140625))
text2 i.e the incoming text is the winner
collision happend with box:800.78125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((928.5234375, 888.8671875), (960.5546874999999, 922.5))
text2 i.e the incoming text is the winner
collision happend with box:888.8671875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((925.3203125, 1053.828125), (952.546875, 1092.265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((934.9296875, 426.015625), (960.5546874999999, 462.8515625))
F
((933.328125, 507.6953125), (958.9531249999999, 542.9296875))
F
((936.53125, 589.375), (965.359375, 626.2109375))
T.
((910.90625, 968.9453125), (962.1562499999999, 1000.9765625))
T
((926.921875, 698.28125), (962.1562499999999, 733.515625))
T
((926.921875, 800.78125), (954.1484375, 834.4140625))
T
((928.5234375, 888.8671875), (960.5546874999999, 922.5))
F
((925.3203125, 1053.828125), (952.546875, 1092.265625))
F
((923.71875, 1133.90625), (952.546875, 1167.5390625))
F
((920.5156249999999, 1234.8046875), (950.9453125, 1268.4375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': False}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 427, '2': 526, '3': 594, '4': 696, '5': 797, '6': 896, '8': 1068, '9': 1133, '10': 1236}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'UNASSIGNED', '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : apa52fV.jpg
OCR detection done with doctr
left top x of T/F: 5395.1328125
bottom right x of T/F: 6620.609375
left top x of SN: 562.203125
bottom right x of SN: 980.0625000000001
first t/f detection
TRVE
((5542.359375, 1939.46875), (5981.484375, 2113.2890625))
TRUE
((5478.3203125, 2497.5234375), (5972.3359375, 2680.4921875))
FALSE
((5505.765624999999, 2991.5390625), (5990.6328125, 3201.953125))
FALSE
((5450.875, 3641.078125), (5926.59375, 3805.75))
FALSE
((5441.7265625, 4244.875), (5908.296875, 4382.1015625))
FALSE
((5423.4296875, 4748.0390625), (5871.703125, 4912.7109375))
FALSE
((5441.7265625, 5214.609375), (5890.0, 5379.28125))
TRUE
((5423.4296875, 5754.3671875), (5853.40625, 5891.59375))
TRVE
((5368.539062499999, 6239.234375), (5844.2578125, 6403.90625))
FALSE
((5450.875, 6861.328125), (5935.7421875, 7035.1484375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2067, '2': 2643, '3': 3028, '4': 3613, '5': 4189, '6': 4775, '7': 5159, '8': 5745, '9': 6138, '10': 6733}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MKo064b.jpg
OCR detection done with doctr
left top x of SN: 944.4062499999999
bottom right x of SN: 1350.1875000000002
left top x of T/F: 5300.375
bottom right x of T/F: 6467.687499999999
first t/f detection
Ave
((5391.65625, 2528.75), (5707.750000000001, 2727.4375))
False
((5346.499999999999, 2998.375), (5752.906249999999, 3215.125))
Trul
((5409.718750000001, 3386.71875), (5798.0625, 3603.46875))
Falle
((5346.499999999999, 3928.59375), (5725.812499999999, 4208.5625))
Folle
((5382.625000000001, 4470.46875), (5825.15625, 4687.21875))
Tire
((5319.406249999999, 4958.15625), (5671.624999999999, 5202.0))
Tyue
((5319.406249999999, 5427.78125), (5689.6875, 5617.4375))
Taxe
((5355.531250000001, 5879.34375), (5770.96875, 6114.15625))
Falie
((5382.625000000001, 6267.6875), (5798.0625, 6502.5))
Falie
((5364.5625, 6890.84375), (5752.906249999999, 7080.5))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2465, '2': 2998, '3': 3350, '4': 3901, '5': 4416, '6': 4958, '7': 5310, '8': 5861}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pKLNQz5.jpg
OCR detection done with doctr
left top x of T/F: 5614.6953125
bottom right x of T/F: 6940.804687500001
left top x of SN: 543.9062499999999
bottom right x of SN: 961.765625
first t/f detection
TRVE
((5624.6953125, 1820.5390625), (6301.6796875, 2076.6953125))
TRUE
((5606.3984375, 2479.2265625), (6246.789062499999, 2744.53125))
FALS
((5642.9921875, 2964.09375), (6237.640625, 3211.1015625))
collision happend with box:2964.09375 and text:FALS solving on the basis of percent match boxes
the current box specification are
L
((6255.9375, 2982.390625), (6457.203125, 3183.65625))
text1 i.e the prev text is the winner
FALSE
((5606.3984375, 3668.5234375), (6448.054687500001, 3970.421875))
TRVE
((5569.804687500001, 4345.5078125), (6201.046875, 4555.921875))
JRUE
((5642.9921875, 4931.0078125), (6201.046875, 5141.421875))
FALSE
((5606.3984375, 5452.46875), (6274.234375, 5653.734375))
PALSE
((5578.953125, 5964.78125), (6292.531250000001, 6184.34375))
TRUE
((5578.953125, 6541.1328125), (6072.96875, 6760.6953125))
TRUE
((5551.507812500001, 7144.9296875), (6146.15625, 7346.1953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2159, '2': 2771, '3': 3174, '4': 3778, '5': 4382, '6': 4995, '7': 5397, '8': 6019, '9': 6431, '10': 7053}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xE2j1uA.jpg
OCR detection done with doctr
left top x of SN: 370.08593750000017
bottom right x of SN: 787.9453124999999
left top x of T/F: 5651.289062499999
bottom right x of T/F: 6876.765625
first t/f detection
TRUE
((5807.6640625, 2122.4375), (6384.015625, 2332.8515625))
FALSE
((5716.1796875, 2762.828125), (6292.531250000001, 2936.6484375))
FALSE
((5734.4765625, 3357.4765625), (6429.7578125, 3558.7421875))
TR
((5743.625, 3860.640625), (6018.078125000001, 4052.7578125))
F
((5771.0703125, 4336.359375), (5917.4453125, 4537.625))
collision happend with box:4336.359375 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5917.4453125, 4354.65625), (6420.609375, 4537.625))
text2 i.e the incoming text is the winner
FALSE
((5780.21875, 5022.4921875), (6347.421875, 5196.3125))
TRUE
((5771.0703125, 5717.7734375), (6338.2734375, 5928.1875))
FALSE
((5780.21875, 6266.6796875), (6393.1640625, 6440.5))
TRUE
((5707.031250000001, 6815.5859375), (6319.9765625, 7016.8515625))
TRUE
((5670.4375, 7428.53125), (6246.789062499999, 7648.09375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2040, '2': 2653, '3': 3256, '4': 3869, '5': 4263, '6': 4885, '7': 5699, '8': 6303, '9': 6724, '10': 7538}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DpgnoTP.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6765.718749999999
left top x of SN: 537.9999999999999
bottom right x of SN: 943.7812500000001
first t/f detection
FALSE
((5554.21875, 1815.28125), (6412.187500000001, 2104.28125))
TRVE
((5563.249999999999, 2420.375), (6303.812500000001, 2673.25))
FALSE
((5590.343749999999, 3043.53125), (6303.812500000001, 3251.25))
FALSE
((5635.5, 3522.1875), (6394.125, 3766.03125))
TRVE
((5590.343749999999, 4009.875), (6276.718750000001, 4181.46875))
FALSE
((5635.5, 4633.03125), (6367.03125, 4849.78125))
TRVE
((5563.249999999999, 5337.46875), (6204.46875, 5545.1875))
TRVE
((5644.531249999999, 5852.25), (6303.812500000001, 6023.84375))
TRUE
((5581.3125, 6367.03125), (6294.781249999999, 6619.90625))
TRUE
((5662.59375, 6999.21875), (6403.156249999999, 7197.90625))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2555, '3': 3124, '4': 3693, '5': 4073, '6': 4651, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AoWLqhH.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6666.375000000001
left top x of SN: 438.6562500000001
bottom right x of SN: 871.53125
first t/f detection
Toue
((5545.187500000001, 2077.1875), (5933.53125, 2266.84375))
Taue
((5355.531250000001, 2601.0), (5861.281249999999, 2826.78125))
Taue
((5463.906250000001, 3052.5625), (5852.25, 3287.375))
Taue
((5283.28125, 3757.0), (5734.843750000001, 3982.78125))
Tue
((5355.531250000001, 4380.15625), (5807.093749999999, 4605.9375))
fale
((5355.531250000001, 4849.78125), (5825.15625, 5084.59375))
True
((5382.625000000001, 5391.65625), (5852.25, 5626.46875))
Tue
((5400.687499999999, 5888.375), (5879.34375, 6114.15625))
Toue
((5418.75, 6358.0), (5870.312500000001, 6592.8125))
fake
((5364.5625, 7026.3125), (5789.031250000001, 7252.09375))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['2', '4', '5', '6', '8', '9']
the assigned keys are ['1', '3', '7', '10']
['1', '3', '7', '10', '1', '3', '7', '10']
printing the number dict y_coordinate
{'1': 2176, '3': 3169, '7': 5328, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GRBnj1Z.jpg
OCR detection done with doctr
left top x of T/F: 5321.9453125
bottom right x of T/F: 6483.3828125
left top x of SN: 845.8046875
bottom right x of SN: 1254.515625
first t/f detection
TRUE
((5350.2421875, 2067.546875), (6164.453125, 2323.703125))
TRUE
((5341.09375, 2524.96875), (6072.96875, 2790.2734375))
TRUE
((5322.796875, 2991.5390625), (6137.0078125, 3275.140625))
FALSE
((5341.09375, 3549.59375), (6228.4921875, 3842.34375))
FALSE
((5359.390625, 4116.796875), (6301.6796875, 4400.3984375))
FALSE
((5368.539062499999, 4638.2578125), (6237.640625, 4848.671875))
TRUE
((5377.6875, 5095.6796875), (6201.046875, 5351.8359375))
FALSE
((5405.1328125, 5553.1015625), (6246.789062499999, 5855.0))
TRUE
((5386.8359375, 5992.2265625), (6219.34375, 6275.828125))
TRUE
((5414.281250000001, 6714.953125), (6265.085937499999, 6998.5546875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2131, '2': 2671, '3': 3028, '4': 3577, '5': 4125, '6': 4674, '7': 5049, '8': 5617, '9': 6001, '10': 6586}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gyP6GmY.jpg
OCR detection done with doctr
left top x of SN: 157.05957031249997
bottom right x of SN: 382.806640625
left top x of T/F: 1010.5068359375
bottom right x of T/F: 1395.0234375
first t/f detection
F
((1059.4765625, 460.859375), (1105.2236328125, 516.7724609375))
collision happend with box:460.859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1074.7255859375, 537.1044921875), (1113.6953125, 591.3232421875))
text2 i.e the incoming text is the winner
T
((1045.921875, 845.4736328125), (1108.6123046875, 891.220703125))
collision happend with box:845.4736328125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1017.1181640625, 923.4130859375), (1101.8349609375, 967.4658203125))
text2 i.e the incoming text is the winner
collision happend with box:923.4130859375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1045.921875, 1013.212890625), (1076.419921875, 1057.265625))
text2 i.e the incoming text is the winner
collision happend with box:1013.212890625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1032.3671875, 1094.541015625), (1071.3369140625, 1138.59375))
text2 i.e the incoming text is the winner
A
((1089.974609375, 1297.861328125), (1115.3896484375, 1333.4423828125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4', '5']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9', '10']
['1', '2', '3', '6', '7', '8', '9', '10', '1', '2', '3', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 455, '2': 557, '3': 626, '6': 935, '7': 1004, '8': 1106, '9': 1179, '10': 1279}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uCpvJcc.jpg
OCR detection done with doctr
left top x of SN: 124.34960937499997
bottom right x of SN: 341.240234375
left top x of T/F: 913.681640625
bottom right x of T/F: 1275.85546875
first t/f detection
Ieue
((932.904296875, 375.0546875), (1008.22265625, 402.72265625))
collision happend with box:375.0546875 and text:Ieue solving on the basis of percent match boxes
the current box specification are
FALSE
((940.58984375, 418.09375), (1025.130859375, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((932.904296875, 476.50390625), (1020.51953125, 511.857421875))
text2 i.e the incoming text is the winner
collision happend with box:476.50390625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:557.970703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((928.29296875, 685.55078125), (1000.537109375, 716.29296875))
text1 i.e the prev text is the winner
TRVE
((929.830078125, 751.646484375), (1002.0742187500001, 782.388671875))
collision happend with box:751.646484375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((923.681640625, 856.169921875), (975.9433593750001, 889.986328125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Ieue
((932.904296875, 375.0546875), (1008.22265625, 402.72265625))
collision happend with box:375.0546875 and text:Ieue solving on the basis of percent match boxes
the current box specification are
FALSE
((940.58984375, 418.09375), (1025.130859375, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((932.904296875, 476.50390625), (1020.51953125, 511.857421875))
text2 i.e the incoming text is the winner
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
TRVE
((928.29296875, 685.55078125), (1000.537109375, 716.29296875))
collision happend with box:685.55078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((929.830078125, 751.646484375), (1002.0742187500001, 782.388671875))
text2 i.e the incoming text is the winner
FAL
((923.681640625, 856.169921875), (975.9433593750001, 889.986328125))
collision happend with box:856.169921875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((977.48046875, 857.70703125), (1008.22265625, 886.912109375))
text1 i.e the prev text is the winner
FAL
((923.681640625, 942.248046875), (974.40625, 974.52734375))
collision happend with box:942.248046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((975.9433593750001, 943.78515625), (1008.22265625, 971.453125))
text1 i.e the prev text is the winner
FAL
((926.7558593749999, 1032.9375), (979.017578125, 1062.142578125))
collision happend with box:1032.9375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((980.5546875, 1034.474609375), (1009.7597656249999, 1060.60546875))
text1 i.e the prev text is the winner
collision happend with box:1032.9375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((928.29296875, 1099.033203125), (1008.22265625, 1129.775390625))
true and false collision so given priority to text2 which is the incoming text
TRef
((928.29296875, 1203.556640625), (1005.1484375, 1234.298828125))
collision happend with box:1203.556640625 and text:TRef solving on the basis of percent match boxes
the current box specification are
FALSE
((932.904296875, 1258.892578125), (1015.908203125, 1288.09765625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1115, '1': 368, '2': 474, '3': 545, '4': 650, '5': 756, '6': 866, '7': 936, '8': 1043, '10': 1226}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gKmfNLx.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 295.2578125
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((821.40234375, 329.09765625), (897.7148437500001, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:414.94921875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((829.3515624999999, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((870.6875, 496.03125), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (899.3046875, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((819.8125, 685.22265625), (904.07421875, 717.01953125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((821.40234375, 329.09765625), (897.7148437500001, 359.3046875))
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
FAL
((829.3515624999999, 496.03125), (870.6875, 524.6484375))
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((870.6875, 496.03125), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
FALSE
((824.58203125, 589.83203125), (899.3046875, 620.0390625))
FALSE
((819.8125, 685.22265625), (904.07421875, 717.01953125))
FALSE
((816.6328125, 766.3046875), (900.89453125, 796.51171875))
collision happend with box:766.3046875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
text2 i.e the incoming text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((816.6328125, 925.2890625), (896.125, 955.49609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:925.2890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (899.3046875, 1030.21875))
text1 i.e the prev text is the winner
TRVE
((832.53125, 1090.6328125), (910.43359375, 1127.19921875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['1', '4', '5', '8']
the assigned keys are ['2', '3', '6', '7', '9', '10']
['2', '3', '6', '7', '9', '10', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'9': 996, '2': 419, '3': 489, '6': 772, '7': 834, '10': 1092, '1': 119}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : plsg9LG.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1318.41015625
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1349.486328125, 604.18359375), (1457.208984375, 665.0703125))
collision happend with box:604.18359375 and text:True solving on the basis of percent match boxes
the current box specification are
Tue
((1482.96875, 728.298828125), (1583.666015625, 786.84375))
text1 i.e the prev text is the winner
Falsc
((1363.537109375, 850.072265625), (1475.9433593749998, 906.275390625))
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falke
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
ER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Fadse
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1349.486328125, 604.18359375), (1457.208984375, 665.0703125))
Tue
((1482.96875, 728.298828125), (1583.666015625, 786.84375))
Falsc
((1363.537109375, 850.072265625), (1475.9433593749998, 906.275390625))
Falke
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
ER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
collision happend with box:1145.138671875 and text:ER solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
Fadse
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1533.876953125), (1436.1328125, 1583.0546875))
Tyuu
((1471.259765625, 1639.2578125), (1581.32421875, 1700.14453125))
True
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 985, '5': 1135, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : d0CumBh.jpg
OCR detection done with doctr
left top x of SN: 642.2734375
bottom right x of SN: 1044.5546875
left top x of T/F: 5673.6015625
bottom right x of T/F: 6883.8671875
first t/f detection
T3ul
((5702.125, 2046.83984375), (6174.47265625, 2222.8125))
Taul
((5692.86328125, 2695.16015625), (6192.99609375, 2861.87109375))
Falie
((5766.95703125, 3241.6015625), (6248.56640625, 3463.8828125))
Tqe
((5720.6484375, 3778.78125), (6239.3046875, 3954.75390625))
T9l
((5720.6484375, 4288.17578125), (6230.04296875, 4427.1015625))
Toul
((5739.171875, 4880.92578125), (6257.828125, 5066.16015625))
Taue
((5720.6484375, 5603.33984375), (6304.13671875, 5779.3125))
Freel
((5757.6953125, 6140.51953125), (6285.61328125, 6325.75390625))
collision happend with box:6140.51953125 and text:Freel solving on the basis of percent match boxes
the current box specification are
Falee
((5942.9296875, 6233.13671875), (6378.23046875, 6455.41796875))
text2 i.e the incoming text is the winner
folee
((5739.171875, 6612.8671875), (6230.04296875, 6881.45703125))
T9ue
((5785.48046875, 6899.98046875), (6341.183593750001, 7075.953125))
Tael
((5748.43359375, 7298.234375), (6230.04296875, 7474.20703125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2111, '2': 2676, '3': 3241, '4': 3815, '5': 4195, '6': 4769, '7': 5519, '8': 6103, '9': 6483, '10': 7242}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sVRUXRv.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6503.812500000001
left top x of SN: 601.2187500000001
bottom right x of SN: 1016.0312499999999
first t/f detection
True
((5382.625000000001, 2158.46875), (5852.25, 2429.40625))
Taiue
((5418.75, 2555.84375), (5915.468749999999, 2772.59375))
True
((5355.531250000001, 3215.125), (5861.281249999999, 3477.03125))
False
((5472.9375, 3784.09375), (5933.53125, 4009.875))
False
((5454.874999999999, 4389.1875), (5879.34375, 4614.96875))
Rue
((5481.968749999999, 4813.65625), (5897.406250000001, 5048.46875))
Fase
((5563.249999999999, 5301.34375), (6032.875000000001, 5563.25))
True
((5518.093750000001, 5825.15625), (5942.562499999999, 6050.9375))
Trrue
((5481.968749999999, 6321.875), (5933.53125, 6529.59375))
True.
((5481.968749999999, 6981.15625), (5987.71875, 7197.90625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2221, '2': 2790, '3': 3160, '4': 3729, '5': 4298, '6': 4867, '7': 5256, '8': 5825, '9': 6204, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pG15tPy.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1977.84375), (5978.687500000001, 2230.71875))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
false
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5400.687499999999, 4244.6875), (5960.625, 4443.375))
Teue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5310.375), (5960.625, 5527.125))
False
((5373.593749999999, 5780.0), (5915.468749999999, 6032.875))
Toue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2772, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4o6dYrK.jpg
OCR detection done with doctr
left top x of T/F: 5293.87109375
bottom right x of T/F: 6439.3046875
left top x of SN: 994.21875
bottom right x of SN: 1387.23828125
first t/f detection
TRVE
((5368.703125, 2185.765625), (5878.09765625, 2398.78515625))
TRVE
((5368.703125, 2685.8984375), (5868.8359375, 2871.1328125))
FALSE
((5387.2265625, 3158.24609375), (5850.3125, 3343.48046875))
FALSE
((5415.01171875, 3676.90234375), (5915.14453125, 3889.921875))
FALSE
((5405.75, 4269.65234375), (5915.14453125, 4454.88671875))
FALSE
((5433.53515625, 4788.30859375), (5933.66796875, 4955.01953125))
FALSE
((5433.53515625, 5223.609375), (5887.359375, 5399.58203125))
TRUE
((5405.75, 5723.7421875), (5831.7890625, 5890.453125))
TRVE
((5470.58203125, 6140.51953125), (5961.453125, 6316.4921875))
TRVE
((5442.796875, 6733.26953125), (5859.57421875, 6909.2421875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2454, '2': 2954, '3': 3297, '4': 3815, '5': 4334, '6': 4853, '7': 5205, '8': 5733, '9': 6084, '10': 6622}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gbeOzSl.jpg
OCR detection done with doctr
left top x of T/F: 5182.96875
bottom right x of T/F: 6386.406249999999
left top x of SN: 321.2499999999999
bottom right x of SN: 736.0625
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6014.8125, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2510, '3': 3061, '4': 3621, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8m1YEXP.jpg
OCR detection done with doctr
left top x of SN: 142.79101562500003
bottom right x of SN: 360.619140625
left top x of T/F: 932.505859375
bottom right x of T/F: 1295.39453125
first t/f detection
Etuf
((953.5390625, 392.466796875), (1027.619140625, 420.837890625))
collision happend with box:392.466796875 and text:Etuf solving on the basis of percent match boxes
the current box specification are
FALSE
((961.419921875, 436.599609375), (1044.95703125, 464.970703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:436.599609375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((955.115234375, 498.0703125), (1008.705078125, 529.59375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:498.0703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1010.2812500000001, 496.494140625), (1040.228515625, 523.2890625))
text1 i.e the prev text is the winner
collision happend with box:498.0703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRUE
((948.8105468749999, 575.302734375), (1024.466796875, 606.826171875))
text2 i.e the incoming text is the winner
collision happend with box:575.302734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((953.5390625, 704.548828125), (1026.04296875, 734.49609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Etuf
((953.5390625, 392.466796875), (1027.619140625, 420.837890625))
collision happend with box:392.466796875 and text:Etuf solving on the basis of percent match boxes
the current box specification are
FALSE
((961.419921875, 436.599609375), (1044.95703125, 464.970703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:436.599609375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((955.115234375, 498.0703125), (1008.705078125, 529.59375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:498.0703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1010.2812500000001, 496.494140625), (1040.228515625, 523.2890625))
text1 i.e the prev text is the winner
collision happend with box:498.0703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRUE
((948.8105468749999, 575.302734375), (1024.466796875, 606.826171875))
text2 i.e the incoming text is the winner
TRUE
((953.5390625, 704.548828125), (1026.04296875, 734.49609375))
collision happend with box:704.548828125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((953.5390625, 766.01953125), (1029.1953125, 802.271484375))
text1 i.e the prev text is the winner
FALSE
((948.8105468749999, 873.19921875), (1035.5, 909.451171875))
FAL
((951.9628906250001, 959.888671875), (1002.400390625, 992.98828125))
collision happend with box:959.888671875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1002.400390625, 961.46484375), (1037.076171875, 989.8359375))
text1 i.e the prev text is the winner
FALSE
((956.6914062499999, 1051.306640625), (1040.228515625, 1081.25390625))
collision happend with box:1051.306640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((959.8437500000001, 1117.505859375), (1038.65234375, 1147.453125))
text2 i.e the incoming text is the winner
Teuf
((959.8437500000001, 1221.533203125), (1037.076171875, 1253.056640625))
collision happend with box:1221.533203125 and text:Teuf solving on the basis of percent match boxes
the current box specification are
FALSE
((964.572265625, 1276.69921875), (1048.109375, 1306.646484375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 390, '2': 494, '3': 565, '4': 673, '5': 778, '6': 887, '7': 958, '8': 1065, '9': 1137, '10': 1245}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : h8CIV67.jpg
OCR detection done with doctr
left top x of SN: 840.6777343750001
bottom right x of SN: 1257.7138671875002
left top x of T/F: 5459.697265625
bottom right x of T/F: 6636.8046875
first t/f detection
TRUE
((5526.5859375, 2692.73046875), (5934.2880859375, 2872.8779296875))
TRUE
((5526.5859375, 3223.69140625), (5924.806640625, 3413.3203125))
FALS
((5507.623046875, 3669.3193359375), (5953.2509765625, 3858.9482421875))
FALSE
((5564.51171875, 4200.2802734375), (6133.3984375, 4418.353515625))
FALSE
((5536.067382812501, 4778.6484375), (6067.0283203125, 4968.27734375))
FALSE
((5460.2158203125, 5281.1650390625), (6019.62109375, 5451.8310546875))
TRVE
((5441.2529296875, 5707.830078125), (5915.3251953125, 5925.9033203125))
TRUE
((5460.2158203125, 6248.2724609375), (5858.4365234375, 6428.419921875))
TRUE
((5431.771484375, 6674.9375), (5886.880859375, 6845.603515625))
TRVE
((5460.2158203125, 7253.3056640625), (6029.102539062499, 7423.9716796875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2683, '2': 3242, '3': 3621, '4': 4181, '5': 4740, '6': 5309, '7': 5688, '8': 6257, '9': 6646, '10': 7224}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WG85Ru8.jpg
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 961.765625
left top x of T/F: 5514.062499999999
bottom right x of T/F: 6693.796875
first t/f detection
FALSE
((5569.804687500001, 1893.7265625), (6109.562499999999, 2104.140625))
FALS
((5560.65625, 2497.5234375), (5944.890625, 2689.640625))
FALSE
((5569.804687500001, 3055.578125), (6100.4140625, 3238.546875))
TRUE
((5524.062499999999, 3549.59375), (6027.2265625, 3769.15625))
TRUE
((5533.2109375, 4007.015625), (5954.039062499999, 4180.8359375))
FALSE
((5542.359375, 4656.5546875), (6018.078125000001, 4839.5234375))
TRUE
((5514.9140625, 5333.5390625), (5917.4453125, 5516.5078125))
TRUE
((5487.46875, 5845.8515625), (5880.8515625, 6019.671875))
TRUE
((5514.9140625, 6367.3125), (5926.59375, 6550.28125))
TRUE
((5560.65625, 6971.109375), (6008.9296875, 7154.078125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1912, '2': 2479, '3': 3037, '4': 3604, '5': 3988, '6': 4555, '7': 5306, '8': 5873, '9': 6248, '10': 7016}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A4qd5JR.jpg
OCR detection done with doctr
left top x of SN: 250.18261718750006
bottom right x of SN: 497.0361328125
left top x of T/F: 1488.6884765624998
bottom right x of T/F: 1955.8173828125
first t/f detection
True
((1519.2587890625, 704.533203125), (1637.5380859374998, 781.671875))
collision happend with box:704.533203125 and text:True solving on the basis of percent match boxes
the current box specification are
Tpue
((1655.5371093749998, 830.5263671875), (1760.9599609374998, 894.80859375))
text1 i.e the prev text is the winner
Falsc
((1539.8291015625002, 959.0908203125), (1652.9658203125, 1010.5166015625))
collision happend with box:959.0908203125 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1529.5439453125, 1100.51171875), (1632.3955078125, 1151.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1100.51171875 and text:Falk solving on the basis of percent match boxes
the current box specification are
LEFR
((1526.97265625, 1254.7890625), (1632.3955078125, 1303.6435546875))
text2 i.e the incoming text is the winner
collision happend with box:1254.7890625 and text:LEFR solving on the basis of percent match boxes
the current box specification are
falk
((1658.1083984375, 1244.50390625), (1755.8173828125, 1308.7861328125))
text2 i.e the incoming text is the winner
collision happend with box:1244.50390625 and text:falk solving on the basis of percent match boxes
the current box specification are
Fase
((1529.5439453125, 1393.638671875), (1632.3955078125, 1445.064453125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1519.2587890625, 704.533203125), (1637.5380859374998, 781.671875))
Tpue
((1655.5371093749998, 830.5263671875), (1760.9599609374998, 894.80859375))
Falsc
((1539.8291015625002, 959.0908203125), (1652.9658203125, 1010.5166015625))
Falk
((1529.5439453125, 1100.51171875), (1632.3955078125, 1151.9375))
LEFR
((1526.97265625, 1254.7890625), (1632.3955078125, 1303.6435546875))
collision happend with box:1254.7890625 and text:LEFR solving on the basis of percent match boxes
the current box specification are
falk
((1658.1083984375, 1244.50390625), (1755.8173828125, 1308.7861328125))
text2 i.e the incoming text is the winner
Fase
((1529.5439453125, 1393.638671875), (1632.3955078125, 1445.064453125))
Falye
((1514.1162109375, 1504.2041015625), (1637.5380859374998, 1563.34375))
Truc
((1521.830078125, 1640.482421875), (1616.9677734375, 1694.4794921875))
Tyut
((1647.8232421875, 1743.333984375), (1763.53125, 1807.6162109375))
Truc
((1537.2578125, 1925.8955078125), (1647.8232421875, 1979.892578125))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 971, '2': 863, '3': 964, '4': 1115, '5': 1262, '6': 1416, '7': 1514, '8': 1666, '9': 1769, '10': 1920}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VdH6dUQ.jpg
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
left top x of T/F: 5435.84375
bottom right x of T/F: 6603.156249999999
first t/f detection
TRUE
((5536.156249999999, 2167.5), (6014.8125, 2339.09375))
TRUE
((5617.437499999999, 2718.40625), (5987.71875, 2853.875))
FALSE
((5472.9375, 3188.03125), (6059.968750000001, 3386.71875))
TRRIBE
((5509.062499999999, 3838.28125), (6023.843749999999, 4009.875))
collision happend with box:3838.28125 and text:TRRIBE solving on the basis of percent match boxes
the current box specification are
TOUE
((5554.21875, 3991.8125), (6014.8125, 4163.40625))
text1 i.e the prev text is the winner
FALS
((5518.093750000001, 4416.28125), (5933.53125, 4596.90625))
FALSE
((5418.75, 4913.0), (6059.968750000001, 5111.6875))
TRUE
((5454.874999999999, 5454.875), (6023.843749999999, 5671.625))
TRUG
((5491.000000000001, 5852.25), (6096.09375, 6069.0))
FALSE
((5563.249999999999, 6339.9375), (6204.46875, 6592.8125))
TRUE
((5463.906250000001, 6981.15625), (5987.71875, 7161.78125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2745, '3': 3124, '4': 3693, '5': 4262, '6': 4849, '7': 5238, '8': 5816, '9': 6204, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f5UXaA3.jpg
OCR detection done with doctr
left top x of SN: 424.97656250000006
bottom right x of SN: 842.8359375000001
left top x of T/F: 5632.9921875
bottom right x of T/F: 6885.9140625
first t/f detection
False
((5752.7734375, 2067.546875), (6475.5, 2323.703125))
FALSE
((5734.4765625, 2598.15625), (6493.796875, 2900.0546875))
False.
((5798.515624999999, 3211.1015625), (6548.6875, 3476.40625))
TRUE
((5716.1796875, 3769.15625), (6493.796875, 4016.1640625))
TRUE
((5725.328125, 4208.28125), (6557.835937499999, 4446.140625))
False
((5642.9921875, 4949.3046875), (6402.312499999999, 5205.4609375))
TRUE
((5771.0703125, 5662.8828125), (6557.835937499999, 5900.7421875))
Tone
((5734.4765625, 6275.828125), (6347.421875, 6477.09375))
TRUE
((5734.4765625, 6660.0625), (6502.9453125, 6971.109375))
Towe.
((5935.7421875, 7364.4921875), (6658.46875, 7611.5))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2012, '2': 2607, '3': 3201, '4': 3805, '5': 4199, '6': 4793, '7': 5598, '8': 6202, '9': 6614, '10': 7419}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bOOb4M8.jpg
OCR detection done with doctr
left top x of T/F: 5522.744140625
bottom right x of T/F: 6698.16796875
left top x of SN: 984.30859375
bottom right x of SN: 1398.634765625
first t/f detection
TRUE
((5542.1171875, 2390.126953125), (6198.23046875, 2615.080078125))
TRUE
((5654.593750000001, 2877.525390625), (6329.453124999999, 3083.732421875))
False
((5729.578125, 3364.923828125), (6329.453124999999, 3571.130859375))
False
((5720.205078125, 3955.42578125), (6263.841796875, 4133.513671875))
False
((5692.085937499999, 4536.5546875), (6291.9609375, 4742.76171875))
false
((5560.86328125, 5042.69921875), (6141.9921875, 5220.787109375))
True
((5692.085937499999, 5511.3515625), (6198.23046875, 5689.439453125))
True
((5757.697265625, 5951.884765625), (6245.095703124999, 6129.97265625))
Trrue
((5813.935546875, 6467.40234375), (6310.70703125, 6654.86328125))
Trwe
((5776.443359375, 7011.0390625), (6338.826171875, 7189.126953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2540, '2': 3074, '3': 3430, '4': 3992, '5': 4517, '6': 5070, '7': 5436, '8': 5998, '9': 6373, '10': 6936}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CLBs5ko.jpg
OCR detection done with doctr
left top x of SN: 665.625
bottom right x of SN: 1079.951171875
left top x of T/F: 5269.671875
bottom right x of T/F: 6445.095703124999
first t/f detection
T
((5598.355468749999, 2455.73828125), (5795.189453125, 2633.826171875))
T
((5588.982421875, 2971.255859375), (5776.443359375, 3139.970703125))
T
((5542.1171875, 3402.416015625), (5795.189453125, 3636.7421875))
T
((5588.982421875, 3964.798828125), (5757.697265625, 4124.140625))
F
((5560.86328125, 4527.181640625), (5710.83203125, 4705.26953125))
F
((5532.744140625, 4986.4609375), (5682.712890625, 5183.294921875))
F
((5579.609375, 5408.248046875), (5720.205078125, 5605.08203125))
T
((5635.84765625, 6429.91015625), (5785.816406249999, 6617.37109375))
T
((5598.355468749999, 7067.27734375), (5804.5625, 7235.9921875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': 'NULL', '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2390, '2': 2952, '3': 3327, '4': 3889, '5': 4452, '6': 5014, '7': 5398, '8': 5961, '9': 6336, '10': 6917}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': 'NULL', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TLzmbPh.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1977.84375), (5978.687500000001, 2230.71875))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
false
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5400.687499999999, 4244.6875), (5960.625, 4443.375))
Teue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5310.375), (5960.625, 5527.125))
False
((5373.593749999999, 5780.0), (5915.468749999999, 6032.875))
Toue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2772, '3': 3160, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LQah8ff.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6693.468750000001
left top x of SN: 438.6562500000001
bottom right x of SN: 871.53125
first t/f detection
Paue
((5527.125, 2077.1875), (5942.562499999999, 2275.875))
Taue
((5355.531250000001, 2601.0), (5816.125000000001, 2826.78125))
Taue
((5445.84375, 3061.59375), (5852.25, 3278.34375))
Tue
((5319.406249999999, 3747.96875), (5734.843750000001, 3982.78125))
Tue
((5355.531250000001, 4389.1875), (5807.093749999999, 4605.9375))
fale
((5355.531250000001, 4849.78125), (5798.0625, 5084.59375))
True
((5373.593749999999, 5391.65625), (5870.312500000001, 5653.5625))
Tue
((5418.75, 5888.375), (5879.34375, 6114.15625))
Toue
((5418.75, 6367.03125), (5879.34375, 6592.8125))
fabe
((5373.593749999999, 7026.3125), (5807.093749999999, 7252.09375))
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are ['2', '4']
the assigned keys are ['1', '3', '5', '6', '7', '8', '9', '10']
['1', '3', '5', '6', '7', '8', '9', '10', '1', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '3': 3160, '5': 4335, '6': 4931, '7': 5328, '8': 5915, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SxOFztL.jpg
OCR detection done with doctr
left top x of SN: 208.35937500000003
bottom right x of SN: 426.9921875
left top x of T/F: 972.3828125
bottom right x of T/F: 1331.875
first t/f detection
F
((1019.3359375, 446.796875), (1047.890625, 480.390625))
collision happend with box:446.796875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1015.9765625000001, 539.1796875), (1036.1328125, 572.7734375))
text2 i.e the incoming text is the winner
collision happend with box:539.1796875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1007.578125, 608.046875), (1041.171875, 639.9609375))
text2 i.e the incoming text is the winner
collision happend with box:608.046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1004.21875, 707.1484375), (1036.1328125, 740.7421875))
text2 i.e the incoming text is the winner
collision happend with box:707.1484375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.859375, 816.328125), (1029.4140625, 851.6015625))
text2 i.e the incoming text is the winner
collision happend with box:816.328125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((995.8203124999999, 908.7109375), (1021.015625, 950.703125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((1019.3359375, 446.796875), (1047.890625, 480.390625))
F
((1015.9765625000001, 539.1796875), (1036.1328125, 572.7734375))
collision happend with box:539.1796875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1007.578125, 608.046875), (1041.171875, 639.9609375))
text2 i.e the incoming text is the winner
T
((1004.21875, 707.1484375), (1036.1328125, 740.7421875))
F
((1000.859375, 816.328125), (1029.4140625, 851.6015625))
F
((995.8203124999999, 908.7109375), (1021.015625, 950.703125))
T
((990.78125, 992.6953125), (1026.0546875, 1024.609375))
F
((997.5, 1080.0390625), (1022.6953125, 1115.3125))
collision happend with box:1080.0390625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((995.8203124999999, 1157.3046875), (1026.0546875, 1194.2578125))
text2 i.e the incoming text is the winner
F
((990.78125, 1264.8046875), (1021.015625, 1303.4375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 446, '2': 547, '3': 614, '4': 717, '5': 818, '6': 920, '7': 987, '8': 1090, '9': 1158, '10': 1261}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v5r2evS.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRUE
((5165.875, 1616.59375), (5707.750000000001, 1833.34375))
TKIE
((5183.9375, 2113.3125), (5635.5, 2330.0625))
FALSE
((5192.96875, 2718.40625), (5725.812499999999, 2971.28125))
FALSE
((5220.062500000001, 3197.0625), (5689.6875, 3422.84375))
TRUE
((5220.062500000001, 3666.6875), (5761.937500000001, 3883.4375))
TRUE
((5156.84375, 4289.84375), (5734.843750000001, 4506.59375))
TRIE
((5220.062500000001, 4985.25), (5635.5, 5183.9375))
TRUE
((5165.875, 5382.625), (5662.59375, 5599.375))
FALSE
((5174.90625, 5915.46875), (5725.812499999999, 6114.15625))
TRUE
((5138.78125, 6484.4375), (5689.6875, 6701.1875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['1', '6', '8']
the assigned keys are ['2', '3', '4', '5', '7', '9', '10']
['2', '3', '4', '5', '7', '9', '10', '2', '3', '4', '5', '7', '9', '10']
printing the number dict y_coordinate
{'2': 2185, '3': 2727, '4': 3269, '5': 3648, '7': 4913, '9': 5807, '10': 6511, '1': 1885}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hsrMdD1.jpg
OCR detection done with doctr
left top x of SN: 276.0937500000001
bottom right x of SN: 699.9375000000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6865.0625
first t/f detection
FALSE
((5716.78125, 1770.125), (6430.249999999999, 1977.84375))
FALSE
((5635.5, 2366.1875), (6403.156249999999, 2619.0625))
TRVE
((5581.3125, 2980.3125), (6231.5625, 3188.03125))
TRUE
((5626.468750000001, 3513.15625), (6276.718750000001, 3729.90625))
FALSE
((5599.375000000001, 4018.90625), (6348.968749999999, 4217.59375))
FALS
((5671.624999999999, 4714.3125), (6240.593749999999, 4931.0625))
TRVE
((5653.562500000001, 5454.875), (6294.781249999999, 5662.59375))
TRUE
((5680.656250000001, 5996.75), (6367.03125, 6213.5))
TRUE
((5761.937500000001, 6529.59375), (6403.156249999999, 6737.3125))
TRUE
((5698.718749999999, 7179.84375), (6249.625000000001, 7441.75))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1706, '2': 2330, '3': 2944, '4': 3558, '5': 3964, '6': 4587, '7': 5409, '8': 6023, '9': 6439, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MLNMK7L.jpg
OCR detection done with doctr
left top x of SN: 85.32812499999999
bottom right x of SN: 320.748046875
left top x of T/F: 1177.173828125
bottom right x of T/F: 1613.287109375
first t/f detection
faly
((1218.208984375, 551.982421875), (1364.517578125, 647.3046875))
collision happend with box:551.982421875 and text:faly solving on the basis of percent match boxes
the current box specification are
falre
((1218.208984375, 682.7734375), (1329.048828125, 755.927734375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:682.7734375 and text:falre solving on the basis of percent match boxes
the current box specification are
Tae
((1211.55859375, 804.697265625), (1344.56640625, 900.01953125))
text1 i.e the prev text is the winner
Fuv
((1227.076171875, 928.837890625), (1366.734375, 1021.943359375))
collision happend with box:928.837890625 and text:Fuv solving on the basis of percent match boxes
the current box specification are
ffer
((1222.6425781249998, 1070.712890625), (1357.8671875, 1166.03515625))
text2 i.e the incoming text is the winner
collision happend with box:1070.712890625 and text:ffer solving on the basis of percent match boxes
the current box specification are
Tul
((1204.908203125, 1192.63671875), (1344.56640625, 1268.0078125))
text2 i.e the incoming text is the winner
collision happend with box:1192.63671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tyue
((1193.82421875, 1305.693359375), (1340.1328125, 1396.58203125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
faly
((1218.208984375, 551.982421875), (1364.517578125, 647.3046875))
falre
((1218.208984375, 682.7734375), (1329.048828125, 755.927734375))
Tae
((1211.55859375, 804.697265625), (1344.56640625, 900.01953125))
Fuv
((1227.076171875, 928.837890625), (1366.734375, 1021.943359375))
ffer
((1222.6425781249998, 1070.712890625), (1357.8671875, 1166.03515625))
Tul
((1204.908203125, 1192.63671875), (1344.56640625, 1268.0078125))
Tyue
((1193.82421875, 1305.693359375), (1340.1328125, 1396.58203125))
Falw
((1213.775390625, 1414.31640625), (1340.1328125, 1494.12109375))
Folre
((1211.55859375, 1531.806640625), (1340.1328125, 1611.611328125))
Tiue
((1202.69140625, 1706.93359375), (1357.8671875, 1806.689453125))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 804, '2': 711, '3': 804, '4': 942, '5': 1077, '6': 1217, '7': 1307, '8': 1445, '9': 1538, '10': 1678}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KAyvprp.jpg
OCR detection done with doctr
left top x of SN: 161.74999999999997
bottom right x of SN: 379.2822265625
left top x of T/F: 875.4892578125001
bottom right x of T/F: 1229.0908203125
first t/f detection
Truue
((887.12109375, 376.9541015625), (971.9765625000001, 414.486328125))
collision happend with box:376.9541015625 and text:Truue solving on the basis of percent match boxes
the current box specification are
Tywe
((895.2802734375, 456.9140625), (970.3447265625, 492.814453125))
text1 i.e the prev text is the winner
collision happend with box:376.9541015625 and text:Truue solving on the basis of percent match boxes
the current box specification are
Pale
((900.1757812499999, 535.2421875), (968.712890625, 567.87890625))
text1 i.e the prev text is the winner
Faye
((893.6484375, 618.4658203125), (965.44921875, 652.734375))
collision happend with box:618.4658203125 and text:Faye solving on the basis of percent match boxes
the current box specification are
Fauc
((893.6484375, 708.216796875), (973.6083984375, 745.7490234375))
text2 i.e the incoming text is the winner
collision happend with box:708.216796875 and text:Fauc solving on the basis of percent match boxes
the current box specification are
FaMe
((895.2802734375, 793.072265625), (971.9765625000001, 824.0771484375))
text1 i.e the prev text is the winner
collision happend with box:708.216796875 and text:Fauc solving on the basis of percent match boxes
the current box specification are
Fage
((895.2802734375, 864.873046875), (965.44921875, 897.509765625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Truue
((887.12109375, 376.9541015625), (971.9765625000001, 414.486328125))
collision happend with box:376.9541015625 and text:Truue solving on the basis of percent match boxes
the current box specification are
Tywe
((895.2802734375, 456.9140625), (970.3447265625, 492.814453125))
text1 i.e the prev text is the winner
Pale
((900.1757812499999, 535.2421875), (968.712890625, 567.87890625))
Faye
((893.6484375, 618.4658203125), (965.44921875, 652.734375))
Fauc
((893.6484375, 708.216796875), (973.6083984375, 745.7490234375))
FaMe
((895.2802734375, 793.072265625), (971.9765625000001, 824.0771484375))
collision happend with box:793.072265625 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fage
((895.2802734375, 864.873046875), (965.44921875, 897.509765625))
text2 i.e the incoming text is the winner
True
((890.384765625, 946.46484375), (963.8173828124999, 985.62890625))
collision happend with box:946.46484375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((888.7529296875, 1026.4248046875), (962.185546875, 1059.0615234375))
text2 i.e the incoming text is the winner
Trwe
((888.7529296875, 1125.966796875), (967.0810546875, 1156.9716796875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['1', '4', '7', '8']
the assigned keys are ['2', '3', '5', '6', '9', '10']
['2', '3', '5', '6', '9', '10', '2', '3', '5', '6', '9', '10']
printing the number dict y_coordinate
{'2': 465, '3': 527, '5': 711, '6': 802, '9': 1019, '10': 1112, '1': 165}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hEADtQh.jpg
OCR detection done with doctr
left top x of SN: 475.5624999999999
bottom right x of SN: 896.3671874999998
left top x of T/F: 5590.246093750001
bottom right x of T/F: 6893.12890625
first t/f detection
Fale
((5674.33984375, 2074.625), (5989.23828125, 2333.953125))
Fle
((5618.769531250001, 2658.11328125), (5961.453125, 2861.87109375))
Trve
((5553.9375, 3223.078125), (5998.5, 3463.8828125))
Trie
((5553.9375, 3815.828125), (5887.359375, 4075.15625))
Fabe
((5581.722656250001, 4390.0546875), (6026.28515625, 4630.859375))
Tre
((5507.62890625, 4964.28125), (5859.57421875, 5158.77734375))
True
((5572.460937500001, 5492.19921875), (5970.71484375, 5677.43359375))
Trve
((5581.722656250001, 5964.546875), (5998.5, 6242.3984375))
Fale
((5590.984375000001, 6492.46484375), (5989.23828125, 6724.0078125))
True
((5544.67578125, 7196.35546875), (5970.71484375, 7437.16015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2074, '2': 2704, '3': 3111, '4': 3732, '5': 4343, '6': 4964, '7': 5371, '8': 5983, '9': 6390, '10': 6992}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : L5rBGZ5.jpg
rotation started
['10', '6', '00', '', 'N', '1l', '2', 'E', 'I', '9', 'P', 'F', '>', 'I', 'F', 'I', '7', '2', 'I', 'I', 'a', '8', 'I', '1E', 'I', 'e', 'F', 'H', 'e', 'i', 'I', 'E', '[', 'E', 'I', 'I', 'I', '€', 'F', 'I', 'I', 'E', 'E', '1', '8', 'e', 'I', 'I', 'I', 'E', 'I', 'E', 'I', ':', 'I', 'lE', 'I', '2', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'lE', 'of', 'I', 'I', 'I', 'a', ':', 'I', 'e', 'I', 'B', 'lE', 'I', 'of', 'I', 'I', 'I', 'I', 'P', 'e', 'E', 'D', '2', 'S', 'I', 'E', '-', 'I', 'I', 'E', '1', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'g', 'lt', 'I', 'S', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'of', 'E', '8', 'I', 'E', 'I', '1', 'I', 'p', 'E', 'I', 'I', 'I', 'E', '2', 'I', 'E', '8e', 'lt', '€', 'E', 'I', 'E', 'I', '€', 'e', '2', 'I', 'E', 'I', 'E', 'I', 'E', 'p', 'E', 'I', 'I', 'it', 'I', 'E', 'I', 'I', '1', 'I', 'F', 'I', 'E', '1', 'o', 'CT', '4', '1s', 'a', 'E', 'E', 'a', '9', 'I', '1', 'I', 'E', '2', 'lE', 'I', 'I', 'E', '3', 'E', 'i', 'I', 'E', 'E', 'I', 't', '€', 'I', '-', 'I', '2', 'E', '€', '2', 'a', '€', '-', 'l', 'I', 'I', '2', 'I', 'CTT']
rotation started
['eep', 'uoosun', "'mou", '01', 'TIOM', 'ozyrelouas', 'gou', 'op', '1e41', 'eep', 'Sururen', 'amuh', 'eua', 'ut', 'smeop', '10', 'osTou', 'oyioods', 'omgdes', '01', 'ULIBOT', 'Keur', 'papour', 'au1', 'se', "'sosear", '-UT', 'Sunayaono', 'Jo', 'YSLI', 'oun', "'WAS", 'ul', 'rojourered', 'D', 'ay1', 'jo', 'anres', 'y8ry', 'e', 'Y1IM', 'OT', "'WAS", '980I-SA-OUO', 'ueya', 'JOMOIS', 'SI', 'WAS', 'auo-SA-000', 'Bursn', 'soul', 'uoporpaad', 'B', 'Sureur', "'sossep", 'Jo', 'poqunu', '081e1', 'B', 'Y1IM', 'sutarqoid', 'sseprmur', '1OE', '6', 'A5ud', 'raoeds', 'TeurSTIo', 'ouy', 'ul', 'JBOUII-uou', '0q', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstop', 'AUL', '8', 'asud', "'sapou", 'Jo', 'raqunu', 'ay1', '01', 'reuoruodoud', 'Atgpamp', 'SI', 'DOIL', 'LOISIDOC', 'ouy', 'UI', 'uomorpaid', 'B', 'Suryeur', 'JOJ', 'pommbor', 'AUIL', 'OUL', 'L', '"uornquasip', 'uerssneD', 'B', 'Skenre', 'SI', 'suorgnquasip', 'uerssneg', 'OMI', 'jo', 'amgxtu', 'V', '9', '99HJ', 'Treooy', 'pue', 'UOISIO', '8S78J', '-ald', 'uoomgeq', 'gord', 'B', 'SI', 'DAINO', '(bOm)', 'onstogpeey)', 'Buneado', 'IDAIODOH', 'OUL', 'S', 'yIomgou', '[emou', 'oyn', 'ul', 'squorpers', 'ou1', 'agnduoo', '01', 'posn', 'quorpe18', 'OTIYM', "'sau310m", 'oun', 'ogepdn', '01', 'posn', 'SI', 'uonelodoadypeg', 'F', '9574J', 'SI', 'quaosap', 'f', 'pue', 'I', 'SIOJDOA', 'OOUWISIP', 'PITUA', '0', '8I', "(A'x)unpunsauzsoo", '-', 'I', 'E', 'Kue', 'JOJ', 'ol1gouur', '2adl', 'Teuorstouup-p', 'soyissup', 'reouT-uou', 'B', 'SI', 'NNX', '2', '9970', 'quourdordop', 'a801018', 'ay', 'SwoidAL', 'I', '8I', 'NNX', 'JOJ', 'quouambar', '30', '0L', 'JOJ', 'WAS', 'ueyy', '108101', 'ypnur', 'quouagess', 'NS', 'RSTVA/anaL', 'soqumu', 'IjoJ', 'mor', 'O11M', '10104', 'O11M', '(sgd', 'OT)', "'6", '10', 'IOAL', 'puyduo', 'ul', '91STVA', '8107101', 'roop', 'puu', 'Surprumpuor']
rotation started
['à', '3', 'E', '2', '-', 'I', '5', ':', '2', 'L', 'a', '2', '2', '2', '', '5', ':', 'I', 'I', '1', 'la', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'e', 'I', 'I', 'E', 'is', 'I', '8a', 'I', '1', 'I', '1', 'E', 'à', 'I', 'a', 'e', 'I', 'of', '6', 'i', 'a', 'is', '8a', 'I', 'I', 'E', 'i', 'à', 'à', 'a', ':', 'e', 'I', 'i', 'E', 'e', 'I', '1', '1', 'I', 'E', 'I', 'of', ':', 'I', 'I', '1', '1', '8', 'is', 'e', 'i', 'I', 'E', 'I', '9', 'e', 'I', 'e', 'I', 'E', 'a', 'S', '-', 'E', 'a', 'I', '-', ':', 'I', 'a', 'a', 'i', 'I', 'of', 'I', 'la', 'E', 'l', 'E', 'I', '9', 'I', 'I', 'I', 'I', 'of', 'E', 'is', 'e', 'i', ':', '1', '1', 'T', 'I', 's', '1', 'of', 'de', 'E', 'I', 'is', 'e', 'e', 'I', ':', '1', 'of', 'I', 'E', '8', 'I', 'i', 'à', 'I', 'a', 'I', 'E', '1', 'of', '1', 'de', '', 'H', 'I', 'E', '5', '1', '$', 'is', '8', 'I', 'I', 'à', 'I', 'd', 'I', 'I', ':', 'I', 'I', '1', 'E', 'I', '11', 'I', 'I', 'I', 'T', 'E', '', 'A', 'à', 'e', 'I', 'E', 'E', 'I', 'I', 'I', '22', 's', '00', '', 'I', 'I', '1', 'E', 'I', '1', 'E', ':', 'os', 'E', 'à', 'E', 'e', '', '7', '1', '4', 'i0', '8', 'I', '9']
rotation started
['handwriting.', 'and', 'clear', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', '1', 'Typically,', 'deployment.', 'TRUE/FAISI', 'than', 'SVM', 'for', 'TRIO', '&', 'for', 'KNN', 'is', 'much', 'larger', 'the', 'storage', 'requirement', 'PALSG', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', '3', '1', '-', 'cosineSimalaritfz.)', 'is', 'a', 'valid', 'distance', 'vectors', 'I', 'and', 'y.', 'while', 'gradient', 'descent', 'is', 'PALSE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'PALSE', 'cision', 'and', 'Recall.', 'PALS', 'G', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'PALSG', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'PALS', 'E', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'TRUU', 'using', 'one-vs-rest', 'SVM.', 'in-', 'TRUE']
OCR detection done with doctr
left top x of SN: 799.72265625
bottom right x of SN: 1211.265625
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:14:47] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : L5rBGZ5.jpg
[2024/07/01 15:14:48] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:14:49] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.17693352699279785
[2024/07/01 15:14:50] ppocr DEBUG: rec_res num  : 38, elapsed : 1.5281782150268555
OCR detection done
left top x of SN: 858.0
bottom right x of SN: 1224.0
left top y of SN: 1907.0
bottom right y of SN: 2205.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/L5rBGZ5.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PYdhI8v.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
lyw
((1426.6640625, 647.015625), (1567.1015625, 742.3125))
collision happend with box:647.015625 and text:lyw solving on the basis of percent match boxes
the current box specification are
Colte
((1416.6328125, 767.390625), (1569.6093749999998, 875.2265625))
text2 i.e the incoming text is the winner
collision happend with box:767.390625 and text:Colte solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 905.3203125), (1569.6093749999998, 1010.6484375))
text2 i.e the incoming text is the winner
collision happend with box:905.3203125 and text:Trov solving on the basis of percent match boxes
the current box specification are
Trev
((1431.6796875, 1033.21875), (1574.625, 1146.0703125))
text2 i.e the incoming text is the winner
Tise
((1414.1250000000002, 1223.8125), (1574.625, 1341.6796875))
collision happend with box:1223.8125 and text:Tise solving on the basis of percent match boxes
the current box specification are
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
text2 i.e the incoming text is the winner
collision happend with box:1346.6953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((1414.1250000000002, 1504.6875), (1579.640625, 1605.0))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
lyw
((1426.6640625, 647.015625), (1567.1015625, 742.3125))
Colte
((1416.6328125, 767.390625), (1569.6093749999998, 875.2265625))
Trov
((1421.6484374999998, 905.3203125), (1569.6093749999998, 1010.6484375))
Trev
((1431.6796875, 1033.21875), (1574.625, 1146.0703125))
Tise
((1414.1250000000002, 1223.8125), (1574.625, 1341.6796875))
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
Tywe
((1414.1250000000002, 1504.6875), (1579.640625, 1605.0))
Fale
((1441.7109375, 1625.0625), (1569.6093749999998, 1705.3125))
Falw
((1429.171875, 1752.9609375), (1584.6562500000002, 1855.78125))
Falie
((1414.1250000000002, 1915.96875), (1609.7343750000002, 2046.375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 789, '3': 900, '4': 1063, '5': 1218, '6': 1379, '7': 1487, '8': 1650, '9': 1757, '10': 1918}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1CCExTK.jpg
OCR detection done with doctr
left top x of T/F: 5239.609375
bottom right x of T/F: 6419.34375
left top x of SN: 726.8750000000001
bottom right x of SN: 1126.4375
first t/f detection
TRUE
((5588.1015625, 1729.0546875), (6201.046875, 2030.953125))
collision happend with box:1729.0546875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
bette
((5240.4609375, 1866.28125), (5890.0, 2213.921875))
text1 i.e the prev text is the winner
FtseFASE
((5277.0546875, 2314.5546875), (6329.125, 2643.8984375))
FALSE
((5249.609375, 2918.3515625), (5999.781250000001, 3174.5078125))
TRUE
((5277.0546875, 3485.5546875), (5972.3359375, 3705.1171875))
TRUE
((5258.757812500001, 3952.125), (5917.4453125, 4199.1328125))
FTRUE
((5213.015625, 4455.2890625), (6155.304687500001, 4711.4453125))
FALSE
((5203.8671875, 4967.6015625), (5935.7421875, 5232.90625))
PALSE
((5322.796875, 5278.6484375), (6045.5234375, 5498.2109375))
7Ue
((5249.609375, 5461.6171875), (5862.554687500001, 5672.03125))
FALSE
((5185.5703125, 5937.3359375), (5917.4453125, 6248.3828125))
FALSE
((5267.90625, 6440.5), (5999.781250000001, 6843.03125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1948, '2': 2497, '3': 2863, '4': 3412, '5': 3952, '6': 4510, '7': 4876, '8': 5434, '9': 5818, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D7klNpd.jpg
OCR detection done with doctr
left top x of SN: 76.55175781250004
bottom right x of SN: 321.8818359375
left top x of T/F: 1400.58984375
bottom right x of T/F: 1879.4482421875
first t/f detection
Folue
((1443.2548828125, 645.7626953125), (1616.630859375, 743.7578125))
collision happend with box:645.7626953125 and text:Folue solving on the basis of percent match boxes
the current box specification are
Falle
((1445.767578125, 776.4228515625), (1609.0927734375, 859.341796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:776.4228515625 and text:Falle solving on the basis of percent match boxes
the current box specification are
True
((1433.2041015625, 909.595703125), (1599.0419921875002, 1017.6416015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:909.595703125 and text:True solving on the basis of percent match boxes
the current box specification are
Tvul
((1453.3056640624998, 1067.8955078125), (1606.580078125, 1170.916015625))
text2 i.e the incoming text is the winner
collision happend with box:1067.8955078125 and text:Tvul solving on the basis of percent match boxes
the current box specification are
Tyul
((1445.767578125, 1226.1953125), (1604.0673828125, 1334.2412109375))
text2 i.e the incoming text is the winner
collision happend with box:1226.1953125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Folue
((1443.2548828125, 645.7626953125), (1616.630859375, 743.7578125))
Falle
((1445.767578125, 776.4228515625), (1609.0927734375, 859.341796875))
True
((1433.2041015625, 909.595703125), (1599.0419921875002, 1017.6416015625))
Tvul
((1453.3056640624998, 1067.8955078125), (1606.580078125, 1170.916015625))
Tyul
((1445.767578125, 1226.1953125), (1604.0673828125, 1334.2412109375))
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
Tud
((1438.2294921875, 1492.541015625), (1606.580078125, 1593.048828125))
Tru
((1443.2548828125, 1630.7392578125), (1599.0419921875002, 1713.658203125))
False
((1450.79296875, 1766.4248046875), (1588.9912109375, 1844.318359375))
Falu
((1438.2294921875, 1919.69921875), (1631.70703125, 2017.6943359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 892, '2': 781, '3': 889, '4': 1052, '5': 1211, '6': 1374, '7': 1479, '8': 1643, '9': 1753, '10': 1917}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pBOLe58.jpg
OCR detection done with doctr
left top x of T/F: 5367.6875
bottom right x of T/F: 6584.015625
left top x of SN: 543.9062499999999
bottom right x of SN: 952.6171875
first t/f detection
Tug
((5871.703125, 1921.171875), (6329.125, 2149.8828125))
False
((5441.7265625, 2607.3046875), (6027.2265625, 2872.609375))
false
((5670.4375, 3046.4296875), (6237.640625, 3348.328125))
Tquo
((5487.46875, 3778.3046875), (6091.265625, 4043.609375))
Tgue
((5386.8359375, 4427.84375), (5944.890625, 4647.40625))
Falso
((5414.281250000001, 4912.7109375), (5954.039062499999, 5168.8671875))
Tgue
((5423.4296875, 5370.1328125), (6018.078125000001, 5626.2890625))
Cul
((5450.875, 5992.2265625), (6008.9296875, 6202.640625))
false
((5542.359375, 6321.5703125), (6109.562499999999, 6632.6171875))
Falsa
((5578.953125, 6815.5859375), (6182.75, 7144.9296875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2259, '2': 2836, '3': 3220, '4': 3814, '5': 4382, '6': 4967, '7': 5351, '8': 5937, '9': 6330, '10': 6925}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : alybfPY.jpg
rotation started
['f', '', 'N', '11', '2', 'I', 'E', 'I', '9', 'E', 'E', '>', 'E', 'F', 'a', '7', 'E', 'p', 'I', 'I', 'e', 'E', '-', 'I', 'E', '8', '8', 'it', 'p', 'I', ':', '€', 'I', 'I', 'I', 'I', 'I', 'of', 'I', 'E', 'I', '8', 'E', 'E', 'E', 'E', 'I', 'e', 'I', 'E', 'E', 'I', 'a', 'I', '2', 'it', '8', 'I', 'I', 'f', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 't', 'f', 'I', 'a', 'I', 'Q', 'E', 'B', 'I', '8', 'I', 'it', 'I', '2', 'f', 'I', 'I', 'I', 'I', '2', 'e', 'E', 'p', '8', 'I', 'I', 'E', '-', 'I', 'E', '1', '€', 'E', 'I', '€', 'E', 'I', '8', 'E', '9', 'it', 'I', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'of', 'E', '8', 'I', 'I', 'E', 'I', 'E', 'P', 'E', '2', 'I', 'I', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'p', 'it', ':', 'E', '€', '9', 'f', 'I', 'E', 'I', 'e', 'E', 'p', '2', 'I', 'I', 'I', 'it', 'I', 'E', 'I', 'E', 'F', '1', 'I', 'I', 'I', '7', '', '00', '-', '', 'OT', '1', '16', 'E', 'E', '-', 'E', '9', 'E', 'DE', 'i', 'I', 'E', 'E', '1', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'E', 'I', 'I', 'it', ')', 'I', 'N', '€', 'e', ':', 'N', 'l4', 'a', '#', ':', '-', 'à', 'TTI', 'I', ':', ':', '', 'a', '-', 'Aie', '4', 'RAI', 'BIR', 'eye', 'RIe', 'o', 'e', 'IRE', 'RE', '5', '-']
rotation started
['"egep', 'uoesun', 'mou', '07', 'ITOM', 'azireioues', 'qou', 'op', '7e47', 'egep', 'Surureng', '35741', 'au9', 'ur', 'sTregep', 'IO', 'OSIOU', 'oyreds', 'amades', '07', 'UIBOT', 'Keur', 'Topour', 'au7', 'Se', "'SOseOID", '-ul', 'Burayreno', 'Jo', 'YSLI', 'eu7', "'WAS", 'uI', 'rjewrered', 'D', 'aua', 'Jo', 'anTeA', 'y81y', 'B', 'YAIM', 'OT', 'uonorperd', 'e', 'Buryeur', "'sassepp", 'Jo', 'requnu', 'a8.1eT', 'e', 'YAIM', 'suerqoId', 'ssepormu', 'JOI', '6', '3OXL', 'WAS', '9SOI-SA-BUO', 'ueyz', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', 'HOXL', 'aoeds', '[eurBTo', 'au4', 'ul', 'JeQUIT-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoap', 'OUL', '8', '35741', '"sopou', 'Jo', 'oqunu', 'auy', '07', 'Teuorg.odord', 'Appamp', 'SI', 'OOIL', 'UOISIDOCI', 'a47', 'ur', 'uonorpard', 'B', 'Suryeur', 'IOJ', 'pammbar', 'OUIL', 'OUL', 'L', '30', 'XL', '"uornquasip', 'uerssnes', 'e', 'sienre', 'SI', 'suorgnqugsip', 'uerssneD', 'OM9', 'Jo', 'aIgXIuL', 'V', '9', '791', 'aNdL', '75741', 'TreDOH', 'pue', 'UOISIO', '-aId', 'uaamgaq', 'gord', 'B', 'SI', 'BAIO', '(boH)', 'DISLIO90BIEUD', 'Surgeredo', 'IOAIODOY', 'OUL', 'S', 'SI', 'quaosap', 'quarpe1s', 'ATIYM', "'S24810M", 'ay4', 'agepdn', '07', 'pasn', 'SI', 'uoneodoxdypeg', '4', '"YIOMIOU', '[emau', 'au7', 'uI', 'squorpe.s', 'oy4', 'aanduoo', '01', 'pasn', ':f', 'pue', 'I', 'SIO900A', '757H1', 'ROJL', 'FOYL', 'Mva/anuL', 'Kue', 'JOJ', 'ouIgaur', 'aouensip', 'PITBA', 'e', 'SI', "(@'z/quopuagauso", '-I', '&', 'Teuorsuauump-P', 'layissepp', 'IBQUIT-uou', 'B', 'SI', 'NNY', '2', 'Dord', '1', 'ape', 'aard', 'so', '9', 'eveO', 'aet', 'gut', '', 'quaurfordap', 'a8810qS', 'aya', 'STeordAL', 'I', '1a81eT', 'yonu', 'SI', 'NNY', 'JOJ', 'quetaumbar', 'JOJ', 'WAS', 'ueya', 'quauagens', 'NS', 'ITO.I', 'mor', 'B9LIM', ':a104', 'naqunu', 'a', 'A', 'OALIM', '(sad', 'O1)', '6', 'ASTVA', 'IO', 'INUL', 'Tenrdeo', 'ul', 'Sunumpuey', 'Jeop', 'pue', 'SIO71e1', 'Uepi']
rotation started
['-', 'CRE', 'à', 'MRE', 'à', '%o', 'RO', 'Devs', '-', 'Rero', '4', 'e', 'MIA', '-', 'of', ':', '€', ':', ':', ':', 'U', '&', 'I', ':', 'E', '€', '*', '/', '-', 'a', 'E', 'a', 'I', '1', 'iis', 'E', 'e', 'I', 'i', 'E', 'I', 'I', 'I', 'is', 'I', 'a', 'I', 'I', '1', 'à', 'I', 'a', 'E', 'a', 'of', 's', '$', 'a', 'I', 'a', 'is', 'I', 'iE', 'i', ':', 'a', 'à', 'I', '1', 'E', 'e', 'I', ':', 'e', 'I', 'I', 'I', 'iE', 'I', 'of', 'E', 'I', 'I', 'I', 'I', '1', '8', 'is', 'e', 'I', '.E', 'o', 'e', '1', 'I', '2', '-', 'a', 'I', 'E', 'I', 'o', 'a', 'i', 'E', 'I', 'a', 'of', 'I', '-', ':', '', 'I', 'is', 'o', 'E', 'U', 'E', 'I', 'I', '1', 'I', 'I', 'of', '€', 'I', 'is', 'e', 'à', 'I', 'a', 'I', 'of', ':', 'is', 'I', 'e', 'e', 'E', 'de', 'S', 'I', 'I', '1', 'I', 'E', 'o', 'i', 'à', 'a', 'of', 'I', 'I', 'E', 'a', 'a', 'I', 'is', '8', '9', 'I', 'E', 'à', 'I', ':', 'a', '8', 'S', 'I', 'I', 'I', 'I', 'E', '11', 'I', 'I', 'I', 'I', 'E', '.', 'A', 'E', 'I', '4', '10', '6o', 'I', 'E', 'a', 'iE', 'I', '1', 'I', '(', '1', 'E', 'I', '1', 'E', 'a', 'oe', 'E', 'à', 'E', 'e', '', '-', '1', '2', '3', ':', 'I', 'e', 'I', '1', 'I', 'E', 'E', 'I', 'E', 'I', 'I', '7', '11', 'a', '3', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'Indan', 'letters', 'FALSE', 'in', 'capital', 'pts)', 'Write', 'TRUE', 'or', '', '9.', '(10', 'Dese', 'toil', 'MITIE', 'Hrne', 'S', 'Of', 'cove', 'DATE', 'Sels', '1', 'Srco', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FALS', 'TRUE', 'TRUE', 'larger', 'than', 'SVM', 'for', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', '3', '1-', 'cosineSimalarityz.y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'FALSE', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TR', 'UE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'TKUE', 'FALSE']
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 916.6875000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:15:41] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : alybfPY.jpg
[2024/07/01 15:15:42] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:15:43] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.15744328498840332
[2024/07/01 15:15:45] ppocr DEBUG: rec_res num  : 41, elapsed : 2.113006114959717
OCR detection done
left top x of SN: 562.0
bottom right x of SN: 997.0
left top y of SN: 1984.0
bottom right y of SN: 2259.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/alybfPY.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Z2YvRlp.jpg
OCR detection done with doctr
left top x of SN: 106.46875000000003
bottom right x of SN: 328.2109375
left top x of T/F: 883.01171875
bottom right x of T/F: 1248.7421875
first t/f detection
Feiye
((899.4335937500001, 428.66015625), (978.1015624999999, 465.5859375))
Truc
((897.8281250000001, 608.47265625), (979.70703125, 647.00390625))
collision happend with box:608.47265625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((904.25, 701.58984375), (982.9179687500001, 740.12109375))
text2 i.e the incoming text is the winner
collision happend with box:701.58984375 and text:True solving on the basis of percent match boxes
the current box specification are
Truuc
((905.85546875, 810.76171875), (982.9179687500001, 850.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:810.76171875 and text:Truuc solving on the basis of percent match boxes
the current box specification are
True
((910.671875, 894.24609375), (986.12890625, 932.77734375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:894.24609375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((912.27734375, 974.51953125), (992.55078125, 1013.05078125))
text1 i.e the prev text is the winner
collision happend with box:894.24609375 and text:True solving on the basis of percent match boxes
the current box specification are
faye
((913.8828125, 1058.00390625), (987.734375, 1096.53515625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Feiye
((899.4335937500001, 428.66015625), (978.1015624999999, 465.5859375))
Truc
((897.8281250000001, 608.47265625), (979.70703125, 647.00390625))
True
((904.25, 701.58984375), (982.9179687500001, 740.12109375))
Truuc
((905.85546875, 810.76171875), (982.9179687500001, 850.8984375))
True
((910.671875, 894.24609375), (986.12890625, 932.77734375))
Trve
((912.27734375, 974.51953125), (992.55078125, 1013.05078125))
faye
((913.8828125, 1058.00390625), (987.734375, 1096.53515625))
Tiwe
((899.4335937500001, 1143.09375), (982.9179687500001, 1181.625))
Faye
((902.64453125, 1250.66015625), (982.9179687500001, 1287.5859375))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['1', '2', '4', '6', '8']
the assigned keys are ['3', '5', '7', '9', '10']
printing the number dict y_coordinate
{'9': 1136, '3': 597, '5': 794, '7': 972, '10': 1236}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jsuJUBM.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1044.44140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1044.44140625))
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
collision happend with box:1145.138671875 and text:EER solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
collision happend with box:1660.333984375 and text:RER solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
Truc
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 985, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JX0es3Z.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 873.2578125
bottom right x of T/F: 1241.4609375
first t/f detection
FALSE
((894.33203125, 430.3125), (978.1796875, 461.953125))
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 598.0078125), (965.5234375000001, 629.6484375))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
collision happend with box:691.34765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 792.59765625), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:792.59765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((884.83984375, 881.19140625), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:881.19140625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((894.33203125, 430.3125), (978.1796875, 461.953125))
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
TRVE
((891.16796875, 598.0078125), (965.5234375000001, 629.6484375))
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
TRVE
((888.00390625, 792.59765625), (956.03125, 825.8203125))
TRUE
((884.83984375, 881.19140625), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1172.28515625))
FALSE
((899.078125, 1235.56640625), (987.671875, 1267.20703125))
collision happend with box:1235.56640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((838.9609375, 1265.625), (875.3476562499999, 1290.9375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '8', '10']
the assigned keys are ['5', '6', '7', '9']
printing the number dict y_coordinate
{'5': 794, '6': 897, '7': 966, '9': 1137}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IHbBRG1.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (941.79296875, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 692.9296875), (968.6875, 729.31640625))
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FAL
((894.33203125, 430.3125), (941.79296875, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
TRVE
((891.16796875, 692.9296875), (968.6875, 729.31640625))
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y2wzyA1.jpg
OCR detection done with doctr
left top x of T/F: 6303.125
bottom right x of T/F: 7540.296875
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:16:03] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : y2wzyA1.jpg
[2024/07/01 15:16:04] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:16:05] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.1800525188446045
[2024/07/01 15:16:07] ppocr DEBUG: rec_res num  : 41, elapsed : 1.9202861785888672
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6328.0, 2804.0], [6961.0, 2804.0], [6961.0, 2997.0], [6328.0, 2997.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6264.0, 3405.0], [6918.0, 3405.0], [6918.0, 3588.0], [6264.0, 3588.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [1416]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6355.0, 3982.0], [6974.0, 4010.0], [6965.0, 4235.0], [6346.0, 4208.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340, 4526]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 4526]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 4526]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6307.0, 5027.0], [6866.0, 5027.0], [6866.0, 5220.0], [6307.0, 5220.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
will be zero.
[[1466.0, 5177.0], [2236.0, 5177.0], [2236.0, 5328.0], [1466.0, 5328.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6359.0, 5657.0], [6997.0, 5709.0], [6982.0, 5901.0], [6344.0, 5850.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340]
the false list is  []
the true list for xdirn [6333]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340, 6385]
the false list is  []
the true list for xdirn [6333, 6385]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
first t/f detection
class label.
[[1476.0, 6585.0], [2141.0, 6585.0], [2141.0, 6735.0], [1476.0, 6735.0]]
the true list is  [2340]
the false list is  []
the true list for xdirn [6333, 6385]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340, 6932]
the false list is  []
the true list for xdirn [6333, 6385, 6376]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932]
the false list is  []
the true list for xdirn [6333, 6385, 6376]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932]
the false list is  []
the true list for xdirn [6333, 6385, 6376]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340, 6932, 7465]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932, 7465]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932, 7465]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932, 7465]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2340, 6932, 7465, 8159]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317, 6445]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2340, 6932, 7465, 8159]
the false list is  []
the true list for xdirn [6333, 6385, 6376, 6317, 6445]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': True}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J6SsjFs.jpg
OCR detection done with doctr
left top x of T/F: 5696.7333984375
bottom right x of T/F: 6968.655273437501
left top x of SN: 679.4931640624999
bottom right x of SN: 1143.9365234374998
first t/f detection
FALSE
((5773.103515625, 2190.2138671875), (6389.3974609375, 2417.7685546875))
FALSE
((5744.6591796875, 2749.619140625), (6398.87890625, 2967.6923828125))
TRUE
((5706.7333984375, 3214.2099609375), (6275.6201171875, 3451.24609375))
TRUE
((5602.4375, 3896.8740234375), (6237.6943359375, 4124.4287109375))
TRUE
((5668.8076171875, 4513.16796875), (6285.1015625, 4721.759765625))
FALSE
((5716.21484375, 5072.5732421875), (6351.471679687501, 5290.646484375))
FALSE
((5611.9189453125, 5546.6455078125), (6294.5830078125, 5764.71875))
FALS
((5725.6962890625, 6049.162109375), (6247.17578125, 6267.2353515625))
FALSE
((5725.6962890625, 6532.7158203125), (6484.2119140625, 6750.7890625))
TRVE
((5659.326171875, 7177.4541015625), (6323.02734375, 7405.0087890625))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are ['1', '4']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9', '10']
['2', '3', '5', '6', '7', '8', '9', '10', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2872, '3': 3290, '5': 4484, '6': 5101, '7': 5527, '8': 6125, '9': 6542, '10': 7139, '1': 2572}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cRogGRp.jpg
OCR detection done with doctr
left top x of T/F: 5230.4609375
bottom right x of T/F: 6465.085937499999
left top x of SN: 562.203125
bottom right x of SN: 970.9140625000001
first t/f detection
FA
((5341.09375, 2113.2890625), (5569.804687500001, 2277.9609375))
collision happend with box:2113.2890625 and text:FA solving on the basis of percent match boxes
the current box specification are
LSE
((5560.65625, 2113.2890625), (5899.1484375, 2250.515625))
text2 i.e the incoming text is the winner
TAVE
((5432.578125, 2579.859375), (5990.6328125, 2808.5703125))
TRUG
((5450.875, 3110.46875), (6045.5234375, 3357.4765625))
T
((5231.312499999999, 3284.2890625), (5359.390625, 3421.515625))
TRUE
((5487.46875, 3805.75), (5990.6328125, 4025.3125))
f
((5249.609375, 4482.734375), (5350.2421875, 4592.515625))
collision happend with box:4482.734375 and text:f solving on the basis of percent match boxes
the current box specification are
FALSE
((5560.65625, 4336.359375), (6182.75, 4601.6640625))
text2 i.e the incoming text is the winner
T
((5249.609375, 4876.1171875), (5386.8359375, 4976.75))
collision happend with box:4876.1171875 and text:T solving on the basis of percent match boxes
the current box specification are
FALSE
((5441.7265625, 4802.9296875), (5963.1875, 4985.8984375))
text2 i.e the incoming text is the winner
FALSE
((5377.6875, 5251.203125), (5899.1484375, 5434.171875))
TRUG
((5432.578125, 5754.3671875), (6008.9296875, 5919.0390625))
TRUG
((5414.281250000001, 6193.4921875), (6036.375, 6394.7578125))
T
((5313.6484375, 6843.03125), (5432.578125, 6998.5546875))
collision happend with box:6843.03125 and text:T solving on the basis of percent match boxes
the current box specification are
TRVE
((5551.507812500001, 6788.140625), (6127.859375, 6989.40625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2680, '3': 3055, '4': 3622, '5': 4180, '6': 4757, '7': 5132, '8': 5708, '9': 6102, '10': 6687}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F436xrf.jpg
OCR detection done with doctr
left top x of SN: 75.06640625000004
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folse
((1345.3154296875, 626.0009765625), (1512.087890625, 734.765625))
collision happend with box:626.0009765625 and text:folse solving on the basis of percent match boxes
the current box specification are
Trbk
((1367.068359375, 768.603515625), (1516.921875, 848.3642578125))
text1 i.e the prev text is the winner
collision happend with box:626.0009765625 and text:folse solving on the basis of percent match boxes
the current box specification are
Fake
((1524.1728515625, 763.76953125), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
abefu
((1412.9912109375, 889.453125), (1616.0185546875, 998.2177734375))
collision happend with box:889.453125 and text:abefu solving on the basis of percent match boxes
the current box specification are
True
((1485.5009765625, 1046.5576171875), (1613.6015625, 1138.4033203125))
text2 i.e the incoming text is the winner
collision happend with box:1046.5576171875 and text:True solving on the basis of percent match boxes
the current box specification are
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1305.17578125), (1500.0029296875, 1404.2724609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folse
((1345.3154296875, 626.0009765625), (1512.087890625, 734.765625))
Trbk
((1367.068359375, 768.603515625), (1516.921875, 848.3642578125))
collision happend with box:768.603515625 and text:Trbk solving on the basis of percent match boxes
the current box specification are
Fake
((1524.1728515625, 763.76953125), (1618.435546875, 833.8623046875))
text2 i.e the incoming text is the winner
abefu
((1412.9912109375, 889.453125), (1616.0185546875, 998.2177734375))
True
((1485.5009765625, 1046.5576171875), (1613.6015625, 1138.4033203125))
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
True
((1345.3154296875, 1305.17578125), (1500.0029296875, 1404.2724609375))
Tyul
((1352.5664062499998, 1438.1103515625), (1495.1689453124998, 1527.5390625))
Falu
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
Falve
((1357.400390625, 1701.5625), (1509.6708984375, 1798.2421875))
falxe
((1357.400390625, 1863.5009765625), (1514.5048828125002, 1960.1806640625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : T2EiQ3J.jpg
OCR detection done with doctr
left top x of SN: 974.9355468749998
bottom right x of SN: 1379.8886718750002
left top x of T/F: 5307.1640625
bottom right x of T/F: 6445.095703124999
first t/f detection
TRUE
((5326.537109374999, 2108.935546875), (5898.29296875, 2333.888671875))
TRUE
((5335.91015625, 2577.587890625), (5898.29296875, 2793.16796875))
TRUE
((5326.537109374999, 2990.001953125), (5954.53125, 3196.208984375))
TRUE
((5345.283203125, 3486.7734375), (6010.76953125, 3711.7265625))
TRUE
((5251.552734375, 4039.783203125), (5954.53125, 4255.36328125))
TRUE
((5260.92578125, 4555.30078125), (5851.427734375, 4761.5078125))
FALSE
((5354.65625, 4930.22265625), (6076.380859375, 5155.17578125))
FALSE
((5317.1640625, 5445.740234375), (5973.27734375, 5670.693359375))
TROE
((5232.806640625, 5801.916015625), (5898.29296875, 6026.869140625))
falae
((5335.91015625, 6392.41796875), (6010.76953125, 6664.236328125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2155, '2': 2652, '3': 2999, '4': 3533, '5': 4049, '6': 4592, '7': 4948, '8': 5492, '9': 5848, '10': 6401}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qmwIFuq.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
Falue
((1273.986328125, 1794.462890625), (1426.45703125, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yF4wPq5.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1885.0703125000002
first t/f detection
falue
((1446.3984374999998, 632.2265625), (1621.59375, 738.8671875))
collision happend with box:632.2265625 and text:falue solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Ful
((1446.3984374999998, 1081.640625), (1613.9765625, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1081.640625 and text:Ful solving on the basis of percent match boxes
the current box specification are
Trur
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1246.6796875 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falue
((1446.3984374999998, 632.2265625), (1621.59375, 738.8671875))
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
Ful
((1446.3984374999998, 1081.640625), (1613.9765625, 1180.6640625))
Trur
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
Folw
((1423.546875, 1647.8515625), (1573.3515624999998, 1734.1796875))
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AwF0CBa.jpg
OCR detection done with doctr
left top x of SN: 1264.3447265624998
bottom right x of SN: 1693.83203125
left top x of T/F: 6254.15234375
bottom right x of T/F: 7402.224609375
first t/f detection
TRUE
((6254.172851562501, 2564.7294921875), (6783.0859375, 2804.2373046875))
TRUE
((6254.172851562501, 3103.6220703125), (6793.0654296875, 3333.150390625))
FALSE
((6284.111328125, 3692.412109375), (6892.8603515625, 3921.9404296875))
FALSE
((6234.2138671875, 5339.0283203125), (6872.9013671875, 5568.556640625))
TRUE
((6244.193359375, 4201.3662109375), (6803.044921875, 4400.9560546875))
TRUE
((6244.193359375, 4670.40234375), (6823.00390625, 4909.91015625))
TRUE
((6184.31640625, 6067.53125), (6743.16796875, 6297.0595703125))
TRUE
((6184.31640625, 6516.6083984375), (6773.106445312501, 6746.13671875))
FALSE
((6184.31640625, 7105.3984375), (6733.1884765625, 7295.0087890625))
TRUE
((6164.357421875, 7674.2294921875), (6703.25, 7903.7578125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2504, '2': 3083, '3': 3662, '4': 4241, '5': 4620, '6': 5209, '7': 5967, '8': 6546, '9': 6935, '10': 7704}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6nLvfDA.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6476.718750000001
left top x of SN: 718.625
bottom right x of SN: 1124.40625
first t/f detection
TRUE
((5400.687499999999, 2366.1875), (5987.71875, 2573.90625))
TRUE
((5382.625000000001, 2880.96875), (6005.781250000001, 3097.71875))
TPU
((5391.65625, 3386.71875), (5834.187499999999, 3612.5))
BALSE
((5373.593749999999, 3973.75), (6141.250000000001, 4262.75))
EAUSE
((5409.718750000001, 4596.90625), (6186.406249999999, 4795.59375))
CALS
((5373.593749999999, 5075.5625), (5906.4375, 5283.28125))
CASE
((5382.625000000001, 5563.25), (6123.1875, 5734.84375))
TRDE
((5283.28125, 6041.90625), (5861.281249999999, 6213.5))
EAS
((5319.406249999999, 6565.71875), (5843.218750000001, 6773.4375))
TRUE
((5373.593749999999, 7080.5), (5915.468749999999, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2528, '2': 3070, '3': 3431, '4': 3982, '5': 4533, '6': 5084, '7': 5445, '8': 6014, '9': 6385, '10': 6963}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9FgCGu3.jpg
OCR detection done with doctr
left top x of SN: 580.5000000000001
bottom right x of SN: 1007.5078124999999
left top x of T/F: 5413.4296875
bottom right x of T/F: 6611.4609375
first t/f detection
a
((5514.9140625, 3174.5078125), (5578.953125, 3238.546875))
T
((5432.578125, 4693.1484375), (5569.804687500001, 4821.2265625))
T
((5460.0234375, 5370.1328125), (5588.1015625, 5516.5078125))
F
((5469.171875, 6312.421875), (5588.1015625, 6467.9453125))
the final dict without editing {'1': 'NULL', '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are ['2', '7']
the assigned keys are ['1', '3', '4', '5', '6', '8', '9', '10']
['1', '3', '4', '5', '6', '8', '9', '10', '1', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2003, '3': 3110, '4': 3668, '5': 4034, '6': 4601, '8': 5909, '9': 6284, '10': 7026}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': 'NULL', '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DpJMbdM.jpg
OCR detection done with doctr
left top x of SN: 543.9062499999999
bottom right x of SN: 961.765625
left top x of T/F: 5568.953125
bottom right x of T/F: 6794.4296875
first t/f detection
Truo
((5624.6953125, 1966.9140625), (6191.8984375, 2177.328125))
falye
((5789.3671875, 2534.1171875), (6384.015625, 2735.3828125))
faln
((5688.734375, 3073.875), (6219.34375, 3284.2890625))
Trul
((5615.546875, 3677.671875), (6164.453125, 3842.34375))
Rolse
((5862.554687500001, 3933.828125), (6347.421875, 4116.796875))
T&ooL
((5679.5859375, 4217.4296875), (6283.3828125, 4391.25))
Falsa.
((5652.140625, 4711.4453125), (6219.34375, 4921.859375))
eocell.eo
((5679.5859375, 4052.7578125), (6219.34375, 4226.578125))
True
((5707.031250000001, 5434.171875), (6228.4921875, 5571.3984375))
Tul.
((5780.21875, 5955.6328125), (6356.5703125, 6120.3046875))
folse
((5935.7421875, 6458.796875), (6411.4609375, 6687.5078125))
Toul.
((5734.4765625, 7154.078125), (6393.1640625, 7318.75))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1985, '2': 2552, '3': 3128, '4': 3705, '5': 4089, '6': 4674, '7': 5452, '8': 6037, '9': 6440, '10': 7236}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SLoEgZp.jpg
OCR detection done with doctr
left top x of SN: 101.21093750000003
bottom right x of SN: 321.494140625
left top x of T/F: 956.2109375
bottom right x of T/F: 1335.400390625
first t/f detection
True
((972.6562500000001, 428.61328125), (1053.22265625, 470.5078125))
collision happend with box:428.61328125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1069.3359375, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 584.912109375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:584.912109375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
fa
((956.54296875, 787.939453125), (1008.10546875, 836.279296875))
text1 i.e the prev text is the winner
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1093.505859375, 834.66796875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((972.6562500000001, 428.61328125), (1053.22265625, 470.5078125))
False
((974.267578125, 509.1796875), (1069.3359375, 549.462890625))
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 584.912109375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
fa
((956.54296875, 787.939453125), (1008.10546875, 836.279296875))
collision happend with box:787.939453125 and text:fa solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1093.505859375, 834.66796875))
text2 i.e the incoming text is the winner
False
((974.267578125, 873.33984375), (1069.3359375, 913.623046875))
True
((974.267578125, 965.185546875), (1058.056640625, 1003.857421875))
false
((974.267578125, 1053.80859375), (1061.279296875, 1086.03515625))
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
False.
((990.3808593750001, 1239.111328125), (1099.951171875, 1284.228515625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 404, '2': 509, '3': 578, '4': 681, '5': 784, '6': 886, '7': 955, '8': 1060, '9': 1129, '10': 1232}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CgQmkHz.jpg
OCR detection done with doctr
left top x of T/F: 5817.7763671875
bottom right x of T/F: 7036.1220703125
left top x of SN: 1003.0771484374998
bottom right x of SN: 1420.3349609375
first t/f detection
Tug
((6322.0634765625, 2303.3779296875), (6796.5791015625, 2540.6357421875))
False
((5916.748046875001, 3005.265625), (6490.12109375, 3252.4091796875))
false
((6154.005859375, 3430.3525390625), (6717.493164062499, 3726.9248046875))
Iqul
((5985.9482421875, 4161.8974609375), (6598.8642578125, 4438.6982421875))
Touue
((5887.0908203125, 4804.470703125), (6470.349609375, 5051.6142578125))
Falso
((5936.51953125, 5298.7578125), (6480.2353515625, 5585.4443359375))
Tue
((5956.291015625, 5753.501953125), (6569.20703125, 6030.302734375))
Gue
((5995.833984375, 6366.41796875), (6559.3212890625, 6603.67578125))
false
((6104.5771484375, 6722.3046875), (6668.064453124999, 7018.876953125))
Falsa
((6144.1201171875, 7206.7060546875), (6757.0361328125, 7542.8212890625))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2599, '2': 3183, '3': 3578, '4': 4161, '5': 4745, '6': 5318, '7': 5704, '8': 6287, '9': 6692, '10': 7295}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SGX6mEJ.jpg
OCR detection done with doctr
left top x of SN: 79.83203125000001
bottom right x of SN: 298.2109375
left top x of T/F: 794.51171875
bottom right x of T/F: 1147.28125
first t/f detection
Tyue
((807.58203125, 328.5234375), (887.41015625, 357.69140625))
collision happend with box:328.5234375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((812.1875, 403.74609375), (888.9453125, 440.58984375))
text1 i.e the prev text is the winner
collision happend with box:328.5234375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fole
((821.3984375, 483.57421875), (888.9453125, 514.27734375))
text2 i.e the incoming text is the winner
collision happend with box:483.57421875 and text:Fole solving on the basis of percent match boxes
the current box specification are
folye
((812.1875, 566.47265625), (887.41015625, 601.78125))
text2 i.e the incoming text is the winner
collision happend with box:566.47265625 and text:folye solving on the basis of percent match boxes
the current box specification are
FoHe
((816.79296875, 657.046875), (895.0859375, 692.35546875))
text1 i.e the prev text is the winner
FaMe
((818.328125, 741.48046875), (896.62109375, 772.18359375))
collision happend with box:741.48046875 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fayc
((818.328125, 813.6328125), (887.41015625, 844.3359375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyue
((807.58203125, 328.5234375), (887.41015625, 357.69140625))
collision happend with box:328.5234375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((812.1875, 403.74609375), (888.9453125, 440.58984375))
text1 i.e the prev text is the winner
Fole
((821.3984375, 483.57421875), (888.9453125, 514.27734375))
folye
((812.1875, 566.47265625), (887.41015625, 601.78125))
FoHe
((816.79296875, 657.046875), (895.0859375, 692.35546875))
FaMe
((818.328125, 741.48046875), (896.62109375, 772.18359375))
collision happend with box:741.48046875 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fayc
((818.328125, 813.6328125), (887.41015625, 844.3359375))
text2 i.e the incoming text is the winner
True
((816.79296875, 898.06640625), (887.41015625, 931.83984375))
collision happend with box:898.06640625 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((815.2578125, 974.82421875), (885.875, 1005.52734375))
text1 i.e the prev text is the winner
thè
((763.0625, 1086.890625), (796.8359375, 1112.98828125))
collision happend with box:1086.890625 and text:thè solving on the basis of percent match boxes
the current box specification are
Trwe
((813.72265625, 1070.00390625), (893.55078125, 1106.84765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 328, '2': 419, '3': 482, '4': 574, '5': 664, '6': 756, '7': 818, '8': 911, '9': 971, '10': 1066}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FpAdggD.jpg
OCR detection done with doctr
left top x of SN: 90.82812499999997
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1215.7890625
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((904.9765625, 467.875), (923.4453125, 498.65625))
text2 i.e the incoming text is the winner
collision happend with box:467.875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 534.0546875), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
collision happend with box:534.0546875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((897.28125, 634.09375), (926.5234375, 664.875))
text2 i.e the incoming text is the winner
collision happend with box:634.09375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 743.3671875), (923.4453125, 777.2265625))
text2 i.e the incoming text is the winner
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
F
((904.9765625, 467.875), (923.4453125, 498.65625))
collision happend with box:467.875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 534.0546875), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
T
((897.28125, 634.09375), (926.5234375, 664.875))
F
((897.28125, 743.3671875), (923.4453125, 777.2265625))
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
T
((891.125, 918.8203125), (923.4453125, 948.0625))
F
((900.359375, 1005.0078125), (924.9843750000001, 1040.40625))
collision happend with box:1005.0078125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1083.5), (929.6015625, 1118.8984375))
text2 i.e the incoming text is the winner
F
((898.8203124999999, 1192.7734375), (928.0625, 1226.6328125))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 377, '2': 478, '3': 547, '4': 649, '5': 749, '6': 851, '7': 918, '8': 1021, '9': 1089, '10': 1191}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AbOkl8A.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 304.46875
left top x of T/F: 1238.18359375
bottom right x of T/F: 1692.13671875
first t/f detection
folse
((1278.677734375, 607.537109375), (1431.1484375, 699.01953125))
collision happend with box:607.537109375 and text:folse solving on the basis of percent match boxes
the current box specification are
Falte
((1283.369140625, 727.16796875), (1426.45703125, 809.267578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:727.16796875 and text:Falte solving on the basis of percent match boxes
the current box specification are
TruL
((1278.677734375, 865.564453125), (1419.419921875, 952.35546875))
text2 i.e the incoming text is the winner
collision happend with box:865.564453125 and text:TruL solving on the basis of percent match boxes
the current box specification are
Tiul
((1283.369140625, 1003.9609375), (1426.45703125, 1100.134765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1003.9609375 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Hul
((1290.40625, 1158.77734375), (1421.7656250000002, 1245.568359375))
text1 i.e the prev text is the winner
Tul
((1281.0234374999998, 1285.4453125), (1428.802734375, 1355.81640625))
collision happend with box:1285.4453125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Igul
((1285.71484375, 1405.076171875), (1426.45703125, 1487.17578125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folse
((1278.677734375, 607.537109375), (1431.1484375, 699.01953125))
Falte
((1283.369140625, 727.16796875), (1426.45703125, 809.267578125))
TruL
((1278.677734375, 865.564453125), (1419.419921875, 952.35546875))
Tiul
((1283.369140625, 1003.9609375), (1426.45703125, 1100.134765625))
Hul
((1290.40625, 1158.77734375), (1421.7656250000002, 1245.568359375))
Tul
((1281.0234374999998, 1285.4453125), (1428.802734375, 1355.81640625))
Igul
((1285.71484375, 1405.076171875), (1426.45703125, 1487.17578125))
Mul
((1273.986328125, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1288.0605468750002, 1653.720703125), (1405.345703125, 1728.783203125))
falu
((1271.640625, 1789.771484375), (1433.494140625, 1885.9453125))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 445
printing the number dict y_coordinate
{'2': 745, '3': 846, '4': 992, '5': 1144, '6': 1290, '7': 1393, '8': 1541, '9': 1639, '10': 1789, '1': 445}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WcmRS3m.jpg
OCR detection done with doctr
left top x of SN: 105.82812499999997
bottom right x of SN: 326.6484375
left top x of T/F: 960.3984375
bottom right x of T/F: 1346.7421875
first t/f detection
True
((978.5625, 437.59375), (1061.8359375, 480.046875))
collision happend with box:437.59375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((983.4609375, 515.96875), (1079.796875, 556.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:515.96875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((981.8281249999999, 592.7109375), (1086.328125, 640.0625))
text2 i.e the incoming text is the winner
collision happend with box:592.7109375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((978.5625, 697.2109375), (1068.3671875, 738.03125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:697.2109375 and text:True solving on the basis of percent match boxes
the current box specification are
fe
((970.3984375, 795.1796875), (1022.6484374999999, 840.8984375))
text1 i.e the prev text is the winner
collision happend with box:697.2109375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1029.1796875, 800.078125), (1112.453125, 840.8984375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((978.5625, 437.59375), (1061.8359375, 480.046875))
collision happend with box:437.59375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((983.4609375, 515.96875), (1079.796875, 556.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:515.96875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((981.8281249999999, 592.7109375), (1086.328125, 640.0625))
text2 i.e the incoming text is the winner
True
((978.5625, 697.2109375), (1068.3671875, 738.03125))
fe
((970.3984375, 795.1796875), (1022.6484374999999, 840.8984375))
collision happend with box:795.1796875 and text:fe solving on the basis of percent match boxes
the current box specification are
Trve
((1029.1796875, 800.078125), (1112.453125, 840.8984375))
text2 i.e the incoming text is the winner
False
((989.9921875, 880.0859375), (1086.328125, 919.2734375))
Trve
((989.9921875, 971.5234375), (1074.8984375, 1012.34375))
False
((991.625, 1058.0625), (1084.6953125, 1097.25))
False
((996.5234375000001, 1142.96875), (1078.1640625, 1182.15625))
the
((923.046875, 1276.859375), (962.2343749999999, 1302.984375))
collision happend with box:1276.859375 and text:the solving on the basis of percent match boxes
the current box specification are
False.
((1012.8515624999999, 1245.8359375), (1125.515625, 1291.5546875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 224
printing the number dict y_coordinate
{'2': 524, '3': 594, '4': 698, '5': 801, '6': 904, '7': 973, '8': 1077, '9': 1146, '10': 1249, '1': 224}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 55RvBa9.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6296.09375
left top x of SN: 592.1874999999999
bottom right x of SN: 1007.0
first t/f detection
TRUE
((5472.9375, 1652.71875), (6078.031249999999, 1905.59375))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Foete
((5138.78125, 1788.1875), (5752.906249999999, 2095.25))
text1 i.e the prev text is the winner
FtbsFASE
((5156.84375, 2203.625), (6204.46875, 2537.78125))
FACSE
((5147.8125, 2826.78125), (5888.374999999999, 3079.65625))
TRUE
((5156.84375, 3377.6875), (5879.34375, 3630.5625))
TRUE
((5174.90625, 3856.34375), (5834.187499999999, 4100.1875))
FTRUE
((5147.8125, 4380.15625), (6069.0, 4624.0))
FALSE
((5102.65625, 4858.8125), (5861.281249999999, 5147.8125))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
collision happend with box:5183.9375 and text:PALSE solving on the basis of percent match boxes
the current box specification are
RVE
((5165.875, 5337.46875), (5807.093749999999, 5590.34375))
text1 i.e the prev text is the winner
FALSE
((5120.71875, 5834.1875), (5852.25, 6168.34375))
the
((4876.875, 6502.5), (5111.6875, 6647.0))
collision happend with box:6502.5 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5220.062500000001, 6348.96875), (5951.593750000001, 6755.375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': False}
the unassigned keys are ['1', '2', '4', '5', '7', '8']
the assigned keys are ['3', '6', '9', '10']
printing the number dict y_coordinate
{'9': 568, '3': 2880, '6': 4506, '10': 6367}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UAPlfB2.jpg
rotation started
['E0al', '"enep', 'uoosun', "'mou", '01', 'TTOM', 'ezireioues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'eu9', 'UI', 'sTregp', 'JO', 'OSIOU', 'oyroeds', 'omgdes', '01', 'ureeT', 'Keu', 'lopour', 'a47', 'Se', "'SoseaIo", 'BRg', '-UI', 'Sumay.reno', 'Jo', 'YSLI', 'ou9', "'WAS", 'uI', 'rejourered', 'D', 'o47', 'Jo', 'onTeA', 'y814', 'B', 'YAIM', 'OT', "'WAS", '9SOI-SA-OUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'QUO-SA-QUO', 'Bursn', '303l', 'uororpard', 'B', 'Suryeur', "'sessero", 'Jo', 'pequnu', 'a81eT', 'B', 'YAIM', 'suerqoid', 'ssepprgmu', 'JOI', '6', 'End)', 'BEROT', '"aoeds', 'TBULSTIO', 'oy7', 'UI', 'meQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorstop', 'OUL', '8', '2516J212', "'sopou", 'Jo', 'poqunu', 'au7', '07', 'Teuorgodoud', 'Atgpemp', 'SI', 'OOIL', 'UOISIDOC', 'o47', 'ul', 'uomorpard', 'B', 'Suryeu', 'IOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '25743', '"uorgnqugsip', 'ueissnes', 'B', 'sienre', 'SI', 'suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'Treday', 'pue', 'UOISIO', 'JOyl', '-ald', 'UOOMn0q', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'DISLIO90BIUD', 'Surgeredo', 'IOAIODOH', 'OUL', 'C', 'YIOMIOU', 'Temneu', 'o47', 'UI', 'squerpeLs', 'au4', 'aanduoo', '07', 'posn', '35767', 'R', '', 'SI', 'queosep', 'querpe1s', 'OTIYM', "'SA481OM", 'a47', 'agepdn', '07', 'posn', 'SI', 'uone8odoxdypeg', '#', ':f', 'pue', 'I', 'SIO900A', 'aouegsip', 'PITBA', 'B', 'SI', "(A'z/@quopuagauzsoy", '-', 'I', '&', 'Kue', 'IOJ', 'olIgOur', '30yl', '303l0', 'Teuorsueuup-p', 'layissel', 'reourl-uou', 'B', 'SI', 'NNX', '2', 'queurdordap', 'a8e.10qs', 'au1', 'STeordAL', 'I', 'IOJ', 'quetemba', '1981e1', 'yonu', 'SI', 'NNY', 'Indl', 'JOJ', 'IAS', 'ueyz', 'quouagess', 'NS', 'O9LIM', '5an', 'X', 'STIVa/anaL', '1aqunu', 'IIOI', 'mor', ':a.10U', 'deady', 'mad', 'eul', '(sad', 'O1)', "'6", '29L1M', 'IO', 'ENAL', 'UI', 'ASTVA', 'Teardeo', 'SIO11e1', 'Surguumpueu', 'reapo', 'pue']
rotation started
['of', 'of', '?', '4', 'a', '-', '-', ':', 'd', ':', '', 'N', '(', 'is', 'I', '&', 'N', '-', '-', ':', 'E', '-', '-', 'a', '-', 'a', 'E', 'a', 'I', '', 'is', 'E', 'a', 'I', 'à', 'I', 'I', 'I', 'E', 'a', 'iE', 'I', '1', 'I', 'I', 'is', '2', 'I', '', 'I', 'e', 'I', 'iE', 'E', '1', 'I', 'is', 'e', 'I', 'iE', 'o', 'I', '-', 'I', 'E', 'I', 'a', '-', 'à', ':', 'o', '-', '8', 'I', 'of', 'I', 'E', 'E', 'C', 'I', 'I', 'of', ':', 'I', 'is', '-', 'de', 'à', ':', 'I', 'a', 'E', 'of', 'de', 'I', '-', 'e', 'a', ':', 'I', '5', 'a', 's', '8a', 'I', 'a', 'I', 'iE', 'I', 'of', 'I', '(', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', '1', '8', 'e', 'e', 'iE', 'i', 'o', 'I', 'E', 'I', 'of', '5', '$', '2', '', 'I', ':', 'a', 'I', '3', 'E', 'I', 'I', '1', 'a', 'a', 'oe', 'E', 'à', 'a', 'e', '6', '-', '8', 'is', 'I', 'I', 'I', 'is', 'e', 'S', 'E', 'a', '8', 'I', 'is', 'o', 'I', 'E', 'I', '11', 'I', 'I', 'a', '3', 'E', '3', ':', 'I', 'e', 'I', '1', 'I', '2', 'I', 'E', 'I', 'of', 'I', '0', 'a', 'I', 'I', 'I', 'I', 'à', 'I', 'I', 'I', 'I', 'E', 'I', 'E', 'à', 'A', 'E', 'à', ':', '€', 'I', 'I', '7', '11', '4', '10', '8', 'I', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'TRUE', 'or', 'pts)', 'Write', '9.', '(10', 'Merao', 'A', 'pmpra', 'number', 'here:', 'Write', 'your', 'roll', 'TRUE/FALSN', 'AP', 'SN', 'Statement', 'SVM', 'for', 'TRUE', 'URS', 'is', 'much', 'larger', 'than', 'requirement', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'deployment.', 'OTRUE', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'i', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'lrebe', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'be', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Toas', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'TRUE', 'using', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'learn', 'may', '1208', 'TRUE', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
rotation started
['bf', '', '00', '1', '', 'CT', '4', '', 'N', 'E', 'I', 'E', 'E', '7', 'a', 'I', 'I', 'I', '2', 'e', 'E', '8', '8', 'it', 'a', 'I', ':', 'E', 'I', 'I', 'E', 'of', 'I', '8', 'E', 'E', 'E', ':', 'a', 'I', 'se', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', '2', 'I', ':', 'I', 'E', 'I', '5', 'E', 'tn', 'I', 'E', 'E', '2', 'a', 'Q', 'I', 'I', 'E', 'B', 'I', '8', 'I', 'a', 'I', 'I', 'of', 'I', 'I', '8', ':', 'a', 'E', 'I', 'E', '-', 'I', 'E', 'I', 'I', 'E', 'I', '€', 'E', 'I', 'E', '9', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'f', '8', 'I', 'I', 'E', 'I', 'I', 'E', 'E', '8', 't', '€', '9', 'of', 'E', 'I', 'I', 'E', 'I', 'E', 'F', '11', '2', '8', 'E', 'E', '€', 'a', '9', 'E', 'DE', 'I', 'E', 'A', 'I', 'E', 'a', '-', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 't', 'I', '8', '€', 'I', '1', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 't', 'E', 'E', 'I', '8', 'I', 'I', 'I', 'E', 'E', 'E', '2', 'I', 'I', 'I', '2', 'E', 'E', 'I', 'g', 'e', 'I', '1', 'I', '€', ':', 't', 'I', 'I', 'I', 'I', ')', 'F', 'it', 'I', '-', '8', 'e', 'E', 'd', 'Si', '4', '8', '?', '-', ':', '-', 'à', '€', '-', '€', 'I', 'V', '', 'A', '2', 'o6', '-']
OCR detection done with doctr
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:18:55] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : UAPlfB2.jpg
[2024/07/01 15:18:56] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:18:57] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.17096447944641113
[2024/07/01 15:18:59] ppocr DEBUG: rec_res num  : 40, elapsed : 1.4976296424865723
OCR detection done
left top x of SN: 7264.0
bottom right x of SN: 7558.0
left top y of SN: 562.0
bottom right y of SN: 997.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/UAPlfB2.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QHgIPCx.jpg
rotation started
['f', '3', 'N', '11', '2', 'I', 'E', 'E', '3', 'P', 'E', 'A', '8', 'E', 'E', 'LH', 'I', '2', 'I', 'a', '8', 'I', 'it', ':', 'e', '-', 'E', '8', '2o', 'I', 'I', '€', 'E', 'I', 'I', 'I', 'I', 'of', 'I', 'I', 'E', 'I', '8', 'E', 'E', ':', 'E', 'I', 'e', 'I', ':', 'E', 'I', 'E', 'I', 'it', 'I', '3', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'it', '', 'I', 'a', 'I', 'I', 'Q', 'E', 'B', '8', 'I', 'a', 'it', 'I', 'I', '%', 'I', 'I', 'I', '8', '8', '2', '2', 'E', 'I', 'E', ':', 'I', 'E', '1', '€', 'E', 'I', 'I', '€', 'E', 'I', 'E', 'e', 'it', 'I', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'f', 'E', '8', 'I', 'I', 'E', 'I', 'E', 'I', 'I', 'p', 'E', 'I', 'I', 'I', ':', 'E', '2', 'E', 'I', 'a', 't', '€', 'a', 'E', '€', '9', '2', 'I', 'I', 'E', 'E', '8', ':', 'I', 'I', 'I', 'it', 'I', 'E', '-', 'I', 'E', 'F', '1', 'I', 'I', 'I', '-', '6o', '00', '-', '', 'OT', '4', 'so', '&', 'E', 'I', 'a', 'of', 'E', 'DE', 'i', 'I', 'E', 'E', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 'I', 'I', 'it', 'E', 'I', 'I', '2', 'I', '4', '2', '2', 'à', 'A', 'à', 'à', 'I', 'e', '3']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'ozireloues', 'qou', 'op', 'gey7', 'egep', 'Sururenn', 'anaL', 'ouy', 'UI', 'smegop', 'JO', 'OSIOU', 'oyroeds', 'amgdes', '01', 'ureOl', 'Keur', 'lopour', 'a44', 'Se', "'soseaIo", '-UI', 'Surayieno', 'Jo', 'YSLI', 'ouA', "'IAS", 'UI', 'rogeurered', 'D', 'ay7', 'Jo', 'anTeA', 'y81y', 'e', 'Y9IM', 'OT', 'uorgorpard', 'B', 'Suryeur', "'sessepo", 'Jo', 'poqunu', 'a8rel', 'e', 'YAIM', 'suerqord', 'ssepprgmur', 'JOI', '6', '"WAS', '9sai-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Buo-SA-QUO', 'Sursn', '3STV', 'Snal', 'aoeds', 'TEULSTIO', 'aun', 'uT', 'JBOUIT-uou', '9q', 'ueo', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsipap', 'OUL', '8', 'DSTHE', 'Atgpamp', 'SI', 'DOIL', 'UOISIOOG', 'aun', 'UI', 'uororpard', 'e', 'Suryeu', 'IOJ', 'pammbar', 'OUIL', 'OUL', 'L', 'ESTUJ', '"uorgnquasip', 'uerssnes', 'e', 'Skemre', 'SI', 'Suorgnquasip', 'ueissneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'andi', '-aId', 'uoomgq', 'nord', 'B', 'SI', 'DAINO', '(DOH)', 'orgsutegoereud', 'Surgeiedo', 'IOAIODOY', 'BUL', 'C', "'sapou", 'Jo', 'poqunu', 'aya', '07', 'reuorgiodord', 'Teday', 'pue', 'UOISIO', 'YIOMgOU', 'Temeu', 'au7', 'UI', 'squerpels', 'o47', 'aanduoo', '07', 'pesn', 'querpe.s', 'OTIYM', "'s94810M", 'o47', 'agepdn', '07', 'posn', 'SI', 'uomeodoxdypeg', '4', '3STN', 'SI', 'quaosap', ':f', 'pue', 'i', 'SIO900A', 'aouensip', 'PITEA', 'B', 'SI', '(A-z/Aumpuagausoy', '-', 'I', '&', 'EnAL', 'Tettorsutatup-p', 'Kue', 'IOJ', 'OlIgOuI', '"IOyISSETD', 'IBQUIT-uou', 'B', 'SI', 'NNX', '2', '30AL', 'queurdordap', 'queutemmba', 'a8e.10qs', 'ayy', 'STeordAL', 'I', '131e1', 'yonur', 'SI', 'NNX', 'JOJ', 'IS', '30AL', 'JOJ', 'WAS', 'ueyg', 'quoulagens', 'NS', 'aWISIVA/anL', 'ITO.I', 'mox', 'O9LIM', ':a.04', 'loqumu', 'OALIM', '(sad', 'OT)', '6', 'IO', 'ANUL', 'Teardes', 'ul', 'ASTVA', 'pue', 'S.121101', 'Surtmpuey', 'reop']
rotation started
['-', ':', 'S', '-', 'P', 'E', '2', 'e', '2', '2', '1', '7', '2', 'a', 'I', 'a', 'E', ':', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'e', 'I', 'E', 'is', 'I', '1', 'I', 'à', 'a', 'E', 'of', '6', ':', 'a', 's', 'is', 'I', 'I', 'i', ':', 'à', '€', '8a', 'I', ':', 'e', 'I', 'i', 'e', 'I', 'I', 'E', ':', '1', 'E', 'I', 'I', 'I', '8', 'i', 'e', 'I', 'iE', 'o', 'e', 'i', '2', 'I', 'a', 'I', 'E', 'o', '-', 'iE', 'a', 'I', 'à', 'a', '8', 'i', 'E', 'a', 'I', 'is', 'of', 'I', 'o', 'E', 'E', 'I', 'I', 'I', 'of', 'E', 'I', 'I', 'E', 'I', 's', 'i', 'is', 'e', 'à', ':', 'is', 'of', 'a', 'I', 'E', 'de', 'S', 'I', 'e', 'I', 'I', '1', 'o', 'à', 'a', 'E', 'de', 'd', 'I', 'i', '8', '8', 'I', 'E', 'à', 'I', 'I', '5', 'a', '8', '$', 'I', 'I', 'I', '11', 'I', 'I', 'a', '3', 'I', 'I', '8a', 'I', 'e', 'I', 'ia', 'I', 'of', 'I', 'I', 'I', '3', 'E', 'I', '1', 'a', '2', 'S', 'E', ':', 'E', 'e', 'o', 'I', 'I', '2', 'a', ':', 'I', 'e', 'I', '1', 'I', 'E', 'I', 'E', 'I', 'of', 'I', 'I', 'I', 'I', 'E', 'à', 'A', 'E', 'E', 'E', 'i', 'E', 'I', 'I', '7', '11', '4', '10', '8o', 'I', '00', '', '09']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'in', 'capital', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FALSEME', ':', 'SVM', 'for', 'TRUE', 'S', 'KNN', 'is', 'much', 'larger', 'than', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalaritylz.u)', 'vectors', 'I', 'and', 'y.', 'deployment.', 'TRUE', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'cision', 'and', 'Recall.', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'FALSE']
OCR detection done with doctr
left top x of SN: 971.4999999999999
bottom right x of SN: 1368.2499999999998
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:19:22] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : QHgIPCx.jpg
[2024/07/01 15:19:23] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:19:24] ppocr DEBUG: dt_boxes num : 30, elapsed : 0.15530633926391602
[2024/07/01 15:19:25] ppocr DEBUG: rec_res num  : 30, elapsed : 1.2355520725250244
OCR detection done
left top x of SN: 1015.0
bottom right x of SN: 1381.0
left top y of SN: 1994.0
bottom right y of SN: 2279.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/QHgIPCx.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jg6DDR7.jpg
OCR detection done with doctr
left top x of SN: 693.7441406250001
bottom right x of SN: 1108.0703124999998
left top x of T/F: 5635.220703125
bottom right x of T/F: 6810.644531249999
first t/f detection
TRUE
((5776.443359375, 2371.380859375), (6254.46875, 2549.46875))
FALSE
((5785.816406249999, 2980.62890625), (6301.333984375001, 3158.716796875))
TRUE
((5692.085937499999, 3505.51953125), (6179.484375, 3692.98046875))
TRUE
((5710.83203125, 3974.171875), (6216.9765625, 4152.259765625))
TRUE
((5757.697265625, 4620.912109375), (6245.095703124999, 4799.0))
TRUE
((5729.578125, 5230.16015625), (6179.484375, 5398.875))
FALSE
((5785.816406249999, 5811.2890625), (6291.9609375, 5951.884765625))
the
((5420.267578124999, 6214.330078125), (5645.220703125, 6364.298828125))
collision happend with box:6214.330078125 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5813.935546875, 6373.671875), (6338.826171875, 6542.38671875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1902, '2': 2465, '3': 3018, '4': 3589, '5': 3964, '6': 4536, '7': 5305, '8': 5876, '9': 6270, '10': 7048}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yuRHqjH.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6494.781249999999
left top x of SN: 709.5937500000001
bottom right x of SN: 1124.40625
first t/f detection
orut
((5590.343749999999, 2312.0), (6078.031249999999, 2492.625))
fale
((5509.062499999999, 2718.40625), (5888.374999999999, 2908.0625))
True
((5707.750000000001, 3260.28125), (6132.218749999999, 3440.90625))
fabe
((5472.9375, 3811.1875), (5888.374999999999, 4036.96875))
Frhe
((5445.84375, 4885.90625), (5870.312500000001, 5102.65625))
Fale
((5427.781249999999, 5319.40625), (5870.312500000001, 5554.21875))
Fahe
((5509.062499999999, 5780.0), (5951.593750000001, 5987.71875))
Tve
((5454.874999999999, 6231.5625), (5906.4375, 6466.375))
True
((5436.812500000001, 6863.75), (5861.281249999999, 7035.34375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are ['1', '4', '5']
the assigned keys are ['2', '3', '6', '7', '8', '9', '10']
['2', '3', '6', '7', '8', '9', '10', '2', '3', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2880, '3': 3251, '6': 4885, '7': 5292, '8': 5807, '9': 6186, '10': 6737, '1': 2580}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gdtcR42.jpg
OCR detection done with doctr
left top x of SN: 962.46875
bottom right x of SN: 1377.2812500000002
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6783.78125
first t/f detection
Trie
((5599.375000000001, 1977.84375), (6123.1875, 2194.59375))
Tuc
((5436.812500000001, 2501.65625), (5933.53125, 2754.53125))
Tyue
((5445.84375, 2971.28125), (6168.343750000001, 3215.125))
Fase
((5454.874999999999, 3630.5625), (6096.09375, 3874.40625))
Irue
((5427.781249999999, 4416.28125), (6069.0, 4660.125))
Tyue
((5418.75, 4750.4375), (5861.281249999999, 4958.15625))
False
((5202.0, 5138.78125), (5716.78125, 5409.71875))
True
((5220.062500000001, 5590.34375), (5680.656250000001, 5807.09375))
False
((5102.65625, 6041.90625), (5635.5, 6267.6875))
False
((5120.71875, 6565.71875), (5644.531249999999, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 1914, '2': 2456, '3': 2826, '4': 3368, '5': 3910}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : m0uDWq4.jpg
OCR detection done with doctr
left top x of SN: 447.6875
bottom right x of SN: 853.4687499999999
left top x of T/F: 5679.6875
bottom right x of T/F: 6883.125000000001
first t/f detection
FALSE
((5725.812499999999, 1905.59375), (6385.093750000001, 2113.3125))
FALS
((5653.562500000001, 2546.8125), (6240.593749999999, 2790.65625))
FALS
((5779.999999999999, 3124.8125), (6276.718750000001, 3332.53125))
TRUE
((5743.875, 3720.875), (6240.593749999999, 3928.59375))
TRUE
((5698.718749999999, 4172.4375), (6367.03125, 4416.28125))
FALSE
((5689.6875, 4867.84375), (6412.187500000001, 5111.6875))
TRUE
((5644.531249999999, 5563.25), (6249.625000000001, 5761.9375))
TRUE
((5626.468750000001, 6050.9375), (6132.218749999999, 6231.5625))
TRUE
((5617.437499999999, 6520.5625), (6222.531250000001, 6764.40625))
TRUE
((5671.624999999999, 7161.78125), (6303.812500000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2591, '3': 3206, '4': 3811, '5': 4208, '6': 4795, '7': 5563, '8': 6132, '9': 6511, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YvqixMk.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 605.19140625), (1431.1484375, 701.365234375))
collision happend with box:605.19140625 and text:falu solving on the basis of percent match boxes
the current box specification are
falk
((1281.0234374999998, 729.513671875), (1426.45703125, 806.921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:729.513671875 and text:falk solving on the basis of percent match boxes
the current box specification are
True
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
text2 i.e the incoming text is the winner
collision happend with box:853.8359375 and text:True solving on the basis of percent match boxes
the current box specification are
Tiol
((1285.71484375, 996.923828125), (1424.111328125, 1097.7890625))
text1 i.e the prev text is the winner
Tyul
((1283.369140625, 1144.703125), (1419.419921875, 1247.9140625))
collision happend with box:1144.703125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1283.099609375), (1421.7656250000002, 1365.19921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1283.099609375 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1278.677734375, 605.19140625), (1431.1484375, 701.365234375))
falk
((1281.0234374999998, 729.513671875), (1426.45703125, 806.921875))
True
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
Tiol
((1285.71484375, 996.923828125), (1424.111328125, 1097.7890625))
Tyul
((1283.369140625, 1144.703125), (1419.419921875, 1247.9140625))
Trul
((1271.640625, 1283.099609375), (1421.7656250000002, 1365.19921875))
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
Falye
((1285.71484375, 1653.720703125), (1405.345703125, 1726.4375))
False
((1271.640625, 1794.462890625), (1445.2226562499998, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R0rvJ4W.jpg
OCR detection done with doctr
left top x of T/F: 5468.3203125
bottom right x of T/F: 6657.203125
left top x of SN: 717.7265625000001
bottom right x of SN: 1144.7343749999998
first t/f detection
TRUE
((5542.359375, 2168.1796875), (6210.1953125, 2415.1875))
TRUE
((5679.5859375, 2771.9765625), (6228.4921875, 3000.6875))
FALSE
((5578.953125, 3201.953125), (6301.6796875, 3421.515625))
TRUE
((5688.734375, 3906.3828125), (6173.6015625, 4125.9453125))
FALSE
((5496.6171875, 4464.4375), (6237.640625, 4674.8515625))
FALSE
((5542.359375, 4931.0078125), (6191.8984375, 5141.421875))
FALSE
((5524.062499999999, 5443.3203125), (6191.8984375, 5653.734375))
TRUE
((5487.46875, 5937.3359375), (6146.15625, 6147.75))
TRUE
((5524.062499999999, 6422.203125), (6210.1953125, 6632.6171875))
TRUE
((5551.507812500001, 6980.2578125), (6164.453125, 7227.265625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['1', '2', '4', '8']
the assigned keys are ['3', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'9': 6358, '3': 3302, '5': 4436, '6': 5013, '7': 5397, '10': 6934}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : l1ZVgCG.jpg
OCR detection done with doctr
left top x of SN: 1195.1953125
bottom right x of SN: 1629.7109374999998
left top x of T/F: 5865.2109375
bottom right x of T/F: 7083.484375
first t/f detection
Halse
((5836.0546875, 2829.0390625), (6394.03125, 3112.921875))
Jalse
((5845.84375, 3318.4921875), (6315.71875, 3563.21875))
toue
((5826.265625, 4385.5), (6394.03125, 4630.2265625))
False
((5826.265625, 4923.8984375), (6276.5625, 5119.6796875))
Taue
((5728.375, 5403.5625), (6188.4609375, 5638.5))
Trac
((5728.375, 5883.2265625), (6237.40625, 6108.375))
True
((5659.8515625, 6362.890625), (6198.25, 6588.0390625))
Toe
((5699.0078125, 6901.2890625), (6168.882812500001, 7097.0703125))
collision happend with box:6901.2890625 and text:Toe solving on the basis of percent match boxes
the current box specification are
False
((6188.4609375, 6871.921875), (6638.757812499999, 7106.859375))
text2 i.e the incoming text is the winner
Tiue
((5757.7421875, 7420.109375), (6335.296874999999, 7655.046875))
the final dict without editing {'1': 'NULL', '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 3377, '3': 3768, '1': 3778, '4': 4356, '5': 4933, '6': 5472, '7': 5853, '8': 6421, '9': 6793, '10': 7361}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DYcwFZ2.jpg
OCR detection done with doctr
left top x of SN: 109.65234374999997
bottom right x of SN: 327.05859375
left top x of T/F: 873.7499999999999
bottom right x of T/F: 1234.93359375
first t/f detection
F
((924.2734375, 386.53125), (950.76953125, 419.26171875))
collision happend with box:386.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((919.59765625, 478.48828125), (942.9765625, 512.77734375))
text2 i.e the incoming text is the winner
collision happend with box:478.48828125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((916.48046875, 545.5078125), (944.53515625, 576.6796875))
text2 i.e the incoming text is the winner
collision happend with box:545.5078125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((911.8046875, 646.81640625), (942.9765625, 676.4296875))
text2 i.e the incoming text is the winner
collision happend with box:646.81640625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((910.24609375, 755.91796875), (938.30078125, 791.765625))
text2 i.e the incoming text is the winner
collision happend with box:755.91796875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((907.12890625, 846.31640625), (932.06640625, 888.3984375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((924.2734375, 386.53125), (950.76953125, 419.26171875))
F
((919.59765625, 478.48828125), (942.9765625, 512.77734375))
collision happend with box:478.48828125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((916.48046875, 545.5078125), (944.53515625, 576.6796875))
text2 i.e the incoming text is the winner
T
((911.8046875, 646.81640625), (942.9765625, 676.4296875))
F
((910.24609375, 755.91796875), (938.30078125, 791.765625))
F
((907.12890625, 846.31640625), (932.06640625, 888.3984375))
T
((902.4531249999999, 928.921875), (936.7421875, 960.09375))
F
((911.8046875, 1019.3203125), (935.18359375, 1052.05078125))
collision happend with box:1019.3203125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((911.8046875, 1094.1328125), (939.8593749999999, 1129.98046875))
text2 i.e the incoming text is the winner
F
((907.12890625, 1203.234375), (936.7421875, 1239.08203125))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 384, '2': 487, '3': 554, '4': 654, '5': 755, '6': 858, '7': 927, '8': 1028, '9': 1097, '10': 1198}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8wUWOwd.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRVE
((5563.249999999999, 1797.21875), (6159.312499999999, 2013.96875))
TRUE
((5509.062499999999, 2357.15625), (6087.062500000001, 2573.90625))
FALSE
((5680.656250000001, 3468.0), (6294.781249999999, 3684.75))
FALSE:
((5563.249999999999, 4145.34375), (6285.75, 4362.09375))
TRVE
((5608.40625, 4750.4375), (6213.499999999999, 4949.125))
False.
((5653.562500000001, 5220.0625), (6294.781249999999, 5427.78125))
TRUE
((5554.21875, 5870.3125), (6123.1875, 6069.0))
TRUE
((5635.5, 6385.09375), (6168.343750000001, 6592.8125))
TRUG
((5680.656250000001, 7125.65625), (6358.000000000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2637, '3': 3034, '4': 3621, '5': 4217, '6': 4831, '7': 5238, '8': 5852, '9': 6267, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SsSbA8u.jpg
OCR detection done with doctr
left top x of T/F: 5367.6875
bottom right x of T/F: 6584.015625
left top x of SN: 534.7578124999999
bottom right x of SN: 952.6171875
first t/f detection
Tud
((5862.554687500001, 1912.0234375), (6338.2734375, 2140.734375))
Falie
((5441.7265625, 2607.3046875), (6027.2265625, 2872.609375))
False
((5670.4375, 3028.1328125), (6246.789062499999, 3339.1796875))
Quo
((5633.84375, 3805.75), (6091.265625, 4034.4609375))
Touie
((5368.539062499999, 4418.6953125), (5972.3359375, 4665.703125))
False
((5405.1328125, 4912.7109375), (5963.1875, 5178.015625))
Touue
((5496.6171875, 5379.28125), (6018.078125000001, 5644.5859375))
Cuig
((5505.765624999999, 5983.078125), (6008.9296875, 6193.4921875))
falxe
((5542.359375, 6321.5703125), (6109.562499999999, 6623.46875))
Falia
((5569.804687500001, 6806.4375), (6127.859375, 7144.9296875))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are ['1', '3', '4']
the assigned keys are ['2', '5', '6', '7', '8', '9', '10']
['2', '5', '6', '7', '8', '9', '10', '2', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2845, '5': 4391, '6': 4976, '7': 5360, '8': 5946, '9': 6330, '10': 6925, '1': 2545}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 56jXNyb.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6485.75
left top x of SN: 682.5000000000001
bottom right x of SN: 1079.25
first t/f detection
TRUE
((5364.5625, 1941.71875), (6041.90625, 2239.75))
TROE
((5436.812500000001, 2483.59375), (6096.09375, 2745.5))
FALSE
((5373.593749999999, 2989.34375), (6195.437500000001, 3287.375))
TRUE
((5391.65625, 3702.8125), (6096.09375, 3946.65625))
TROE
((5454.874999999999, 4253.71875), (6168.343750000001, 4506.59375))
TRUE
((5319.406249999999, 4786.5625), (6132.218749999999, 5075.5625))
TRUE
((5391.65625, 5238.125), (5951.593750000001, 5463.90625))
FEU
((5346.499999999999, 5707.75), (5834.187499999999, 5933.53125))
collision happend with box:5707.75 and text:FEU solving on the basis of percent match boxes
the current box specification are
FALSE
((5888.374999999999, 5680.65625), (6358.000000000001, 5906.4375))
text2 i.e the incoming text is the winner
TRUE
((5382.625000000001, 6168.34375), (6023.843749999999, 6367.03125))
FALSE
((5436.812500000001, 6782.46875), (6204.46875, 7026.3125))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3224, '4': 3766, '5': 4307, '6': 4858, '7': 5229, '8': 5780, '9': 6141, '10': 6710}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : s1XljD0.jpg
rotation started
['N', '6o', '00', '1', '', 'OT', '4', '', 'N', 'I', '2', 'E', 'E', '3', 'E', 'E', '>', 'E', 'E', 'a', 'L', 'I', '2', 'I', 'I', 'I', 'E', 'e', 'E', '-', 'I', 'E', '8', '8', 'it', 'p', 'i', 'I', '€', 'I', 'I', 'I', 'I', 'I', 'f', 'I', 'E', 'I', '8', 'E', 'E', 'a', 'E', '6e', 'I', 'E', 'I', 'E', 'E', 'I', 'I', '3', '8', 'I', 'of', 'I', ':', 'I', 'I', 'E', 'E', 'I', 'E', 'tn', 'I', 'E', 'E', 'f', 'I', 'I', 'Q', 'I', 'I', '€', 'B', '8', 'I', '2', 'I', 'I', 'f', 'I', 'I', '1', '8', '2', '2', 'E', 'E', 'E', 'I', 'E', '1', '8', 'I', 'I', '€', 'E', 'I', 'E', 'e', '8', 'I', 'it', 'I', 'I', 'I', 'a', '2', 'I', 'f', 'E', '8', 'I', 'I', 'E', 'I', 'E', '8', 'E', 'I', 'I', 'I', ':', '2', 'E', 'I', 'it', '2', '4', 'a', '€', '9', '2', 'I', 'E', 'I', 'e', 'E', 'a', 'F', 'I', 'I', 'I', 't', 'E', 'I', 'I', 'E', 'F', '1', 'I', 'I', 'I', 's', 'E', 'E', '-', 'E', '9', 'E', 'E', 'i', 'I', 'E', 'E', 'it', 'I', '2', 'É', 'I', '1', '-', 'E', 'E', 'it', '-', '-', 'E', '2', '2', '2', 'I', 'I', 'I', 'it', 'à', 'I', '7', 'I', 'T', '3', 'a', 'C', 'n', ':', 'à', '', 'I', ':', ':', 'm', 'E', 'à', 'T', 'm', ':', 'I', '6', 'K', 'A', 'R', 'D', 'R', '%', 'à', 'I', 'u', 'DE']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'azyreioues', 'qou', 'op', 'gey7', 'egep', 'SurureIn', 'DOdL', 'oun', 'UI', 'stregop', 'JO', 'esTOU', 'oytoeds', 'amades', '01', 'Ureer', 'Kewr', 'lopour', 'au7', 'Se', "'saseaIo", '-uT', 'Surayeno', 'Jo', 'YSII', 'aun', "'IAS", 'UI', 'rgaurered', 'D', 'a47', 'Jo', 'anrea', 'y814', 'B', 'YAIM', 'OI', '357VJ', 'JAdib', 'S7VJ', "'AS", 'ASOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo-SA-auo', 'Bursn', 'uorgorpard', 'B', 'Sureur', "'sessep", 'Jo', 'poqunu', '981eT', 'B', 'YAIM', 'suerqoid', 'ssepprmu', 'JOJ', '6', 'aoeds', 'TeurSTo', 'ou7', 'uI', 'JeOUIT-uou', 'eq', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uosioop', 'OUL', '8', 'Apaoamp', 'SI', 'OOIL', 'UOISIDOC', 'o47', 'uI', 'uomorpald', 'B', 'Suryeur', 'JOJ', 'parmbar', 'OWIL', 'BUL', 'L', 'sapou', 'Jo', 'roqunu', 'au7', '01', 'Teuorgiodord', 'STE', '"uornquasip', 'uerssnes', 'e', 'Skenre', 'SI', 'suorgnqugsip', 'uerssneD', 'OM7', 'Jo', 'amgXIu', 'V', '9', 'AAAAD', '351VJ', 'TeDOH', 'pue', 'UOISIO', '-aId', 'ueamgeq', 'nord', 'e', 'SI', 'OAINO', '(DO4)', 'orsutegpereud', 'Surgerado', 'IOAIODOH', 'OUL', 'S', 'SI', 'queosop', 'querpe1s', 'OTIYM', "'SqU8IOM", 'a47', 'agepdn', '07', 'pasn', 'SI', 'uone@odoxdypeg', '#', '"YIOMIOU', 'remou', 'ay7', 'UI', 'squerpels', 'au7', 'aanduoo', '01', 'pesn', 'JAJLb', ':f', 'pue', 'I', 'SIOTDOA', 'Jod', 'Teuorsueuup-P', 'Aue', 'IOJ', 'OIIOU', 'souensip', 'PITBA', 'B', 'SI', '(@-)@gumpuagousoy', '-', 'I', '&', 'val', 'Spa', '31', '30', '353E', 'K1t', 'AUTINT', '"IOyISSETO', 'IBOUIT-uou', 'B', 'SI', 'NNY', '2', 'DE', '0', 'dib', 'Inab', 'quaudordap', '1081el', 'yonur', 'SI', 'NNY', 'JOJ', 'quauuammbal', 'a8e10qs', 'ayi', 'STeoidAL', 'I', 'JOJ', 'WAS', 'ueya', 'quauagess', 'NS', 'gI', 'ASTVA/ANHL', ':a184', 'paqumnu', 'ITOI', 'moc', 'BTLIM', 'mhe', 'imeA', 'pul', 'B1LM', '(sad', 'O1)', '6', 'ul', 'ASTVA', 'IO', 'INUL', 'SI09191', 'peardeo', 'Surgumpurey', 'reep', 'pue']
rotation started
['L', '1', 'LF', '8', '3', 'S', 'e', '?', '1', '1', 'u', 'ul', 'U', '€', ':', 'D', 'E', ':', ':', ':', 'LL', ':', '3', '3', ':', ':', '€', 's', 'E', 'a', 'I', ':', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'I', 'I', 'is', 'I', '8a', 'I', 'E', 'I', 'à', 'a', 'e', '8', 'I', 'a', 'is', 'I', 'iE', '8a', 'à', 'E', 'I', 'I', 'a', 'I', 'I', 'iE', 'I', 'of', 'I', 'I', 'I', '8', 'is', 'e', 'e', 'e', 'I', 'E', 'i', '-', 'iE', 'I', 'o', 'I', 'I', 'I', 'e', 'S', 'I', 'E', 'a', 'H', 'I', 'is', '8', 'I', 'E', 'I', '2', '11', 'I', 'I', 'a', '3', 'E', 'a', 'E', 'I', '1', 'I', 'I', ':', 'E', '€', '1', 'in', 'E', 's', 'E', 'à', 'E', 'e', 'o', 'I', 'of', '6', ':', 'i', ':', 'I', ':', 'e', 'I', ':', 'I', 'I', 'I', 'iE', 'o', 'I', '2', 'a', 'I', '-', 'à', ':', '8', 'a', 'I', 'of', 'a', '0', 'E', 'I', 'I', 'of', '€', 'I', 'is', '1', 'de', 'à', ':', 'I', 'a', 'E', 'of', 'de', 'E', 'a', 'I', 'I', '1', 'I', 'of', 'I', '9', 'à', 'e', 'a', 'I', '5', 'se', 'S', '-', 'i', '-', 'a', 'is', '1', 'E', 'E', ':', 'I', 'e', 'I', '1', 'I', 'I', 'I', 'a', 'à', 'I', 'I', 'I', 'I', 'I', 'E', 'I', 'A', 'E', 'E', 'à', 'I', 'E', 'I', 'I', '7', '11', '4', '12', '6', 'I', '00', 'o', '1f']
rotation started
['letters', 'and', 'clear', 'handwriting.', 'in', 'capital', 'Write', 'TRUE', 'or', 'FALSE', '9.', 'pts)', '(10', 'Indi', 'Write', 'your', 'roll', 'number', 'here:', 'LANUL', 'TIT', 'JRSE', 'TEOR', 'edg', 'Ten', 'TRUE/FALSE,', 'VE', 'TRUE', 'RUG', 'SN', 'Statement', 'than', 'SVM', 'for', 'for', 'KNN', 'is', 'much', 'larger', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', '2', 'KNN', 'is', 'a', 'classifier.', 'non-linear', '3', '1', '-', 'cosineSimalaritylz.g)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', 'vectors', 'I', 'and', 'y.', '4', 'Bampgtin', 'is,used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRUE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'TRUH', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALS', '-', 'E', 'TRUE', 'FALSE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'TIRUE']
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 970.9140625000001
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:21:26] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : s1XljD0.jpg
[2024/07/01 15:21:27] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:21:28] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.16685795783996582
[2024/07/01 15:21:29] ppocr DEBUG: rec_res num  : 41, elapsed : 1.532832384109497
OCR detection done
left top x of SN: 607.0
bottom right x of SN: 979.0
left top y of SN: 2098.0
bottom right y of SN: 2384.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/s1XljD0.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pi57kK6.jpg
OCR detection done with doctr
left top x of SN: 571.3515625000001
bottom right x of SN: 989.2109375000001
left top x of T/F: 5687.8828125
bottom right x of T/F: 6867.6171875
first t/f detection
TRUE
((5807.6640625, 2094.9921875), (6301.6796875, 2268.8125))
TRUE
((5707.031250000001, 2589.0078125), (6219.34375, 2762.828125))
TRUE
((5725.328125, 3201.953125), (6301.6796875, 3375.7734375))
FALSE
((5697.8828125, 3760.0078125), (6210.1953125, 3933.828125))
FALSE
((5679.5859375, 4162.5390625), (6274.234375, 4382.1015625))
FALS
((5679.5859375, 4857.8203125), (6109.562499999999, 5040.7890625))
TRUE
((5633.84375, 5516.5078125), (6182.75, 5690.328125))
TRUE
((5642.9921875, 6083.7109375), (6146.15625, 6266.6796875))
TRUE
((5670.4375, 6596.0234375), (6265.085937499999, 6806.4375))
FALSE
((5707.031250000001, 6824.734375), (6237.640625, 7035.1484375))
FALSE
((5688.734375, 7218.1171875), (6210.1953125, 7391.9375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2021, '2': 2607, '3': 3192, '4': 3787, '5': 4171, '6': 4766, '7': 5543, '8': 6138, '9': 6541, '10': 7318}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5pOfNJj.jpg
OCR detection done with doctr
left top x of SN: 662.8359375000001
bottom right x of SN: 1071.5468749999998
left top x of T/F: 5422.578125
bottom right x of T/F: 6556.5703125
first t/f detection
F
((5761.921875, 1902.875), (5908.296875, 2094.9921875))
F
((5780.21875, 2470.078125), (5944.890625, 2662.1953125))
F
((5780.21875, 2991.5390625), (5926.59375, 3174.5078125))
T
((5752.7734375, 3503.8515625), (5944.890625, 3668.5234375))
T
((5752.7734375, 3970.421875), (5926.59375, 4153.390625))
F
((5816.812499999999, 4574.21875), (5972.3359375, 4784.6328125))
T
((5798.515624999999, 5736.0703125), (5963.1875, 5937.3359375))
T
((5816.812499999999, 6257.53125), (5999.781250000001, 6458.796875))
F
((5871.703125, 6861.328125), (6018.078125000001, 7062.59375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'NULL', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 1884, '2': 2424, '3': 2964, '4': 3503, '5': 3869, '6': 4427, '7': 5168, '8': 5745}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'NULL', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : thbXo3M.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRuE
((5725.812499999999, 1914.625), (6358.000000000001, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6231.5625, 2610.03125))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
fAlsE
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5608.40625, 4840.75), (6096.09375, 5003.3125))
TRUE
((5581.3125, 5554.21875), (6123.1875, 5716.78125))
tRul
((5843.218750000001, 6096.09375), (6466.375000000001, 6294.78125))
falte
((5743.875, 6656.03125), (6213.499999999999, 6836.65625))
folst
((5779.999999999999, 7161.78125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5491, '8': 6123, '9': 6529, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dOhV2kI.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6341.250000000001
left top x of SN: 628.3125000000001
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5319.406249999999, 2167.5), (5807.093749999999, 2339.09375))
TRUE
((5292.312499999999, 2655.1875), (5752.906249999999, 2835.8125))
TRUE
((5229.09375, 3169.96875), (5861.281249999999, 3413.8125))
TEUE
((5247.156250000001, 3738.9375), (5707.750000000001, 3901.5))
TRUG
((5247.156250000001, 4325.96875), (5734.843750000001, 4461.4375))
FALSE
((5256.1875, 4867.84375), (5825.15625, 5075.5625))
TRUE
((5202.0, 5247.15625), (5770.96875, 5409.71875))
FALSE
((5156.84375, 5707.75), (5653.562500000001, 5915.46875))
SALSE
((5202.0, 6177.375), (5933.53125, 6394.125))
TRUE
((5265.218749999999, 6827.625), (5789.031250000001, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2312, '2': 2862, '3': 3233, '4': 3784, '5': 4325, '6': 4885, '7': 5265, '8': 5825, '9': 6204, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : G1CZP6M.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5364.5625, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5364.5625, 2492.625), (6105.124999999999, 2745.5))
FALSE
((5454.874999999999, 3016.4375), (6195.437500000001, 3269.3125))
FALSE
((5400.687499999999, 3630.5625), (6141.250000000001, 3847.3125))
FALSE
((5391.65625, 4217.59375), (6096.09375, 4434.34375))
FALSE
((5445.84375, 4732.375), (6240.593749999999, 4967.1875))
FALSE
((5427.781249999999, 5202.0), (6159.312499999999, 5400.6875))
TRUE
((5436.812500000001, 5725.8125), (6105.124999999999, 5969.65625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6448.3125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2754, '3': 3133, '4': 3702, '5': 4262, '6': 4849, '7': 5229, '8': 5789, '9': 6195, '10': 6764}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7pahTUB.jpg
OCR detection done with doctr
left top x of T/F: 5559.804687500001
bottom right x of T/F: 6776.1328125
left top x of SN: 882.3984375000001
bottom right x of SN: 1291.1093749999998
first t/f detection
TRUE
((5642.9921875, 2369.4453125), (6210.1953125, 2625.6015625))
TRUE
((5633.84375, 2918.3515625), (6100.4140625, 3147.0625))
TRUE
((5578.953125, 3403.21875), (6155.304687500001, 3622.78125))
FALSE
((5624.6953125, 3979.5703125), (6219.34375, 4235.7265625))
FALSE
((5588.1015625, 4565.0703125), (6201.046875, 4812.078125))
FALSE
((5624.6953125, 5141.421875), (6146.15625, 5324.390625))
FAL
((5707.031250000001, 5607.9921875), (6082.1171875, 5800.109375))
collision happend with box:5607.9921875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((6091.265625, 5571.3984375), (6338.2734375, 5763.515625))
text1 i.e the prev text is the winner
FALSE
((5688.734375, 6120.3046875), (6219.34375, 6349.015625))
TRUE
((5707.031250000001, 6614.3203125), (6265.085937499999, 6843.03125))
TRUE
((5743.625, 7245.5625), (6310.828125000001, 7501.71875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2543, '2': 3092, '3': 3467, '4': 4025, '5': 4592, '6': 5187, '7': 5580, '8': 6184, '9': 6586, '10': 7199}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MBJiE0X.jpg
OCR detection done with doctr
left top x of T/F: 5717.4482421875
bottom right x of T/F: 6905.313476562501
left top x of SN: 970.6865234374999
bottom right x of SN: 1399.9462890624998
first t/f detection
TRUE
((5804.1435546875, 2377.5546875), (6446.466796875, 2607.640625))
TRUE
((5919.1865234375, 2971.943359375), (6494.4013671875, 3211.6162109375))
FALSE
((5832.904296875, 3393.767578125), (6571.0966796875, 3652.6142578125))
TRUE
((5823.317382812501, 4103.19921875), (6484.814453125, 4323.6982421875))
FALSE
((5794.556640625, 4668.8271484375), (6503.98828125, 4889.326171875))
FALSG
((5832.904296875, 5148.1728515625), (6494.4013671875, 5368.671875))
FALSE
((5852.078125, 5646.6923828125), (6523.162109375, 5867.19140625))
TRUE
((5842.491210937499, 6145.2119140625), (6494.4013671875, 6365.7109375))
TRUE
((5871.251953125, 6634.14453125), (6571.0966796875, 6854.6435546875))
TIRUE
((5823.317382812501, 7199.7724609375), (6523.162109375, 7429.8583984375))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '4']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9', '10']
['2', '3', '5', '6', '7', '8', '9', '10', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 3163, '3': 3537, '5': 4678, '6': 5263, '7': 5637, '8': 6202, '9': 6605, '10': 7161, '1': 2863}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kK8CqVE.jpg
OCR detection done with doctr
left top x of T/F: 5598.40625
bottom right x of T/F: 6846.999999999999
left top x of SN: 258.03125
bottom right x of SN: 672.8437500000001
first t/f detection
Falbe
((5734.843750000001, 2023.0), (6159.312499999999, 2239.75))
false
((5689.6875, 2591.96875), (6114.156250000001, 2862.90625))
Thul
((5662.59375, 3197.0625), (6041.90625, 3377.6875))
THue
((5662.59375, 3747.96875), (6041.90625, 3919.5625))
TAul
((5734.843750000001, 4217.59375), (6114.156250000001, 4389.1875))
False
((5671.624999999999, 4831.71875), (6150.28125, 5102.65625))
Tuue
((5716.78125, 5698.71875), (6159.312499999999, 5879.34375))
Tau
((5716.78125, 6231.5625), (6195.437500000001, 6412.1875))
false
((5951.593750000001, 6791.5), (6403.156249999999, 7017.28125))
TMue
((5825.15625, 7486.90625), (6276.718750000001, 7667.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1923, '2': 2528, '3': 3133, '4': 3747, '5': 4154, '6': 4768, '7': 5599, '8': 6231, '9': 6656, '10': 7495}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xKeed9J.jpg
OCR detection done with doctr
left top x of SN: 892.3398437499999
bottom right x of SN: 1294.6210937500002
left top x of T/F: 5405.01171875
bottom right x of T/F: 6559.707031250001
first t/f detection
TRUE.
((5609.507812500001, 2259.859375), (6100.378906249999, 2491.40234375))
FALSE
((5655.81640625, 2695.16015625), (6128.1640625, 2917.44140625))
FALSE
((5646.5546875, 3139.72265625), (6183.734375, 3371.265625))
FALSE
((5526.15234375, 3704.6875), (5961.453125, 3926.96875))
FALSE
((5544.67578125, 4315.9609375), (5989.23828125, 4501.1953125))
TRUE
((5553.9375, 4843.87890625), (5979.9765625, 5019.8515625))
FALSE
((5600.246093750001, 5269.91796875), (5998.5, 5455.15234375))
FALSE
((5581.722656250001, 5779.3125), (6017.0234375, 5955.28515625))
TRUE
((5526.15234375, 6196.08984375), (5952.19140625, 6418.37109375))
TROE
((5572.460937500001, 6927.765625), (5915.14453125, 7122.26171875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2250, '2': 2787, '3': 3148, '4': 3695, '5': 4241, '6': 4797, '7': 5168, '8': 5723, '9': 6103, '10': 6668}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TAJCbig.jpg
OCR detection done with doctr
left top x of SN: 296.89843750000017
bottom right x of SN: 714.7578124999999
left top x of T/F: 5669.5859375
bottom right x of T/F: 7032.289062499999
first t/f detection
TRUE
((5825.9609375, 2140.734375), (6374.8671875, 2360.296875))
TRUE
((5761.921875, 2799.421875), (6384.015625, 3009.8359375))
FALSE
((5707.031250000001, 3357.4765625), (6329.125, 3613.6328125))
ETRIE
((5697.8828125, 3942.9765625), (6603.578125000001, 4153.390625))
TRUE
((5743.625, 4418.6953125), (6274.234375, 4601.6640625))
FALSE
((5642.9921875, 5104.828125), (6191.8984375, 5278.6484375))
TRME
((5642.9921875, 5882.4453125), (6201.046875, 6092.859375))
FALSE
((5624.6953125, 6449.6484375), (6201.046875, 6660.0625))
TRUE
((5624.6953125, 6989.40625), (6274.234375, 7208.96875))
TRUE
((5642.9921875, 7629.796875), (6219.34375, 7803.6171875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2195, '2': 2790, '3': 3403, '4': 4016, '5': 4409, '6': 5022, '7': 5818, '8': 6431, '9': 6833, '10': 7629}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UnyTYcI.jpg
OCR detection done with doctr
left top x of SN: 571.3515625000001
bottom right x of SN: 989.2109375000001
left top x of T/F: 5642.140625
bottom right x of T/F: 6876.765625
first t/f detection
FALSE
((5652.140625, 1866.28125), (6246.789062499999, 2085.84375))
TRUC
((5633.84375, 2470.078125), (6201.046875, 2744.53125))
FALSE
((5624.6953125, 3028.1328125), (6237.640625, 3229.3984375))
TRrE
((5661.289062499999, 3586.1875), (6210.1953125, 3805.75))
TROE
((5560.65625, 4007.015625), (6201.046875, 4263.171875))
FALSE
((5578.953125, 4656.5546875), (6219.34375, 4876.1171875))
T
((5551.507812500001, 5425.0234375), (5697.8828125, 5617.140625))
collision happend with box:5425.0234375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5716.1796875, 5425.0234375), (6137.0078125, 5626.2890625))
text2 i.e the incoming text is the winner
T
((5560.65625, 5937.3359375), (5725.328125, 6120.3046875))
collision happend with box:5937.3359375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5734.4765625, 5919.0390625), (6146.15625, 6102.0078125))
text2 i.e the incoming text is the winner
TRUE
((5652.140625, 6321.5703125), (6265.085937499999, 6623.46875))
TRVE
((5606.3984375, 7016.8515625), (6118.7109375, 7245.5625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1921, '2': 2497, '3': 3083, '4': 3659, '5': 4043, '6': 4638, '7': 5415, '8': 6001, '9': 6403, '10': 7199}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8M5CU9m.jpg
OCR detection done with doctr
left top x of SN: 191.28906249999994
bottom right x of SN: 437.98828125
left top x of T/F: 1477.90234375
bottom right x of T/F: 1952.03125
first t/f detection
Tjur
((1543.9296875, 728.35546875), (1645.3125, 787.05078125))
collision happend with box:728.35546875 and text:Tjur solving on the basis of percent match boxes
the current box specification are
True
((1541.26171875, 864.421875), (1655.984375, 920.44921875))
text2 i.e the incoming text is the winner
collision happend with box:864.421875 and text:True solving on the basis of percent match boxes
the current box specification are
asii
((1559.9375, 997.8203125), (1650.6484375, 1048.51171875))
text1 i.e the prev text is the winner
collision happend with box:864.421875 and text:True solving on the basis of percent match boxes
the current box specification are
fak
((1653.31640625, 973.80859375), (1760.03515625, 1043.17578125))
text1 i.e the prev text is the winner
Falt
((1549.2656250000002, 1144.55859375), (1679.99609375, 1205.921875))
collision happend with box:1144.55859375 and text:Falt solving on the basis of percent match boxes
the current box specification are
Falk
((1549.2656250000002, 1288.62890625), (1661.3203125000002, 1344.65625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1288.62890625 and text:Falk solving on the basis of percent match boxes
the current box specification are
faeu
((1549.2656250000002, 1432.69921875), (1669.32421875, 1496.73046875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tjur
((1543.9296875, 728.35546875), (1645.3125, 787.05078125))
True
((1541.26171875, 864.421875), (1655.984375, 920.44921875))
asii
((1559.9375, 997.8203125), (1650.6484375, 1048.51171875))
collision happend with box:997.8203125 and text:asii solving on the basis of percent match boxes
the current box specification are
fak
((1653.31640625, 973.80859375), (1760.03515625, 1043.17578125))
text2 i.e the incoming text is the winner
Falt
((1549.2656250000002, 1144.55859375), (1679.99609375, 1205.921875))
Falk
((1549.2656250000002, 1288.62890625), (1661.3203125000002, 1344.65625))
faeu
((1549.2656250000002, 1432.69921875), (1669.32421875, 1496.73046875))
Faln
((1562.60546875, 1560.76171875), (1682.6640625, 1627.4609375))
BTh
((1495.90625, 1712.8359375), (1647.9804687499998, 1766.1953125))
Tyue
((1541.26171875, 1835.5625), (1661.3203125000002, 1886.25390625))
Trut
((1554.6015625, 2014.31640625), (1669.32421875, 2070.34375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 709, '2': 869, '3': 979, '4': 1139, '5': 1296, '6': 1456, '7': 1563, '8': 1720, '9': 1830, '10': 1995}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eDELdBV.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
collision happend with box:766.1865234375 and text:Falke solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ICIXFCp.jpg
OCR detection done with doctr
left top x of T/F: 5522.744140625
bottom right x of T/F: 6698.16796875
left top x of SN: 984.30859375
bottom right x of SN: 1398.634765625
first t/f detection
TRUE
((5542.1171875, 2390.126953125), (6198.23046875, 2605.70703125))
TRUE
((5654.593750000001, 2877.525390625), (6338.826171875, 3083.732421875))
False
((5738.951171875, 3383.669921875), (6320.080078125, 3561.7578125))
False
((5729.578125, 3955.42578125), (6273.21484375, 4133.513671875))
False
((5692.085937499999, 4536.5546875), (6291.9609375, 4742.76171875))
false
((5560.86328125, 5042.69921875), (6141.9921875, 5220.787109375))
True
((5692.085937499999, 5511.3515625), (6198.23046875, 5698.8125))
True
((5757.697265625, 5951.884765625), (6245.095703124999, 6129.97265625))
Trrue
((5813.935546875, 6458.029296875), (6329.453124999999, 6673.609375))
Trwe
((5785.816406249999, 7011.0390625), (6338.826171875, 7189.126953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2540, '2': 3074, '3': 3439, '4': 3983, '5': 4517, '6': 5070, '7': 5436, '8': 5998, '9': 6373, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : My1dMYr.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6594.125
left top x of SN: 429.6249999999999
bottom right x of SN: 871.53125
first t/f detection
True
((5436.812500000001, 1986.875), (5969.656249999999, 2248.78125))
Folse
((5427.781249999999, 2564.875), (5906.4375, 2835.8125))
True
((5500.03125, 3088.6875), (5996.749999999999, 3305.4375))
fale
((5355.531250000001, 3639.59375), (5779.999999999999, 3865.375))
Toue
((5382.625000000001, 4235.65625), (5951.593750000001, 4443.375))
Tsue
((5346.499999999999, 4840.75), (5951.593750000001, 5048.46875))
True
((5445.84375, 5283.28125), (5978.687500000001, 5554.21875))
False
((5364.5625, 5770.96875), (5915.468749999999, 6041.90625))
Tyuc
((5436.812500000001, 6267.6875), (5915.468749999999, 6493.46875))
True
((5500.03125, 6782.46875), (5969.656249999999, 7062.4375))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['2', '4']
the assigned keys are ['1', '3', '5', '6', '7', '8', '9', '10']
['1', '3', '5', '6', '7', '8', '9', '10', '1', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2212, '3': 3160, '5': 4344, '6': 4922, '7': 5319, '8': 5915, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Zcai4vg.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6476.718750000001
left top x of SN: 465.7500000000001
bottom right x of SN: 880.5624999999999
first t/f detection
TRVE
((5229.09375, 2095.25), (5879.34375, 2348.125))
FALSE
((5319.406249999999, 2610.03125), (5969.656249999999, 2862.90625))
TRVE
((5301.343750000001, 3142.875), (5942.562499999999, 3404.78125))
TRUE
((5310.375, 3775.0625), (5960.625, 3991.8125))
FALSE
((5310.375, 4344.03125), (6050.937499999999, 4605.9375))
TRVE
((5301.343750000001, 4922.03125), (5951.593750000001, 5138.78125))
FALSE
((5265.218749999999, 5373.59375), (6050.937499999999, 5662.59375))
PALSE
((5346.499999999999, 5843.21875), (5969.656249999999, 6087.0625))
TRVE
((5328.437500000001, 6376.0625), (6014.8125, 6619.90625))
TRVE
((5409.718750000001, 7008.25), (6096.09375, 7215.96875))
a4
((5463.906250000001, 7324.34375), (5798.0625, 7504.96875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2890, '3': 3269, '4': 3838, '5': 4407, '6': 4985, '7': 5373, '8': 5960, '9': 6348, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XXfy8uN.jpg
OCR detection done with doctr
left top x of T/F: 5583.2314453125
bottom right x of T/F: 6771.0966796875
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:24:10] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : XXfy8uN.jpg
[2024/07/01 15:24:11] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:24:12] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.15652251243591309
[2024/07/01 15:24:14] ppocr DEBUG: rec_res num  : 32, elapsed : 1.7829511165618896
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975]
the false list is  []
the true list for xdirn [1364]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
eployment.
[[1407.0, 2546.0], [1999.0, 2546.0], [1999.0, 2689.0], [1407.0, 2689.0]]
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
EAISE
[[5747.0, 2966.0], [6330.0, 2966.0], [6330.0, 3109.0], [5747.0, 3109.0]]
the true list is  [1975, 2236]
the false list is  []
the true list for xdirn [1364, 5610]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195]
the false list is  []
the true list for xdirn [1364, 5610, 5672]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195]
the false list is  []
the true list for xdirn [1364, 5610, 5672]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
ctors x and y
[[1421.0, 3454.0], [2212.0, 3489.0], [2206.0, 3632.0], [1415.0, 3598.0]]
the true list is  [1975, 2236, 3195]
the false list is  []
the true list for xdirn [1364, 5610, 5672]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
False
[[5684.0, 4349.0], [6272.0, 4323.0], [6282.0, 4558.0], [5694.0, 4584.0]]
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195, 3839, 4908]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195, 3839, 4908, 5379]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5656.0, 5890.0], [6289.0, 5890.0], [6289.0, 6146.0], [5656.0, 6146.0]]
the true list is  [1975, 2236, 3195, 3839, 4908, 5379]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364, 6974]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693, 5807]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364, 6974]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693, 5807]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1975, 2236, 3195, 3839, 4908, 5379, 6364, 6974]
the false list is  []
the true list for xdirn [1364, 5610, 5672, 5702, 5646, 5646, 5693, 5807]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JmeCIC1.jpg
OCR detection done with doctr
left top x of T/F: 5746.208984375
bottom right x of T/F: 6991.595703125
left top x of SN: 740.6005859375
bottom right x of SN: 1160.2734375
first t/f detection
FALSE
((5813.73046875, 2224.1640625), (6446.466796875, 2483.0107421875))
FALSE
((5804.1435546875, 2789.7919921875), (6456.0537109375, 3010.291015625))
TRUE
((5737.03515625, 3249.9638671875), (6341.0107421875, 3518.3974609375))
TRUE
((5650.7529296875, 3959.3955078125), (6293.076171875001, 4179.89453125))
TRUE
((5727.4482421875, 4563.37109375), (6331.423828125, 4774.283203125))
FALSE
((5794.556640625, 5138.5859375), (6417.7060546875, 5320.7373046875))
FALSE
((5708.2744140625, 5617.931640625), (6350.597656250001, 5800.0830078125))
FALSE
((5823.317382812501, 6087.6904296875), (6484.814453125, 6317.7763671875))
FALSE
((5823.317382812501, 6586.2099609375), (6561.509765625, 6797.1220703125))
TRUE
((5756.208984375, 7218.9462890625), (6388.9453125, 7439.4453125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2329, '2': 2933, '3': 3336, '4': 3940, '5': 4534, '6': 5148, '7': 5560, '8': 6173, '9': 6586, '10': 7209}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : O63hzUh.jpg
OCR detection done with doctr
left top x of T/F: 5513.37109375
bottom right x of T/F: 6651.302734375
left top x of SN: 1096.78515625
bottom right x of SN: 1501.7382812499998
first t/f detection
TRUE
((5551.490234375, 2324.515625), (6010.76953125, 2549.46875))
TRVE
((5532.744140625, 2821.287109375), (6010.76953125, 3036.8671875))
TRUE
((5532.744140625, 3271.193359375), (5963.904296874999, 3458.654296875))
FALSE
((5467.1328125, 3842.94921875), (5992.0234375, 4030.41015625))
FALSE
((5513.998046875, 4424.078125), (6029.515625000001, 4611.5390625))
FALSE
((5485.87890625, 4902.103515625), (6010.76953125, 5089.564453125))
GALSE
((5457.759765625, 5314.517578125), (5935.785156250001, 5501.978515625))
TRUE
((5439.013671875, 5848.78125), (5860.80078125, 6026.869140625))
TRUE
((5382.775390625001, 6233.076171875), (5851.427734375, 6448.65625))
TRUE
((5420.267578124999, 6795.458984375), (5870.173828124999, 6973.546875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2690
printing the number dict y_coordinate
{'2': 2990, '3': 3336, '4': 3880, '5': 4395, '6': 4948, '7': 5305, '8': 5848, '9': 6214, '10': 6776, '1': 2690}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zxomqZY.jpg
OCR detection done with doctr
left top x of SN: 614.48828125
bottom right x of SN: 1035.29296875
left top x of T/F: 5608.769531250001
bottom right x of T/F: 6874.60546875
first t/f detection
Tue
((5804.00390625, 2352.4765625), (6313.398437500001, 2630.328125))
Tme
((5776.21875, 2898.91796875), (6378.23046875, 3121.19921875))
Falie
((5813.265625, 3408.3125), (6396.75390625, 3612.0703125))
Falie
((5748.43359375, 4047.37109375), (6313.398437500001, 4269.65234375))
Tre
((5683.6015625, 4723.4765625), (6313.398437500001, 4945.7578125))
False
((5692.86328125, 5195.82421875), (6230.04296875, 5381.05859375))
False
((5692.86328125, 5695.95703125), (6220.78125, 5871.9296875))
True
((5674.33984375, 6205.3515625), (6183.734375, 6418.37109375))
Fale
((5665.078125, 6659.17578125), (6146.6875, 6872.1953125))
True
((5665.078125, 7326.01953125), (6155.94921875, 7501.9921875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2408, '2': 3019, '3': 3426, '4': 4028, '5': 4621, '6': 5232, '7': 5631, '8': 6223, '9': 6631, '10': 7224}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WmsdhW5.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((900.98828125, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:878.02734375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
T.
((900.98828125, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
T
((913.64453125, 789.43359375), (940.5390625, 822.65625))
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4eC8euy.jpg
OCR detection done with doctr
left top x of SN: 393.5
bottom right x of SN: 808.3125000000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6856.031250000001
first t/f detection
FALSE
((5770.96875, 1824.3125), (6439.281250000001, 2032.03125))
TRUE
((5770.96875, 2429.40625), (6367.03125, 2637.125))
FALSE
((5779.999999999999, 3034.5), (6421.21875, 3242.21875))
TRUE
((5716.78125, 3585.40625), (6303.812500000001, 3784.09375))
TRUE
((5779.999999999999, 4082.125), (6403.156249999999, 4280.8125))
FALSE
((5743.875, 4723.34375), (6385.093750000001, 4931.0625))
TRUE
((5816.125000000001, 5472.9375), (6376.062499999999, 5644.53125))
TRUE
((5825.15625, 5987.71875), (6394.125, 6204.46875))
FALS
((5716.78125, 6601.84375), (6177.375, 6827.625))
FALSE
((5779.999999999999, 7197.90625), (6403.156249999999, 7405.625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2438, '3': 3034, '4': 3639, '5': 4036, '6': 4651, '7': 5454, '8': 6078, '9': 6493, '10': 7306}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : il7ZzYK.jpg
OCR detection done with doctr
left top x of T/F: 5413.4296875
bottom right x of T/F: 6574.8671875
left top x of SN: 891.5468749999998
bottom right x of SN: 1300.2578124999998
first t/f detection
a
((6164.453125, 814.2109375), (6265.085937499999, 923.9921875))
TRUE
((5423.4296875, 2012.65625), (5853.40625, 2186.4765625))
TRVE
((5432.578125, 2488.375), (5816.812499999999, 2671.34375))
TRUE
((5432.578125, 3000.6875), (5789.3671875, 3183.65625))
PALSE
((5432.578125, 3540.4453125), (5862.554687500001, 3705.1171875))
TRUE
((5386.8359375, 4098.5), (5771.0703125, 4272.3203125))
TRUE
((5432.578125, 4583.3671875), (5825.9609375, 4748.0390625))
FALSE
((5478.3203125, 5059.0859375), (5853.40625, 5223.7578125))
TRUG
((5460.0234375, 5525.65625), (5835.109375, 5699.4765625))
TRUE
((5487.46875, 6019.671875), (5880.8515625, 6193.4921875))
FALSE
((5496.6171875, 6678.359375), (5954.039062499999, 6843.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2067, '2': 2607, '3': 2964, '4': 3522, '5': 4061, '6': 4619, '7': 4995, '8': 5553, '9': 5928, '10': 6504}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : iw06r3Q.jpg
OCR detection done with doctr
left top x of SN: 97.98828125
bottom right x of SN: 318.271484375
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1333.7890625
first t/f detection
F
((1003.271484375, 425.390625), (1043.5546875, 472.119140625))
T
((988.76953125, 802.44140625), (1059.66796875, 852.392578125))
collision happend with box:802.44140625 and text:T solving on the basis of percent match boxes
the current box specification are
AT
((950.0976562499999, 881.396484375), (1050.0, 928.125))
text2 i.e the incoming text is the winner
collision happend with box:881.396484375 and text:AT solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 971.630859375), (1024.21875, 1021.58203125))
text1 i.e the prev text is the winner
T
((980.712890625, 1053.80859375), (1019.384765625, 1098.92578125))
collision happend with box:1053.80859375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((966.2109375, 1134.375), (1014.5507812499999, 1184.326171875))
text2 i.e the incoming text is the winner
collision happend with box:1134.375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1035.498046875, 1255.224609375), (1067.724609375, 1303.564453125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 512, '3': 581, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1061, '9': 1131, '10': 1234}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1NFTcys.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6810.875
left top x of SN: 276.0937500000001
bottom right x of SN: 690.9062499999999
first t/f detection
True
((5617.437499999999, 1715.9375), (6168.343750000001, 1968.8125))
Falg
((5626.468750000001, 2348.125), (6177.375, 2610.03125))
False
((5554.21875, 2971.28125), (6096.09375, 3197.0625))
Gale
((5554.21875, 3558.3125), (6041.90625, 3738.9375))
Falje
((5626.468750000001, 4687.21875), (6141.250000000001, 4913.0))
Trw
((5581.3125, 5436.8125), (6069.0, 5599.375))
Fals
((6041.90625, 5933.53125), (6484.437499999999, 6141.25))
collision happend with box:5933.53125 and text:Fals solving on the basis of percent match boxes
the current box specification are
Tne
((5518.093750000001, 5942.5625), (5978.687500000001, 6159.3125))
text1 i.e the prev text is the winner
Trwe
((5500.03125, 6520.5625), (6023.843749999999, 6782.46875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2492, '3': 3079, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6059, '9': 6457, '10': 7234}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D2hIAB7.jpg
OCR detection done with doctr
left top x of SN: 1087.1953125
bottom right x of SN: 1504.2314453125
left top x of T/F: 5582.9560546875
bottom right x of T/F: 6788.507812499999
first t/f detection
FALSE
((5621.400390625, 2588.4345703125), (6095.47265625, 2759.1005859375))
FALSE
((5649.8447265625, 3128.876953125), (6085.991210937501, 3299.54296875))
FALSE
((5697.251953125, 3565.0234375), (6142.8798828125, 3745.1708984375))
TRUE
((5668.8076171875, 4067.5400390625), (6067.0283203125, 4238.2060546875))
TRUE
((5649.8447265625, 4645.908203125), (6095.47265625, 4816.57421875))
TRUE
((5630.8818359375, 5157.90625), (6076.509765625001, 5338.0537109375))
TRUE
((5678.2890625, 5603.5341796875), (6085.991210937501, 5774.2001953125))
TRUE
((5706.7333984375, 6106.05078125), (6142.8798828125, 6286.1982421875))
TRUE
((5725.6962890625, 6551.6787109375), (6180.8056640625, 6731.826171875))
TRUE.
((5763.622070312499, 7215.3798828125), (6266.138671875, 7386.0458984375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2616, '2': 3157, '3': 3527, '4': 4086, '5': 4645, '6': 5214, '7': 5594, '8': 6162, '9': 6551, '10': 7130}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vMtPuyM.jpg
OCR detection done with doctr
left top x of T/F: 5408.75
bottom right x of T/F: 6639.281250000001
left top x of SN: 357.3750000000001
bottom right x of SN: 799.2812499999999
first t/f detection
Tau
((5463.906250000001, 1851.40625), (5870.312500000001, 2032.03125))
Trul
((5518.093750000001, 2492.625), (5978.687500000001, 2655.1875))
Fale
((5581.3125, 3043.53125), (6069.0, 3269.3125))
Tgie
((5608.40625, 3585.40625), (6032.875000000001, 3747.96875))
Fuil
((5725.812499999999, 4091.15625), (6069.0, 4226.625))
Auil
((5770.96875, 4705.28125), (6105.124999999999, 4840.75))
the
((5183.9375, 5409.71875), (5427.781249999999, 5554.21875))
collision happend with box:5409.71875 and text:the solving on the basis of percent match boxes
the current box specification are
LR
((5960.625, 5436.8125), (6150.28125, 5536.15625))
text2 i.e the incoming text is the winner
the
((5211.031249999999, 6385.09375), (5436.812500000001, 6538.625))
collision happend with box:6385.09375 and text:the solving on the basis of percent match boxes
the current box specification are
Fotte
((5653.562500000001, 6412.1875), (6123.1875, 6683.125))
text2 i.e the incoming text is the winner
TguO
((5698.718749999999, 6683.125), (6240.593749999999, 6890.84375))
Tail
((5689.6875, 7098.5625), (6177.375, 7279.1875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are ['1', '2', '3', '4']
the assigned keys are ['5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'5': 4190, '6': 4750, '7': 5509, '8': 6078, '9': 6466, '10': 7234}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : E6MwJ00.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
a
((1410.75, 141.3125), (1423.21875, 168.328125))
Tyw
((1136.4375, 529.921875), (1244.5, 606.8125))
collision happend with box:529.921875 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Trur
((1134.359375, 847.875), (1250.734375, 937.234375))
collision happend with box:847.875 and text:Trur solving on the basis of percent match boxes
the current box specification are
Trwv
((1123.96875, 1005.8125), (1246.578125, 1093.09375))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
collision happend with box:1103.484375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1254.890625, 1319.609375))
text2 i.e the incoming text is the winner
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Falve
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
a
((1410.75, 141.3125), (1423.21875, 168.328125))
Tyw
((1136.4375, 529.921875), (1244.5, 606.8125))
folre
((1121.890625, 629.671875), (1244.5, 714.875))
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
Trur
((1134.359375, 847.875), (1250.734375, 937.234375))
Trwv
((1123.96875, 1005.8125), (1246.578125, 1093.09375))
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
Tiue
((1121.890625, 1232.328125), (1254.890625, 1319.609375))
Falve
((1142.671875, 1332.078125), (1244.5, 1398.578125))
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
Fale
((1119.8125, 1575.21875), (1275.671875, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rBUuCSx.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6819.906249999999
first t/f detection
TRUE
((5698.718749999999, 1923.65625), (6213.499999999999, 2104.28125))
TRUE
((5662.59375, 2483.59375), (6186.406249999999, 2700.34375))
FALE
((5689.6875, 3088.6875), (6177.375, 3269.3125))
TRUE
((5635.5, 3585.40625), (6159.312499999999, 3811.1875))
FRUSE
((5689.6875, 4073.09375), (6240.593749999999, 4298.875))
TRVE
((5653.562500000001, 4280.8125), (6231.5625, 4479.5))
FALE
((5689.6875, 4687.21875), (6240.593749999999, 4913.0))
TRUE
((5671.624999999999, 4967.1875), (6267.687499999999, 5174.90625))
TRUE
((5671.624999999999, 5445.84375), (6168.343750000001, 5653.5625))
TRVE
((5725.812499999999, 5933.53125), (6213.499999999999, 6159.3125))
TRVE
((5743.875, 6502.5), (6303.812500000001, 6719.25))
TKUE
((5680.656250000001, 7143.71875), (6240.593749999999, 7351.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2492, '3': 3079, '4': 3684, '5': 4082, '6': 4678, '7': 5481, '8': 6087, '9': 6493, '10': 7297}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qJ7zBpR.jpg
OCR detection done with doctr
left top x of T/F: 5899.599609375
bottom right x of T/F: 7144.986328125
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:26:33] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : qJ7zBpR.jpg
[2024/07/01 15:26:34] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:26:35] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.12372326850891113
[2024/07/01 15:26:37] ppocr DEBUG: rec_res num  : 40, elapsed : 2.0221471786499023
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1687]
the false list is  []
the true list for xdirn [934]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1687]
the false list is  []
the true list for xdirn [934]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1687]
the false list is  []
the true list for xdirn [934]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [934, 6041]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [934, 6041]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [934, 6041]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1687, 2203, 2700]
the false list is  []
the true list for xdirn [934, 6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1687, 2203, 2700]
the false list is  []
the true list for xdirn [934, 6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2']
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
first t/f detection
FAISE
[[6044.0, 3362.0], [6593.0, 3387.0], [6585.0, 3571.0], [6036.0, 3546.0]]
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [1687, 2203]
the false list is  []
the true list for xdirn [6041, 6119]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
first t/f detection
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5']
first t/f detection
fALSE
[[6162.0, 4402.0], [6767.0, 4453.0], [6749.0, 4679.0], [6143.0, 4628.0]]
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5']
first t/f detection
will be zero.
[[1015.0, 4591.0], [1768.0, 4591.0], [1768.0, 4735.0], [1015.0, 4735.0]]
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
the true list is  [1687, 2203, 3869, 5082]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': True, '10': 'UNASSIGNED'}
['2', '5', '9']
the true list is  [1687, 2203, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998]
the false list for xdirn []
the final dict for y is: 
{'1': True, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': True, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
['1', '2', '5', '9']
the true list is  [1687, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
the true list is  [1687, 3869, 5808]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
class label.
[[1033.0, 6035.0], [1725.0, 6011.0], [1730.0, 6155.0], [1038.0, 6178.0]]
the true list is  [1687, 3869, 5808]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
Faise
[[6199.0, 6888.0], [6696.0, 6927.0], [6681.0, 7121.0], [6185.0, 7082.0]]
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
first t/f detection
fAuSt
[[6267.0, 7395.0], [6893.0, 7484.0], [6864.0, 7699.0], [6238.0, 7610.0]]
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '5', '6']
the true list is  [1687, 3869, 5808, 6362]
the false list is  []
the true list for xdirn [6041, 6119, 6153, 5998, 6028, 6287]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
['1', '2', '5', '6', '10']
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9tuGAkX.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 249.3984375
left top x of T/F: 810.931640625
bottom right x of T/F: 1183.294921875
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
Trok
((835.2578125, 498.232421875), (925.9902343750001, 545.986328125))
text1 i.e the prev text is the winner
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text1 i.e the prev text is the winner
Frue
((914.84765625, 592.1484375), (988.0703125, 641.494140625))
collision happend with box:592.1484375 and text:Frue solving on the basis of percent match boxes
the current box specification are
True
((908.4804687499999, 679.697265625), (989.6621093749999, 738.59375))
text2 i.e the incoming text is the winner
collision happend with box:679.697265625 and text:True solving on the basis of percent match boxes
the current box specification are
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
True
((824.115234375, 854.794921875), (921.21484375, 913.69140625))
collision happend with box:854.794921875 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((828.8906250000001, 937.568359375), (918.03125, 994.873046875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
Trok
((835.2578125, 498.232421875), (925.9902343750001, 545.986328125))
collision happend with box:498.232421875 and text:Trok solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text2 i.e the incoming text is the winner
Frue
((914.84765625, 592.1484375), (988.0703125, 641.494140625))
True
((908.4804687499999, 679.697265625), (989.6621093749999, 738.59375))
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
collision happend with box:778.388671875 and text:folne solving on the basis of percent match boxes
the current box specification are
True
((824.115234375, 854.794921875), (921.21484375, 913.69140625))
text2 i.e the incoming text is the winner
Tul
((828.8906250000001, 937.568359375), (918.03125, 994.873046875))
Falu
((836.849609375, 1031.484375), (919.6230468750001, 1079.23828125))
Falke
((830.482421875, 1114.2578125), (925.9902343750001, 1171.5625))
Falx
((830.482421875, 1219.31640625), (930.765625, 1282.98828125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 561, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : g9OnxRJ.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6639.281250000001
left top x of SN: 637.34375
bottom right x of SN: 1052.15625
first t/f detection
TRUE
((5454.874999999999, 2068.15625), (6050.937499999999, 2275.875))
FALSE
((5436.812500000001, 2582.9375), (6150.28125, 2754.53125))
TRUE
((5445.84375, 3061.59375), (6059.968750000001, 3260.28125))
TRUE
((5427.781249999999, 3675.71875), (6059.968750000001, 3874.40625))
FALSE
((5454.874999999999, 4289.84375), (6204.46875, 4461.4375))
TRUE
((5391.65625, 4714.3125), (5933.53125, 4931.0625))
FALSE
((5445.84375, 5247.15625), (6050.937499999999, 5418.75))
TRUE
((5382.625000000001, 5698.71875), (5933.53125, 5906.4375))
FALSE
((5445.84375, 6240.59375), (6141.250000000001, 6439.28125))
FALSE
((5418.75, 6863.75), (6078.031249999999, 7062.4375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2095, '2': 2673, '3': 3061, '4': 3648, '5': 4208, '6': 4795, '7': 5165, '8': 5743, '9': 6132, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PWkOVq9.jpg
OCR detection done with doctr
left top x of SN: 225.3857421875
bottom right x of SN: 470.37792968750006
left top x of T/F: 1547.10546875
bottom right x of T/F: 2030.6142578125
first t/f detection
folue
((1592.3095703125, 739.2861328125), (1760.2060546875, 836.7744140625))
collision happend with box:739.2861328125 and text:folue solving on the basis of percent match boxes
the current box specification are
Fale
((1597.7255859375, 869.2705078125), (1752.08203125, 953.21875))
text2 i.e the incoming text is the winner
collision happend with box:869.2705078125 and text:Fale solving on the basis of percent match boxes
the current box specification are
Trut
((1581.4775390625, 999.2548828125), (1746.666015625, 1112.9912109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:999.2548828125 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tvod
((1597.7255859375, 1156.3193359375), (1754.7900390625, 1267.34765625))
text1 i.e the prev text is the winner
True
((1595.017578125, 1313.3837890625), (1752.08203125, 1427.1201171875))
collision happend with box:1313.3837890625 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1586.8935546875, 1456.908203125), (1757.498046875, 1548.98046875))
text2 i.e the incoming text is the winner
collision happend with box:1456.908203125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trul
((1589.6015624999998, 1578.7685546875), (1757.498046875, 1687.0888671875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
folue
((1592.3095703125, 739.2861328125), (1760.2060546875, 836.7744140625))
Fale
((1597.7255859375, 869.2705078125), (1752.08203125, 953.21875))
Trut
((1581.4775390625, 999.2548828125), (1746.666015625, 1112.9912109375))
Tvod
((1597.7255859375, 1156.3193359375), (1754.7900390625, 1267.34765625))
True
((1595.017578125, 1313.3837890625), (1752.08203125, 1427.1201171875))
Tul
((1586.8935546875, 1456.908203125), (1757.498046875, 1548.98046875))
Trul
((1589.6015624999998, 1578.7685546875), (1757.498046875, 1687.0888671875))
True
((1595.017578125, 1722.29296875), (1749.3740234375, 1806.2412109375))
Falye
((1603.1416015625, 1860.4013671875), (1741.25, 1941.6416015625))
falu
((1589.6015624999998, 2006.6337890625), (1779.162109375, 2114.9541015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 996, '2': 888, '3': 996, '4': 1159, '5': 1316, '6': 1478, '7': 1586, '8': 1749, '9': 1857, '10': 2022}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tc0TwSp.jpg
OCR detection done with doctr
left top x of SN: 763.4687499999999
bottom right x of SN: 1181.328125
left top x of T/F: 5578.1015625
bottom right x of T/F: 6812.7265625
first t/f detection
TRUE
((5642.9921875, 2259.6640625), (6219.34375, 2479.2265625))
TRUE
((5642.9921875, 2790.2734375), (6246.789062499999, 3000.6875))
TRUE
((5679.5859375, 3247.6953125), (6292.531250000001, 3448.9609375))
TRUE
((5642.9921875, 3906.3828125), (6228.4921875, 4125.9453125))
TRUE
((5652.140625, 4473.5859375), (6155.304687500001, 4647.40625))
False
((5661.289062499999, 4958.453125), (6127.859375, 5168.8671875))
TRUE
((5707.031250000001, 5269.5), (6329.125, 5489.0625))
Teese
((5752.7734375, 5461.6171875), (6219.34375, 5644.5859375))
TRUE
((5597.25, 5964.78125), (6201.046875, 6166.046875))
Talse
((5725.328125, 6504.5390625), (6228.4921875, 6678.359375))
TRUE
((5688.734375, 7099.1875), (6301.6796875, 7346.1953125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2186, '2': 2771, '3': 3156, '4': 3750, '5': 4336, '6': 4940, '7': 5342, '8': 5946, '9': 6349, '10': 6961}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qOjvI4Q.jpg
OCR detection done with doctr
left top x of SN: 633.01171875
bottom right x of SN: 1063.078125
left top x of T/F: 5673.6015625
bottom right x of T/F: 6893.12890625
first t/f detection
Tgil
((5683.6015625, 2046.83984375), (6211.51953125, 2232.07421875))
Taul
((5674.33984375, 2695.16015625), (6202.2578125, 2861.87109375))
Fale
((5766.95703125, 3241.6015625), (6248.56640625, 3473.14453125))
Tquie
((5729.91015625, 3778.78125), (6230.04296875, 3954.75390625))
True
((5711.38671875, 4269.65234375), (6239.3046875, 4445.625))
Tguil
((5748.43359375, 4880.92578125), (6239.3046875, 5056.8984375))
foue
((5748.43359375, 5621.86328125), (6294.875, 5797.8359375))
Falee
((5961.453125, 6260.921875), (6350.445312500001, 6427.6328125))
Folie
((5748.43359375, 6603.60546875), (6230.04296875, 6881.45703125))
TTOULe
((5776.21875, 6899.98046875), (6313.398437500001, 7075.953125))
Toriel
((5729.91015625, 7288.97265625), (6230.04296875, 7474.20703125))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2385
printing the number dict y_coordinate
{'2': 2685, '3': 3241, '4': 3843, '5': 4195, '6': 4769, '7': 5547, '8': 6103, '9': 6483, '10': 7242, '1': 2385}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : iz8f2EL.jpg
OCR detection done with doctr
left top x of SN: 781.8437499999999
bottom right x of SN: 1178.5937499999998
left top x of T/F: 5327.46875
bottom right x of T/F: 6503.812500000001
first t/f detection
Tywe
((5436.812500000001, 1959.78125), (5906.4375, 2185.5625))
Tywe
((5400.687499999999, 2483.59375), (5861.281249999999, 2691.3125))
False
((5364.5625, 2890.0), (5888.374999999999, 3151.90625))
TYwe
((5346.499999999999, 3540.25), (5779.999999999999, 3711.84375))
Trwe
((5382.625000000001, 4587.875), (5861.281249999999, 4795.59375))
Falst
((5391.65625, 5012.34375), (5942.562499999999, 5238.125))
True
((5346.499999999999, 5500.03125), (5789.031250000001, 5734.84375))
Tywl
((5382.625000000001, 5969.65625), (5852.25, 6150.28125))
TrW
((5445.84375, 6601.84375), (5960.625, 6782.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2555, '3': 2917, '4': 3477, '5': 4027, '6': 4587, '7': 4958, '8': 5527, '9': 5906, '10': 6493}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : plR6CUU.jpg
OCR detection done with doctr
left top x of SN: 562.5214843749998
bottom right x of SN: 986.2207031250001
left top x of T/F: 5850.80078125
bottom right x of T/F: 7082.462890624999
first t/f detection
FALSE
((5907.666015625, 2455.73828125), (6488.794921875, 2624.453125))
FALSE
((5879.546875, 3055.61328125), (6441.9296875, 3224.328125))
FALSE
((5888.919921875, 3664.861328125), (6451.302734375, 3833.576171875))
TRUE
((5832.681640625, 4208.498046875), (6291.9609375, 4395.958984375))
FALSE
((5823.30859375, 4686.5234375), (6348.19921875, 4827.119140625))
FALSE
((5851.427734375, 5333.263671875), (6470.048828125, 5511.3515625))
TRUE
((5813.935546875, 6045.615234375), (6329.453124999999, 6261.1953125))
TRUE
((5804.5625, 6598.625), (6310.70703125, 6823.578125))
TRUE
((5767.0703125, 7114.142578125), (6301.333984375001, 7282.857421875))
TRUE
((5842.054687500001, 7807.748046875), (6357.572265625, 8023.328125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2399, '2': 3008, '3': 3608, '4': 4217, '5': 4611, '6': 5220, '7': 6026, '8': 6626, '9': 7029, '10': 7826}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yFqaV83.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1181.703125
first t/f detection
Falre
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
collision happend with box:402.724609375 and text:Falre solving on the basis of percent match boxes
the current box specification are
A
((894.154296875, 514.150390625), (908.4804687499999, 525.29296875))
text1 i.e the prev text is the winner
collision happend with box:402.724609375 and text:Falre solving on the basis of percent match boxes
the current box specification are
Fale
((930.765625, 491.865234375), (989.6621093749999, 538.02734375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:491.865234375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tt
((847.9921875, 510.966796875), (902.1132812499999, 541.2109375))
text1 i.e the prev text is the winner
collision happend with box:491.865234375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Fue
((914.84765625, 592.1484375), (988.0703125, 643.0859375))
text1 i.e the prev text is the winner
True
((908.4804687499999, 678.10546875), (991.25390625, 738.59375))
collision happend with box:678.10546875 and text:True solving on the basis of percent match boxes
the current box specification are
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falre
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
A
((894.154296875, 514.150390625), (908.4804687499999, 525.29296875))
collision happend with box:514.150390625 and text:A solving on the basis of percent match boxes
the current box specification are
Fale
((930.765625, 491.865234375), (989.6621093749999, 538.02734375))
text2 i.e the incoming text is the winner
collision happend with box:491.865234375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tt
((847.9921875, 510.966796875), (902.1132812499999, 541.2109375))
text1 i.e the prev text is the winner
Fue
((914.84765625, 592.1484375), (988.0703125, 643.0859375))
True
((908.4804687499999, 678.10546875), (991.25390625, 738.59375))
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
collision happend with box:778.388671875 and text:folne solving on the basis of percent match boxes
the current box specification are
Tyur
((824.115234375, 854.794921875), (921.21484375, 913.69140625))
text2 i.e the incoming text is the winner
Tpl
((828.8906250000001, 937.568359375), (918.03125, 994.873046875))
Falye
((836.849609375, 1029.892578125), (919.6230468750001, 1077.646484375))
Falk
((830.482421875, 1114.2578125), (925.9902343750001, 1173.154296875))
Falye
((830.482421875, 1217.724609375), (930.765625, 1282.98828125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 563, '4': 663, '5': 762, '6': 864, '7': 929, '8': 1029, '9': 1096, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dzWtTiV.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 925.71875
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5581.3125, 2203.625), (6050.937499999999, 2375.21875))
PALSE
((5581.3125, 2817.75), (6096.09375, 2989.34375))
TRUE
((5481.968749999999, 3350.59375), (5960.625, 3522.1875))
TRUE
((5491.000000000001, 3811.1875), (5987.71875, 3991.8125))
TRUE
((5527.125, 4452.40625), (6005.781250000001, 4624.0))
TRUE
((5491.000000000001, 5066.53125), (5933.53125, 5229.09375))
FALSE
((5527.125, 5626.46875), (6059.968750000001, 5789.03125))
FALSE
((5563.249999999999, 6204.46875), (6078.031249999999, 6376.0625))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2284, '3': 2844, '4': 3413, '5': 3784, '6': 4362, '7': 5120, '8': 5698, '9': 6087, '10': 6854}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7iL00J4.jpg
OCR detection done with doctr
left top x of T/F: 5468.3203125
bottom right x of T/F: 6648.054687500001
left top x of SN: 800.0625000000001
bottom right x of SN: 1208.7734375000002
first t/f detection
Trul
((5560.65625, 2424.3359375), (5954.039062499999, 2616.453125))
Tul
((5505.765624999999, 3046.4296875), (5999.781250000001, 3229.3984375))
Tral
((5533.2109375, 3494.703125), (6018.078125000001, 3714.265625))
Tyul
((5542.359375, 4125.9453125), (5944.890625, 4345.5078125))
false
((5533.2109375, 4711.4453125), (6036.375, 4921.859375))
Palse
((5533.2109375, 5123.125), (5954.039062499999, 5360.984375))
Tyul
((5542.359375, 5672.03125), (5981.484375, 5855.0))
Trl
((5496.6171875, 6102.0078125), (5890.0, 6284.9765625))
Trut
((5524.062499999999, 6586.875), (5963.1875, 6769.84375))
Tyue
((5432.578125, 7163.2265625), (5798.515624999999, 7355.34375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2598, '2': 3156, '3': 3531, '4': 4080, '5': 4638, '6': 5205, '7': 5571, '8': 6138, '9': 6513, '10': 7108}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xiBmbZu.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1864.375
first t/f detection
True
((1451.09375, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1537.421875, 848.046875))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
text2 i.e the incoming text is the winner
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falde
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
text2 i.e the incoming text is the winner
collision happend with box:1233.984375 and text:Falde solving on the basis of percent match boxes
the current box specification are
Falje
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1451.09375, 650.0), (1567.890625, 700.78125))
True
((1428.2421875, 787.109375), (1537.421875, 848.046875))
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
Falde
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
Falje
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
True
((1456.1718749999998, 1665.625), (1565.3515625, 1716.40625))
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
True
((1443.4765624999998, 1980.46875), (1532.34375, 2036.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 246j0f6.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
Folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:Folu solving on the basis of percent match boxes
the current box specification are
Falke
((1281.0234374999998, 729.513671875), (1428.802734375, 809.267578125))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
Troe
((1273.986328125, 853.8359375), (1419.419921875, 952.35546875))
text1 i.e the prev text is the winner
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
collision happend with box:996.923828125 and text:Tvod solving on the basis of percent match boxes
the current box specification are
Tyul
((1283.369140625, 1147.048828125), (1419.419921875, 1247.9140625))
text2 i.e the incoming text is the winner
collision happend with box:1147.048828125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1283.099609375), (1424.111328125, 1360.5078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1283.099609375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Trul
((1276.33203125, 1393.34765625), (1424.111328125, 1489.521484375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
Falke
((1281.0234374999998, 729.513671875), (1428.802734375, 809.267578125))
Troe
((1273.986328125, 853.8359375), (1419.419921875, 952.35546875))
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
Tyul
((1283.369140625, 1147.048828125), (1419.419921875, 1247.9140625))
Trul
((1271.640625, 1283.099609375), (1424.111328125, 1360.5078125))
Trul
((1276.33203125, 1393.34765625), (1424.111328125, 1489.521484375))
Tru
((1278.677734375, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1285.71484375, 1653.720703125), (1407.69140625, 1724.091796875))
Falu
((1273.986328125, 1794.462890625), (1424.111328125, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 846, '2': 743, '3': 842, '4': 994, '5': 1140, '6': 1290, '7': 1391, '8': 1538, '9': 1639, '10': 1787}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gOCVU3H.jpg
OCR detection done with doctr
left top x of SN: 193.45312500000003
bottom right x of SN: 440.25000000000006
left top x of T/F: 1511.296875
bottom right x of T/F: 1993.8281249999998
first t/f detection
falx
((1529.3125, 700.03125), (1705.65625, 825.609375))
collision happend with box:700.03125 and text:falx solving on the basis of percent match boxes
the current box specification are
Fale
((1553.359375, 833.625), (1713.671875, 929.8125))
text2 i.e the incoming text is the winner
collision happend with box:833.625 and text:Fale solving on the basis of percent match boxes
the current box specification are
True
((1542.671875, 980.578125), (1710.9999999999998, 1090.125))
text2 i.e the incoming text is the winner
collision happend with box:980.578125 and text:True solving on the basis of percent match boxes
the current box specification are
Tiue
((1548.015625, 1124.859375), (1702.984375, 1242.421875))
text1 i.e the prev text is the winner
Trul
((1556.0312500000002, 1282.5), (1716.34375, 1392.046875))
collision happend with box:1282.5 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1558.7031249999998, 1421.4375), (1708.3281250000002, 1514.953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1421.4375 and text:True solving on the basis of percent match boxes
the current box specification are
falie
((1545.34375, 1563.046875), (1721.6875000000002, 1672.59375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falx
((1529.3125, 700.03125), (1705.65625, 825.609375))
Fale
((1553.359375, 833.625), (1713.671875, 929.8125))
True
((1542.671875, 980.578125), (1710.9999999999998, 1090.125))
Tiue
((1548.015625, 1124.859375), (1702.984375, 1242.421875))
Trul
((1556.0312500000002, 1282.5), (1716.34375, 1392.046875))
True
((1558.7031249999998, 1421.4375), (1708.3281250000002, 1514.953125))
falie
((1545.34375, 1563.046875), (1721.6875000000002, 1672.59375))
Falue
((1561.375, 1693.96875), (1724.359375, 1784.8125))
Falue
((1561.375, 1830.234375), (1713.671875, 1931.765625))
False
((1556.0312500000002, 1985.203125), (1719.015625, 2092.078125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 702, '2': 863, '3': 969, '4': 1130, '5': 1287, '6': 1450, '7': 1555, '8': 1718, '9': 1830, '10': 1987}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : icWtiVC.jpg
OCR detection done with doctr
left top x of T/F: 5974.7265625
bottom right x of T/F: 7132.7783203125
left top x of SN: 1663.5244140624998
bottom right x of SN: 2073.052734375
first t/f detection
TRVE
((6034.624023437501, 2604.6474609375), (6523.619140625, 2804.2373046875))
TRVE
((5994.7060546875, 3093.642578125), (6503.66015625, 3283.2529296875))
FALSE
((5984.7265625, 3572.658203125), (6453.762695312501, 3762.2685546875))
FALSE
((5984.7265625, 4101.5712890625), (6473.7216796875, 4301.1611328125))
FALJE
((5954.7880859375, 4710.3203125), (6443.783203124999, 4860.0126953125))
FALIE
((5944.80859375, 5219.2744140625), (6423.82421875, 5368.966796875))
FALSE
((5904.890625, 5638.4130859375), (6373.9267578125, 5838.0029296875))
TRUE
((5845.013671875, 6127.408203125), (6284.111328125, 6317.0185546875))
TRVE
((5884.931640625, 6566.505859375), (6383.90625, 6746.13671875))
TRUE
((5825.0546875, 7155.2958984375), (6244.193359375, 7344.90625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 2744, '2': 3243, '3': 3582, '4': 4111, '5': 4620}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IF69nYD.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6910.218750000001
left top x of SN: 176.75
bottom right x of SN: 591.5625000000001
first t/f detection
TRUE
((5698.718749999999, 2032.03125), (6249.625000000001, 2257.8125))
TRUE
((5653.562500000001, 2700.34375), (6267.687499999999, 2908.0625))
FALSE
((5608.40625, 3260.28125), (6222.531250000001, 3513.15625))
TRUE
((5960.625, 3865.375), (6511.531249999999, 4036.96875))
TRUE
((5653.562500000001, 4307.90625), (6204.46875, 4506.59375))
FALSE
((5563.249999999999, 4994.28125), (6132.218749999999, 5192.96875))
TRME
((5581.3125, 5789.03125), (6150.28125, 5987.71875))
FALSE
((5563.249999999999, 6348.96875), (6150.28125, 6547.65625))
TRUE
((5581.3125, 6881.8125), (6240.593749999999, 7125.65625))
TRUE
((5617.437499999999, 7532.0625), (6195.437500000001, 7703.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2790, '3': 3404, '4': 4009, '5': 4407, '6': 5021, '7': 5816, '8': 6421, '9': 6827, '10': 7631}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ar4iTZu.jpg
OCR detection done with doctr
left top x of SN: 87.74999999999999
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1217.328125
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((904.9765625, 467.875), (921.90625, 497.1171875))
text2 i.e the incoming text is the winner
collision happend with box:467.875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((900.359375, 534.0546875), (924.9843750000001, 563.296875))
text2 i.e the incoming text is the winner
F
((897.28125, 743.3671875), (923.4453125, 777.2265625))
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
F
((900.359375, 1194.3125), (926.5234375, 1225.09375))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the unassigned keys are ['9']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '10']
['1', '2', '3', '4', '5', '6', '7', '8', '10', '1', '2', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 381, '2': 483, '3': 549, '4': 651, '5': 749, '6': 852, '7': 921, '8': 1025, '10': 1191}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1f5kc6O.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 320.28124999999994
left top x of T/F: 1384.0625
bottom right x of T/F: 1872.4296875
first t/f detection
Colu
((1416.6328125, 769.8984375), (1567.1015625, 875.2265625))
Tyut
((1434.1875, 1053.28125), (1562.0859375000002, 1133.53125))
A4
((1446.7265624999998, 1386.8203125), (1504.40625, 1426.9453125))
collision happend with box:1386.8203125 and text:A4 solving on the basis of percent match boxes
the current box specification are
U
((1501.8984375, 1399.359375), (1526.9765625, 1416.9140625))
text2 i.e the incoming text is the winner
Fale
((1441.7109375, 1625.0625), (1569.6093749999998, 1705.3125))
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falw
((1431.6796875, 1755.46875), (1584.6562500000002, 1855.78125))
text2 i.e the incoming text is the winner
L
((1491.8671875, 1958.6015625), (1524.46875, 1993.7109375))
collision happend with box:1958.6015625 and text:L solving on the basis of percent match boxes
the current box specification are
L
((1529.484375, 1946.0625), (1564.59375, 1973.6484375))
text2 i.e the incoming text is the winner
collision happend with box:1946.0625 and text:L solving on the basis of percent match boxes
the current box specification are
A
((1481.8359375, 1983.6796875), (1499.390625, 2001.234375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 631, '2': 794, '3': 900, '4': 1063, '5': 1228, '6': 1384, '8': 1652, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LmfCbHP.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6666.375000000001
left top x of SN: 384.4687500000001
bottom right x of SN: 799.2812499999999
first t/f detection
Tale
((5743.875, 1833.34375), (6339.9375, 2104.28125))
TRUE
((5491.000000000001, 2068.15625), (6168.343750000001, 2312.0))
FALSE
((5617.437499999999, 2465.53125), (6348.968749999999, 2682.28125))
FALSE
((5572.281250000001, 3070.625), (6358.000000000001, 3305.4375))
TRUE
((5617.437499999999, 3594.4375), (6240.593749999999, 3838.28125))
TRUE
((5653.562500000001, 3910.53125), (6114.156250000001, 4127.28125))
FA
((5545.187500000001, 4515.625), (5816.125000000001, 4723.34375))
collision happend with box:4515.625 and text:FA solving on the basis of percent match boxes
the current box specification are
LS
((5834.187499999999, 4506.59375), (6123.1875, 4687.21875))
text2 i.e the incoming text is the winner
TRUE
((5554.21875, 5346.5), (6105.124999999999, 5518.09375))
TRUE
((5554.21875, 5870.3125), (6069.0, 6041.90625))
TRUE
((5527.125, 6484.4375), (6213.499999999999, 6782.46875))
TRUE
((5518.093750000001, 7152.75), (6059.968750000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['8']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '9', '10']
['1', '2', '3', '4', '5', '6', '7', '9', '10', '1', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2546, '3': 3115, '4': 3693, '5': 4082, '6': 4660, '7': 5436, '9': 6439, '10': 7234}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gygqDOa.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 334.8125
left top x of T/F: 970.1953125
bottom right x of T/F: 1351.640625
first t/f detection
T
((1043.875, 422.8984375), (1089.59375, 463.71875))
collision happend with box:422.8984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((994.890625, 507.8046875), (1047.140625, 556.7890625))
text2 i.e the incoming text is the winner
collision happend with box:507.8046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((993.2578124999999, 592.7109375), (1035.7109375, 633.53125))
text2 i.e the incoming text is the winner
collision happend with box:592.7109375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1011.21875, 674.3515625), (1045.5078125, 728.234375))
text2 i.e the incoming text is the winner
collision happend with box:674.3515625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1030.8125, 782.1171875), (1081.4296875, 829.46875))
text2 i.e the incoming text is the winner
collision happend with box:782.1171875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1001.421875, 886.6171875), (1048.7734375, 927.4375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1043.875, 422.8984375), (1089.59375, 463.71875))
T
((994.890625, 507.8046875), (1047.140625, 556.7890625))
T
((993.2578124999999, 592.7109375), (1035.7109375, 633.53125))
F
((1011.21875, 674.3515625), (1045.5078125, 728.234375))
T
((1030.8125, 782.1171875), (1081.4296875, 829.46875))
T
((1001.421875, 886.6171875), (1048.7734375, 927.4375))
a
((972.0312499999999, 968.2578125), (1019.3828125, 1009.078125))
collision happend with box:968.2578125 and text:a solving on the basis of percent match boxes
the current box specification are
oT
((1017.7500000000001, 973.15625), (1099.390625, 1015.609375))
text2 i.e the incoming text is the winner
collision happend with box:973.15625 and text:oT solving on the basis of percent match boxes
the current box specification are
F
((1003.0546874999999, 1049.8984375), (1037.34375, 1092.3515625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 424, '2': 529, '3': 597, '4': 698, '5': 801, '6': 902, '7': 971, '8': 1074, '9': 1144, '10': 1245}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : epimQv0.jpg
OCR detection done with doctr
left top x of T/F: 5985.833984375
bottom right x of T/F: 7233.8369140625
left top x of SN: 874.5624999999999
bottom right x of SN: 1291.8203125
first t/f detection
FALSE
((6065.0341796875, 2293.4921875), (6707.607421874999, 2520.8642578125))
TRUE
((6015.60546875, 2886.63671875), (6579.0927734375, 3133.7802734375))
TRUE
((6055.1484375, 3529.2099609375), (6579.0927734375, 3756.58203125))
FALSE
((6045.2626953125, 4063.0400390625), (6687.835937499999, 4290.412109375))
FALSE
((6074.919921875, 4498.0126953125), (6717.493164062499, 4735.2705078125))
TRUE
((6015.60546875, 5180.12890625), (6519.7783203125, 5377.84375))
FALSE
((6074.919921875, 5852.359375), (6727.37890625, 6069.845703125))
TRUE
((6015.60546875, 6445.50390625), (6539.5498046875, 6672.8759765625))
FAISE
((6134.234375, 6771.7333984375), (6885.550781250001, 6999.10546875))
TeUf
((6065.0341796875, 6969.4482421875), (6638.4072265625, 7196.8203125))
TRUE
((6015.60546875, 7641.6787109375), (6588.978515625, 7869.05078125))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['1', '9']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '10']
['2', '3', '4', '5', '6', '7', '8', '10', '2', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'2': 3104, '3': 3677, '4': 4300, '5': 4656, '6': 5249, '7': 6050, '8': 6623, '10': 7789, '1': 2804}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jwVRl8o.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6231.5625, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SF26PyJ.jpg
OCR detection done with doctr
left top x of SN: 312.21875
bottom right x of SN: 772.1874999999999
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6756.6875
first t/f detection
Fole
((5527.125, 1950.75), (5861.281249999999, 2203.625))
Fle
((5445.84375, 2519.71875), (5834.187499999999, 2745.5))
Trve
((5400.687499999999, 3088.6875), (5852.25, 3350.59375))
Iire
((5409.718750000001, 3720.875), (5743.875, 3946.65625))
False
((5391.65625, 4262.75), (5888.374999999999, 4515.625))
True
((5373.593749999999, 4840.75), (5707.750000000001, 5030.40625))
True
((5418.75, 5373.59375), (5834.187499999999, 5572.28125))
Trie
((5436.812500000001, 5834.1875), (5825.15625, 6123.1875))
Fale
((5418.75, 6367.03125), (5834.187499999999, 6601.84375))
rte
((5427.781249999999, 7116.625), (5743.875, 7288.21875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6285, '1': 1959, '2': 2582, '3': 3034, '4': 3639, '5': 4253, '6': 4867, '7': 5265, '8': 5879, '10': 6890}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NzodNAi.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
collision happend with box:1145.138671875 and text:EER solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
collision happend with box:1660.333984375 and text:RER solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1871.095703125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAvWe7x.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1144.7285156250002
bottom right x of T/F: 1582.2626953124998
first t/f detection
falr
((1187.2333984375, 524.412109375), (1334.5888671875, 624.09375))
collision happend with box:524.412109375 and text:falr solving on the basis of percent match boxes
the current box specification are
Falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:Falre solving on the basis of percent match boxes
the current box specification are
TAu
((1180.732421875, 784.451171875), (1310.751953125, 875.46484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:784.451171875 and text:TAu solving on the basis of percent match boxes
the current box specification are
Riul
((1189.400390625, 910.13671875), (1328.087890625, 996.81640625))
text2 i.e the incoming text is the winner
collision happend with box:910.13671875 and text:Riul solving on the basis of percent match boxes
the current box specification are
Trur
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1050.9912109375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falr
((1187.2333984375, 524.412109375), (1334.5888671875, 624.09375))
Falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
TAu
((1180.732421875, 784.451171875), (1310.751953125, 875.46484375))
Riul
((1189.400390625, 910.13671875), (1328.087890625, 996.81640625))
Trur
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
True
((1156.8955078125, 1285.0263671875), (1302.083984375, 1373.873046875))
Folwe
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
Falu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
True
((1165.5634765624998, 1692.4208984375), (1315.0859375, 1783.4345703125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 775, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1187, '7': 1280, '8': 1419, '9': 1512, '10': 1649}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rZbH3th.jpg
OCR detection done with doctr
left top x of T/F: 5275.34765625
bottom right x of T/F: 6680.109375
left top x of SN: 558.9179687500001
bottom right x of SN: 979.72265625
first t/f detection
due
((5415.01171875, 2333.953125), (5868.8359375, 2639.58984375))
drus
((5405.75, 2926.703125), (5831.7890625, 3130.4609375))
True
((5507.62890625, 3389.7890625), (5933.66796875, 3621.33203125))
True
((5507.62890625, 4093.6796875), (5942.9296875, 4278.9140625))
True
((5461.3203125, 4649.3828125), (5905.8828125, 4871.6640625))
directly
((4757.4296875, 5686.6953125), (5276.0859375, 5871.9296875))
Tue
((5516.890625, 5232.87109375), (5961.453125, 5445.890625))
Troe
((5479.84375, 5825.62109375), (5952.19140625, 6047.90234375))
space.
((4850.046875, 6335.015625), (5276.0859375, 6510.98828125))
collision happend with box:6335.015625 and text:space. solving on the basis of percent match boxes
the current box specification are
Juue
((5516.890625, 6270.18359375), (6007.76171875, 6538.7734375))
text2 i.e the incoming text is the winner
prediction
((4637.02734375, 6733.26953125), (5303.87109375, 6937.02734375))
collision happend with box:6733.26953125 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tvve
((5516.890625, 6798.1015625), (6035.546875, 7066.69140625))
text1 i.e the prev text is the winner
the
((5081.58984375, 7603.87109375), (5313.132812499999, 7770.58203125))
collision happend with box:7603.87109375 and text:the solving on the basis of percent match boxes
the current box specification are
Tue
((5563.19921875, 7511.25390625), (6091.117187499999, 7742.796875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['4', '8']
the assigned keys are ['1', '2', '3', '5', '6', '7', '9', '10']
['1', '2', '3', '5', '6', '7', '9', '10', '1', '2', '3', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'2': 3195, '1': 3584, '3': 3565, '5': 4723, '6': 5306, '7': 5714, '9': 6761, '10': 7381}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bOMQ443.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
F
((5644.531249999999, 1860.4375), (5798.0625, 2023.0))
collision happend with box:1860.4375 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5779.999999999999, 1860.4375), (6177.375, 2032.03125))
text2 i.e the incoming text is the winner
FALSE
((5608.40625, 2420.375), (6267.687499999999, 2664.21875))
FALIE
((5635.5, 3061.59375), (6141.250000000001, 3224.15625))
F
((5599.375000000001, 3567.34375), (5743.875, 3711.84375))
collision happend with box:3567.34375 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5752.906249999999, 3549.28125), (6150.28125, 3711.84375))
text2 i.e the incoming text is the winner
afue
((5644.531249999999, 3991.8125), (6159.312499999999, 4163.40625))
TRUE
((5653.562500000001, 4199.53125), (6141.250000000001, 4371.125))
TRUE
((5554.21875, 4660.125), (6041.90625, 4867.84375))
TRUE
((5536.156249999999, 5328.4375), (6078.031249999999, 5500.03125))
T&U
((5590.343749999999, 5770.96875), (5960.625, 6005.78125))
TRUE
((5617.437499999999, 6339.9375), (6123.1875, 6547.65625))
FALSE
((5572.281250000001, 6908.90625), (6132.218749999999, 7161.78125))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2456, '3': 3016, '4': 3585, '5': 3955, '6': 4524, '7': 5274, '8': 5843, '9': 6222, '10': 6990}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uWMcs2Y.jpg
rotation started
['bf', '', '00', 'I', 'of', 'E', 'E', 'a', 'I', 'I', 'I', 't', 'a', 'I', '-', 'I', 'I', ':', 'E', 'I', '€', 'I', '1', 'f', 'I', 'I', 'I', '8', '9', '2', 'I', 'E', 'I', 'I', ':', 'of', 'I', 'I', 'D', 'I', 'I', 'E', 'e', 'E', 'E', 'I', 'I', 'E', 'E', 'Q', 'E', 'a', 'I', 'E', '2', 'it', 'I', '-', '', 'OT', '4', '3', '2', 'L', '2', '€', 'T', 'E', '2', ':', 'I', 'it', 'a', '2', 'I', 'I', 'I', '€', 'I', 'E', 'E', 't', '3', 'I', 'E', 'it', 'I', 'I', 'I', '8', 'E', '8', 'I', 'I', '8', 'I', 'E', '-', '8', 'a', 'E', '-', 'a', '9', 'E', 'P', 'E', 'P', 'E', '>', 'E', 'E', 'a', 'I', 'I', 'I', 'E', 'of', 'B', '8', 'I', 'a', '2', 'E', 'I', '-', 'E', 'I', 'I', '9', 'I', 'I', 'I', 'se', 'E', 'it', 'a', 'I', 'I', '€', 'I', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'I', 'E', 'I', 'D', '2', 'it', 'I', 'E', 'E', 'E', 'E', '2', 'E', '8', 'E', '8', 'E', 'I', '2', 'it', 'E', '%', '8', 'E', 'I', 'I', '-', 'a', 'E', 'E', 'I', '€', 'I', 'I', 'of', 'I', 'E', 'I', 'I', 'D', 'E', 'E', '€', '€', 'it', 'a', 'I', '', 'E', 'E', 'I', '2', '2', '€', 'A', 'à', '2', 'I', 'f', 'a', '-', 'I', 'I', '', '-', '-', 'Mue', '4', 'COURE', ':', 'Ino']
rotation started
['"egep', 'uoosun', 'MoU', '09', 'ITOM', 'ozireroues', 'qou', 'op', '7841', 'eep', 'Surureng', 'o47', 'UI', 'sTregop', 'JO', 'OSIOU', 'oyroods', 'YSLI', 'oun', "'IAS", 'UI', 'Iojourered', 'D', 'o44', 'Jo', 'onTeA', 'y81y', 'B', 'YAIM', 'OT', 'àn', 'oadeo', '01', 'UIBOT', 'Keur', 'popow', 'o44', 'Se', 'soseatour', '8umny.OAo', 'Jo', 'AS', '9SOI-SA-QUO', '1', '2011', 'ueya', 'JOMOIS', 'SI', 'WAS', 'QUO-SA-QUO', 'Sursn', 'uomorpaad', 'e', 'Suryeur', "'sossero", 'Jo', 'Joqunu', 'a8rel', 'e', 'YAIM', 'swarqoid', 'ssepprgmur', 'JOJ', '6', '2810', 'Do1et', '/', 'D0E', 'ooeds', '[eUrSLIO', 'o47', 'UI', 'IeQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoop', 'OUL', '8', '"sopou', 'Jo', 'Joqunu', 'o47', '01', 'Teuorg.iodo.d', 'ST9DaIIp', 'SI', 'DOIL', 'UOISIDOCI', 'o44', 'UI', 'uonorpald', 'B', 'Suryeur', 'JOJ', 'paumbar', 'OUIIL', 'OUL', 'L', '-sneD', 'e', 'SABMTe', 'SI', 'Suornquasip', 'uerssneD', 'OM9', 'Jo', 'OINgXIU', 'V', '9', 'B', 'SI', 'OAINO', '(DOH)', 'Dr9sLIOgpere4D', 'Surgeiodo', 'IONTODOE', 'OUL', 'C', 'AV', '"uorgnquasip', 'uers', 'roL', 'TTeDOH', 'pue', 'UOISIDOId', 'Uoomgoq', 'gord', '"YIOMIOU', '-', 'anul', '[emeu', 'a47', 'UI', 'squerpels', 'o47', 'agnduoo', '07', 'posn', 'SI', 'quoosop', 'quorp', '-B.18', 'OTIYM', "'SQU8IOM", 'o47', 'agepdn', '07', 'posn', 'SI', 'uogeBodoxdypeg', '4', '.2091', ':f', 'pue', 'I', 'SIOTDOA', '[euorsuouump-p', 'Kue', 'JIOJ', 'OLIgOUI', 'souensip', 'PITEA', 'B', 'SI', "(A'z/Aumpuagausoo", '-', 'I', '&', 'layIsseo', 'JeQUII-uou', 'B', 'SI', 'NNY', '2', 'quourfordop', 'JOJ', 'WAS', 'ueya', 'quoutammbal', 'a8e10qs', '047', 'SeoidAL', 'I', '050', 'D0aL', '1081e1', 'yonu', 'SI', 'NNY', 'JOJ', 'quowagers', 'NS', 'O', 's', 'IVA/ANHL', ':aJa4', 'paqunu', 'IIO.I', 'mor', 'B11M', 'BAIM', '(sad', 'OT)', "'6", 'ul', 'ASTVI', 'IO', 'INLL', 'plmpuey', '1eOpp', 'pue', 'S.I01191', 'Teadeo', 'S']
rotation started
['4nD', 'AIAN', 'Dy', '-', '-', '4', 'A', 'r', '*', 'I', '-', 'à', '2', ':', '€', '-', 'à', '-', '€', '1', '-', 'E', '€', '-', 'à', 'a', '-', '6', 'I', 'à', 'e', 'iE', 'I', '8', 'I', 'e', '-', 'e', '8', 'f', '-', 'is', 'E', 'o', 'I', '8', 'I', '7', '9', 'i', 'E', 'I', 'I', 'I', 'is', 'I', 'I', 'I', 'I', 'I', 'is', 'a', '€', 'à', '8', 'I', 'is', 'e', 'I', 'E', '€', '-', 'iE', 'of', 'I', ':', 'I', 'of', 'I', 'i', '1', 'E', '2', 'e', 'e', 'I', 'de', '-', 'is', '2', 'a', 'o', 'a', ':', 'E', 'ia', ':', 'E', '1', 'I', 'a', 'I', 'e', '%', 'I', 'E', ':', 'I', 'a', 'e', 'a', 'o', 'E', 'I', 'I', 'I', '0', 'a', 'I', 'E', '-', 'of', 'E', 'E', '€', 'iE', '8', 'e', 'I', 'I', 'a', '-', 'of', '-', 'I', 'I', 'I', 'I', 'E', 'I', 'o', ':', 'I', '5', 'of', 'I', 'I', ':', 'I', 'I', '', 'E', '2', 'I', 'I', 'I', 'a', 'à', 'is', 'I', 'a', 'I', 'I', 'I', 'I', '1', 'E', '-', 'E', 'i', 'I', '5', 'E', 'E', 'E', 'I', '€', 'a', '8', 'is', 'E', '€', 'E', 'e', 'o', '-', 'I', '1', 'a', '2', 'L', '-', 'I', 'E', 'a', 'A', 'E', 'E', 'E', 'E', 'I', 'à', 'I', 'I', 'E', 'of', '1', 'I', '7', '11', 'a', '3', '4', '12', '', 'I', '00', '', '1f']
rotation started
['RO', 'letters', 'and', 'clear', 'handwrin', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'Le', 'co', 'TRUE/FALS', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', '-', '1', 'Typically,', 'the', 'storage', 'requirement', 'than', 'SVM', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'Tove', 'Talse', '3', '1-', 'cosineSimalaritylr.p)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', 'Tove', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gra-', 'dient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'Trve', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus-', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'plot', 'between', 'Precision', 'and', 'Recall.', 'Tot', 'sian', 'distribution.', 'Trve', 'Falge', 'o', 'original', 'space.', 'False', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'True', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'increases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'Trve', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 952.8125
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:30:25] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : uWMcs2Y.jpg
[2024/07/01 15:30:26] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:30:27] ppocr DEBUG: dt_boxes num : 50, elapsed : 0.16141605377197266
[2024/07/01 15:30:29] ppocr DEBUG: rec_res num  : 50, elapsed : 2.13150954246521
OCR detection done
left top x of SN: 542.0
bottom right x of SN: 1007.0
left top y of SN: 1744.0
bottom right y of SN: 2067.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/uWMcs2Y.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7vXHnR1.jpg
OCR detection done with doctr
left top x of SN: 139.06445312499997
bottom right x of SN: 357.361328125
left top x of T/F: 901.4921875
bottom right x of T/F: 1263.083984375
first t/f detection
F
((952.98046875, 403.712890625), (980.107421875, 437.22265625))
collision happend with box:403.712890625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((946.59765625, 496.263671875), (972.12890625, 532.96484375))
text2 i.e the incoming text is the winner
collision happend with box:496.263671875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((943.40625, 564.87890625), (973.724609375, 596.79296875))
text2 i.e the incoming text is the winner
collision happend with box:564.87890625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((938.619140625, 665.408203125), (968.9374999999999, 697.322265625))
text2 i.e the incoming text is the winner
collision happend with box:665.408203125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((937.0234375, 773.916015625), (964.1503906249999, 809.021484375))
text2 i.e the incoming text is the winner
collision happend with box:773.916015625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((933.8320312499999, 866.466796875), (959.3632812499999, 907.955078125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((952.98046875, 403.712890625), (980.107421875, 437.22265625))
F
((946.59765625, 496.263671875), (972.12890625, 532.96484375))
collision happend with box:496.263671875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((943.40625, 564.87890625), (973.724609375, 596.79296875))
text2 i.e the incoming text is the winner
T
((938.619140625, 665.408203125), (968.9374999999999, 697.322265625))
F
((937.0234375, 773.916015625), (964.1503906249999, 809.021484375))
F
((933.8320312499999, 866.466796875), (959.3632812499999, 907.955078125))
T
((929.0449218749999, 947.84765625), (962.5546875, 979.76171875))
F
((935.427734375, 1037.20703125), (960.9589843750001, 1072.3125))
collision happend with box:1037.20703125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((937.0234375, 1113.80078125), (965.74609375, 1150.501953125))
text2 i.e the incoming text is the winner
F
((932.236328125, 1222.30859375), (960.9589843750001, 1259.009765625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 403, '2': 504, '3': 572, '4': 673, '5': 773, '6': 877, '7': 944, '8': 1048, '9': 1115, '10': 1215}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : favEvzP.jpg
OCR detection done with doctr
left top x of T/F: 5248.757812500001
bottom right x of T/F: 6410.1953125
left top x of SN: 726.8750000000001
bottom right x of SN: 1135.5859375
first t/f detection
TRUE
((5606.3984375, 1747.3515625), (6201.046875, 2012.65625))
collision happend with box:1747.3515625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5277.0546875, 1884.578125), (5880.8515625, 2195.625))
text2 i.e the incoming text is the winner
FtsFASE
((5286.203125, 2332.8515625), (6319.9765625, 2625.6015625))
FACSE
((5258.757812500001, 2927.5), (6008.9296875, 3174.5078125))
TRUE
((5277.0546875, 3494.703125), (5972.3359375, 3705.1171875))
TRUE
((5258.757812500001, 3961.2734375), (5917.4453125, 4180.8359375))
FTRUE
((5222.1640625, 4464.4375), (6146.15625, 4711.4453125))
FALSE
((5213.015625, 4967.6015625), (5935.7421875, 5223.7578125))
PALSE
((5331.9453125, 5278.6484375), (6036.375, 5498.2109375))
collision happend with box:5278.6484375 and text:PALSE solving on the basis of percent match boxes
the current box specification are
EUE
((5249.609375, 5434.171875), (5871.703125, 5681.1796875))
text1 i.e the prev text is the winner
FALSE
((5194.71875, 5946.484375), (5917.4453125, 6248.3828125))
FALSE
((5267.90625, 6440.5), (6008.9296875, 6833.8828125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1957, '2': 2497, '3': 2863, '4': 3412, '5': 3952, '6': 4501, '7': 4876, '8': 5434, '9': 5818, '10': 6385}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GCKySAb.jpg
OCR detection done with doctr
left top x of SN: 983.0312499999999
bottom right x of SN: 1391.7421875
left top x of T/F: 5349.390625
bottom right x of T/F: 6510.828125000001
first t/f detection
Tnl
((5441.7265625, 2552.4140625), (5752.7734375, 2753.6796875))
False
((5414.281250000001, 3028.1328125), (5798.515624999999, 3220.25))
Tyue
((5478.3203125, 3403.21875), (5862.554687500001, 3631.9296875))
Falle
((5432.578125, 3970.421875), (5789.3671875, 4226.578125))
Falle
((5469.171875, 4491.8828125), (5899.1484375, 4720.59375))
Tiue
((5423.4296875, 4985.8984375), (5761.921875, 5223.7578125))
Tyue
((5414.281250000001, 5452.46875), (5780.21875, 5644.5859375))
Taue
((5469.171875, 5909.890625), (5880.8515625, 6147.75))
Falie
((5487.46875, 6294.125), (5917.4453125, 6531.984375))
Falie
((5487.46875, 6888.7734375), (5890.0, 7117.484375))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2570, '2': 3092, '3': 3448, '4': 3988, '5': 4519, '6': 5059, '7': 5415, '8': 5973, '9': 6349, '10': 6916}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 04t0i6U.jpg
OCR detection done with doctr
left top x of SN: 191.3505859375
bottom right x of SN: 415.564453125
left top x of T/F: 1047.265625
bottom right x of T/F: 1430.583984375
first t/f detection
T
((1120.93359375, 489.8896484375), (1177.52734375, 539.4091796875))
collision happend with box:489.8896484375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1078.48828125, 578.3173828125), (1131.544921875, 629.60546875))
text2 i.e the incoming text is the winner
collision happend with box:578.3173828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1080.2568359375, 663.2080078125), (1128.0078125, 703.884765625))
text2 i.e the incoming text is the winner
collision happend with box:663.2080078125 and text:T solving on the basis of percent match boxes
the current box specification are
is
((1025.431640625, 767.552734375), (1048.4228515625, 794.0810546875))
text2 i.e the incoming text is the winner
collision happend with box:767.552734375 and text:is solving on the basis of percent match boxes
the current box specification are
Pre-
((1002.4404296875, 868.3603515625), (1050.19140625, 894.888671875))
text2 i.e the incoming text is the winner
collision happend with box:868.3603515625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
F
((1101.4794921875, 746.330078125), (1136.8505859375, 799.38671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1120.93359375, 489.8896484375), (1177.52734375, 539.4091796875))
T
((1078.48828125, 578.3173828125), (1131.544921875, 629.60546875))
T
((1080.2568359375, 663.2080078125), (1128.0078125, 703.884765625))
is
((1025.431640625, 767.552734375), (1048.4228515625, 794.0810546875))
Pre-
((1002.4404296875, 868.3603515625), (1050.19140625, 894.888671875))
F
((1101.4794921875, 746.330078125), (1136.8505859375, 799.38671875))
T
((1122.7021484375, 855.98046875), (1172.2216796875, 900.1943359375))
distribution.
((928.1611328125, 969.16796875), (1053.728515625, 993.927734375))
collision happend with box:969.16796875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
T
((1097.9423828125, 960.3251953125), (1143.9248046875, 1001.001953125))
text1 i.e the prev text is the winner
collision happend with box:969.16796875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((975.9121093749999, 1036.373046875), (1057.265625, 1068.20703125))
text1 i.e the prev text is the winner
a
((1097.9423828125, 1052.2900390625), (1110.322265625, 1068.20703125))
space.
((991.8291015625001, 1144.2548828125), (1057.265625, 1169.0146484375))
collision happend with box:1144.2548828125 and text:space. solving on the basis of percent match boxes
the current box specification are
F
((1108.5537109375, 1123.0322265625), (1140.3876953125, 1165.4775390625))
text1 i.e the prev text is the winner
collision happend with box:1144.2548828125 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((959.9951171875, 1209.69140625), (1062.5712890625, 1236.2197265625))
text2 i.e the incoming text is the winner
the
((1030.7373046875, 1342.3330078125), (1069.6455078125, 1370.6298828125))
or
((1115.6279296875, 1045.2158203125), (1198.75, 1089.4296875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 488, '2': 592, '3': 661, '4': 765, '5': 866, '6': 969, '7': 1036, '8': 1140, '9': 1209, '10': 1312}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TphRpXN.jpg
OCR detection done with doctr
left top x of T/F: 5395.1328125
bottom right x of T/F: 6538.2734375
left top x of SN: 598.7968749999998
bottom right x of SN: 998.3593749999998
first t/f detection
Tyue
((5588.1015625, 2140.734375), (5972.3359375, 2323.703125))
Taue
((5588.1015625, 2707.9375), (5981.484375, 2936.6484375))
TRUE
((5588.1015625, 3229.3984375), (6091.265625, 3439.8125))
FALSE
((5578.953125, 3888.0859375), (6210.1953125, 4089.3515625))
FALSE
((5533.2109375, 4482.734375), (6146.15625, 4684.0))
TRUE
((5597.25, 5022.4921875), (6100.4140625, 5196.3125))
TRUE
((5560.65625, 5543.953125), (6054.671875, 5717.7734375))
FALSE
((5514.9140625, 6074.5625), (6091.265625, 6239.234375))
TRUE
((5551.507812500001, 6522.8359375), (6082.1171875, 6705.8046875))
TRUE
((5487.46875, 7227.265625), (6008.9296875, 7410.234375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2323, '2': 2909, '3': 3293, '4': 3869, '5': 4436, '6': 5013, '7': 5397, '8': 5973, '9': 6358, '10': 6943}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GoB1jLf.jpg
OCR detection done with doctr
left top x of SN: 98.34374999999997
bottom right x of SN: 315.453125
left top x of T/F: 882.40625
bottom right x of T/F: 1248.265625
first t/f detection
fete
((899.8281250000001, 280.546875), (994.828125, 322.109375))
collision happend with box:280.546875 and text:fete solving on the basis of percent match boxes
the current box specification are
Trwe
((920.609375, 341.40625), (994.828125, 375.546875))
text2 i.e the incoming text is the winner
collision happend with box:341.40625 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Tywe
((913.1875, 408.203125), (994.828125, 437.890625))
text1 i.e the prev text is the winner
collision happend with box:341.40625 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Febse
((919.1249999999999, 480.9375), (990.3749999999999, 509.140625))
text2 i.e the incoming text is the winner
collision happend with box:480.9375 and text:Febse solving on the basis of percent match boxes
the current box specification are
FALSE
((907.25, 564.0625), (993.3437500000001, 605.625))
text2 i.e the incoming text is the winner
collision happend with box:564.0625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((905.765625, 676.875), (960.6875, 706.5625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
fete
((899.8281250000001, 280.546875), (994.828125, 322.109375))
collision happend with box:280.546875 and text:fete solving on the basis of percent match boxes
the current box specification are
Trwe
((920.609375, 341.40625), (994.828125, 375.546875))
text2 i.e the incoming text is the winner
collision happend with box:341.40625 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Tywe
((913.1875, 408.203125), (994.828125, 437.890625))
text1 i.e the prev text is the winner
Febse
((919.1249999999999, 480.9375), (990.3749999999999, 509.140625))
FALSE
((907.25, 564.0625), (993.3437500000001, 605.625))
FAL
((905.765625, 676.875), (960.6875, 706.5625))
collision happend with box:676.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((963.65625, 679.84375), (996.3124999999999, 708.046875))
text1 i.e the prev text is the winner
FALSE
((913.1875, 764.453125), (1002.25, 798.59375))
Faye
((911.703125, 850.546875), (993.3437500000001, 884.6875))
collision happend with box:850.546875 and text:Faye solving on the basis of percent match boxes
the current box specification are
Fte
((907.25, 920.3125), (987.4062500000001, 948.515625))
text2 i.e the incoming text is the winner
collision happend with box:920.3125 and text:Fte solving on the basis of percent match boxes
the current box specification are
TevE
((917.640625, 955.9375), (1000.765625, 990.078125))
text1 i.e the prev text is the winner
prediction
((789.984375, 1013.828125), (884.984375, 1040.546875))
collision happend with box:1013.828125 and text:prediction solving on the basis of percent match boxes
the current box specification are
True
((923.578125, 1019.765625), (1000.765625, 1056.875))
text2 i.e the incoming text is the winner
the
((855.296875, 1147.421875), (889.4375, 1172.65625))
collision happend with box:1147.421875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((935.4531249999999, 1120.703125), (1015.609375, 1148.90625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 475, '2': 408, '3': 476, '4': 577, '5': 676, '6': 780, '7': 847, '8': 950, '9': 1019, '10': 1119}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u6uDFnY.jpg
OCR detection done with doctr
left top x of SN: 571.3515625000001
bottom right x of SN: 989.2109375000001
left top x of T/F: 5669.5859375
bottom right x of T/F: 6876.765625
first t/f detection
folil
((5688.734375, 2113.2890625), (6091.265625, 2342.0))
Fali
((5807.6640625, 2671.34375), (6219.34375, 2890.90625))
Tpel
((5716.1796875, 3284.2890625), (6118.7109375, 3531.296875))
1rul
((5789.3671875, 3796.6015625), (6219.34375, 3979.5703125))
1rnl
((5825.9609375, 4235.7265625), (6182.75, 4418.6953125))
Folsl
((5844.2578125, 4848.671875), (6246.789062499999, 5068.234375))
1xul
((5771.0703125, 5543.953125), (6201.046875, 5763.515625))
1Ml
((5743.625, 6120.3046875), (6146.15625, 6303.2734375))
tul
((5816.812499999999, 6623.46875), (6155.304687500001, 6806.4375))
collision happend with box:6623.46875 and text:tul solving on the basis of percent match boxes
the current box specification are
Trub
((5844.2578125, 6760.6953125), (6301.6796875, 7044.296875))
text2 i.e the incoming text is the winner
Galsl
((5835.109375, 7236.4140625), (6210.1953125, 7428.53125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are ['5']
the assigned keys are ['1', '2', '3', '4', '6', '7', '8', '9', '10']
['1', '2', '3', '4', '6', '7', '8', '9', '10', '1', '2', '3', '4', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2085, '2': 2671, '3': 3256, '4': 3860, '6': 4848, '7': 5644, '8': 6248, '9': 6650, '10': 7455}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dmZCR9Y.jpg
OCR detection done with doctr
left top x of T/F: 5349.390625
bottom right x of T/F: 6547.421875
left top x of SN: 525.6093749999999
bottom right x of SN: 925.1718749999998
first t/f detection
TRUE
((5359.390625, 1957.765625), (5835.109375, 2168.1796875))
TRUE
((5395.984375, 2589.0078125), (5890.0, 2771.9765625))
FALSE
((5395.984375, 3028.1328125), (5871.703125, 3265.9921875))
PALSE
((5368.539062499999, 3659.375), (5862.554687500001, 3869.7890625))
PALSE
((5350.2421875, 4254.0234375), (5798.515624999999, 4464.4375))
TRUE
((5368.539062499999, 4812.078125), (5780.21875, 4995.046875))
FALSE
((5322.796875, 5260.3515625), (5771.0703125, 5443.3203125))
FALSE
((5331.9453125, 5781.8125), (5816.812499999999, 5964.78125))
TRUS
((5286.203125, 6248.3828125), (5752.7734375, 6467.9453125))
TRUE
((5322.796875, 6925.3671875), (5752.7734375, 7108.3359375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2213, '2': 2790, '3': 3174, '4': 3750, '5': 4318, '6': 4894, '7': 5278, '8': 5864, '9': 6248, '10': 6843}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UeKwymv.jpg
OCR detection done with doctr
left top x of SN: 909.8437499999999
bottom right x of SN: 1309.40625
left top x of T/F: 5349.390625
bottom right x of T/F: 6492.531250000001
first t/f detection
Trve
((5505.765624999999, 1829.6875), (5899.1484375, 1966.9140625))
Trve
((5533.2109375, 2287.109375), (5972.3359375, 2497.5234375))
False
((5514.9140625, 2753.6796875), (5935.7421875, 2918.3515625))
True
((5487.46875, 3339.1796875), (5935.7421875, 3513.0))
True
((5542.359375, 3906.3828125), (6008.9296875, 4071.0546875))
faye
((5496.6171875, 4372.953125), (5890.0, 4537.625))
False
((5487.46875, 4784.6328125), (5944.890625, 4995.046875))
Trve
((5478.3203125, 5278.6484375), (5899.1484375, 5498.2109375))
False
((5514.9140625, 5790.9609375), (5862.554687500001, 5964.78125))
True
((5514.9140625, 6403.90625), (5935.7421875, 6586.875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1847, '2': 2378, '3': 2735, '4': 3265, '5': 3805, '6': 4345, '7': 4711, '8': 5269, '9': 5635, '10': 6211}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EPXRcep.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5724.843750000001
bottom right x of T/F: 7009.562499999999
first t/f detection
FALSE
((5816.125000000001, 1977.84375), (6466.375000000001, 2230.71875))
TRUE
((5770.96875, 2610.03125), (6376.062499999999, 2862.90625))
FALSE
((5734.843750000001, 3260.28125), (6385.093750000001, 3458.96875))
TRU
((5671.624999999999, 3775.0625), (6050.937499999999, 3991.8125))
TRUE
((5680.656250000001, 4262.75), (6213.499999999999, 4488.53125))
FALSE
((5879.34375, 4903.96875), (6583.78125, 5192.96875))
TRVE
((5861.281249999999, 5707.75), (6556.6875, 5969.65625))
TRUE
((5816.125000000001, 6276.71875), (6385.093750000001, 6475.40625))
FALSE
((5834.187499999999, 6845.6875), (6484.437499999999, 7062.4375))
TRVE
((5743.875, 7450.78125), (6249.625000000001, 7658.5))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2619, '3': 3224, '4': 3847, '5': 4253, '6': 4876, '7': 5698, '8': 6312, '9': 6728, '10': 7550}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HOtiavT.jpg
OCR detection done with doctr
left top x of SN: 614.48828125
bottom right x of SN: 1044.5546875
left top x of T/F: 5775.48046875
bottom right x of T/F: 7032.054687499999
first t/f detection
Fatce
((5831.7890625, 2176.50390625), (6498.6328125, 2398.78515625))
FALSE
((5859.57421875, 2695.16015625), (6702.390625, 2991.53515625))
TRUE
((5748.43359375, 3306.43359375), (6535.6796875, 3602.80859375))
FALSE
((5822.52734375, 2352.4765625), (6656.08203125, 2611.8046875))
TRUE
((5729.91015625, 3852.875), (6461.5859375, 4102.94140625))
TRUE
((5785.48046875, 4325.22265625), (6600.51171875, 4584.55078125))
TRUE
((5683.6015625, 4992.06640625), (6461.5859375, 5251.39453125))
False
((5748.43359375, 5742.265625), (6507.89453125, 6001.59375))
TRVE
((5794.7421875, 6214.61328125), (6480.109375, 6464.6796875))
GAsE
((5813.265625, 6714.74609375), (6526.41796875, 6983.3359375))
TRVE
((5804.00390625, 7011.12109375), (6581.98828125, 7270.44921875))
TRUE
((5822.52734375, 7381.58984375), (6600.51171875, 7594.609375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2750, '3': 3343, '4': 3936, '5': 4325, '6': 4927, '7': 5714, '8': 6307, '9': 6705, '10': 7511}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 57xTE5U.jpg
OCR detection done with doctr
left top x of T/F: 5457.1328125
bottom right x of T/F: 6660.67578125
left top x of SN: 778.1015625
bottom right x of SN: 1192.427734375
first t/f detection
TRUE
((5504.625, 2043.32421875), (6123.24609375, 2352.634765625))
TRUE
((5532.744140625, 2596.333984375), (6207.603515625001, 2849.40625))
Fatse
((5954.53125, 2915.017578125), (6470.048828125, 3139.970703125))
Gree
((5654.593750000001, 3139.970703125), (6141.9921875, 3318.05859375))
collision happend with box:3139.970703125 and text:Gree solving on the basis of percent match boxes
the current box specification are
lags
((5663.966796875, 3308.685546875), (6179.484375, 3486.7734375))
text2 i.e the incoming text is the winner
TQUE
((5588.982421875, 3655.48828125), (6207.603515625001, 3927.306640625))
FALSE
((5607.728515625, 4264.736328125), (6226.349609375, 4489.689453125))
TRUE
((5551.490234375, 4752.134765625), (6188.857421875, 5033.326171875))
TRUE
((5673.33984375, 5258.279296875), (6282.587890625, 5473.859375))
the
((5251.552734375, 7039.158203125), (5485.87890625, 7189.126953125))
catods
((5729.578125, 5811.2890625), (6338.826171875, 5980.00390625))
collision happend with box:5811.2890625 and text:catods solving on the basis of percent match boxes
the current box specification are
EALSE
((5710.83203125, 5942.51171875), (6423.183593749999, 6111.2265625))
text2 i.e the incoming text is the winner
Gtaa
((5785.816406249999, 6289.314453125), (6376.318359375, 6467.40234375))
collision happend with box:6289.314453125 and text:Gtaa solving on the basis of percent match boxes
the current box specification are
FALS
((5626.474609375, 6458.029296875), (6151.365234374999, 6673.609375))
true and false collision so given priority to text2 which is the incoming text
TRUE
((5785.816406249999, 7011.0390625), (6366.9453125, 7235.9921875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2258, '2': 2802, '3': 3177, '4': 3739, '5': 4302, '6': 4883, '7': 5267, '8': 5858, '9': 6251, '10': 6851}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jlxLpcG.jpg
OCR detection done with doctr
left top x of T/F: 5321.9453125
bottom right x of T/F: 6492.531250000001
left top x of SN: 1010.4765625
bottom right x of SN: 1410.0390625
first t/f detection
TRVE
((5405.1328125, 2213.921875), (5871.703125, 2396.890625))
TRVE
((5377.6875, 2698.7890625), (5862.554687500001, 2872.609375))
FALSE
((5377.6875, 3174.5078125), (5825.9609375, 3339.1796875))
FALSE
((5395.984375, 3695.96875), (5862.554687500001, 3878.9375))
FALSE
((5350.2421875, 4290.6171875), (5853.40625, 4455.2890625))
FALSE
((5368.539062499999, 4812.078125), (5844.2578125, 4949.3046875))
FALSE
((5331.9453125, 5232.90625), (5789.3671875, 5415.875))
TRUE
((5295.3515625, 5726.921875), (5716.1796875, 5900.7421875))
TRVE
((5341.09375, 6156.8984375), (5825.9609375, 6321.5703125))
TRVE
((5277.0546875, 6724.1015625), (5716.1796875, 6934.515625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2314, '2': 2817, '3': 3156, '4': 3677, '5': 4189, '6': 4711, '7': 5059, '8': 5589, '9': 5946, '10': 6486}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D6dDvU3.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6765.718749999999
left top x of SN: 700.5624999999999
bottom right x of SN: 1115.375
first t/f detection
TRUG
((5617.437499999999, 2004.9375), (6204.46875, 2176.53125))
TRVE
((5572.281250000001, 2555.84375), (6141.250000000001, 2718.40625))
FALSE
((5590.343749999999, 3070.625), (6258.65625, 3278.34375))
FALSE
((5554.21875, 3675.71875), (6222.531250000001, 3838.28125))
TRVE
((5545.187500000001, 4280.8125), (6159.312499999999, 4443.375))
FALSE
((5509.062499999999, 4759.46875), (6159.312499999999, 4922.03125))
TFALSE
((5563.249999999999, 5238.125), (6330.906250000001, 5409.71875))
TRVE
((5500.03125, 5743.875), (6114.156250000001, 5906.4375))
TRVE
((5563.249999999999, 6195.4375), (6159.312499999999, 6358.0))
TRVE
((5518.093750000001, 6818.59375), (6078.031249999999, 6981.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3052, '4': 3630, '5': 4208, '6': 4795, '7': 5183, '8': 5770, '9': 6159, '10': 6746}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VJFlqhC.jpg
OCR detection done with doctr
left top x of SN: 607.9453124999999
bottom right x of SN: 1034.953125
left top x of T/F: 5614.6953125
bottom right x of T/F: 6849.3203125
first t/f detection
ToUe
((5661.289062499999, 1912.0234375), (6265.085937499999, 2159.03125))
Falge
((5642.9921875, 2387.7421875), (6338.2734375, 2680.4921875))
False
((5670.4375, 3018.984375), (6210.1953125, 3293.4375))
Toue
((5661.289062499999, 3997.8671875), (6384.015625, 4244.875))
TOJC
((5670.4375, 4665.703125), (6301.6796875, 4876.1171875))
Paboe
((5761.921875, 5260.3515625), (6374.8671875, 5580.546875))
trJe.
((5642.9921875, 5882.4453125), (6338.2734375, 6193.4921875))
Trve.
((5688.734375, 6605.171875), (6420.609375, 6815.5859375))
tove
((5633.84375, 7044.296875), (6338.2734375, 7337.046875))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['2', '9']
the assigned keys are ['1', '3', '4', '5', '6', '7', '8', '10']
['1', '3', '4', '5', '6', '7', '8', '10', '1', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 1857, '3': 3009, '4': 3586, '5': 3961, '6': 4546, '7': 5315, '8': 5909, '10': 7099}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yfnPUlS.jpg
OCR detection done with doctr
left top x of SN: 69.84375
bottom right x of SN: 299.71875
left top x of T/F: 1095.265625
bottom right x of T/F: 1517.234375
first t/f detection
Tyw
((1121.890625, 525.765625), (1242.421875, 604.734375))
collision happend with box:525.765625 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1121.890625, 625.515625), (1242.421875, 710.71875))
text2 i.e the incoming text is the winner
collision happend with box:625.515625 and text:folte solving on the basis of percent match boxes
the current box specification are
Truv
((1130.2031250000002, 741.890625), (1238.265625, 818.78125))
text2 i.e the incoming text is the winner
collision happend with box:741.890625 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tror
((1132.28125, 845.796875), (1248.65625, 935.15625))
text2 i.e the incoming text is the winner
collision happend with box:845.796875 and text:Tror solving on the basis of percent match boxes
the current box specification are
Tywv
((1123.96875, 1007.890625), (1242.421875, 1086.859375))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1178.296875))
collision happend with box:1103.484375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1254.890625, 1315.453125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1121.890625, 525.765625), (1242.421875, 604.734375))
folte
((1121.890625, 625.515625), (1242.421875, 710.71875))
Truv
((1130.2031250000002, 741.890625), (1238.265625, 818.78125))
Tror
((1132.28125, 845.796875), (1248.65625, 935.15625))
Tywv
((1123.96875, 1007.890625), (1242.421875, 1086.859375))
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1178.296875))
Tiue
((1121.890625, 1232.328125), (1254.890625, 1315.453125))
Fale
((1142.671875, 1330.0), (1244.5, 1396.5))
Falw
((1136.4375, 1440.140625), (1252.8125, 1519.109375))
Fale
((1126.046875, 1573.140625), (1271.515625, 1674.96875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 513, '2': 646, '3': 735, '4': 868, '5': 1001, '6': 1134, '7': 1224, '8': 1359, '9': 1448, '10': 1583}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : O0KTNBq.jpg
OCR detection done with doctr
left top x of T/F: 5367.6875
bottom right x of T/F: 6574.8671875
left top x of SN: 543.9062499999999
bottom right x of SN: 952.6171875
first t/f detection
Gug
((5871.703125, 1921.171875), (6338.2734375, 2149.8828125))
False
((5441.7265625, 2607.3046875), (6027.2265625, 2872.609375))
false
((5670.4375, 3046.4296875), (6237.640625, 3348.328125))
Cque
((5487.46875, 3778.3046875), (6082.1171875, 4043.609375))
Tgue
((5377.6875, 4418.6953125), (5944.890625, 4647.40625))
false
((5414.281250000001, 4912.7109375), (5954.039062499999, 5178.015625))
Tquue
((5414.281250000001, 5370.1328125), (6018.078125000001, 5626.2890625))
Cuug
((5450.875, 5983.078125), (6008.9296875, 6202.640625))
false
((5551.507812500001, 6330.71875), (6091.265625, 6614.3203125))
False
((5578.953125, 6815.5859375), (6182.75, 7135.78125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2259, '2': 2836, '3': 3220, '4': 3814, '5': 4382, '6': 4967, '7': 5342, '8': 5937, '9': 6330, '10': 6925}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kGfwhg1.jpg
OCR detection done with doctr
left top x of SN: 674.9980468750002
bottom right x of SN: 1089.32421875
left top x of T/F: 5860.173828124999
bottom right x of T/F: 7091.8359375
first t/f detection
TRUE
((5963.904296874999, 2052.697265625), (6545.033203125, 2287.0234375))
FALSE
((5963.904296874999, 2643.19921875), (6666.882812500001, 2858.779296875))
TRUE
((5832.681640625, 3336.8046875), (6545.033203125, 3561.7578125))
fEBC
((5823.30859375, 3871.068359375), (6245.095703124999, 4058.529296875))
collision happend with box:3871.068359375 and text:fEBC solving on the basis of percent match boxes
the current box specification are
PALSE
((6301.333984375001, 3871.068359375), (6807.478515625, 4039.783203125))
text2 i.e the incoming text is the winner
FALSL
((5860.80078125, 4292.85546875), (6573.152343750001, 4470.943359375))
FALSE
((5945.158203125, 5014.580078125), (6507.541015625, 5192.66796875))
TRVE
((5823.30859375, 5670.693359375), (6348.19921875, 5858.154296875))
Tpat
((5813.935546875, 6214.330078125), (6329.453124999999, 6429.91015625))
collision happend with box:6214.330078125 and text:Tpat solving on the basis of percent match boxes
the current box specification are
FALSE
((6413.810546875, 6261.1953125), (6816.8515625, 6439.283203125))
true and false collision so given priority to text2 which is the incoming text
TRUE
((5785.816406249999, 6786.0859375), (6273.21484375, 6964.173828125))
TRUE
((5832.681640625, 7404.70703125), (6301.333984375001, 7573.421875))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2052, '2': 2643, '3': 3224, '4': 3814, '5': 4208, '6': 4799, '7': 5586, '8': 6186, '9': 6589, '10': 7385}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XYvZQ69.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6792.812499999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRUE
((5617.437499999999, 2131.375), (6348.968749999999, 2393.28125))
TRUE
((5590.343749999999, 2700.34375), (6403.156249999999, 2989.34375))
TRVE
((5481.968749999999, 3215.125), (6285.75, 3468.0))
FALSE
((5491.000000000001, 3829.25), (6376.062499999999, 4073.09375))
Fase
((5536.156249999999, 4551.75), (6249.625000000001, 4723.34375))
FALSE
((5518.093750000001, 4777.53125), (6403.156249999999, 4949.125))
FALSE
((5536.156249999999, 5093.625), (6376.062499999999, 5301.34375))
FALSE
((5445.84375, 5608.40625), (6358.000000000001, 5816.125))
FALSE
((5427.781249999999, 6105.125), (6240.593749999999, 6348.96875))
TRVE
((5481.968749999999, 6592.8125), (6231.5625, 6800.53125))
TRVE
((5436.812500000001, 7243.0625), (6204.46875, 7486.90625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2239, '2': 2844, '3': 3242, '4': 3847, '5': 4443, '6': 5066, '7': 5463, '8': 6096, '9': 6502, '10': 7125}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CutQ325.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6485.75
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5156.84375, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5156.84375, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5888.374999999999, 5102.65625))
FALSE
((5156.84375, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5147.8125, 5825.15625), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6511.53125))
TRVE
((5211.031249999999, 6990.1875), (5825.15625, 7161.78125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3242, '4': 3802, '5': 4362, '6': 4931, '7': 5310, '8': 5879, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lLhLJNY.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6738.624999999999
first t/f detection
Febe
((5527.125, 1950.75), (5852.25, 2203.625))
Fle
((5472.9375, 2537.78125), (5816.125000000001, 2736.46875))
Trve
((5409.718750000001, 3079.65625), (5852.25, 3341.5625))
Trie
((5391.65625, 3693.78125), (5734.843750000001, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5346.499999999999, 4831.71875), (5716.78125, 5048.46875))
True
((5409.718750000001, 5364.5625), (5807.093749999999, 5554.21875))
Trve
((5436.812500000001, 5852.25), (5816.125000000001, 6105.125))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5807.093749999999, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2582, '3': 2998, '4': 3630, '5': 4235, '6': 4849, '7': 5256, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 104uBJZ.jpg
OCR detection done with doctr
left top x of SN: 97.98828125
bottom right x of SN: 316.66015625
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1332.177734375
first t/f detection
F
((1003.271484375, 427.001953125), (1043.5546875, 472.119140625))
T
((988.76953125, 800.830078125), (1061.279296875, 850.78125))
collision happend with box:800.830078125 and text:T solving on the basis of percent match boxes
the current box specification are
PT
((946.875, 876.5625), (1053.22265625, 929.736328125))
text2 i.e the incoming text is the winner
collision happend with box:876.5625 and text:PT solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 971.630859375), (1024.21875, 1021.58203125))
text2 i.e the incoming text is the winner
collision happend with box:971.630859375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((980.712890625, 1052.197265625), (1019.384765625, 1100.537109375))
text2 i.e the incoming text is the winner
F
((1033.88671875, 1253.61328125), (1067.724609375, 1303.564453125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 514, '3': 580, '4': 688, '5': 787, '6': 889, '7': 957, '8': 1061, '9': 1129, '10': 1235}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fZ2tBIx.jpg
OCR detection done with doctr
left top x of T/F: 5395.1328125
bottom right x of T/F: 6620.609375
left top x of SN: 653.6875000000001
bottom right x of SN: 1071.5468749999998
first t/f detection
Drue
((5432.578125, 1838.8359375), (5880.8515625, 2113.2890625))
Tue
((5432.578125, 2378.59375), (5890.0, 2643.8984375))
false
((5460.0234375, 2817.71875), (5926.59375, 3147.0625))
False
((5423.4296875, 3412.3671875), (5908.296875, 3732.5625))
Tue
((5395.984375, 4052.7578125), (5880.8515625, 4382.1015625))
Folse
((5395.984375, 4555.921875), (5871.703125, 4848.671875))
Folse
((5359.390625, 5040.7890625), (5789.3671875, 5342.6875))
Tue
((5368.539062499999, 5617.140625), (5780.21875, 5836.703125))
Thue
((5350.2421875, 6102.0078125), (5771.0703125, 6349.015625))
Thue
((5350.2421875, 6650.9140625), (5844.2578125, 6934.515625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1985, '2': 2552, '3': 2936, '4': 3522, '5': 4080, '6': 4656, '7': 5049, '8': 5635, '9': 6028, '10': 6623}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BniP88N.jpg
OCR detection done with doctr
left top x of T/F: 5239.609375
bottom right x of T/F: 6446.789062499999
left top x of SN: 662.8359375000001
bottom right x of SN: 1062.3984375
first t/f detection
TRUE
((5222.1640625, 1884.578125), (5642.9921875, 2049.25))
TRUE
((5176.421875, 2268.8125), (5578.953125, 2433.484375))
TRUE
((5240.4609375, 2817.71875), (5588.1015625, 2964.09375))
Goal
((5331.9453125, 3339.1796875), (5752.7734375, 3513.0))
False
((5322.796875, 3869.7890625), (5670.4375, 4061.90625))
FALSE
((5304.5, 3147.0625), (5780.21875, 3357.4765625))
False
((5295.3515625, 4318.0625), (5697.8828125, 4510.1796875))
falke
((5313.6484375, 4684.0), (5679.5859375, 4876.1171875))
TRUE
((5249.609375, 5287.796875), (5679.5859375, 5470.765625))
TRUE
((5231.312499999999, 6413.0546875), (5697.8828125, 6586.875))
TRUE
((5249.609375, 5818.40625), (5679.5859375, 5992.2265625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1774, '2': 2314, '3': 2689, '4': 3238, '5': 3787, '6': 4345, '7': 4702, '8': 5260, '9': 5626, '10': 6184}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0rmWKaj.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyww
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyww solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1250.734375, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
a
((1408.671875, 773.0625), (1421.140625, 791.765625))
text1 i.e the prev text is the winner
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
collision happend with box:1003.734375 and text:Tisr solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyww
((1136.4375, 527.84375), (1244.5, 606.8125))
folre
((1121.890625, 629.671875), (1244.5, 714.875))
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
Truv
((1134.359375, 847.875), (1250.734375, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
a
((1408.671875, 773.0625), (1421.140625, 791.765625))
text1 i.e the prev text is the winner
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Falve
((1142.671875, 1332.078125), (1244.5, 1398.578125))
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mlxhGQo.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6485.75
left top x of SN: 519.9375000000001
bottom right x of SN: 916.6875000000001
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5156.84375, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5165.875, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5888.374999999999, 5102.65625))
FALSE
((5156.84375, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5156.84375, 5816.125), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6502.5))
TRVE
((5211.031249999999, 6999.21875), (5825.15625, 7170.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3233, '4': 3793, '5': 4362, '6': 4931, '7': 5310, '8': 5879, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PXamf6c.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6395.437500000001
left top x of SN: 664.4375
bottom right x of SN: 1061.1875
first t/f detection
PALSE
((5481.968749999999, 1743.03125), (6041.90625, 1941.71875))
TRAPE
((5238.124999999999, 1932.6875), (5725.812499999999, 2149.4375))
FALSE
((5265.218749999999, 2429.40625), (5915.468749999999, 2646.15625))
TRUE
((5436.812500000001, 2736.46875), (5987.71875, 2944.1875))
(RALSE
((5211.031249999999, 2962.25), (5852.25, 3169.96875))
TRUE
((5256.1875, 3477.03125), (5798.0625, 3702.8125))
TRUE
((5265.218749999999, 4109.21875), (5761.937500000001, 4280.8125))
FALSE
((5310.375, 4642.0625), (5906.4375, 4804.625))
FALSE
((5256.1875, 5102.65625), (5861.281249999999, 5274.25))
FALSE
((5301.343750000001, 5590.34375), (5933.53125, 5789.03125))
TRUE
((5229.09375, 6637.96875), (5716.78125, 6854.71875))
FALSE
((5283.28125, 6032.875), (5888.374999999999, 6231.5625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2682, '3': 3052, '4': 3594, '5': 4136, '6': 4687, '7': 5057, '8': 5608, '9': 5978, '10': 6547}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5Abx9M2.jpg
OCR detection done with doctr
left top x of T/F: 5541.507812500001
bottom right x of T/F: 6776.1328125
left top x of SN: 507.3125000000001
bottom right x of SN: 925.1718749999998
first t/f detection
aul
((5606.3984375, 1957.765625), (6063.8203125, 2122.4375))
Tyuul
((5597.25, 2598.15625), (6118.7109375, 2762.828125))
Falie
((5652.140625, 3147.0625), (6146.15625, 3375.7734375))
aie
((5734.4765625, 3695.96875), (6109.562499999999, 3833.1953125))
zil
((5743.625, 4171.6875), (6164.453125, 4336.359375))
19ue
((5752.7734375, 4812.078125), (6173.6015625, 4949.3046875))
Torcie
((5679.5859375, 5489.0625), (6255.9375, 5690.328125))
Fhe
((5707.031250000001, 6531.984375), (6182.75, 6760.6953125))
Taie
((5743.625, 6778.9921875), (6283.3828125, 6989.40625))
Tairel
((5716.1796875, 7190.671875), (6210.1953125, 7373.640625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': False}
the unassigned keys are ['1', '2']
the assigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'3': 3247, '4': 3824, '5': 4180, '6': 4766, '7': 5507, '8': 6102, '9': 6477, '10': 7245}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ofbF5fL.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Trut
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text2 i.e the incoming text is the winner
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
folte
((1123.96875, 627.59375), (1244.5, 714.875))
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
Trut
((1134.359375, 847.875), (1248.65625, 937.234375))
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 864, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CCqulRg.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6693.468750000001
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5572.281250000001, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5509.062499999999, 3034.5), (6096.09375, 3233.1875))
TRUE
((5572.281250000001, 3585.40625), (6087.062500000001, 3747.96875))
TROE
((5617.437499999999, 4082.125), (6087.062500000001, 4253.71875))
FALSE
((5509.062499999999, 4741.40625), (6069.0, 4903.96875))
TRUE
((5590.343749999999, 5445.84375), (6069.0, 5581.3125))
TRUE
((5581.3125, 5933.53125), (6078.031249999999, 6096.09375))
TRUe
((5581.3125, 6457.34375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '2']
the assigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6394, '3': 3097, '4': 3711, '5': 4064, '6': 4651, '7': 5436, '8': 6005, '10': 7152}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fSoFduO.jpg
OCR detection done with doctr
left top x of T/F: 5349.390625
bottom right x of T/F: 6556.5703125
left top x of SN: 772.6171875
bottom right x of SN: 1172.1796875
first t/f detection
S
((6018.078125000001, 118.9296875), (6210.1953125, 283.6015625))
Trvs
((5450.875, 2168.1796875), (5963.1875, 2378.59375))
TRUE
((5505.765624999999, 2689.640625), (6027.2265625, 2854.3125))
TRWE
((5460.0234375, 3119.6171875), (6137.0078125, 3339.1796875))
FALSE
((5405.1328125, 3769.15625), (5981.484375, 3988.71875))
FALS
((5533.2109375, 4318.0625), (5963.1875, 4491.8828125))
TRUE
((5460.0234375, 4793.78125), (5999.781250000001, 4967.6015625))
TRve
((5377.6875, 6861.328125), (5862.554687500001, 7035.1484375))
TROE
((5524.062499999999, 5306.09375), (6082.1171875, 5479.9140625))
FALSE
((5533.2109375, 5754.3671875), (6228.4921875, 5955.6328125))
TRUB
((5514.9140625, 6220.9375), (5999.781250000001, 6403.90625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2342, '2': 2890, '3': 3256, '4': 3814, '5': 4372, '6': 4921, '7': 5287, '8': 5845, '9': 6220, '10': 6788}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bvW2cMc.jpg
OCR detection done with doctr
left top x of T/F: 5395.75
bottom right x of T/F: 6531.921875000001
left top x of SN: 966.4335937500001
bottom right x of SN: 1377.9765625
first t/f detection
TRUE
((5424.2734375, 2269.12109375), (5905.8828125, 2491.40234375))
TRUE
((5415.01171875, 2778.515625), (5915.14453125, 2991.53515625))
TRUE
((5415.01171875, 3204.5546875), (5868.8359375, 3426.8359375))
FALSE
((5368.703125, 3769.51953125), (5924.40625, 3991.80078125))
FALSE
((5415.01171875, 4353.0078125), (5952.19140625, 4575.2890625))
FALSE
((5387.2265625, 4834.6171875), (5942.9296875, 5047.63671875))
GALSE
((5368.703125, 5251.39453125), (5896.62109375, 5464.4140625))
TRUE
((5387.2265625, 5797.8359375), (5804.00390625, 5973.80859375))
TRUE
((5340.91796875, 6177.56640625), (5785.48046875, 6390.5859375))
TRUE
((5359.44140625, 6742.53125), (5831.7890625, 6927.765625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['1', '4', '7', '9']
the assigned keys are ['2', '3', '5', '6', '8', '10']
['2', '3', '5', '6', '8', '10', '2', '3', '5', '6', '8', '10']
printing the number dict y_coordinate
{'2': 2926, '3': 3278, '5': 4343, '6': 4917, '8': 5788, '10': 6705, '1': 2626}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BwGdMO9.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6404.46875
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5247.156250000001, 2176.53125), (6240.593749999999, 2510.6875))
FALSE
((5301.343750000001, 3296.40625), (6321.874999999999, 3567.34375))
TRUE
((5229.09375, 3901.5), (6159.312499999999, 4154.375))
FAISE
((5220.062500000001, 4452.40625), (6213.499999999999, 4705.28125))
TRUE
((5183.9375, 4994.28125), (6114.156250000001, 5238.125))
TRUE
((5165.875, 5427.78125), (6032.875000000001, 5680.65625))
TRUE
((5183.9375, 5933.53125), (6014.8125, 6186.40625))
TRUE
((5238.124999999999, 6412.1875), (6069.0, 6647.0))
TRUE
((5238.124999999999, 6972.125), (6105.124999999999, 7215.96875))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3007, '3': 3377, '4': 3937, '5': 4488, '6': 5039, '7': 5418, '8': 5969, '9': 6348, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NNgkxyl.jpg
OCR detection done with doctr
left top x of SN: 178.2890625
bottom right x of SN: 397.05664062499994
left top x of T/F: 946.55859375
bottom right x of T/F: 1311.62890625
first t/f detection
FALSE
((975.099609375, 461.83984375), (1054.3203125, 493.865234375))
collision happend with box:461.83984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((975.099609375, 539.375), (1059.376953125, 569.71484375))
text2 i.e the incoming text is the winner
collision happend with box:539.375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((818.34375, 615.224609375), (948.1308593750001, 643.87890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:615.224609375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((976.78515625, 618.595703125), (1054.3203125, 652.306640625))
text2 i.e the incoming text is the winner
collision happend with box:618.595703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
is
((929.58984375, 716.357421875), (951.5019531250001, 741.640625))
text1 i.e the prev text is the winner
collision happend with box:618.595703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((973.4140625, 721.4140625), (1047.578125, 753.439453125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((975.099609375, 461.83984375), (1054.3203125, 493.865234375))
collision happend with box:461.83984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((975.099609375, 539.375), (1059.376953125, 569.71484375))
text2 i.e the incoming text is the winner
collision happend with box:539.375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((818.34375, 615.224609375), (948.1308593750001, 643.87890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:615.224609375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((976.78515625, 618.595703125), (1054.3203125, 652.306640625))
text2 i.e the incoming text is the winner
is
((929.58984375, 716.357421875), (951.5019531250001, 741.640625))
collision happend with box:716.357421875 and text:is solving on the basis of percent match boxes
the current box specification are
TRVE
((973.4140625, 721.4140625), (1047.578125, 753.439453125))
text2 i.e the incoming text is the winner
Pre
((911.048828125, 817.490234375), (953.1875, 842.7734375))
collision happend with box:817.490234375 and text:Pre solving on the basis of percent match boxes
the current box specification are
TRUE
((988.583984375, 824.232421875), (1061.0625, 854.572265625))
text2 i.e the incoming text is the winner
distribution.
((843.626953125, 920.30859375), (954.873046875, 943.90625))
collision happend with box:920.30859375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((985.2128906250001, 908.509765625), (1056.005859375, 942.220703125))
text1 i.e the prev text is the winner
collision happend with box:920.30859375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((885.765625, 986.044921875), (959.9296875, 1016.384765625))
text1 i.e the prev text is the winner
collision happend with box:920.30859375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((983.5273437500001, 992.787109375), (1050.94921875, 1024.8125))
text1 i.e the prev text is the winner
space.
((900.935546875, 1092.234375), (963.30078125, 1117.517578125))
collision happend with box:1092.234375 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((986.8984375, 1080.435546875), (1069.490234375, 1110.775390625))
text2 i.e the incoming text is the winner
collision happend with box:1080.435546875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
prediction
((873.966796875, 1157.970703125), (964.986328125, 1183.25390625))
text1 i.e the prev text is the winner
FALSE
((990.26953125, 1161.341796875), (1067.8046875, 1193.3671875))
the
((938.017578125, 1289.443359375), (973.4140625, 1316.412109375))
collision happend with box:1289.443359375 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((990.26953125, 1275.958984375), (1067.8046875, 1307.984375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 453, '2': 552, '3': 620, '4': 723, '5': 822, '6': 925, '7': 991, '8': 1093, '9': 1163, '10': 1265}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6FPOAn4.jpg
OCR detection done with doctr
left top x of SN: 342.64062500000006
bottom right x of SN: 751.3515625000001
left top x of T/F: 5221.312499999999
bottom right x of T/F: 6437.640625
first t/f detection
Tyebo
((5322.796875, 2177.328125), (5807.6640625, 2387.7421875))
TRUE
((5341.09375, 2387.7421875), (5990.6328125, 2607.3046875))
TRUE
((5313.6484375, 2735.3828125), (5926.59375, 2936.6484375))
TRUE
((5231.312499999999, 3238.546875), (5844.2578125, 3412.3671875))
FALSE
((5341.09375, 3842.34375), (6008.9296875, 4043.609375))
FALSE
((5341.09375, 4336.359375), (6072.96875, 4583.3671875))
TRUE
((5194.71875, 4894.4140625), (5807.6640625, 5095.6796875))
TRRg
((5304.5, 5333.5390625), (5871.703125, 5553.1015625))
FALSE
((5194.71875, 5571.3984375), (5862.554687500001, 5772.6640625))
FALSE
((5313.6484375, 5873.296875), (5972.3359375, 6074.5625))
TRUE
((5258.757812500001, 6403.90625), (5825.9609375, 6577.7265625))
TRUE
((5295.3515625, 6980.2578125), (5917.4453125, 7236.4140625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2177, '2': 2781, '3': 3174, '4': 3760, '5': 4345, '6': 4949, '7': 5351, '8': 5946, '9': 6358, '10': 6952}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qFKyFdJ.jpg
OCR detection done with doctr
left top x of T/F: 5543.9375
bottom right x of T/F: 6781.98828125
left top x of SN: 910.8632812500002
bottom right x of SN: 1331.66796875
first t/f detection
TRUE
((5637.29296875, 2102.41015625), (6248.56640625, 2324.69140625))
TRUE
((5702.125, 2648.8515625), (6230.04296875, 2861.87109375))
TRUE
((5637.29296875, 3148.984375), (6211.51953125, 3362.00390625))
FALSE
((5665.078125, 3704.6875), (6248.56640625, 3964.015625))
TRUE
((5628.031250000001, 4306.69921875), (6230.04296875, 4556.765625))
FALSE
((5692.86328125, 4806.83203125), (6304.13671875, 5056.8984375))
FALSE
((5692.86328125, 5279.1796875), (6322.660156250001, 5547.76953125))
TQUE
((5702.125, 5834.8828125), (6192.99609375, 6010.85546875))
TRUE
((5729.91015625, 6297.96875), (6211.51953125, 6510.98828125))
TRUE
((5646.5546875, 6927.765625), (6267.08984375, 7140.78515625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['1', '2', '4', '7', '8', '9']
the assigned keys are ['3', '5', '6', '10']
printing the number dict y_coordinate
{'3': 3223, '5': 4390, '6': 4917, '10': 6779}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IqSlvss.jpg
rotation started
['oE', '6', 'oo', 'Cr', '1', '3', 'N', '1', 'LE', '2', '1', 'I', 'it', 'iE', 'A', 'I', 'g', '€', 'le', '3', 'a', 'm', '9', 'E', '10', 'E', '2', 'I', 'F', 'E', 'I', 'F', '8', '4', '3', 'E', 'X', 'I', 'E', 'f', '', 'I', '2', 'E', 'I', 'I', '8', 'I', '5', '8', 'X', 'H', 'F', 'I', 'E', 'a', 'a', 'I', 'I', 'E', 'I', '9', 't', 'I', 'P', 'E', 'I', 'E', '4', 'E', 'I', 'E', '2', '8', 'e', 'I', 'E', '2', 'iE', 'E', 'E', 'I', 'I', 'I', ':', '&', 'E', 'f', 'E', 'I', 'I', 'E', 'F', 'F', 'E', 'o', 'E', 'I', 'E', 'I', 'I', 'I', 'I', 'I', ':', 'P', 'I', '1', '8', 'a', 'I', 'E', 'à', '8', 'a', 'I', 'I', 'F', 'E', '8', 'I', 'E', 'I', 'I', 'it', 'i', 'I', 'I', 'E', '#', 'I', 'X', 'I', 'I', 'E', 'E', 'I', 'i', 'P', '€', 't', 'E', 'E', '9', 'I', '2', '8', 'E', 'I', 'E', '1', 'I', 'V', 'E', '&', 'g', 'I', '€', 'E', 'I', 'à', 'I', 'I', 'E', 'A', 'A', '8', '1', 'o', '1', 'I', 'o', 'I', '%', 'E', 'E', '9', 'F', 'I', 'E', '2', 'I', 'à', 'E', '2', 'E', 'm', 'I', 'i', 'm', '1', 'o', 'to', 'I1', 'LE', 'e', '>', 'E', 'f', 'I', '3', 'e', '5', 'E', 'LE', 'F', '8', 'E', '&', 'a', 'E', '-', 'E', '9', 'a', 'E', 'i', 'I', 'E', 'E', 'I', 'E', '-', 'm', '', ':', '-', 'I']
rotation started
['"aoeds-ae', 'ur', 'sISeq', 'ou7', 'jo', 'auo', 'SI', "Clo't-l'rt)", '=', 'a', 'OT', '357UH', 'ISTUE', '#', 'ueya', '1098018', 'SI', 'XJO', 'anjeA', 'pagoadxa', 'OULL', 'X', 'auoonno', 'Y3IM', 'porjos', 'SI', 'arp', 'AUL', '"a08J', '2843', 'uo', 'Jaqunu', '368L', 'au1', '01', '[euorzodoad', 'SI', 'dn', 'Surioo', 'a08r', 'B', 'Jo', 'Aaqeqoad', 'aua', 'ze43', 'OS', 'papeol', 'SI', 'arp', 'V', '6', 'EOUL', '"gaserep', 'aya', 'ur', 'siarano', '01', 'AATIISUOS', 'SI', 'Val', '8', '"Jaqel', 'ssepo', '0>', '()o', 'ENgL', 'ayi', 'UBAIS', 'quapuadapur', 'Areuorarpuoo', 'are', 'samgeay', 'ITe', 'geu7', 'sauunsse', 'sakeg', 'DATEN', 'L', '1O', '0', '>', '(x)o', 'Jauata', 'aT', 'aOUeLIEA', 'aapesau', 'DABL', 'asnur', 'A', '10', 'X', 'Jo', 'auo', '2SB0T', 'ge', 'uaya', '0', '>', "('x)ao0", 'ze41', 'yons', 'SOIQULIBA', 'wopuer', 'panjeA-Tear', 'OMI', 'are', 'A', 'pue', 'X', 'JI', '9', '35701', '"oJaz', 'aq', 'IIIAM', '351Ud', 'xugeu', 'AOUELIBAOO', 'au3', 'Jo', 'yuer', 'ayz', 'uaua', '*x=X', 'MOTTOJ', 'Apoexa', 'suornquasip', 'Bjep', 'JI', 'S', '1S7UH', '(f)aoupupa', '<', '(r)aoupuva', 'JI', "Llo'1]", '01', 'squrod', 'egep-az', 'ppofoad', 'IIIM', 'VOd', 'AUL', 'F', 'rouo', 'IndL', 'ueua', '1398018', 'aq', 'ues', 'uorouny', 'sseul', 'Aaqeqoud', 'aua', 'Jo', 'anjeA', 'au3', "'r", 'remnorured', 'e', 'JOE', '&', '3OAL', 'VOd', 'Sursn', 'ssep', 'ypea', 'Jo', 'sajdures', 'goaford', 'am', 'J!', 'VaT', '03', 'quoreamba', 'soulooaq', 'VOd', '2', 'andL', 'aoueisip', 'ueaprong', 'aya', '03', 'penba', 'SI', ',DD', 'XIQBUI', 'au3', 'Jo', '00011', 'B', 'uouz', "'pl", '9', 'D', 'JI', 'I', 'Auuapuadapur', '"D', 'qurod', 'aus', 'pue', 'uduo', 'aus', 'uoanjaq', 'STVA/aNuL', 'juouagess', 'NS', ':aJau', 'Jaqunu', 'IjOI', 'moc', '0314M1', 'Sunumpuey', 'reap', 'pue', '107101', 'Teades', 'ul', 'aSTVA', '10', 'INUL', 'OIHM', '(sid', 'O1)', '9']
rotation started
['I', 'a', 'a', 'a', '-', ':', 'L', 'I', 'E', 'a', 'I', ':', '-', '-', 'I', 'a', 'I', 'I', 'o', '8', 'de', 'a', '%', 'i', 'I', '€', 'V', 'E', 'o', 'à', '4', 'e', 'E', 'I', 'I', 'A', 'I', '1', 'E', 'I', 'I', '-', 'I', 'de', 'of', 'e', 'is', 'I', '8', 'I', 'of', 'a', '4', 'e', 'à', '1', 'XX', 'I', 'I', '1', ':', 'iis', 'I', '1t', 'e', 'I', '1', 'I', ':', 'I', 'I', 'I', ':', 'E', 'I', '8', 'E', 'o', 'I', 'e', 'of', 'a', ':', 'E', 'I', 'I', 'I', 'e', '11', 'I', 'I', 'I', 'I', '1', 'e', 'I', 'a', 'à', 'à', '.', 'I', 'e', 'I', 'e', 'I', 'of', 'o', 'E', 'iE', '.', 'of', 'I', 'a', 'à', 'I', 'I', 'e', '8', '2', '.', 'E', 'a', 'I', 'I', 'y', 'a', 'e', 'à', 'is', '', 's', 'I', 'à', '1', 'I', 'H', 'I', 'E', 'XX', '9', ':', 'a', 'I', 'E', 'a', 'of', 'I', '8', '4', 'L', 'a', '>', '8', 'à', 'I', 'I', 'à', 'I', 'I', '€', 'o', 'w', 'I', 'I', 'a', 'a', 'I', 'I', '5', 'I', ':', 'I', 'a', 'X', 'I', '€', 'I', 'II', '4', 'a', 'A', '1', 'is', '2', 'a', '8', '', 'I', ':', 'E', 'I', '1', 'ia', '-', 's', 'E', 'à', '£', 'e', '1', '8', 'E', 'V', 'I', ':', 'i.s', 'is', '8', 'à', '8', 'E', '1E', 'E', '11', 'et', '€', ':', '7', '1', '4', 'in', '1', '0o', '5', 'o9']
rotation started
['6.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letter', 'and', 'clear', 'handwriting.', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FALS', '1', 'If', 'a', '€', "R',", 'then', 'a', 'trace', 'of', 'the', 'matrix', "aa'", 'is', 'equal', 'to', 'the', 'Euclidean', 'distance', 'TRUE', '2', 'PCA', 'becomes', 'equivalent', 'to', 'LDA', 'if', 'we', 'project', 'samples', 'of', 'each', 'class', 'using', 'PCA', 'TRUE', '3', 'For', 'a', 'particular', 'I,', 'the', 'value', 'of', 'the', 'probability', 'mass', 'function', 'can', 'be', 'greater', 'than', 'TRUE', 'between', 'the', 'origin', 'and', 'the', 'point', 'a.', 'independently.', 'one.', '4', 'The', 'PCA', 'will', 'project', '2D-data', 'points', 'to', '[1,017', 'if', 'variance(r)', '>', 'variance(y).', 'FALSE', '5', 'If', 'data', 'distributions', 'exactly', 'follow', 'y=x,', 'then', 'the', 'rank', 'of', 'the', 'covariance', 'matrix', 'FALSE', 'will', 'be', 'zero.', '6', 'If', 'X', 'and', 'Y', 'are', 'two', 'real-valued', 'random', 'variables', 'such', 'that', 'Cou(X,Y)', '<0', 'then', 'at', 'least', 'one', 'of', 'X', 'or', 'Y', 'must', 'have', 'negative', 'variance', 'ie.', 'either', 'a(X)', '<', 'Oor', 'FALSE', 'a(Y)<0.', 'class', 'label.', '7', 'Naive', 'Bayes', 'assumes', 'that', 'all', 'features', 'are', 'conditionally', 'independent', 'given', 'the', 'TRUE', '8', 'LDA', 'is', 'sensitive', 'to', 'outliers', 'in', 'the', 'dataset.', 'TRUE', '9', 'A', 'die', 'is', 'loaded', 'So', 'that', 'the', 'probability', 'of', 'a', 'face', 'coming', 'up', 'is', 'proportional', 'to', 'the', 'TRUE', 'number', 'on', 'that', 'face.', 'The', 'die', 'is', 'rolled', 'with', 'outcome', 'X.', 'The', 'expected', 'value', 'of', 'X', 'FALS', 'E', 'FALSE', 'is', 'greater', 'than', '4.', '10', 'B', 'i', '(11,1F.1-1,0)', 'is', 'one', 'of', 'the', 'basis', 'in', '2D-space.']
OCR detection done with doctr
left top x of SN: 1171.1347656250002
bottom right x of SN: 1588.3925781250002
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:35:59] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : IqSlvss.jpg
[2024/07/01 15:36:00] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:36:01] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.15649199485778809
[2024/07/01 15:36:03] ppocr DEBUG: rec_res num  : 40, elapsed : 1.894827127456665
OCR detection done
left top x of SN: 1232.0
bottom right x of SN: 1584.0
left top y of SN: 2046.0
bottom right y of SN: 2312.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/IqSlvss.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ewA8Rpn.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
collision happend with box:579.0234375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
text2 i.e the incoming text is the winner
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
T.
((904.15234375, 960.29296875), (945.2851562500001, 988.76953125))
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1222.91015625), (934.2109374999999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A2bBrU9.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6684.437499999999
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5581.3125, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5527.125, 3052.5625), (6069.0, 3224.15625))
TRUE
((5590.343749999999, 3585.40625), (6078.031249999999, 3747.96875))
TRUE
((5626.468750000001, 4109.21875), (6087.062500000001, 4244.6875))
FALSE
((5527.125, 4750.4375), (6059.968750000001, 4885.90625))
TRUE
((5608.40625, 5445.84375), (6078.031249999999, 5581.3125))
TRUE
((5590.343749999999, 5942.5625), (6087.062500000001, 6105.125))
TRUE
((5626.468750000001, 6466.375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3088, '4': 3675, '5': 4064, '6': 4642, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hhJrQUf.jpg
OCR detection done with doctr
left top x of SN: 1101.9345703125
bottom right x of SN: 1519.1923828125
left top x of T/F: 5778.2333984375
bottom right x of T/F: 6976.8076171875
first t/f detection
Halse
((5768.4619140625, 2866.865234375), (6331.94921875, 3143.666015625))
Halse
((5808.0048828125, 3351.2666015625), (6282.5205078125, 3588.5244140625))
ttue
((5788.2333984375, 3825.7822265625), (6262.7490234375, 4063.0400390625))
toul
((5867.3193359375, 4428.8125), (6430.806640625, 4666.0703125))
False
((5896.976562500001, 4952.7568359375), (6351.720703125, 5150.4716796875))
Taue
((5817.890625, 5437.158203125), (6312.177734375, 5664.5302734375))
Truc
((5857.43359375, 5921.5595703125), (6351.720703125, 6148.931640625))
True
((5837.662109375, 6415.8466796875), (6341.8349609375, 6613.5615234375))
Tbe
((5906.862304687501, 6939.791015625), (6361.606445312501, 7127.6201171875))
collision happend with box:6939.791015625 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((6391.263671875001, 6910.1337890625), (6806.46484375, 7117.734375))
text2 i.e the incoming text is the winner
Tue
((5966.1767578125, 7463.7353515625), (6490.12109375, 7661.4501953125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2876, '2': 3450, '3': 3835, '4': 4409, '5': 4972, '6': 5545, '7': 5921, '8': 6494, '9': 6860, '10': 7443}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ypdRsuD.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 871.53125
first t/f detection
True
((5436.812500000001, 1986.875), (5978.687500000001, 2239.75))
False
((5436.812500000001, 2564.875), (5915.468749999999, 2826.78125))
True
((5509.062499999999, 3106.75), (6014.8125, 3323.5))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4253.71875), (5960.625, 4452.40625))
Teue
((5346.499999999999, 4849.78125), (5942.562499999999, 5057.5))
True
((5463.906250000001, 5310.375), (5978.687500000001, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Txuc
((5436.812500000001, 6258.65625), (5933.53125, 6511.53125))
True
((5509.062499999999, 6782.46875), (5969.656249999999, 7053.40625))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['2', '4', '8']
the assigned keys are ['1', '3', '5', '6', '7', '9', '10']
['1', '3', '5', '6', '7', '9', '10', '1', '3', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '3': 3160, '5': 4325, '6': 4913, '7': 5310, '9': 6312, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9q4RhnA.jpg
OCR detection done with doctr
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6720.562500000001
left top x of SN: 682.5000000000001
bottom right x of SN: 1088.28125
first t/f detection
Tiul
((5445.84375, 2167.5), (5933.53125, 2438.4375))
Tyue
((5572.281250000001, 2754.53125), (6059.968750000001, 2971.28125))
Falu
((5590.343749999999, 3224.15625), (6050.937499999999, 3431.875))
Trw
((5527.125, 3847.3125), (6014.8125, 4073.09375))
Tfut
((5590.343749999999, 4443.375), (6078.031249999999, 4660.125))
Tul
((5545.187500000001, 4985.25), (5969.656249999999, 5165.875))
Palk
((5662.59375, 5454.875), (6078.031249999999, 5635.5))
Tyue
((5491.000000000001, 5888.375), (5960.625, 6096.09375))
Twu
((5509.062499999999, 6439.28125), (5933.53125, 6665.0625))
dyu
((5572.281250000001, 6863.75), (6032.875000000001, 7071.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2375, '2': 2944, '3': 3314, '4': 3892, '5': 4461, '6': 5048, '7': 5436, '8': 6023, '9': 6421, '10': 7035}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tA3XsPA.jpg
OCR detection done with doctr
left top x of T/F: 4993.3125
bottom right x of T/F: 6160.625
left top x of SN: 483.8124999999999
bottom right x of SN: 880.5624999999999
first t/f detection
TRUE
((5093.625, 2068.15625), (5644.531249999999, 2293.9375))
TRUE
((5039.4375, 2546.8125), (5671.624999999999, 2790.65625))
Trul
((5093.625, 3025.46875), (5662.59375, 3278.34375))
Falu
((5066.53125, 3639.59375), (5662.59375, 3856.34375))
Trul
((5084.59375, 4253.71875), (5653.562500000001, 4461.4375))
True
((5093.625, 4696.25), (5617.437499999999, 4903.96875))
True
((5093.625, 5211.03125), (5581.3125, 5382.625))
True
((5030.40625, 5599.375), (5527.125, 5807.09375))
Tyul
((5039.4375, 6059.96875), (5509.062499999999, 6231.5625))
Tyue
((4985.25, 6683.125), (5472.9375, 6863.75))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2257, '2': 2790, '3': 3142, '4': 3693, '5': 4226, '6': 4768, '7': 5129, '8': 5671, '9': 6041, '10': 6601}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F0L3AOw.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 284.91015625
left top x of T/F: 1144.7285156250002
bottom right x of T/F: 1582.2626953124998
first t/f detection
falte
((1182.8994140625, 524.412109375), (1332.4218749999998, 626.2607421875))
collision happend with box:524.412109375 and text:falte solving on the basis of percent match boxes
the current box specification are
falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:falre solving on the basis of percent match boxes
the current box specification are
TAu
((1180.732421875, 782.2841796875), (1310.751953125, 873.2978515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.2841796875 and text:TAu solving on the basis of percent match boxes
the current box specification are
Rwl
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
text1 i.e the prev text is the winner
Trur
((1182.8994140625, 1050.9912109375), (1319.419921875, 1142.0048828125))
collision happend with box:1050.9912109375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1243.853515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trur
((1156.8955078125, 1282.859375), (1299.9169921875, 1373.873046875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1182.8994140625, 524.412109375), (1332.4218749999998, 626.2607421875))
falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
TAu
((1180.732421875, 782.2841796875), (1310.751953125, 873.2978515625))
Rwl
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
Trur
((1182.8994140625, 1050.9912109375), (1319.419921875, 1142.0048828125))
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1243.853515625))
Trur
((1156.8955078125, 1282.859375), (1299.9169921875, 1373.873046875))
Fole
((1178.5654296875, 1391.208984375), (1302.083984375, 1469.220703125))
Falu
((1172.064453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
True
((1163.396484375, 1690.25390625), (1315.0859375, 1781.267578125))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 777, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1189, '7': 1280, '8': 1419, '9': 1512, '10': 1646}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3pwsTyE.jpg
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 970.8750000000001
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5518.093750000001, 2086.21875), (6078.031249999999, 2339.09375))
TRUE
((5491.000000000001, 2628.09375), (6087.062500000001, 2871.9375))
FALSE
((5563.249999999999, 3215.125), (6213.499999999999, 3468.0))
TRUE
((5545.187500000001, 3720.875), (6123.1875, 3937.625))
TRUE
((5545.187500000001, 4190.5), (6186.406249999999, 4443.375))
FALSE
((5554.21875, 4867.84375), (6222.531250000001, 5111.6875))
TRUE
((5554.21875, 5599.375), (6105.124999999999, 5807.09375))
TRUE
((5536.156249999999, 6032.875), (6159.312499999999, 6276.71875))
FALSE
((5545.187500000001, 6610.875), (6132.218749999999, 6827.625))
TRUE
((5554.21875, 7197.90625), (6087.062500000001, 7414.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['4', '5', '8']
the assigned keys are ['1', '2', '3', '6', '7', '9', '10']
['1', '2', '3', '6', '7', '9', '10', '1', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2619, '3': 3179, '6': 4732, '7': 5472, '9': 6439, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sAoxOtx.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
left top x of T/F: 5625.5
bottom right x of T/F: 6828.937500000001
first t/f detection
TRUE
((5716.78125, 1797.21875), (6556.6875, 2122.34375))
TRVE
((5626.468750000001, 2483.59375), (6484.437499999999, 2736.46875))
FALSE
((5617.437499999999, 3043.53125), (6592.812499999999, 3332.53125))
FALSE
((5608.40625, 3576.375), (6538.624999999999, 3856.34375))
TRUE
((5590.343749999999, 4064.0625), (6430.249999999999, 4298.875))
TRUE
((5653.562500000001, 4741.40625), (6493.468750000001, 4994.28125))
TRUE
((5608.40625, 5409.71875), (6457.343749999999, 5689.6875))
TRUE
((5608.40625, 5951.59375), (6394.125, 6186.40625))
FALSE
((5644.531249999999, 6475.40625), (6538.624999999999, 6764.40625))
TRUE
((5599.375000000001, 7089.53125), (6502.5, 7333.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2456, '3': 3043, '4': 3639, '5': 4027, '6': 4624, '7': 5409, '8': 6005, '9': 6403, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : S4Gjogj.jpg
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 393.5
bottom right x of SN: 799.2812499999999
first t/f detection
TRUE
((5554.21875, 1706.90625), (6114.156250000001, 1923.65625))
TRUE
((5527.125, 2275.875), (6023.843749999999, 2438.4375))
FALSE
((5463.906250000001, 2844.84375), (6105.124999999999, 3052.5625))
TRUE
((5481.968749999999, 3386.71875), (6059.968750000001, 3594.4375))
FALSE
((5472.9375, 3883.4375), (6105.124999999999, 4100.1875))
TRUE
((5445.84375, 4515.625), (6005.781250000001, 4714.3125))
TRUE
((5454.874999999999, 5238.125), (5996.749999999999, 5445.84375))
TRUE
((5445.84375, 5798.0625), (6050.937499999999, 6005.78125))
TRUE
((5400.687499999999, 6303.8125), (6005.781250000001, 6511.53125))
TRUE
((5382.625000000001, 6908.90625), (5960.625, 7116.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2339, '3': 2908, '4': 3468, '5': 3847, '6': 4425, '7': 5174, '8': 5752, '9': 6141, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : o8Eg109.jpg
OCR detection done with doctr
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6946.34375
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5798.0625, 1986.875), (6358.000000000001, 2212.65625))
ALSE
((5897.406250000001, 2610.03125), (6439.281250000001, 2781.625))
TRVE
((5897.406250000001, 2790.65625), (6348.968749999999, 2962.25))
FALSE
((5861.281249999999, 3188.03125), (6412.187500000001, 3404.78125))
FALSE
((5906.4375, 3720.875), (6457.343749999999, 3919.5625))
FALSE
((5852.25, 4199.53125), (6457.343749999999, 4443.375))
FALSE
((5843.218750000001, 4949.125), (6502.5, 5192.96875))
TRUE
((5906.4375, 5680.65625), (6394.125, 5951.59375))
TRUE
((5888.374999999999, 6213.5), (6484.437499999999, 6457.34375))
TRUE
((5915.468749999999, 6791.5), (6439.281250000001, 7017.28125))
TRUE
((5879.34375, 7459.8125), (6439.281250000001, 7667.53125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2601, '3': 3206, '4': 3811, '5': 4208, '6': 4822, '7': 5635, '8': 6240, '9': 6647, '10': 7441}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fxCtAQD.jpg
OCR detection done with doctr
left top x of T/F: 5011.375
bottom right x of T/F: 6151.593750000001
left top x of SN: 574.1250000000001
bottom right x of SN: 979.90625
first t/f detection
TRue
((5093.625, 1941.71875), (5653.562500000001, 2149.4375))
TRue
((5084.59375, 2465.53125), (5635.5, 2682.28125))
TluE
((5120.71875, 2989.34375), (5608.40625, 3197.0625))
TRUE
((5039.4375, 3576.375), (5527.125, 3757.0))
TRUE
((5048.46875, 4036.96875), (5545.187500000001, 4253.71875))
PALSE
((5048.46875, 4524.65625), (5536.156249999999, 4705.28125))
FRUG
((5066.53125, 4976.21875), (5599.375000000001, 5147.8125))
TRUE
((5021.375, 5472.9375), (5518.093750000001, 5680.65625))
FALSE
((5084.59375, 4822.6875), (5518.093750000001, 4958.15625))
TRUE
((5084.59375, 5897.40625), (5518.093750000001, 6078.03125))
PASE
((5102.65625, 6556.6875), (5653.562500000001, 6764.40625))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2068, '2': 2601, '3': 2953, '4': 3486, '5': 4027, '6': 4569, '7': 4931, '8': 5491, '9': 5861, '10': 6430}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2bdo5ud.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5625.5
bottom right x of T/F: 6865.0625
first t/f detection
FALSE
((5761.937500000001, 1824.3125), (6430.249999999999, 2041.0625))
TRUE
((5707.750000000001, 2420.375), (6358.000000000001, 2637.125))
FALSE
((5761.937500000001, 3034.5), (6430.249999999999, 3251.25))
TRUE
((5716.78125, 3576.375), (6303.812500000001, 3784.09375))
TRUE
((5779.999999999999, 4073.09375), (6412.187500000001, 4289.84375))
FALSE
((5734.843750000001, 4714.3125), (6394.125, 4931.0625))
TRUE
((5807.093749999999, 5463.90625), (6376.062499999999, 5662.59375))
TRUE
((5816.125000000001, 5969.65625), (6403.156249999999, 6213.5))
FALSE
((5698.718749999999, 6583.78125), (6376.062499999999, 6827.625))
FALSE
((5770.96875, 7197.90625), (6412.187500000001, 7405.625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2138
printing the number dict y_coordinate
{'2': 2438, '3': 3070, '4': 3648, '5': 4046, '6': 4651, '7': 5454, '8': 6087, '9': 6493, '10': 7315, '1': 2138}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SxxUauX.jpg
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6693.468750000001
left top x of SN: 655.4062500000001
bottom right x of SN: 1070.21875
first t/f detection
Tue
((5536.156249999999, 1932.6875), (6041.90625, 2113.3125))
True
((5445.84375, 2610.03125), (5942.562499999999, 2781.625))
Tyue
((5427.781249999999, 3115.78125), (5834.187499999999, 3296.40625))
False
((5337.46875, 3585.40625), (5825.15625, 3766.03125))
collision happend with box:3585.40625 and text:False solving on the basis of percent match boxes
the current box specification are
Trre
((5346.499999999999, 3747.96875), (5779.999999999999, 3919.5625))
true and false collision so given priority to text2 which is the incoming text
Falye
((5373.593749999999, 4298.875), (5870.312500000001, 4479.5))
Falce
((5355.531250000001, 4777.53125), (5879.34375, 4949.125))
False
((5301.343750000001, 5265.21875), (5707.750000000001, 5427.78125))
Fal
((5346.499999999999, 5734.84375), (5626.468750000001, 5915.46875))
collision happend with box:5734.84375 and text:Fal solving on the basis of percent match boxes
the current box specification are
se
((5617.437499999999, 5761.9375), (5807.093749999999, 5906.4375))
text1 i.e the prev text is the winner
True
((5301.343750000001, 6936.0), (5635.5, 7080.5))
True
((5373.593749999999, 6249.625), (5725.812499999999, 6430.25))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2745, '3': 3115, '4': 3684, '5': 4235, '6': 4804, '7': 5183, '8': 5743, '9': 6123, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LPYDGGc.jpg
OCR detection done with doctr
left top x of SN: 72.38671874999999
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1586.037109375, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falve
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:753.087890625 and text:falve solving on the basis of percent match boxes
the current box specification are
Trul
((1413.40234375, 903.205078125), (1583.53515625, 1008.287109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:903.205078125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tiul
((1428.4140624999998, 1045.81640625), (1578.5312500000002, 1150.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tiul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
text2 i.e the incoming text is the winner
collision happend with box:1198.435546875 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tyue
((1435.919921875, 1338.544921875), (1576.029296875, 1431.1171875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1408.3984375, 620.484375), (1586.037109375, 738.076171875))
falve
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
Trul
((1413.40234375, 903.205078125), (1583.53515625, 1008.287109375))
Tiul
((1428.4140624999998, 1045.81640625), (1578.5312500000002, 1150.8984375))
Tiul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
Tyue
((1435.919921875, 1338.544921875), (1576.029296875, 1431.1171875))
falre
((1418.40625, 1478.654296875), (1593.54296875, 1583.736328125))
Falu
((1435.919921875, 1616.26171875), (1596.0449218750002, 1698.826171875))
fale
((1423.41015625, 1738.857421875), (1588.5390625, 1853.947265625))
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2011.5703125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 893, '2': 775, '3': 880, '4': 1048, '5': 1203, '6': 1363, '7': 1468, '8': 1633, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x9v67l6.jpg
OCR detection done with doctr
left top x of SN: 38.205078124999986
bottom right x of SN: 263.041015625
left top x of T/F: 944.3740234374999
bottom right x of T/F: 1346.794921875
first t/f detection
Faly
((963.7148437499999, 476.3818359375), (1087.013671875, 556.712890625))
collision happend with box:476.3818359375 and text:Faly solving on the basis of percent match boxes
the current box specification are
falye
((976.7919921874999, 575.39453125), (1087.013671875, 642.6484375))
text2 i.e the incoming text is the winner
collision happend with box:575.39453125 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((965.5830078124999, 683.748046875), (1087.013671875, 769.68359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:683.748046875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tul
((973.0556640624999, 797.7060546875), (1079.541015625, 878.037109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:797.7060546875 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trul
((974.9238281249999, 911.6640625), (1083.27734375, 993.86328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:911.6640625 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((974.9238281249999, 1014.4130859375), (1075.8046875, 1085.4033203125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Faly
((963.7148437499999, 476.3818359375), (1087.013671875, 556.712890625))
falye
((976.7919921874999, 575.39453125), (1087.013671875, 642.6484375))
Trul
((965.5830078124999, 683.748046875), (1087.013671875, 769.68359375))
Tul
((973.0556640624999, 797.7060546875), (1079.541015625, 878.037109375))
Trul
((974.9238281249999, 911.6640625), (1083.27734375, 993.86328125))
True
((974.9238281249999, 1014.4130859375), (1075.8046875, 1085.4033203125))
falre
((961.8466796874999, 1124.634765625), (1085.1455078125, 1199.361328125))
Falu
((969.3193359374999, 1221.779296875), (1085.1455078125, 1283.4287109375))
falte
((971.1874999999999, 1318.923828125), (1079.541015625, 1389.9140625))
Falye
((963.7148437499999, 1431.013671875), (1077.6728515625, 1509.4765625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 476, '2': 595, '3': 674, '4': 795, '5': 915, '6': 1031, '7': 1111, '8': 1231, '9': 1309, '10': 1429}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bAgEOfS.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tjut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
collision happend with box:645.755859375 and text:Tjut solving on the basis of percent match boxes
the current box specification are
True
((1416.6328125, 780.9140625), (1524.2587890625, 833.4755859375))
text2 i.e the incoming text is the winner
collision happend with box:780.9140625 and text:True solving on the basis of percent match boxes
the current box specification are
fosn
((1394.1064453125, 911.06640625), (1524.2587890625, 976.142578125))
text1 i.e the prev text is the winner
falt
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
collision happend with box:1058.7392578125 and text:falt solving on the basis of percent match boxes
the current box specification are
falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
true and false collision so given priority to text2 which is the incoming text
fask
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
Faes
((1424.1416015625, 1346.576171875), (1539.2763671875, 1409.1494140625))
collision happend with box:1346.576171875 and text:Faes solving on the basis of percent match boxes
the current box specification are
Faln
((1436.65625, 1476.728515625), (1554.2939453125, 1539.3017578125))
text2 i.e the incoming text is the winner
collision happend with box:1476.728515625 and text:Faln solving on the basis of percent match boxes
the current box specification are
BThu
((1369.0771484375, 1624.4013671875), (1521.755859375, 1684.4716796875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tjut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
True
((1416.6328125, 780.9140625), (1524.2587890625, 833.4755859375))
fosn
((1394.1064453125, 911.06640625), (1524.2587890625, 976.142578125))
falt
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
fask
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
Faes
((1424.1416015625, 1346.576171875), (1539.2763671875, 1409.1494140625))
Faln
((1436.65625, 1476.728515625), (1554.2939453125, 1539.3017578125))
BThu
((1369.0771484375, 1624.4013671875), (1521.755859375, 1684.4716796875))
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
True
((1426.6445312500002, 1924.7529296875), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 790, '3': 898, '4': 1056, '5': 1216, '6': 1371, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PtQ8lwm.jpg
OCR detection done with doctr
left top x of T/F: 5459.171875
bottom right x of T/F: 6675.5
left top x of SN: 717.7265625000001
bottom right x of SN: 1135.5859375
first t/f detection
RUE
((5560.65625, 2177.328125), (6191.8984375, 2396.890625))
IRUE
((5542.359375, 2781.125), (6228.4921875, 3000.6875))
FALSE
((5560.65625, 3192.8046875), (6301.6796875, 3439.8125))
TRUE
((5578.953125, 3897.234375), (6173.6015625, 4116.796875))
FALSE
((5496.6171875, 4464.4375), (6228.4921875, 4684.0))
FALSE
((5542.359375, 4940.15625), (6173.6015625, 5150.5703125))
FALSE
((5542.359375, 5434.171875), (6228.4921875, 5653.734375))
TRUE
((5487.46875, 5946.484375), (6137.0078125, 6147.75))
TRUE
((5542.359375, 6422.203125), (6201.046875, 6632.6171875))
TRUG
((5487.46875, 6980.2578125), (6182.75, 7227.265625))
the final dict without editing {'1': True, '2': True, '3': 'UNASSIGNED', '4': True, '5': False, '6': False, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['3', '9']
the assigned keys are ['1', '2', '4', '5', '6', '7', '8', '10']
['1', '2', '4', '5', '6', '7', '8', '10', '1', '2', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 2369, '2': 2918, '4': 3869, '5': 4446, '6': 5013, '7': 5397, '8': 5973, '10': 6916}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'UNASSIGNED', '4': True, '5': False, '6': False, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hBD1FRE.jpg
OCR detection done with doctr
left top x of SN: 93.10156249999997
bottom right x of SN: 308.7734375
left top x of T/F: 861.806640625
bottom right x of T/F: 1224.8984375
first t/f detection
Feye
((886.669921875, 425.08984375), (962.4726562499999, 454.81640625))
collision happend with box:425.08984375 and text:Feye solving on the basis of percent match boxes
the current box specification are
Tyeue
((877.751953125, 508.32421875), (959.5, 542.509765625))
text2 i.e the incoming text is the winner
collision happend with box:508.32421875 and text:Tyeue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 606.421875), (959.5, 640.607421875))
text2 i.e the incoming text is the winner
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tgne
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
text1 i.e the prev text is the winner
T9rue
((877.751953125, 792.212890625), (949.095703125, 821.939453125))
collision happend with box:792.212890625 and text:T9rue solving on the basis of percent match boxes
the current box specification are
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 906.66015625))
text1 i.e the prev text is the winner
collision happend with box:792.212890625 and text:T9rue solving on the basis of percent match boxes
the current box specification are
Fale
((885.18359375, 958.681640625), (955.0410156249999, 986.921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Feye
((886.669921875, 425.08984375), (962.4726562499999, 454.81640625))
Tyeue
((877.751953125, 508.32421875), (959.5, 542.509765625))
True
((877.751953125, 606.421875), (959.5, 640.607421875))
Tgne
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
T9rue
((877.751953125, 792.212890625), (949.095703125, 821.939453125))
collision happend with box:792.212890625 and text:T9rue solving on the basis of percent match boxes
the current box specification are
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 906.66015625))
text1 i.e the prev text is the winner
Fale
((885.18359375, 958.681640625), (955.0410156249999, 986.921875))
collision happend with box:958.681640625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Taje
((880.7246093750001, 1034.484375), (952.068359375, 1068.669921875))
text1 i.e the prev text is the winner
Tyue
((879.23828125, 1157.849609375), (959.5, 1193.521484375))
the final dict without editing {'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 331, '2': 432, '3': 499, '5': 700, '6': 802, '7': 868, '8': 969, '9': 1037, '10': 1135}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RN7zNhk.jpg
OCR detection done with doctr
left top x of SN: 134.6875
bottom right x of SN: 353.65234375
left top x of T/F: 915.9296875
bottom right x of T/F: 1284.90625
first t/f detection
hha
((939.95703125, 321.0703125), (1025.6796875, 358.4765625))
collision happend with box:321.0703125 and text:hha solving on the basis of percent match boxes
the current box specification are
True
((955.54296875, 378.73828125), (1035.03125, 416.14453125))
text2 i.e the incoming text is the winner
collision happend with box:378.73828125 and text:True solving on the basis of percent match boxes
the current box specification are
TYW
((950.8671875, 444.19921875), (1021.00390625, 481.60546875))
text1 i.e the prev text is the winner
collision happend with box:378.73828125 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((788.7734375000001, 508.1015625), (919.6953125, 536.15625))
text2 i.e the incoming text is the winner
collision happend with box:508.1015625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Fouse
((960.21875, 519.01171875), (1031.9140625, 548.625))
text2 i.e the incoming text is the winner
collision happend with box:519.01171875 and text:Fouse solving on the basis of percent match boxes
the current box specification are
is
((902.55078125, 614.0859375), (925.9296875, 635.90625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
hha
((939.95703125, 321.0703125), (1025.6796875, 358.4765625))
collision happend with box:321.0703125 and text:hha solving on the basis of percent match boxes
the current box specification are
True
((955.54296875, 378.73828125), (1035.03125, 416.14453125))
text2 i.e the incoming text is the winner
collision happend with box:378.73828125 and text:True solving on the basis of percent match boxes
the current box specification are
TYW
((950.8671875, 444.19921875), (1021.00390625, 481.60546875))
text1 i.e the prev text is the winner
d-dimensional
((788.7734375000001, 508.1015625), (919.6953125, 536.15625))
collision happend with box:508.1015625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Fouse
((960.21875, 519.01171875), (1031.9140625, 548.625))
text2 i.e the incoming text is the winner
is
((902.55078125, 614.0859375), (925.9296875, 635.90625))
collision happend with box:614.0859375 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((952.4257812500001, 604.734375), (1039.70703125, 643.69921875))
text2 i.e the incoming text is the winner
Pre
((883.84765625, 712.27734375), (927.48828125, 738.7734375))
collision happend with box:712.27734375 and text:Pre solving on the basis of percent match boxes
the current box specification are
FAL
((949.30859375, 713.8359375), (1006.9765625, 748.125))
text2 i.e the incoming text is the winner
collision happend with box:713.8359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1011.65234375, 718.51171875), (1044.3828125, 749.68359375))
text1 i.e the prev text is the winner
distribution.
((813.7109375, 815.14453125), (930.60546875, 841.640625))
collision happend with box:815.14453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((963.3359374999999, 805.79296875), (1050.6171875, 836.96484375))
text1 i.e the prev text is the winner
collision happend with box:815.14453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((860.4687499999999, 882.1640625), (935.28125, 911.77734375))
text1 i.e the prev text is the winner
collision happend with box:815.14453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fale
((964.89453125, 891.515625), (1044.3828125, 921.12890625))
text1 i.e the prev text is the winner
Ettr
((961.77734375, 960.09375), (1042.82421875, 988.1484375))
collision happend with box:960.09375 and text:Ettr solving on the basis of percent match boxes
the current box specification are
TeUE
((971.12890625, 995.94140625), (1056.8515625, 1027.11328125))
text1 i.e the prev text is the winner
collision happend with box:960.09375 and text:Ettr solving on the basis of percent match boxes
the current box specification are
space.
((876.0546875, 983.47265625), (936.83984375, 1013.0859375))
text1 i.e the prev text is the winner
prediction
((846.44140625, 1052.05078125), (943.0742187499999, 1080.10546875))
collision happend with box:1052.05078125 and text:prediction solving on the basis of percent match boxes
the current box specification are
True
((978.921875, 1058.28515625), (1059.96875, 1095.69140625))
text2 i.e the incoming text is the winner
overfitting
((815.26953125, 1153.359375), (918.13671875, 1181.4140625))
collision happend with box:1153.359375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((913.4609375, 1186.08984375), (950.8671875, 1212.5859375))
text1 i.e the prev text is the winner
collision happend with box:1153.359375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRVE
((996.06640625, 1159.59375), (1077.11328125, 1189.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 346, '2': 444, '3': 511, '4': 612, '5': 713, '6': 816, '7': 885, '8': 988, '9': 1056, '10': 1156}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zWXFXYW.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/zWXFXYW.jpg: {{function_node __wrapped__Mul_device_/job:localhost/replica:0/task:0/device:GPU:0}} failed to allocate memory [Op:Mul] name: 
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DSxCXr6.jpg
OCR detection done with doctr
left top x of SN: 651.0488281249999
bottom right x of SN: 1068.0849609375
left top x of T/F: 5772.5849609375
bottom right x of T/F: 7025.5439453125
first t/f detection
FALSE
((5839.4736328125, 2161.76953125), (6484.2119140625, 2389.32421875))
TRUE
((5792.06640625, 2768.58203125), (6341.990234375, 2996.13671875))
TRUE
((5792.06640625, 3403.8388671875), (6304.064453124999, 3621.912109375))
FALSE
((5773.103515625, 3944.28125), (6417.841796875, 4162.3544921875))
FALSE
((5820.5107421875, 4370.9462890625), (6427.3232421875, 4589.01953125))
TRUE
((5697.251953125, 5034.6474609375), (6247.17578125, 5252.720703125))
FALSE
((5754.140624999999, 5726.79296875), (6427.3232421875, 5935.384765625))
TRUE
((5668.8076171875, 6305.1611328125), (6218.731445312501, 6570.6416015625))
FALSE
((5886.880859375, 6655.974609375), (6541.1005859375, 6874.0478515625))
TeBE
((5725.6962890625, 6845.603515625), (6294.5830078125, 7073.158203125))
TRUE
((5640.36328125, 7518.7861328125), (6237.6943359375, 7736.859375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2218, '2': 2806, '3': 3394, '4': 3972, '5': 4361, '6': 4949, '7': 5726, '8': 6314, '9': 6703, '10': 7480}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1BDUOhL.jpg
OCR detection done with doctr
left top x of SN: 135.703125
bottom right x of SN: 357.0234375
left top x of T/F: 918.0771484374999
bottom right x of T/F: 1289.9150390625
first t/f detection
folre
((929.798828125, 463.1318359375), (1031.3779296875, 533.720703125))
collision happend with box:463.1318359375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trol
((938.4072265625, 556.1025390625), (1038.2646484375, 609.474609375))
text2 i.e the incoming text is the winner
collision happend with box:556.1025390625 and text:Trol solving on the basis of percent match boxes
the current box specification are
Fake
((1038.2646484375, 550.9375), (1100.2451171875, 600.8662109375))
text1 i.e the prev text is the winner
collision happend with box:556.1025390625 and text:Trol solving on the basis of percent match boxes
the current box specification are
Vu
((1031.3779296875, 654.23828125), (1095.080078125, 699.001953125))
text1 i.e the prev text is the winner
Tve
((1024.4912109375, 742.0439453125), (1096.8017578125, 797.1376953125))
collision happend with box:742.0439453125 and text:Tve solving on the basis of percent match boxes
the current box specification are
Faln
((924.6337890625, 835.0146484375), (1031.3779296875, 905.603515625))
text2 i.e the incoming text is the winner
collision happend with box:835.0146484375 and text:Faln solving on the basis of percent match boxes
the current box specification are
True
((931.5205078125, 907.3251953125), (1033.099609375, 977.9140625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folre
((929.798828125, 463.1318359375), (1031.3779296875, 533.720703125))
Trol
((938.4072265625, 556.1025390625), (1038.2646484375, 609.474609375))
collision happend with box:556.1025390625 and text:Trol solving on the basis of percent match boxes
the current box specification are
Fake
((1038.2646484375, 550.9375), (1100.2451171875, 600.8662109375))
text1 i.e the prev text is the winner
Vu
((1031.3779296875, 654.23828125), (1095.080078125, 699.001953125))
Tve
((1024.4912109375, 742.0439453125), (1096.8017578125, 797.1376953125))
Faln
((924.6337890625, 835.0146484375), (1031.3779296875, 905.603515625))
collision happend with box:835.0146484375 and text:Faln solving on the basis of percent match boxes
the current box specification are
True
((931.5205078125, 907.3251953125), (1033.099609375, 977.9140625))
text2 i.e the incoming text is the winner
Tue
((936.685546875, 995.130859375), (1029.65625, 1058.8330078125))
Folu
((945.2939453125, 1089.8232421875), (1029.65625, 1141.4736328125))
Falwe
((938.4072265625, 1174.185546875), (1034.8212890625, 1234.4443359375))
Falx
((941.8505859375, 1279.2080078125), (1036.54296875, 1344.6318359375))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 471, '2': 568, '3': 633, '4': 735, '5': 835, '6': 934, '7': 1000, '8': 1101, '9': 1170, '10': 1268}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : neGZfyt.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1385.234375
bottom right x of T/F: 1866.9140624999998
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
Tyue
((1425.703125, 787.109375), (1537.421875, 850.5859375))
text1 i.e the prev text is the winner
Fale
((1461.25, 916.6015625), (1578.046875, 972.4609375))
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:falk solving on the basis of percent match boxes
the current box specification are
Faue
((1435.859375, 1228.90625), (1547.578125, 1289.84375))
text2 i.e the incoming text is the winner
collision happend with box:1228.90625 and text:Faue solving on the basis of percent match boxes
the current box specification are
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1378.7109375 and text:False solving on the basis of percent match boxes
the current box specification are
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
Tyue
((1425.703125, 787.109375), (1537.421875, 850.5859375))
Fale
((1461.25, 916.6015625), (1578.046875, 972.4609375))
falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
Faue
((1435.859375, 1228.90625), (1547.578125, 1289.84375))
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
True
((1458.7109375000002, 1663.0859375), (1565.3515625, 1716.40625))
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
True
((1443.4765624999998, 1980.46875), (1532.34375, 2036.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1074, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1779, '10': 1942}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6f36g6m.jpg
OCR detection done with doctr
left top x of SN: 479.8671875
bottom right x of SN: 897.7265625000001
left top x of T/F: 5788.515624999999
bottom right x of T/F: 7068.8828125
first t/f detection
FALSE
((5862.554687500001, 1893.7265625), (6484.6484375, 2140.734375))
FALSE
((5853.40625, 2479.2265625), (6374.8671875, 2689.640625))
FALSE
((5825.9609375, 3083.0234375), (6301.6796875, 3256.84375))
FALSE
((5853.40625, 3613.6328125), (6374.8671875, 3787.453125))
FALSE
((5844.2578125, 4116.796875), (6365.71875, 4290.6171875))
ERS
((5862.554687500001, 4830.375), (6210.1953125, 5031.640625))
FALSE
((5890.0, 4619.9609375), (6411.4609375, 4802.9296875))
FALSE
((5789.3671875, 5507.359375), (6283.3828125, 5717.7734375))
FALSE
((5825.9609375, 6074.5625), (6374.8671875, 6294.125))
FALSE
((5816.812499999999, 6650.9140625), (6338.2734375, 6870.4765625))
FALSE
((5871.703125, 7309.6015625), (6448.054687500001, 7520.015625))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1857, '2': 2460, '3': 3064, '4': 3668, '5': 4071, '6': 4684, '7': 5489, '8': 6092, '9': 6495, '10': 7300}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f6396vC.jpg
OCR detection done with doctr
left top x of T/F: 5312.796875
bottom right x of T/F: 6538.2734375
left top x of SN: 589.6484375000002
bottom right x of SN: 998.3593749999998
first t/f detection
TRUE
((5432.578125, 1957.765625), (6072.96875, 2213.921875))
FALSE
((5377.6875, 2964.09375), (6072.96875, 3220.25))
FALGE
((5359.390625, 3558.7421875), (6082.1171875, 3805.75))
TRVE
((5368.539062499999, 4171.6875), (5926.59375, 4391.25))
FALSE
((5331.9453125, 4684.0), (5999.781250000001, 4885.265625))
TRUE
((5359.390625, 5104.828125), (5899.1484375, 5315.2421875))
TRU
((5368.539062499999, 5644.5859375), (5844.2578125, 5864.1484375))
FALSE
((5350.2421875, 6065.4140625), (6018.078125000001, 6284.9765625))
TRUE
((5304.5, 6733.25), (5963.1875, 6952.8125))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2104, '2': 2680, '3': 3064, '4': 3641, '5': 4208, '6': 4784, '7': 5159, '8': 5736, '9': 6120, '10': 6705}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zHa0aYH.jpg
OCR detection done with doctr
left top x of T/F: 5784.7421875
bottom right x of T/F: 7022.792968749999
left top x of SN: 660.7968749999999
bottom right x of SN: 1090.8632812500002
first t/f detection
TRI
((5748.43359375, 2315.4296875), (6322.660156250001, 2574.7578125))
TRUE
((5794.7421875, 2889.65625), (6526.41796875, 3111.9375))
TRUE
((5794.7421875, 3408.3125), (6591.25, 3658.37890625))
FALSE
((5720.6484375, 4010.32421875), (6628.296875, 4306.69921875))
FALSE
((5720.6484375, 4677.16796875), (6619.03515625, 4936.49609375))
FALS
((5692.86328125, 5223.609375), (6359.707031250001, 5492.19921875))
FALSE
((5646.5546875, 5695.95703125), (6554.203125, 5946.0234375))
TRVE
((5628.031250000001, 6242.3984375), (6368.968750000001, 6455.41796875))
TRUE
((5646.5546875, 6705.484375), (6443.0625, 6909.2421875))
TRUE
((5683.6015625, 7381.58984375), (6424.5390625, 7585.34765625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2371, '2': 2982, '3': 3389, '4': 4028, '5': 4612, '6': 5223, '7': 5631, '8': 6242, '9': 6659, '10': 7279}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WZ5A722.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5652.59375
bottom right x of T/F: 6856.031250000001
first t/f detection
Golse
((5789.031250000001, 1652.71875), (6321.874999999999, 1959.78125))
Yalse
((5743.875, 2312.0), (6222.531250000001, 2573.90625))
Halse
((5698.718749999999, 2899.03125), (6222.531250000001, 3215.125))
Jalse
((5725.812499999999, 3431.875), (6186.406249999999, 3702.8125))
Jalse
((5725.812499999999, 3865.375), (6231.5625, 4082.125))
Yalse
((5716.78125, 4624.0), (6195.437500000001, 4885.90625))
True
((5743.875, 5301.34375), (6150.28125, 5590.34375))
True
((5761.937500000001, 5852.25), (6159.312499999999, 6141.25))
Yalse
((5716.78125, 6376.0625), (6240.593749999999, 6683.125))
True
((5743.875, 7035.34375), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2321, '3': 2908, '4': 3513, '5': 3901, '6': 4506, '7': 5310, '8': 5924, '9': 6330, '10': 7143}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : n1jxrs3.jpg
OCR detection done with doctr
left top x of T/F: 5813.30859375
bottom right x of T/F: 7035.59765625
left top x of SN: 571.89453125
bottom right x of SN: 995.5937499999999
first t/f detection
Galve.
((5963.904296874999, 1799.625), (6507.541015625, 2118.30859375))
Yalse
((5926.412109375, 2465.111328125), (6413.810546875, 2736.9296875))
Holse
((5898.29296875, 3046.240234375), (6432.556640625, 3374.296875))
galse
((5926.412109375, 3589.876953125), (6404.4375, 3861.6953125))
"Jalse
((5935.785156250001, 4011.6640625), (6451.302734375, 4245.990234375))
Yalse
((5954.53125, 4789.626953125), (6432.556640625, 5033.326171875))
True
((5982.650390625, 5445.740234375), (6404.4375, 5755.05078125))
True
((6020.142578125, 6008.123046875), (6423.183593749999, 6308.060546875))
Yalse
((5982.650390625, 6533.013671875), (6507.541015625, 6823.578125))
True
((6038.888671875, 7207.873046875), (6507.541015625, 7507.810546875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1912, '2': 2511, '3': 3102, '4': 3702, '5': 4096, '6': 4705, '7': 5501, '8': 6120, '9': 6523, '10': 7329}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oyXPXol.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
collision happend with box:1145.138671875 and text:EER solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
False
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
collision happend with box:1660.333984375 and text:RER solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mrijc85.jpg
OCR detection done with doctr
left top x of SN: 237.3974609375
bottom right x of SN: 469.619140625
left top x of T/F: 1261.8798828125
bottom right x of T/F: 1685.3076171875
first t/f detection
folve
((1285.5029296875, 726.5625), (1405.8398437500002, 808.30078125))
Falue
((1274.150390625, 1677.9052734375), (1405.8398437500002, 1775.537109375))
yu
((1324.1015625, 1219.2626953125), (1387.6757812499998, 1266.943359375))
collision happend with box:1219.2626953125 and text:yu solving on the basis of percent match boxes
the current box specification are
Tyu
((1283.2324218749998, 1341.8701171875), (1396.7578125, 1412.255859375))
text2 i.e the incoming text is the winner
collision happend with box:1341.8701171875 and text:Tyu solving on the basis of percent match boxes
the current box specification are
Fale
((1294.5849609375, 1430.419921875), (1399.0283203125, 1503.076171875))
text2 i.e the incoming text is the winner
collision happend with box:1430.419921875 and text:Fale solving on the basis of percent match boxes
the current box specification are
falwe
((1285.5029296875, 1541.6748046875), (1403.5693359375, 1625.68359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 437
printing the number dict y_coordinate
{'2': 737, '3': 828, '4': 962, '5': 1094, '6': 1226, '7': 1314, '8': 1450, '9': 1541, '10': 1677, '1': 437}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qKVBUWs.jpg
OCR detection done with doctr
left top x of SN: 543.9062499999999
bottom right x of SN: 961.765625
left top x of T/F: 5715.328125
bottom right x of T/F: 6913.359375
first t/f detection
Tue.
((5816.812499999999, 1857.1328125), (6338.2734375, 2040.1015625))
False.
((5707.031250000001, 2954.9453125), (6274.234375, 3220.25))
Falal,
((5743.625, 3577.0390625), (6274.234375, 3805.75))
TUR.
((5697.8828125, 4061.90625), (6146.15625, 4235.7265625))
Pabe,
((5688.734375, 4757.1875), (6246.789062499999, 5013.34375))
hue
((5798.515624999999, 5470.765625), (6191.8984375, 5653.734375))
Foue
((5761.921875, 5992.2265625), (6237.640625, 6156.8984375))
Fhy
((5716.1796875, 6541.1328125), (6027.2265625, 6687.5078125))
Toue
((5734.4765625, 7163.2265625), (6201.046875, 7337.046875))
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': False, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1838, '2': 2424, '3': 3009, '4': 3604, '5': 3988, '6': 4583, '7': 5370, '8': 5983, '9': 6358, '10': 7163}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': False, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CVx5tZW.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:755.58984375 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1415.904296875, 898.201171875), (1588.5390625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:898.201171875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1306.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1198.435546875 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
Trul
((1415.904296875, 898.201171875), (1588.5390625, 1010.7890625))
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1306.01953125))
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1466, '8': 1628, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xVlxPxC.jpg
OCR detection done with doctr
left top x of SN: 91.80078125000003
bottom right x of SN: 310.716796875
left top x of T/F: 868.98828125
bottom right x of T/F: 1236.208984375
first t/f detection
FALSE
((882.1015625, 386.046875), (975.5, 431.189453125))
collision happend with box:386.046875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((882.1015625, 473.21875), (969.2734375, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 558.833984375), (959.93359375, 594.63671875))
text1 i.e the prev text is the winner
TRVE
((885.2148437499999, 655.345703125), (963.046875, 683.365234375))
collision happend with box:655.345703125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((880.5449218749999, 758.083984375), (970.830078125, 793.88671875))
text2 i.e the incoming text is the winner
collision happend with box:758.083984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((880.5449218749999, 843.69921875), (959.93359375, 879.501953125))
text1 i.e the prev text is the winner
collision happend with box:758.083984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((888.328125, 926.201171875), (959.93359375, 957.333984375))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((882.1015625, 386.046875), (975.5, 431.189453125))
FALSE
((882.1015625, 473.21875), (969.2734375, 510.578125))
TRVE
((877.431640625, 558.833984375), (959.93359375, 594.63671875))
TRVE
((885.2148437499999, 655.345703125), (963.046875, 683.365234375))
FALSE
((880.5449218749999, 758.083984375), (970.830078125, 793.88671875))
TRVE
((880.5449218749999, 843.69921875), (959.93359375, 879.501953125))
TRUE
((888.328125, 926.201171875), (959.93359375, 957.333984375))
FALSE
((891.4414062500001, 1016.486328125), (978.6132812499999, 1046.0625))
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((889.8847656249999, 1092.76171875), (975.5, 1130.12109375))
text2 i.e the incoming text is the winner
FALSE
((892.998046875, 1211.06640625), (972.38671875, 1240.642578125))
collision happend with box:1211.06640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((833.8457031250001, 1232.859375), (869.6484375, 1257.765625))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['2', '3', '4', '5']
the assigned keys are ['1', '6', '7', '8', '9', '10']
['1', '6', '7', '8', '9', '10', '1', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 561, '6': 867, '7': 930, '8': 1032, '9': 1100, '10': 1200}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ebHOerd.jpg
OCR detection done with doctr
left top x of SN: 72.38671874999999
bottom right x of SN: 319.939453125
left top x of T/F: 1393.39453125
bottom right x of T/F: 1873.60546875
first t/f detection
Falx
((1410.9003906249998, 617.982421875), (1591.041015625, 735.57421875))
collision happend with box:617.982421875 and text:Falx solving on the basis of percent match boxes
the current box specification are
falve
((1433.41796875, 750.5859375), (1588.5390625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:750.5859375 and text:falve solving on the basis of percent match boxes
the current box specification are
Trul
((1418.40625, 903.205078125), (1586.037109375, 1005.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:903.205078125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tul
((1428.4140624999998, 1045.81640625), (1576.029296875, 1153.400390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trwl
((1433.41796875, 1200.9375), (1593.54296875, 1303.517578125))
text2 i.e the incoming text is the winner
collision happend with box:1200.9375 and text:Trwl solving on the basis of percent match boxes
the current box specification are
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1410.9003906249998, 617.982421875), (1591.041015625, 735.57421875))
falve
((1433.41796875, 750.5859375), (1588.5390625, 843.158203125))
Trul
((1418.40625, 903.205078125), (1586.037109375, 1005.78515625))
Tul
((1428.4140624999998, 1045.81640625), (1576.029296875, 1153.400390625))
Trwl
((1433.41796875, 1200.9375), (1593.54296875, 1303.517578125))
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
falre
((1418.40625, 1483.658203125), (1591.041015625, 1586.23828125))
Falw
((1435.919921875, 1611.2578125), (1593.54296875, 1698.826171875))
Fale
((1423.41015625, 1741.359375), (1583.53515625, 1846.44140625))
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 880, '2': 773, '3': 883, '5': 1200, '6': 1363, '7': 1468, '8': 1628, '9': 1738, '10': 1898}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VW40e4h.jpg
OCR detection done with doctr
left top x of SN: 92.40625
bottom right x of SN: 309.515625
left top x of T/F: 877.953125
bottom right x of T/F: 1242.328125
first t/f detection
fbe
((893.8906250000001, 282.03125), (990.3749999999999, 322.109375))
collision happend with box:282.03125 and text:fbe solving on the basis of percent match boxes
the current box specification are
Tywe
((917.640625, 344.375), (988.890625, 374.0625))
text2 i.e the incoming text is the winner
collision happend with box:344.375 and text:Tywe solving on the basis of percent match boxes
the current box specification are
Tywe
((908.734375, 408.203125), (993.3437500000001, 437.890625))
text2 i.e the incoming text is the winner
collision happend with box:408.203125 and text:Tywe solving on the basis of percent match boxes
the current box specification are
Febe
((914.671875, 477.96875), (988.890625, 512.109375))
text2 i.e the incoming text is the winner
collision happend with box:477.96875 and text:Febe solving on the basis of percent match boxes
the current box specification are
CALSE
((904.28125, 564.0625), (991.859375, 605.625))
text2 i.e the incoming text is the winner
collision happend with box:564.0625 and text:CALSE solving on the basis of percent match boxes
the current box specification are
Pre
((836.0, 673.90625), (879.046875, 699.140625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
fbe
((893.8906250000001, 282.03125), (990.3749999999999, 322.109375))
collision happend with box:282.03125 and text:fbe solving on the basis of percent match boxes
the current box specification are
Tywe
((917.640625, 344.375), (988.890625, 374.0625))
text2 i.e the incoming text is the winner
collision happend with box:344.375 and text:Tywe solving on the basis of percent match boxes
the current box specification are
Tywe
((908.734375, 408.203125), (993.3437500000001, 437.890625))
text2 i.e the incoming text is the winner
collision happend with box:408.203125 and text:Tywe solving on the basis of percent match boxes
the current box specification are
Febe
((914.671875, 477.96875), (988.890625, 512.109375))
text2 i.e the incoming text is the winner
CALSE
((904.28125, 564.0625), (991.859375, 605.625))
Pre
((836.0, 673.90625), (879.046875, 699.140625))
collision happend with box:673.90625 and text:Pre solving on the basis of percent match boxes
the current box specification are
FAL
((904.28125, 678.359375), (960.6875, 706.5625))
text2 i.e the incoming text is the winner
collision happend with box:678.359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((963.65625, 679.84375), (994.828125, 706.5625))
text1 i.e the prev text is the winner
distribution.
((763.265625, 776.328125), (880.5312499999999, 801.5625))
collision happend with box:776.328125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((913.1875, 764.453125), (1000.765625, 798.59375))
text1 i.e the prev text is the winner
collision happend with box:776.328125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((809.28125, 843.125), (883.5, 871.328125))
text1 i.e the prev text is the winner
collision happend with box:776.328125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fale
((913.1875, 850.546875), (993.3437500000001, 884.6875))
text1 i.e the prev text is the winner
Etr
((911.703125, 923.28125), (988.890625, 945.546875))
collision happend with box:923.28125 and text:Etr solving on the basis of percent match boxes
the current box specification are
TRUE
((919.1249999999999, 955.9375), (1003.7343750000001, 990.078125))
text2 i.e the incoming text is the winner
collision happend with box:955.9375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
space.
((824.125, 948.515625), (883.5, 976.71875))
text1 i.e the prev text is the winner
collision happend with box:955.9375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
prediction
((792.953125, 1013.828125), (887.953125, 1040.546875))
text1 i.e the prev text is the winner
collision happend with box:955.9375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Truc
((925.0624999999999, 1019.765625), (1005.21875, 1056.875))
text2 i.e the incoming text is the winner
the
((858.2656249999999, 1147.421875), (893.8906250000001, 1172.65625))
collision happend with box:1147.421875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((939.90625, 1120.703125), (1018.5781249999999, 1148.90625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 475, '2': 408, '3': 475, '4': 575, '5': 676, '6': 780, '7': 847, '8': 950, '9': 1018, '10': 1120}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EIHSAUE.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6846.999999999999
left top x of SN: 574.1250000000001
bottom right x of SN: 979.90625
first t/f detection
TRUE
((5536.156249999999, 2077.1875), (6267.687499999999, 2366.1875))
TRUE
((5581.3125, 2691.3125), (6249.625000000001, 2980.3125))
TRUE.
((5617.437499999999, 3251.25), (6403.156249999999, 3549.28125))
FALSE.
((5509.062499999999, 3946.65625), (6439.281250000001, 4190.5))
TRUF.
((5545.187500000001, 4614.96875), (6285.75, 4831.71875))
FALE.
((5545.187500000001, 5120.71875), (6312.84375, 5355.53125))
#R
((5454.874999999999, 5644.53125), (5816.125000000001, 5870.3125))
collision happend with box:5644.53125 and text:#R solving on the basis of percent match boxes
the current box specification are
FALE
((5897.406250000001, 5644.53125), (6556.6875, 5888.375))
text2 i.e the incoming text is the winner
TRUE
((5427.781249999999, 6168.34375), (6231.5625, 6412.1875))
TRUE
((5427.781249999999, 6701.1875), (6114.156250000001, 6945.03125))
TRUE.
((5491.000000000001, 7333.375), (6294.781249999999, 7613.34375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2926, '3': 3314, '4': 3928, '5': 4488, '6': 5093, '7': 5491, '8': 6096, '9': 6502, '10': 7116}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KctCRld.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6458.65625
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
True
((5274.250000000001, 1734.0), (5716.78125, 2013.96875))
Tue
((5292.312499999999, 2275.875), (5752.906249999999, 2537.78125))
false
((5337.46875, 2718.40625), (5816.125000000001, 3052.5625))
Folse
((5319.406249999999, 3314.46875), (5789.031250000001, 3639.59375))
True
((5301.343750000001, 3973.75), (5779.999999999999, 4262.75))
False
((5319.406249999999, 4443.375), (5798.0625, 4759.46875))
Folse
((5310.375, 4949.125), (5725.812499999999, 5229.09375))
True
((5328.437500000001, 5518.09375), (5734.843750000001, 5743.875))
Tue
((5301.343750000001, 5987.71875), (5752.906249999999, 6249.625))
Thue
((5328.437500000001, 6565.71875), (5825.15625, 6827.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2546, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5039, '8': 5635, '9': 6023, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gKxPK1Y.jpg
OCR detection done with doctr
left top x of SN: 120.41210937500003
bottom right x of SN: 338.802734375
left top x of T/F: 891.03125
bottom right x of T/F: 1256.193359375
first t/f detection
FALSE
((917.02734375, 415.8984375), (998.607421875, 454.2890625))
collision happend with box:415.8984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((917.02734375, 495.87890625), (998.607421875, 526.271484375))
text2 i.e the incoming text is the winner
collision happend with box:495.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((918.626953125, 574.259765625), (992.2089843749999, 606.251953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:574.259765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
is
((867.4394531249999, 671.8359375), (893.033203125, 702.228515625))
text1 i.e the prev text is the winner
collision happend with box:574.259765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((912.228515625, 676.634765625), (985.8105468750001, 711.826171875))
text2 i.e the incoming text is the winner
collision happend with box:676.634765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((925.025390625, 780.609375), (997.0078125, 812.6015625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((917.02734375, 415.8984375), (998.607421875, 454.2890625))
collision happend with box:415.8984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((917.02734375, 495.87890625), (998.607421875, 526.271484375))
text2 i.e the incoming text is the winner
collision happend with box:495.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((918.626953125, 574.259765625), (992.2089843749999, 606.251953125))
true and false collision so given priority to text2 which is the incoming text
is
((867.4394531249999, 671.8359375), (893.033203125, 702.228515625))
collision happend with box:671.8359375 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((912.228515625, 676.634765625), (985.8105468750001, 711.826171875))
text2 i.e the incoming text is the winner
TRUE
((925.025390625, 780.609375), (997.0078125, 812.6015625))
TRVE
((921.8261718750001, 865.388671875), (990.609375, 898.98046875))
collision happend with box:865.388671875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
directly
((821.05078125, 942.169921875), (894.6328125, 972.5625))
text2 i.e the incoming text is the winner
collision happend with box:942.169921875 and text:directly solving on the basis of percent match boxes
the current box specification are
TEVE
((918.626953125, 948.568359375), (982.611328125, 980.560546875))
text1 i.e the prev text is the winner
space.
((833.84765625, 1047.744140625), (893.033203125, 1073.337890625))
collision happend with box:1047.744140625 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((920.2265625, 1036.546875), (1003.40625, 1066.939453125))
text2 i.e the incoming text is the winner
collision happend with box:1036.546875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
ptediction
((803.4550781249999, 1111.728515625), (899.431640625, 1140.521484375))
text1 i.e the prev text is the winner
collision happend with box:1036.546875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((920.2265625, 1116.52734375), (1003.40625, 1153.318359375))
text2 i.e the incoming text is the winner
the
((869.0390625, 1246.095703125), (904.23046875, 1273.2890625))
collision happend with box:1246.095703125 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((920.2265625, 1230.099609375), (998.607421875, 1266.890625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 409, '2': 508, '3': 579, '4': 678, '5': 779, '6': 881, '7': 946, '8': 1050, '9': 1118, '10': 1217}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6tXsNC9.jpg
OCR detection done with doctr
left top x of T/F: 5486.6171875
bottom right x of T/F: 6648.054687500001
left top x of SN: 699.4296875
bottom right x of SN: 1108.140625
first t/f detection
TRUE
((5496.6171875, 2159.03125), (6027.2265625, 2369.4453125))
TRUE
((5460.0234375, 2662.1953125), (6054.671875, 2872.609375))
FALSE
((5450.875, 3183.65625), (6109.562499999999, 3384.921875))
FALSE
((5432.578125, 3833.1953125), (6027.2265625, 4007.015625))
TRUE
((5423.4296875, 4372.953125), (5944.890625, 4546.7734375))
FALSE
((5441.7265625, 4876.1171875), (5999.781250000001, 5077.3828125))
TRUG
((5341.09375, 5306.09375), (5890.0, 5516.5078125))
TRUG
((5359.390625, 5818.40625), (5926.59375, 6019.671875))
TRUC
((5350.2421875, 6275.828125), (5844.2578125, 6458.796875))
TRUE
((5359.390625, 6907.0703125), (5899.1484375, 7117.484375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2268, '2': 2845, '3': 3229, '4': 3796, '5': 4354, '6': 4931, '7': 5315, '8': 5891, '9': 6275, '10': 6861}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0qZVJKm.jpg
OCR detection done with doctr
left top x of SN: 186.044921875
bottom right x of SN: 408.490234375
left top x of T/F: 1038.4228515625
bottom right x of T/F: 1421.7412109375
first t/f detection
F
((1097.9423828125, 504.0380859375), (1129.7763671875, 550.0205078125))
collision happend with box:504.0380859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1110.322265625, 578.3173828125), (1149.23046875, 631.3740234375))
text2 i.e the incoming text is the winner
Pre-
((993.5976562500001, 873.666015625), (1041.3486328125, 900.1943359375))
collision happend with box:873.666015625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
T
((1097.9423828125, 880.740234375), (1166.916015625, 930.259765625))
text2 i.e the incoming text is the winner
collision happend with box:880.740234375 and text:T solving on the basis of percent match boxes
the current box specification are
distribution.
((917.5498046875, 976.2421875), (1043.1171875, 1001.001953125))
text2 i.e the incoming text is the winner
collision happend with box:976.2421875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
T
((1067.876953125, 960.3251953125), (1159.841796875, 1006.3076171875))
text1 i.e the prev text is the winner
collision happend with box:976.2421875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((965.30078125, 1041.6787109375), (1048.4228515625, 1075.28125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((1097.9423828125, 504.0380859375), (1129.7763671875, 550.0205078125))
collision happend with box:504.0380859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1110.322265625, 578.3173828125), (1149.23046875, 631.3740234375))
text2 i.e the incoming text is the winner
Pre-
((993.5976562500001, 873.666015625), (1041.3486328125, 900.1943359375))
collision happend with box:873.666015625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
T
((1097.9423828125, 880.740234375), (1166.916015625, 930.259765625))
text2 i.e the incoming text is the winner
distribution.
((917.5498046875, 976.2421875), (1043.1171875, 1001.001953125))
collision happend with box:976.2421875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
T
((1067.876953125, 960.3251953125), (1159.841796875, 1006.3076171875))
text1 i.e the prev text is the winner
collision happend with box:976.2421875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((965.30078125, 1041.6787109375), (1048.4228515625, 1075.28125))
text1 i.e the prev text is the winner
space.
((981.2177734375001, 1149.560546875), (1046.654296875, 1177.857421875))
collision happend with box:1149.560546875 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((949.3837890625, 1216.765625), (1050.19140625, 1243.2939453125))
text2 i.e the incoming text is the winner
the
((1020.1259765625, 1351.17578125), (1060.802734375, 1379.47265625))
collision happend with box:1351.17578125 and text:the solving on the basis of percent match boxes
the current box specification are
F
((1163.37890625, 1335.2587890625), (1195.212890625, 1379.47265625))
text2 i.e the incoming text is the winner
F
((1105.0166015625, 1050.521484375), (1142.15625, 1101.8095703125))
T
((1099.7109375, 1131.875), (1138.619140625, 1179.6259765625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 663, '2': 592, '3': 663, '4': 767, '5': 870, '6': 970, '7': 1039, '8': 1144, '9': 1213, '10': 1317}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DtoSTqh.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 874.83984375
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((892.75, 428.73046875), (943.375, 461.953125))
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
text1 i.e the prev text is the winner
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
collision happend with box:691.34765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 824.23828125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FAL
((892.75, 428.73046875), (943.375, 461.953125))
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
TRVE
((888.00390625, 794.1796875), (956.03125, 824.23828125))
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
TRVE
((892.75, 968.203125), (963.94140625, 998.26171875))
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
FAL
((899.078125, 1232.40234375), (954.44921875, 1265.625))
collision happend with box:1232.40234375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((952.8671875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VMvseht.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 498.33984375), (942.12109375, 534.7265625))
text2 i.e the incoming text is the winner
collision happend with box:498.33984375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 580.60546875), (950.03125, 616.9921875))
text2 i.e the incoming text is the winner
collision happend with box:580.60546875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 688.18359375), (946.8671875000001, 719.82421875))
text2 i.e the incoming text is the winner
collision happend with box:688.18359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 792.59765625), (934.2109374999999, 813.1640625))
text2 i.e the incoming text is the winner
collision happend with box:792.59765625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((915.2265624999999, 878.02734375), (945.2851562500001, 911.25))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
F
((916.8085937499999, 498.33984375), (942.12109375, 534.7265625))
F
((921.5546875, 580.60546875), (950.03125, 616.9921875))
T
((913.64453125, 688.18359375), (946.8671875000001, 719.82421875))
T
((913.64453125, 792.59765625), (934.2109374999999, 813.1640625))
T
((915.2265624999999, 878.02734375), (945.2851562500001, 911.25))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1083.69140625))
F
((910.48046875, 1127.98828125), (935.7929687499999, 1150.13671875))
F
((905.734375, 1222.91015625), (934.2109374999999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 585, '2': 517, '3': 585, '5': 787, '6': 890, '7': 957, '8': 1059, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u20CbaY.jpg
OCR detection done with doctr
left top x of T/F: 5986.353515624999
bottom right x of T/F: 7242.814453125
left top x of SN: 879.0800781249999
bottom right x of SN: 1301.31640625
first t/f detection
TRUE
((5986.6640625, 2480.5), (6819.95703125, 2751.8046875))
TRUE
((6025.421875, 3042.48828125), (6790.888671875, 3304.103515625))
TRUE
((6054.490234375001, 3575.408203125), (6858.71484375, 3837.0234375))
FALSE
((5996.353515624999, 4176.154296875), (6916.8515625, 4486.216796875))
FALSE
((6015.732421875, 4835.037109375), (6926.541015625, 5135.41015625))
FALS
((6006.04296875, 5397.025390625), (6693.994140625, 5668.330078125))
FALSE
((5996.353515624999, 5871.80859375), (6907.162109375001, 6133.423828125))
TRVE
((5986.6640625, 6424.107421875), (6732.751953125, 6646.96484375))
TRUE
((6015.732421875, 6879.51171875), (6819.95703125, 7102.369140625))
TRUE
((6073.869140625, 7548.083984375), (6839.3359375, 7770.94140625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2625, '2': 3245, '3': 3643, '4': 4263, '5': 4864, '6': 5484, '7': 5891, '8': 6511, '9': 6927, '10': 7548}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uhFFYJ4.jpg
OCR detection done with doctr
left top x of SN: 87.37500000000001
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 498.33984375), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:498.33984375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (951.61328125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((896.2421874999999, 957.12890625), (948.44921875, 991.93359375))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 876.4453125), (945.2851562500001, 911.25))
text2 i.e the incoming text is the winner
collision happend with box:876.4453125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
F
((916.8085937499999, 498.33984375), (942.12109375, 533.14453125))
F
((921.5546875, 579.0234375), (951.61328125, 615.41015625))
T.
((896.2421874999999, 957.12890625), (948.44921875, 991.93359375))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
T
((913.64453125, 876.4453125), (945.2851562500001, 911.25))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 583, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1059, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LAB7L4d.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRVE
((5563.249999999999, 1797.21875), (6159.312499999999, 2013.96875))
collision happend with box:1797.21875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
a
((6249.625000000001, 1860.4375), (6321.874999999999, 1932.6875))
text1 i.e the prev text is the winner
TRUE
((5509.062499999999, 2357.15625), (6087.062500000001, 2573.90625))
FALSE
((5680.656250000001, 3468.0), (6294.781249999999, 3684.75))
FALSE:
((5563.249999999999, 4145.34375), (6285.75, 4362.09375))
TRVE
((5608.40625, 4750.4375), (6213.499999999999, 4949.125))
False.
((5653.562500000001, 5220.0625), (6294.781249999999, 5427.78125))
TRUE
((5554.21875, 5870.3125), (6123.1875, 6069.0))
TRUE
((5635.5, 6385.09375), (6168.343750000001, 6592.8125))
TRUG
((5680.656250000001, 7125.65625), (6358.000000000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2637, '3': 3034, '4': 3621, '5': 4217, '6': 4831, '7': 5238, '8': 5852, '9': 6267, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AhnOq2U.jpg
OCR detection done with doctr
left top x of T/F: 5523.2109375
bottom right x of T/F: 6821.875
left top x of SN: 333.4921875
bottom right x of SN: 751.3515625000001
first t/f detection
True
((5725.328125, 2232.21875), (6484.6484375, 2579.859375))
True
((5780.21875, 2909.203125), (6576.1328125, 3211.1015625))
Tu
((5569.804687500001, 3467.2578125), (6484.6484375, 3805.75))
Falul
((5578.953125, 4043.609375), (6438.90625, 4418.6953125))
Falu
((5679.5859375, 4647.40625), (6484.6484375, 4995.046875))
TrRLe
((5560.65625, 5242.0546875), (6402.312499999999, 5534.8046875))
Falle
((5569.804687500001, 5763.515625), (6475.5, 6092.859375))
Truue
((5496.6171875, 6248.3828125), (6310.828125000001, 6577.7265625))
Tuu
((5597.25, 6696.65625), (6384.015625, 7044.296875))
Trul
((5533.2109375, 7401.0859375), (6374.8671875, 7748.7265625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2433, '2': 3055, '3': 3467, '4': 4089, '5': 4693, '6': 5315, '7': 5717, '8': 6330, '9': 6733, '10': 7337}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R2MhuVp.jpg
OCR detection done with doctr
left top x of SN: 160.78515625
bottom right x of SN: 402.05078125
left top x of T/F: 1416.09765625
bottom right x of T/F: 1894.134765625
first t/f detection
Trut
((1484.810546875, 686.685546875), (1609.89453125, 747.951171875))
collision happend with box:686.685546875 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1482.2578125, 816.875), (1607.341796875, 875.587890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:816.875 and text:True solving on the basis of percent match boxes
the current box specification are
Falke
((1495.0214843749998, 947.064453125), (1625.2109375, 1008.330078125))
text2 i.e the incoming text is the winner
collision happend with box:947.064453125 and text:Falke solving on the basis of percent match boxes
the current box specification are
Falu
((1500.126953125, 1097.67578125), (1625.2109375, 1156.388671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1097.67578125 and text:Falu solving on the basis of percent match boxes
the current box specification are
Fels
((1474.5996093749998, 1240.62890625), (1599.68359375, 1299.341796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1240.62890625 and text:Fels solving on the basis of percent match boxes
the current box specification are
Felar
((1510.337890625, 1388.6875), (1635.421875, 1439.7421875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Trut
((1484.810546875, 686.685546875), (1609.89453125, 747.951171875))
True
((1482.2578125, 816.875), (1607.341796875, 875.587890625))
Falke
((1495.0214843749998, 947.064453125), (1625.2109375, 1008.330078125))
Falu
((1500.126953125, 1097.67578125), (1625.2109375, 1156.388671875))
Fels
((1474.5996093749998, 1240.62890625), (1599.68359375, 1299.341796875))
Felar
((1510.337890625, 1388.6875), (1635.421875, 1439.7421875))
False
((1515.4433593749998, 1511.21875), (1643.080078125, 1572.484375))
Tyue
((1492.46875, 1638.85546875), (1615.0, 1689.91015625))
True
((1520.548828125, 1769.044921875), (1622.658203125, 1822.65234375))
Tuut
((1489.916015625, 1945.18359375), (1602.236328125, 1996.23828125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 681, '2': 837, '3': 939, '4': 1095, '5': 1245, '6': 1401, '7': 1503, '8': 1661, '9': 1763, '10': 1922}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yyY2D8i.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 417.615234375), (948.0390625, 450.9609375))
collision happend with box:417.615234375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 509.712890625), (944.86328125, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:509.712890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((919.45703125, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 676.44140625), (954.390625, 711.375))
text2 i.e the incoming text is the winner
the.
((838.474609375, 1263.9609375), (878.171875, 1290.955078125))
F
((925.80859375, 790.76953125), (954.390625, 827.291015625))
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 914.625))
text2 i.e the incoming text is the winner
collision happend with box:879.69140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 967.025390625), (952.802734375, 1003.546875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((916.28125, 417.615234375), (948.0390625, 450.9609375))
T
((913.1054687500001, 509.712890625), (944.86328125, 539.8828125))
collision happend with box:509.712890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((919.45703125, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
F
((925.80859375, 676.44140625), (954.390625, 711.375))
the.
((838.474609375, 1263.9609375), (878.171875, 1290.955078125))
F
((925.80859375, 790.76953125), (954.390625, 827.291015625))
F
((925.80859375, 879.69140625), (954.390625, 914.625))
F
((925.80859375, 967.025390625), (952.802734375, 1003.546875))
T
((925.80859375, 1059.123046875), (948.0390625, 1082.94140625))
collision happend with box:1059.123046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((916.28125, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
T
((924.220703125, 1240.142578125), (954.390625, 1270.3125))
the final dict without editing {'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are ['3', '4']
the assigned keys are ['1', '2', '5', '6', '7', '8', '9', '10']
['1', '2', '5', '6', '7', '8', '9', '10', '1', '2', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 423, '2': 522, '5': 792, '6': 893, '7': 962, '8': 1063, '9': 1132, '10': 1230}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LUYBpyQ.jpg
OCR detection done with doctr
left top x of T/F: 5450.0234375
bottom right x of T/F: 6602.312499999999
left top x of SN: 946.4375000000001
bottom right x of SN: 1355.1484375000002
first t/f detection
TRVE
((5569.804687500001, 1976.0625), (6210.1953125, 2195.625))
TRUE
((5569.804687500001, 2488.375), (6228.4921875, 2707.9375))
TRU
((5569.804687500001, 2881.7578125), (5981.484375, 3101.3203125))
TRUE
((5569.804687500001, 3494.703125), (6173.6015625, 3714.265625))
TRUE
((5542.359375, 4061.90625), (6191.8984375, 4308.9140625))
FALSE
((5524.062499999999, 4574.21875), (6155.304687500001, 4784.6328125))
FALSE
((5578.953125, 5022.4921875), (6210.1953125, 5242.0546875))
TRVE
((5560.65625, 5498.2109375), (6210.1953125, 5754.3671875))
TRVE
((5597.25, 6019.671875), (6219.34375, 6275.828125))
TRVE
((5533.2109375, 6623.46875), (6210.1953125, 6843.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2076, '2': 2616, '3': 2982, '4': 3531, '5': 4071, '6': 4629, '7': 4995, '8': 5571, '9': 5946, '10': 6522}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jioK374.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6512.84375
left top x of SN: 393.5
bottom right x of SN: 799.2812499999999
first t/f detection
FALSE.
((5481.968749999999, 1625.625), (6059.968750000001, 1824.3125))
TRUE
((5527.125, 2257.8125), (5969.656249999999, 2465.53125))
TRVE
((5536.156249999999, 2727.4375), (5933.53125, 2953.21875))
TRUE
((5554.21875, 3278.34375), (6041.90625, 3486.0625))
FALSE
((5527.125, 3757.0), (5978.687500000001, 3964.71875))
then
((5030.40625, 4262.75), (5346.499999999999, 4434.34375))
or
((5183.9375, 4488.53125), (5346.499999999999, 4605.9375))
collision happend with box:4488.53125 and text:or solving on the basis of percent match boxes
the current box specification are
FALSE
((5644.531249999999, 4434.34375), (6105.124999999999, 4614.96875))
text2 i.e the incoming text is the winner
the
((5138.78125, 5048.46875), (5364.5625, 5192.96875))
collision happend with box:5048.46875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5581.3125, 5120.71875), (6059.968750000001, 5301.34375))
text2 i.e the incoming text is the winner
TRUE
((5599.375000000001, 5653.5625), (6114.156250000001, 5834.1875))
the
((5165.875, 6041.90625), (5391.65625, 6168.34375))
collision happend with box:6041.90625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5680.656250000001, 6177.375), (6249.625000000001, 6430.25))
text2 i.e the incoming text is the winner
TRUE.
((5617.437499999999, 6836.65625), (6087.062500000001, 7008.25))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1806, '2': 2357, '3': 2908, '4': 3477, '5': 3847, '6': 4416, '7': 5183, '8': 5761, '9': 6159, '10': 6917}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 40B8D9P.jpg
OCR detection done with doctr
left top x of SN: 1240.3349609375
bottom right x of SN: 1657.5927734375
left top x of T/F: 5906.748046875001
bottom right x of T/F: 7134.9794921875
first t/f detection
falsc
((5877.205078125, 2866.865234375), (6440.6923828125, 3143.666015625))
Jalse
((5906.862304687501, 3351.2666015625), (6371.492187500001, 3588.5244140625))
tue
((5857.43359375, 3845.5537109375), (6312.177734375, 4043.2685546875))
toue
((5896.976562500001, 4418.9267578125), (6460.4638671875, 4666.0703125))
False
((5906.862304687501, 4942.87109375), (6361.606445312501, 5160.357421875))
Touc
((5798.119140625, 5437.158203125), (6272.634765625, 5664.5302734375))
Tsuc
((5808.0048828125, 5911.673828125), (6302.2919921875, 6148.931640625))
Frue
((5768.4619140625, 6415.8466796875), (6262.7490234375, 6613.5615234375))
ax
((5798.119140625, 6929.9052734375), (6252.86328125, 7127.6201171875))
collision happend with box:6929.9052734375 and text:ax solving on the basis of percent match boxes
the current box specification are
False
((6282.5205078125, 6910.1337890625), (6697.721679687499, 7117.734375))
text2 i.e the incoming text is the winner
Tul
((5827.7763671875, 7443.9638671875), (6361.606445312501, 7671.3359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2886, '2': 3460, '3': 3835, '4': 4418, '5': 4982, '6': 5545, '7': 5931, '8': 6494, '9': 6870, '10': 7443}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cWwqME1.jpg
OCR detection done with doctr
left top x of T/F: 5784.7421875
bottom right x of T/F: 7022.792968749999
left top x of SN: 670.0585937499999
bottom right x of SN: 1090.8632812500002
first t/f detection
TRI
((5748.43359375, 2315.4296875), (6294.875, 2574.7578125))
TRUE
((5794.7421875, 2889.65625), (6526.41796875, 3111.9375))
TRUE
((5794.7421875, 3408.3125), (6591.25, 3658.37890625))
FALSE
((5720.6484375, 4010.32421875), (6628.296875, 4306.69921875))
FALS
((5720.6484375, 4686.4296875), (6406.015625, 4936.49609375))
FALS
((5692.86328125, 5223.609375), (6359.707031250001, 5492.19921875))
FALSE
((5646.5546875, 5695.95703125), (6554.203125, 5946.0234375))
TRVE
((5628.031250000001, 6242.3984375), (6368.968750000001, 6455.41796875))
TRUE
((5646.5546875, 6705.484375), (6443.0625, 6909.2421875))
TRUE
((5683.6015625, 7381.58984375), (6424.5390625, 7585.34765625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2371, '2': 2982, '3': 3389, '4': 4028, '5': 4612, '6': 5223, '7': 5631, '8': 6242, '9': 6659, '10': 7279}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tRSUcnu.jpg
OCR detection done with doctr
left top x of T/F: 5504.9140625
bottom right x of T/F: 6794.4296875
left top x of SN: 745.1718749999998
bottom right x of SN: 1153.8828125
first t/f detection
FALSE
((5661.289062499999, 2268.8125), (6164.453125, 2442.6328125))
TRUE
((5597.25, 2817.71875), (6036.375, 3028.1328125))
TRVE
((5597.25, 3265.9921875), (6091.265625, 3476.40625))
FALSE
((5560.65625, 3915.53125), (6091.265625, 4089.3515625))
TRUE
((5597.25, 4501.03125), (6063.8203125, 4711.4453125))
FALSE
((5606.3984375, 5040.7890625), (6118.7109375, 5223.7578125))
FALSE
((5652.140625, 5525.65625), (6219.34375, 5699.4765625))
FALSE
((5688.734375, 6028.8203125), (6164.453125, 6211.7890625))
TRUE
((5624.6953125, 6504.5390625), (6182.75, 6724.1015625))
TRVE
((5633.84375, 7163.2265625), (6146.15625, 7382.7890625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2387, '2': 2954, '3': 3330, '4': 3915, '5': 4482, '6': 5059, '7': 5443, '8': 6028, '9': 6422, '10': 7007}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Gn7hJNd.jpg
OCR detection done with doctr
left top x of SN: 845.8046875
bottom right x of SN: 1245.3671875
left top x of T/F: 5669.5859375
bottom right x of T/F: 6904.2109375
first t/f detection
TRUE
((5633.84375, 2113.2890625), (6310.828125000001, 2369.4453125))
TRUE
((5707.031250000001, 2707.9375), (6310.828125000001, 2927.5))
FALS
((5679.5859375, 3238.546875), (6182.75, 3458.109375))
PALSE
((5716.1796875, 3842.34375), (6393.1640625, 4098.5))
TRUE
((5670.4375, 4446.140625), (6548.6875, 4702.296875))
FALSE
((5688.734375, 4985.8984375), (6438.90625, 5205.4609375))
FALSE
((5679.5859375, 5461.6171875), (6438.90625, 5708.625))
PALSE
((5743.625, 5964.78125), (6374.8671875, 6211.7890625))
TRUE
((5688.734375, 6531.984375), (6484.6484375, 6742.3984375))
TRUE
((5725.328125, 7199.8203125), (6466.3515625, 7455.9765625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': False, '8': False, '9': True, '10': True}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2433, '2': 3000, '3': 3375, '4': 3952, '5': 4519, '7': 5470, '8': 6065, '9': 6458, '10': 7062}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WJnOlzC.jpg
OCR detection done with doctr
left top x of SN: 956.595703125
bottom right x of SN: 1378.83203125
left top x of T/F: 5618.154296875
bottom right x of T/F: 6845.546875
first t/f detection
Halsc
((5637.84375, 2751.8046875), (6190.142578125, 3032.798828125))
Jalse
((5676.6015625, 3245.966796875), (6151.384765625, 3478.513671875))
tue
((5647.533203125001, 3720.75), (6122.31640625, 3953.296875))
toul
((5734.73828125, 4311.806640625), (6296.7265625, 4544.353515625))
False
((5763.806640625, 4844.7265625), (6209.521484375, 5028.826171875))
Taue
((5686.291015625, 5329.19921875), (6170.763671875, 5552.056640625))
Truc
((5725.048828125, 5803.982421875), (6228.900390625, 6036.529296875))
True
((5705.669921875, 6307.833984375), (6209.521484375, 6501.623046875))
TEbe
((5763.806640625, 6821.375), (6228.900390625, 7005.474609375))
collision happend with box:6821.375 and text:TEbe solving on the basis of percent match boxes
the current box specification are
False
((6248.279296875, 6782.6171875), (6684.304687500001, 7015.1640625))
text2 i.e the incoming text is the winner
Tue
((5831.632812500001, 7334.916015625), (6364.552734374999, 7557.7734375))
collision happend with box:7334.916015625 and text:Tue solving on the basis of percent match boxes
the current box specification are
the
((5424.675781250001, 7480.2578125), (5647.533203125001, 7635.2890625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2819, '2': 3371, '3': 3759, '4': 4331, '5': 4902, '6': 5464, '7': 5842, '8': 6404, '9': 6782, '10': 7363}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : S9amPJh.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6404.46875
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5238.124999999999, 2176.53125), (6240.593749999999, 2510.6875))
FALSE
((5310.375, 3314.46875), (6303.812500000001, 3558.3125))
TRUE
((5229.09375, 3901.5), (6159.312499999999, 4154.375))
FAISE
((5202.0, 4434.34375), (6213.499999999999, 4714.3125))
TRUE
((5174.90625, 4994.28125), (6105.124999999999, 5238.125))
TRUE
((5156.84375, 5409.71875), (6041.90625, 5689.6875))
TRUE
((5183.9375, 5933.53125), (6023.843749999999, 6186.40625))
TRUE
((5202.0, 6412.1875), (6069.0, 6656.03125))
TRUE
((5238.124999999999, 6972.125), (6105.124999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3007, '3': 3377, '4': 3937, '5': 4488, '6': 5048, '7': 5418, '8': 5969, '9': 6348, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1zHXQVK.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text1 i.e the prev text is the winner
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((827.76171875, 492.8515625), (872.27734375, 526.23828125))
text2 i.e the incoming text is the winner
collision happend with box:492.8515625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:492.8515625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (873.8671875, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
TRVE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
collision happend with box:414.94921875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((827.76171875, 492.8515625), (872.27734375, 526.23828125))
text2 i.e the incoming text is the winner
collision happend with box:492.8515625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
FAL
((821.40234375, 685.22265625), (873.8671875, 717.01953125))
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
FAL
((815.04296875, 767.89453125), (867.5078125000001, 798.1015625))
collision happend with box:767.89453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:767.89453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (902.484375, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
TRVE
((816.6328125, 926.87890625), (894.5351562500001, 955.49609375))
collision happend with box:926.87890625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (897.7148437500001, 1028.62890625))
text2 i.e the incoming text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 996, '1': 324, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 834, '8': 931, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 36XFKDU.jpg
OCR detection done with doctr
left top x of SN: 101.21093750000003
bottom right x of SN: 323.10546875
left top x of T/F: 956.2109375
bottom right x of T/F: 1338.623046875
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
false
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:false solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Ea
((956.54296875, 787.939453125), (1008.10546875, 834.66796875))
text1 i.e the prev text is the winner
False
((971.044921875, 873.33984375), (1069.3359375, 913.623046875))
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
Trve
((1014.5507812499999, 792.7734375), (1096.728515625, 839.501953125))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
false
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
Ea
((956.54296875, 787.939453125), (1008.10546875, 834.66796875))
False
((971.044921875, 873.33984375), (1069.3359375, 913.623046875))
Trve
((1014.5507812499999, 792.7734375), (1096.728515625, 839.501953125))
Trve
((972.6562500000001, 965.185546875), (1058.056640625, 1005.46875))
False
((971.044921875, 1050.5859375), (1064.501953125, 1090.869140625))
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
False
((990.3808593750001, 1239.111328125), (1096.728515625, 1284.228515625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 509, '3': 578, '1': 580, '4': 683, '5': 784, '7': 957, '8': 1060, '9': 1131, '10': 1232}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OqVkVCv.jpg
OCR detection done with doctr
left top x of SN: 512.6093749999999
bottom right x of SN: 933.4140625000001
left top x of T/F: 5414.2734375
bottom right x of T/F: 6615.27734375
first t/f detection
TuL
((5405.75, 2509.92578125), (5813.265625, 2685.8984375))
Tu
((5452.05859375, 3047.10546875), (5905.8828125, 3223.078125))
Palse
((5452.05859375, 3500.9296875), (5915.14453125, 3686.1640625))
Tru
((5387.2265625, 4121.46484375), (5804.00390625, 4306.69921875))
False
((5507.62890625, 4742.0), (5915.14453125, 4908.7109375))
False
((5470.58203125, 5269.91796875), (5915.14453125, 5455.15234375))
False
((5498.3671875, 5733.00390625), (5915.14453125, 5918.23828125))
Trit
((5489.10546875, 6242.3984375), (5850.3125, 6418.37109375))
False
((5433.53515625, 6825.88671875), (5868.8359375, 7001.859375))
Tru
((5516.890625, 7483.46875), (5952.19140625, 7668.703125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2472, '2': 3074, '3': 3482, '4': 4084, '5': 4677, '6': 5288, '7': 5686, '8': 6297, '9': 6705, '10': 7326}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : roxXaVD.jpg
OCR detection done with doctr
left top x of T/F: 5655.078125
bottom right x of T/F: 6846.8203125
left top x of SN: 457.0390625
bottom right x of SN: 868.5820312499999
first t/f detection
PAI
((5794.7421875, 2111.671875), (6035.546875, 2241.3359375))
collision happend with box:2111.671875 and text:PAI solving on the basis of percent match boxes
the current box specification are
LSi
((5989.23828125, 2130.1953125), (6257.828125, 2232.07421875))
text2 i.e the incoming text is the winner
FALSE
((5600.246093750001, 2685.8984375), (6387.4921875, 2889.65625))
TRVE
((5739.171875, 3306.43359375), (6248.56640625, 3482.40625))
LEUE
((5887.359375, 3899.18359375), (6276.3515625, 4075.15625))
TEUE
((5859.57421875, 4353.0078125), (6285.61328125, 4528.98046875))
TRVE
((5878.09765625, 5019.8515625), (6433.80078125, 5242.1328125))
TAUE
((5822.52734375, 5742.265625), (6304.13671875, 5927.5))
FALSE
((5739.171875, 6297.96875), (6230.04296875, 6473.94140625))
FALSE
((5794.7421875, 6862.93359375), (6313.398437500001, 7048.16796875))
TRUE
((5831.7890625, 7437.16015625), (6322.660156250001, 7650.1796875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['1', '2', '4', '5', '6', '8']
the assigned keys are ['3', '7', '9', '10']
printing the number dict y_coordinate
{'3': 3417, '7': 5797, '9': 6807, '10': 7622}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vT46Zg1.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
TRVE
((5156.84375, 1842.375), (5581.3125, 2004.9375))
TRUE
((5111.6875, 2221.6875), (5509.062499999999, 2393.28125))
TRUE
((5156.84375, 2763.5625), (5527.125, 2926.125))
Eea
((5229.09375, 3287.375), (5671.624999999999, 3468.0))
False
((5247.156250000001, 3829.25), (5590.343749999999, 4018.90625))
FALSE
((5229.09375, 3097.71875), (5707.750000000001, 3305.4375))
False
((5211.031249999999, 4280.8125), (5626.468750000001, 4479.5))
falke
((5220.062500000001, 4624.0), (5590.343749999999, 4840.75))
TRUE
((5174.90625, 5247.15625), (5590.343749999999, 5427.78125))
TRUE
((5165.875, 5770.96875), (5590.343749999999, 5951.59375))
TRUE
((5138.78125, 6376.0625), (5599.375000000001, 6538.625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1688, '2': 2239, '3': 2610, '4': 3160, '5': 3711, '6': 4262, '7': 4633, '8': 5174, '9': 5545, '10': 6096}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7I0zVgw.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 803.453125
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
text1 i.e the prev text is the winner
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
TRVE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
collision happend with box:416.5390625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
LSE
((864.3281250000001, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
FAL
((818.22265625, 769.484375), (865.91796875, 794.921875))
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
TRVE
((816.6328125, 926.87890625), (896.125, 955.49609375))
collision happend with box:926.87890625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (897.7148437500001, 1028.62890625))
text2 i.e the incoming text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 996, '1': 486, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 836, '8': 931, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : InCQsuH.jpg
OCR detection done with doctr
left top x of SN: 688.5820312499999
bottom right x of SN: 1100.1250000000002
left top x of T/F: 5367.96484375
bottom right x of T/F: 6568.968750000001
first t/f detection
Halse
((5359.44140625, 2546.97265625), (5905.8828125, 2815.5625))
false
((5387.2265625, 3028.58203125), (5859.57421875, 3260.125))
Hue
((5368.703125, 3510.19140625), (5822.52734375, 3732.47265625))
toue
((5433.53515625, 4093.6796875), (5989.23828125, 4325.22265625))
False
((5452.05859375, 4630.859375), (5896.62109375, 4816.09375))
Taue
((5368.703125, 5121.73046875), (5850.3125, 5334.75))
Tsuc
((5405.75, 5584.81640625), (5896.62109375, 5816.359375))
True
((5368.703125, 6094.2109375), (5868.8359375, 6270.18359375))
Tb
((5433.53515625, 6603.60546875), (5896.62109375, 6788.83984375))
collision happend with box:6603.60546875 and text:Tb solving on the basis of percent match boxes
the current box specification are
False
((5915.14453125, 6566.55859375), (6331.921875000001, 6788.83984375))
text2 i.e the incoming text is the winner
Tue
((5489.10546875, 7122.26171875), (6007.76171875, 7335.28125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2584, '2': 3158, '3': 3537, '4': 4112, '5': 4677, '6': 5251, '7': 5612, '8': 6186, '9': 6557, '10': 7131}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nVDIV7v.jpg
OCR detection done with doctr
left top x of T/F: 5719.91015625
bottom right x of T/F: 6957.9609375
left top x of SN: 429.25390625000006
bottom right x of SN: 840.7968749999999
first t/f detection
Falie
((5665.078125, 2000.53125), (6174.47265625, 2222.8125))
True
((5868.8359375, 2593.28125), (6359.707031250001, 2824.82421875))
False
((5776.21875, 3343.48046875), (6220.78125, 3575.0234375))
True
((5776.21875, 3825.08984375), (6350.445312500001, 4056.6328125))
False
((5776.21875, 4315.9609375), (6276.3515625, 4584.55078125))
False
((5878.09765625, 5010.58984375), (6368.968750000001, 5223.609375))
Tyue
((5748.43359375, 5714.48046875), (6248.56640625, 5927.5))
True
((5739.171875, 6233.13671875), (6202.2578125, 6455.41796875))
Trul
((5729.91015625, 6788.83984375), (6239.3046875, 7001.859375))
Frul
((5757.6953125, 7427.8984375), (6165.2109375, 7677.96484375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2065, '2': 2658, '3': 3269, '4': 3862, '5': 4251, '6': 4862, '7': 5649, '8': 6251, '9': 6649, '10': 7437}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IbR3JQ2.jpg
OCR detection done with doctr
left top x of SN: 134.96386718750003
bottom right x of SN: 356.296875
left top x of T/F: 991.6240234375
bottom right x of T/F: 1378.529296875
first t/f detection
T
((1019.810546875, 527.4091796875), (1059.490234375, 572.048828125))
collision happend with box:527.4091796875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1026.423828125, 687.78125), (1062.796875, 740.6875))
text2 i.e the incoming text is the winner
collision happend with box:687.78125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1046.263671875, 800.20703125), (1090.9033203125, 839.88671875))
text2 i.e the incoming text is the winner
collision happend with box:800.20703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1014.8505859375, 904.3662109375), (1059.490234375, 942.392578125))
text2 i.e the incoming text is the winner
collision happend with box:904.3662109375 and text:T solving on the basis of percent match boxes
the current box specification are
f
((988.3974609375, 985.37890625), (1019.810546875, 1020.0986328125))
text2 i.e the incoming text is the winner
collision happend with box:985.37890625 and text:f solving on the basis of percent match boxes
the current box specification are
oT
((1029.73046875, 990.3388671875), (1097.5166015625, 1025.05859375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1019.810546875, 527.4091796875), (1059.490234375, 572.048828125))
F
((1026.423828125, 687.78125), (1062.796875, 740.6875))
T
((1046.263671875, 800.20703125), (1090.9033203125, 839.88671875))
T
((1014.8505859375, 904.3662109375), (1059.490234375, 942.392578125))
f
((988.3974609375, 985.37890625), (1019.810546875, 1020.0986328125))
collision happend with box:985.37890625 and text:f solving on the basis of percent match boxes
the current box specification are
oT
((1029.73046875, 990.3388671875), (1097.5166015625, 1025.05859375))
text2 i.e the incoming text is the winner
collision happend with box:990.3388671875 and text:oT solving on the basis of percent match boxes
the current box specification are
F
((1011.5439453125, 1063.0849609375), (1049.5703125, 1107.724609375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '6']
the assigned keys are ['2', '3', '4', '5', '7', '8', '9', '10']
['2', '3', '4', '5', '7', '8', '9', '10', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 537, '3': 606, '4': 712, '5': 810, '7': 978, '8': 1082, '9': 1154, '10': 1253, '1': 237}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : msX3bBM.jpg
OCR detection done with doctr
left top x of T/F: 5506.890625
bottom right x of T/F: 6800.51171875
left top x of SN: 392.2070312500001
bottom right x of SN: 803.75
first t/f detection
TRUE
((5637.29296875, 1796.7734375), (6267.08984375, 2120.93359375))
FALSE
((5618.769531250001, 2417.30859375), (6322.660156250001, 2685.8984375))
TRUE
((5563.19921875, 2889.65625), (6396.75390625, 3297.171875))
TRUE
((5553.9375, 3602.80859375), (6294.875, 3899.18359375))
FALSE
((5609.507812500001, 4306.69921875), (6387.4921875, 4566.02734375))
TRUE
((5600.246093750001, 4899.44921875), (6257.828125, 5158.77734375))
TRUE
((5637.29296875, 5399.58203125), (6387.4921875, 5658.91015625))
FALSE
((5692.86328125, 5955.28515625), (6378.23046875, 6205.3515625))
TRUE
((5609.507812500001, 6446.15625), (6331.921875000001, 6742.53125))
FALSE
((5692.86328125, 7140.78515625), (6424.5390625, 7437.16015625))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2797, '3': 3204, '4': 3815, '5': 4436, '6': 5056, '7': 5464, '8': 6084, '9': 6501, '10': 7113}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UpUB4NP.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5581.3125, 2203.625), (6050.937499999999, 2375.21875))
PALSE
((5581.3125, 2817.75), (6096.09375, 2998.375))
TRUE
((5491.000000000001, 3350.59375), (5960.625, 3522.1875))
TRUE
((5491.000000000001, 3811.1875), (5987.71875, 3982.78125))
TRUE
((5518.093750000001, 4452.40625), (6005.781250000001, 4624.0))
TRUE
((5491.000000000001, 5066.53125), (5933.53125, 5229.09375))
FALSE
((5545.187500000001, 5644.53125), (6050.937499999999, 5780.0))
FALSE
((5563.249999999999, 6204.46875), (6078.031249999999, 6376.0625))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2275, '3': 2844, '4': 3413, '5': 3784, '6': 4362, '7': 5120, '8': 5698, '9': 6087, '10': 6863}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jbJWS9A.jpg
OCR detection done with doctr
left top x of T/F: 5267.0546875
bottom right x of T/F: 6446.789062499999
left top x of SN: 626.2421875
bottom right x of SN: 1034.953125
first t/f detection
TRUE
((5405.1328125, 1802.2421875), (5963.1875, 1976.0625))
TRUE
((5423.4296875, 2287.109375), (5999.781250000001, 2506.671875))
TRUE
((5414.281250000001, 2836.015625), (5981.484375, 3000.6875))
FALSE
((5331.9453125, 3357.4765625), (6018.078125000001, 3577.0390625))
TRUE
((5341.09375, 4007.015625), (5853.40625, 4189.984375))
TRUE
((5341.09375, 4491.8828125), (5944.890625, 4656.5546875))
FALSE
((5350.2421875, 4958.453125), (5999.781250000001, 5113.9765625))
TRUE
((5313.6484375, 5470.765625), (5871.703125, 5672.03125))
TRUE
((5395.984375, 5946.484375), (6027.2265625, 6147.75))
TRUE
((5368.539062499999, 6650.9140625), (5972.3359375, 6852.1796875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1893, '2': 2442, '3': 2808, '4': 3375, '5': 3924, '6': 4501, '7': 4885, '8': 5470, '9': 5864, '10': 6467}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mGHkXo0.jpg
OCR detection done with doctr
left top x of T/F: 5842.078125
bottom right x of T/F: 7049.1171875
left top x of SN: 932.3388671875
bottom right x of SN: 1352.0117187500002
first t/f detection
TRUE
((6034.2294921875, 2252.9248046875), (6523.162109375, 2435.076171875))
TRUE
((6053.403320312501, 2789.7919921875), (6494.4013671875, 2962.3564453125))
PALSE
((6053.403320312501, 3317.072265625), (6551.9228515625, 3508.810546875))
FALSE
((6053.403320312501, 3892.287109375), (6599.857421875, 4074.4384765625))
FALSE
((6043.81640625, 4496.2626953125), (6590.2705078125, 4668.8271484375))
FALSE
((6082.1640625, 5023.54296875), (6571.0966796875, 5196.107421875))
TRUE
((6015.055664062499, 5464.541015625), (6475.2275390625, 5646.6923828125))
TRUE
((6024.642578125, 6039.755859375), (6446.466796875, 6212.3203125))
TRUE
((6024.642578125, 6538.275390625), (6475.2275390625, 6710.83984375))
TRUE
((6072.5771484375, 7257.2939453125), (6532.7490234375, 7439.4453125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2300, '2': 2885, '3': 3288, '4': 3882, '5': 4477, '6': 5090, '7': 5483, '8': 6087, '9': 6499, '10': 7113}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qz31CIs.jpg
OCR detection done with doctr
left top x of SN: 556.0625
bottom right x of SN: 979.90625
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6449.625000000001
first t/f detection
Halsc
((5229.09375, 2429.40625), (5770.96875, 2691.3125))
Jalse
((5256.1875, 2917.09375), (5716.78125, 3151.90625))
ttue
((5220.062500000001, 3395.75), (5680.656250000001, 3621.53125))
toul
((5292.312499999999, 3991.8125), (5843.218750000001, 4217.59375))
False
((5310.375, 4515.625), (5734.843750000001, 4696.25))
Taue
((5220.062500000001, 5003.3125), (5689.6875, 5211.03125))
Truc
((5238.124999999999, 5481.96875), (5725.812499999999, 5698.71875))
Truc
((5202.0, 5978.6875), (5698.718749999999, 6159.3125))
Tbe
((5247.156250000001, 6493.46875), (5707.750000000001, 6674.09375))
collision happend with box:6493.46875 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((5752.906249999999, 6475.40625), (6141.250000000001, 6665.0625))
text2 i.e the incoming text is the winner
Tue
((5301.343750000001, 7008.25), (5825.15625, 7215.96875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3034, '3': 3413, '4': 3991, '5': 4551, '6': 5120, '7': 5500, '8': 6059, '9': 6430, '10': 7008}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hkpSQ2K.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
Truc
((1451.09375, 652.5390625), (1567.890625, 703.3203125))
collision happend with box:652.5390625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1537.421875, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
text2 i.e the incoming text is the winner
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1555.1953125, 1124.8046875))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
False
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1233.984375 and text:False solving on the basis of percent match boxes
the current box specification are
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Truc
((1451.09375, 652.5390625), (1567.890625, 703.3203125))
True
((1428.2421875, 787.109375), (1537.421875, 850.5859375))
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
Falk
((1443.4765624999998, 1071.484375), (1555.1953125, 1124.8046875))
False
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
True
((1456.1718749999998, 1665.625), (1565.3515625, 1716.40625))
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1777, '10': 1939}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7iS1YLO.jpg
OCR detection done with doctr
left top x of SN: 258.0146484375
bottom right x of SN: 501.60058593750006
left top x of T/F: 1519.9921875
bottom right x of T/F: 1989.634765625
first t/f detection
folre
((1532.6416015625, 747.134765625), (1691.6064453125, 845.1630859375))
collision happend with box:747.134765625 and text:folre solving on the basis of percent match boxes
the current box specification are
Trul
((1545.888671875, 882.2548828125), (1702.2041015625, 961.7373046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:882.2548828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Fake
((1702.2041015625, 876.9560546875), (1800.232421875, 948.490234375))
text1 i.e the prev text is the winner
collision happend with box:882.2548828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
l
((1620.072265625, 1012.076171875), (1720.7500000000002, 1070.36328125))
text1 i.e the prev text is the winner
collision happend with box:882.2548828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1673.060546875, 1025.3232421875), (1797.5830078125, 1107.455078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1025.3232421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tu
((1678.3593750000002, 1186.9375), (1763.1406250000002, 1247.8740234375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folre
((1532.6416015625, 747.134765625), (1691.6064453125, 845.1630859375))
Trul
((1545.888671875, 882.2548828125), (1702.2041015625, 961.7373046875))
collision happend with box:882.2548828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Fake
((1702.2041015625, 876.9560546875), (1800.232421875, 948.490234375))
text1 i.e the prev text is the winner
l
((1620.072265625, 1012.076171875), (1720.7500000000002, 1070.36328125))
collision happend with box:1012.076171875 and text:l solving on the basis of percent match boxes
the current box specification are
True
((1673.060546875, 1025.3232421875), (1797.5830078125, 1107.455078125))
text2 i.e the incoming text is the winner
Tu
((1678.3593750000002, 1186.9375), (1763.1406250000002, 1247.8740234375))
folne
((1519.3945312499998, 1314.109375), (1681.0087890625, 1412.1376953125))
Tyue
((1529.9921875, 1428.0341796875), (1686.3076171874998, 1520.763671875))
Tyl
((1537.9404296875, 1552.556640625), (1681.0087890625, 1647.935546875))
Falue
((1548.5380859375, 1695.625), (1683.658203125, 1772.4580078125))
falx
((1540.5898437499998, 1979.1123046875), (1696.9052734375, 2077.140625))
Falue
((1537.9404296875, 1817.498046875), (1694.255859375, 1912.876953125))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1006, '2': 892, '3': 996, '4': 1152, '5': 1303, '6': 1459, '7': 1563, '8': 1716, '9': 1822, '10': 1979}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vrpQEKp.jpg
rotation started
['o5', '8', '00', '-', '', 'CT', '4', '', 'N', 'I', 'E', 'I', '9', 'P', 'F', '>', 'I', 'P', 'I', '1', '1', 'E', 'p', 'I', '8', 'I', 'iE', ':', '-', 'H', 'e', 'i', 'e', 'I', 'E', 'I', 'E', 'I', 'I', 'I', '€', 'E', 'I', 'of', 'I', 'E', 'E', ':', '8', 'e', 'I', 'I', 'I', 'E', 'E', 'E', 'I', 'a', 'I', 'iE', 'I', '2', '8', 'I', '9', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'it', 'of', 'I', 'a', 'I', 'I', 'Q', 'à', 'B', '8', 'I', '2', 'of', 'I', 'I', 'I', 'I', ':', 'a', 'E', '8', '1', 'E', 'E', 'I', 'I', 'E', 'I', 'E', 'I', '€', 'E', 'I', 'E', 'e', 't', 'I', '8', 'I', 'I', 'I', ':', '2', 'I', 'of', 'E', '8', 'I', '1', 'E', 'I', 'E', '2', ':', 'I', 'I', 'I', 'I', 'I', ':', 'E', '2', 'E', 'I', '8', 'E', '€', 'E', 'E', '€', '2', 'f', 'I', 'I', 'e', 'I', 'E', '8', 'E', 'I', 'I', 'it', 'I', 'E', 'I', 'I', '1', 'E', 'I', 'I', 'F', ':', '11', '2', '16', 'a', 'E', '-', 'a', '9', 'it', 'I', 'a', 'E', 'I', 'E', 'E', '1', 'I', 'E', 'E', 'I', 'E', 'E', 'tn', 'E', 'I', 'E', '2', 'D', '-', 'm', 'I', 'I', 'I', 'it', 'o', 'E', 'I', '7', 'I', 'E', '?', 'E', 'E', 'E', 'F', 'm', 'p', '/', '-', '€', 'India', 'NAME', 'COURSE', 'Suaiud', 'A', 'TITIA']
rotation started
['"egep', 'uoosun', "'mou", '07', 'ITOM', 'azireloues', 'qou', 'op', 'ge47', 'egep', 'Bururen', 'anal', 'au9', 'ur', 'stregep', 'JO', 'OSIOU', 'oyreds', 'andeo', '07', 'UIeOT', 'Keur', 'lapour', 'au7', 'se', 'soseaI', '-UI', 'SurnyIeno', 'Jo', 'YSII', 'o47', 'WAS', 'UI', 'rageurered', 'D', 'ayn', 'Jo', 'anrea', 'yBry', 'e', 'Y9IM', 'OT', 'uorgorpard', 'B', 'Suryeur', "'sossero", 'Jo', 'poqunu', 'a81eT', 'B', 'YAIM', 'suarqoid', 'ssepotmur', 'JOI', '6', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo', '-SA-QUO', 'Bursn', 'Eou1', 'LOML', '"ooeds', '[eUrsTIo', 'o44', 'UI', 'JeQUIT-uou', '09', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoap', 'OUL', '8', 'oPT', 'STgoaIp', 'SI', 'DOIL', 'UOISIDOC', 'ay7', 'uI', 'uororpard', 'e', 'Suryeu', 'JOJ', 'pammbar', 'BUIIL', 'OUL', 'L', '-', '-', 'OaL', '"uoranquasip', 'uerssned', 'B', 'sienre', 'SI', 'suoranquasip', 'uerssneg', 'OMI', 'Jo', 'amgxIur', 'V', '9', 'a8m', '-aId', 'uoomgeq', 'gord', 'B', 'SI', 'BAINO', '(DOH)', 'orastieg0ereUD', 'Burerado', 'IOAIODOH', 'OUL', 'S', 'A9TE', '6', 'queosap', 'querpe1s', 'OTIYM', "'SQU8IOM", 'a47', 'agepdn', '07', 'pasn', 'SI', 'uone@odoxdypeg', '4', "'sopou", 'Jo', 'poqunu', 'ay7', '01', '[euornodord', 'TreDaH', 'pue', 'UOISIO', '"YIOMIOU', 'Temeu', 'ay7', 'ur', 'squerpers', 'ay4', 'agnduoo', '01', 'pasn', 'SI', 'f', 'pue', 'I', 'SIOTDOA', 'Kue', 'IOJ', 'OLIgOUI', 'aouensip', 'PITRA', 'e', 'SI', "(@'z)lguopuagauso", '-', 'I', 'E', 'DSTJ', 'Teuoisuouup-P', 'IayIssep', 'reOUII-Lou', 'e', 'SI', 'NNY', '2', '30AL', 'quourdordop', 'quourormbar', 'a8e101s', 'a41', 'STeoidAL', 'T', 'ueyn', '108rel', 'yonur', 'SI', 'NNY', 'JOJ', '3', '03L', 'JOJ', 'WAS', '"va/anuL', 'quowagess', 'NS', 'à', 'P', '5', 'F', ':a1a4', 'paqumu', 'ITOI', 'mor', 'O11M', '311M', '(sad', 'OT)', "'6", 'Teardes', 'ur', 'ASTVI', '1O', 'ENHL', 'Surumpurey', 'reapo', 'pue', 'SI91181', 'a']
rotation started
['LIt', '>ompr', '353203', '2', 'BATYN', 'FIPUI', 'ul', 'E', 'I', '-', 'à', 'NL', 'P', 'à', 'E', 'à', '2', '2', 'E', 'is', 'I', '-', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'à', 'I', 'E', 'e', 'I', 'iE', 'is', 'I', '1', 'I', 'e', 'a', '2', 'of', '5', '$', '8a', 'a', 'iis', 'I', 'I', 'i', 'a', 'à', '€', 'a', 'I', ':', 'e', 'I', 'I', 'e', '1', 'I', 'I', 'iE', 'E', 'I', 'I', 'I', '1', '8', 'is', 'e', 'I', 'iE', '8', 'a', '1', 'I', ':', 'e', 'I', 'E', 'o', 'iE', 'a', '-', 'à', ':', '1', '-', 'a', 'I', 'of', 'I', 'o', 'a', 'U', '.', 'I', 'I', 'I', 'I', 'of', 'E', 'is', 'de', 'i', 'I', 'I', 'I', ':', 'is', 'de', 'I', 'a', 'e', 'E', 'of', 'de', 'of', 'I', '1', 'E', 'o', 'I', 'I', 'à', '1', 'a', 'E', 'of', 'I', 'a', 'd', 'H', 'I', '-', '8', '$', 'is', 'E', 'I', 'o', 'I', 'à', 'I', 'a', 'I', 'I', 'I', 'L', 'I', 'I', '€', 'I', 'I', 'I', 'a', '0', 'I', 'I', '', 'I', 'e', 'E', 'I', 'I', 'I', 'I', ':', 'E', 'I', '1', 'iE', '-', 's', 'E', 'à', 'E', 'e', '', 'I', 'of', '-', 'a', 'is', 'I', 'I', 'i', '2', 'E', 'I', 'a', 'I', 'I', ':', 'I', '1', 'I', 'E', 'T', 'E', 'à', 'A', 'à', 'E', 'E', '00', '', '7', '1', '4', '10', '8', '', '09']
rotation started
['letters', 'and', 'clear', 'handwriting.', 'a', 'in', 'capital', 'e', 'Write', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'here:', '1', 'number', 'E', '$', '/', 'Write', 'your', 'roll', 'TRUE/FAL', 'SN', 'Statement', 'E', 'larger', 'than', 'SVM', 'for', 'TRU', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', 'TRUE', '3', '1', '-cosineStmalarityfe.g)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'False', 'vectors', 'I', 'and', 'y.', 'descent', 'is', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '9', 'Falbe', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Folse', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'False', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Tfue', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE']
OCR detection done with doctr
left top x of SN: 562.203125
bottom right x of SN: 970.9140625000001
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:45:14] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : vrpQEKp.jpg
[2024/07/01 15:45:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:45:15] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.16208910942077637
[2024/07/01 15:45:17] ppocr DEBUG: rec_res num  : 38, elapsed : 1.7437822818756104
OCR detection done
left top x of SN: 583.0
bottom right x of SN: 984.0
left top y of SN: 1840.0
bottom right y of SN: 2106.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/vrpQEKp.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GidbMC1.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1226.4609375
first t/f detection
FALSE
((884.5078125, 393.45703125), (964.7421875000001, 428.9453125))
collision happend with box:393.45703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 549.296875), (958.5703125, 584.78515625))
text1 i.e the prev text is the winner
TRVE
((873.70703125, 651.1328125), (949.3125, 686.62109375))
collision happend with box:651.1328125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.05078125, 757.59765625), (957.02734375, 786.9140625))
text2 i.e the incoming text is the winner
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((879.87890625, 840.91796875), (947.76953125, 873.3203125))
text1 i.e the prev text is the winner
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((875.25, 924.23828125), (940.0546875, 955.09765625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((884.5078125, 393.45703125), (964.7421875000001, 428.9453125))
collision happend with box:393.45703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 549.296875), (958.5703125, 584.78515625))
text1 i.e the prev text is the winner
TRVE
((873.70703125, 651.1328125), (949.3125, 686.62109375))
TRUE
((886.05078125, 757.59765625), (957.02734375, 786.9140625))
TRVE
((879.87890625, 840.91796875), (947.76953125, 873.3203125))
TRUE
((875.25, 924.23828125), (940.0546875, 955.09765625))
FAL
((875.25, 1012.1875), (927.7109375, 1043.046875))
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((923.08203125, 1012.1875), (955.484375, 1039.9609375))
text1 i.e the prev text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((875.25, 1090.87890625), (953.9414062500001, 1126.3671875))
true and false collision so given priority to text2 which is the incoming text
TRUE
((872.1640625, 1208.14453125), (946.2265625, 1239.00390625))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 376, '2': 476, '3': 543, '4': 644, '5': 745, '6': 847, '7': 913, '8': 1016, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yRPD0Dn.jpg
OCR detection done with doctr
left top x of T/F: 5845.632812499999
bottom right x of T/F: 6956.2265625
left top x of SN: 1420.34375
bottom right x of SN: 1835.28125
first t/f detection
TRUE
((5865.421875, 2525.578125), (6335.296874999999, 2750.7265625))
TRUE
((5836.0546875, 3015.03125), (6335.296874999999, 3249.96875))
TRUE
((5836.0546875, 3465.328125), (6286.351562499999, 3680.6875))
FALSE
((5757.7421875, 4023.3046875), (6325.5078125, 4248.453125))
FALSE
((5806.6875, 4600.859375), (6345.085937500001, 4826.0078125))
FALSE
((5787.109375, 5100.1015625), (6315.71875, 5295.8828125))
FALSE
((5757.7421875, 5511.2421875), (6247.1953125, 5707.0234375))
TRUE
((5738.1640625, 6049.640625), (6149.3046875, 6235.6328125))
TRUE
((5689.21875, 6441.203125), (6139.515625, 6656.5625))
TRUE
((5708.796875, 6999.1796875), (6159.093749999999, 7185.171875))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 3563, '2': 3210, '3': 3563, '4': 4101, '5': 4630, '6': 5168, '7': 5530, '8': 6079, '9': 6450, '10': 7008}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AuWeWTd.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 331.546875
left top x of T/F: 953.8671875
bottom right x of T/F: 1338.578125
first t/f detection
Falle
((998.15625, 437.59375), (1087.9609375, 486.578125))
collision happend with box:437.59375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Flke
((999.7890625, 514.3359375), (1094.4921875, 563.3203125))
text1 i.e the prev text is the winner
collision happend with box:437.59375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Taus
((1038.9765625, 594.34375), (1140.2109375, 648.2265625))
text2 i.e the incoming text is the winner
collision happend with box:594.34375 and text:Taus solving on the basis of percent match boxes
the current box specification are
Bul
((976.9296875000001, 707.0078125), (1083.0625, 760.890625))
text1 i.e the prev text is the winner
Toue
((972.0312499999999, 804.9765625), (1083.0625, 853.9609375))
collision happend with box:804.9765625 and text:Toue solving on the basis of percent match boxes
the current box specification are
pul
((976.9296875000001, 881.71875), (1092.859375, 929.0703125))
text2 i.e the incoming text is the winner
collision happend with box:881.71875 and text:pul solving on the basis of percent match boxes
the current box specification are
Tque
((1027.546875, 968.2578125), (1145.109375, 1020.5078125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falle
((998.15625, 437.59375), (1087.9609375, 486.578125))
collision happend with box:437.59375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Flke
((999.7890625, 514.3359375), (1094.4921875, 563.3203125))
text1 i.e the prev text is the winner
Taus
((1038.9765625, 594.34375), (1140.2109375, 648.2265625))
Bul
((976.9296875000001, 707.0078125), (1083.0625, 760.890625))
Toue
((972.0312499999999, 804.9765625), (1083.0625, 853.9609375))
collision happend with box:804.9765625 and text:Toue solving on the basis of percent match boxes
the current box specification are
pul
((976.9296875000001, 881.71875), (1092.859375, 929.0703125))
text2 i.e the incoming text is the winner
Tque
((1027.546875, 968.2578125), (1145.109375, 1020.5078125))
bue
((983.4609375, 1056.4296875), (1078.1640625, 1111.9453125))
fe
((991.625, 1156.03125), (1074.8984375, 1198.484375))
Jue
((989.9921875, 1278.4921875), (1074.8984375, 1330.7421875))
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['2', '4', '9']
the assigned keys are ['1', '3', '5', '6', '7', '8', '10']
['1', '3', '5', '6', '7', '8', '10', '1', '3', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 607, '3': 597, '5': 1258, '6': 906, '7': 974, '8': 1076, '10': 1250}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uwONgIj.jpg
OCR detection done with doctr
left top x of T/F: 5481.000000000001
bottom right x of T/F: 6702.5
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
first t/f detection
ToJe
((5545.187500000001, 1806.25), (6132.218749999999, 2059.125))
Falge
((5527.125, 2293.9375), (6213.499999999999, 2591.96875))
false
((5572.281250000001, 2926.125), (6105.124999999999, 3197.0625))
Toue.
((5572.281250000001, 3883.4375), (6376.062499999999, 4163.40625))
TOUe
((5599.375000000001, 4560.78125), (6222.531250000001, 4768.5))
fabe
((5707.750000000001, 5165.875), (6303.812500000001, 5472.9375))
toJe.
((5599.375000000001, 5780.0), (6276.718750000001, 6087.0625))
TOVe.
((5635.5, 6484.4375), (6358.000000000001, 6728.28125))
tove
((5599.375000000001, 6963.09375), (6321.874999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2420, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5897, '9': 6294, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cUCYouh.jpg
OCR detection done with doctr
left top x of T/F: 5506.890625
bottom right x of T/F: 6800.51171875
left top x of SN: 392.2070312500001
bottom right x of SN: 803.75
first t/f detection
TRUE
((5637.29296875, 1796.7734375), (6267.08984375, 2120.93359375))
FALSE
((5618.769531250001, 2417.30859375), (6322.660156250001, 2685.8984375))
TRUE
((5563.19921875, 2889.65625), (6396.75390625, 3297.171875))
TRUE
((5553.9375, 3602.80859375), (6294.875, 3899.18359375))
FALSE
((5609.507812500001, 4306.69921875), (6387.4921875, 4566.02734375))
TRUE
((5600.246093750001, 4899.44921875), (6257.828125, 5158.77734375))
TRUE
((5637.29296875, 5399.58203125), (6387.4921875, 5658.91015625))
FALSE
((5692.86328125, 5955.28515625), (6378.23046875, 6205.3515625))
TRUE
((5618.769531250001, 6446.15625), (6331.921875000001, 6742.53125))
FALSE
((5692.86328125, 7140.78515625), (6424.5390625, 7437.16015625))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2797, '3': 3204, '4': 3815, '5': 4436, '6': 5056, '7': 5464, '8': 6084, '9': 6501, '10': 7113}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q8iJyk0.jpg
OCR detection done with doctr
left top x of T/F: 5516.15234375
bottom right x of T/F: 6791.25
left top x of SN: 947.9101562500001
bottom right x of SN: 1359.453125
first t/f detection
TRUE
((5544.67578125, 2139.45703125), (5952.19140625, 2333.953125))
TROE
((5479.84375, 2630.328125), (5933.66796875, 2843.34765625))
FALSE
((5544.67578125, 3130.4609375), (6072.593749999999, 3343.48046875))
FALSE
((5553.9375, 3741.734375), (6063.332031249999, 3926.96875))
FALSE
((5526.15234375, 4325.22265625), (6044.80859375, 4510.45703125))
FALSE
((5507.62890625, 4862.40234375), (6044.80859375, 5038.375))
TRUE
((5507.62890625, 5279.1796875), (5979.9765625, 5445.890625))
TROE
((5507.62890625, 5807.09765625), (5942.9296875, 5983.0703125))
TRUE
((5507.62890625, 6196.08984375), (5989.23828125, 6409.109375))
TRUE
((5563.19921875, 6724.0078125), (6035.546875, 6937.02734375))
the
((5229.77734375, 6937.02734375), (5600.246093750001, 7113.0))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': False, '4': False, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': True, '9': True, '10': True}
the unassigned keys are ['2', '5', '6']
the assigned keys are ['1', '3', '4', '7', '8', '9', '10']
['1', '3', '4', '7', '8', '9', '10', '1', '3', '4', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2417, '3': 3315, '4': 3871, '7': 5316, '8': 5881, '9': 6251, '10': 6798}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': False, '4': False, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZHdcDRf.jpg
OCR detection done with doctr
left top x of SN: 626.2421875
bottom right x of SN: 1034.953125
left top x of T/F: 5651.289062499999
bottom right x of T/F: 6858.46875
first t/f detection
FALSE
((5707.031250000001, 1985.2109375), (6191.8984375, 2195.625))
collision happend with box:1985.2109375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRHE
((5679.5859375, 1829.6875), (6146.15625, 2012.65625))
text1 i.e the prev text is the winner
FALSE
((5679.5859375, 2451.78125), (6164.453125, 2625.6015625))
FALSE
((5679.5859375, 3018.984375), (6146.15625, 3192.8046875))
TRUE
((5679.5859375, 3494.703125), (6100.4140625, 3695.96875))
TRUE
((5697.8828125, 3997.8671875), (6182.75, 4180.8359375))
FALSE
((5734.4765625, 4711.4453125), (6219.34375, 4885.265625))
TRUE
((5707.031250000001, 5360.984375), (6191.8984375, 5543.953125))
TRUE
((5707.031250000001, 5919.0390625), (6127.859375, 6083.7109375))
TRVE
((5697.8828125, 6458.796875), (6127.859375, 6641.765625))
TRUE
((5716.1796875, 7080.890625), (6182.75, 7291.3046875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1884, '2': 2442, '3': 3009, '4': 3586, '5': 3970, '6': 4565, '7': 5333, '8': 5928, '9': 6330, '10': 7117}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 52pqQSe.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:755.58984375 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1415.904296875, 898.201171875), (1591.041015625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:898.201171875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1200.9375), (1591.041015625, 1306.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1200.9375 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
Trul
((1415.904296875, 898.201171875), (1591.041015625, 1010.7890625))
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
Trul
((1430.916015625, 1200.9375), (1591.041015625, 1306.01953125))
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1466, '8': 1628, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pDpbHYg.jpg
OCR detection done with doctr
left top x of SN: 36.336914062499986
bottom right x of SN: 263.041015625
left top x of T/F: 948.1103515624999
bottom right x of T/F: 1344.9267578125
first t/f detection
falx
((959.9785156249999, 470.77734375), (1085.1455078125, 560.44921875))
collision happend with box:470.77734375 and text:falx solving on the basis of percent match boxes
the current box specification are
Falte
((974.9238281249999, 575.39453125), (1087.013671875, 642.6484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:575.39453125 and text:Falte solving on the basis of percent match boxes
the current box specification are
Trul
((959.9785156249999, 681.8798828125), (1085.1455078125, 769.68359375))
text2 i.e the incoming text is the winner
collision happend with box:681.8798828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Til
((973.0556640624999, 793.9697265625), (1075.8046875, 876.1689453125))
text1 i.e the prev text is the winner
Tiul
((973.0556640624999, 911.6640625), (1085.1455078125, 990.126953125))
collision happend with box:911.6640625 and text:Tiul solving on the basis of percent match boxes
the current box specification are
True
((974.9238281249999, 1016.28125), (1075.8046875, 1081.6669921875))
text2 i.e the incoming text is the winner
collision happend with box:1016.28125 and text:True solving on the basis of percent match boxes
the current box specification are
falre
((963.7148437499999, 1117.162109375), (1085.1455078125, 1197.4931640625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falx
((959.9785156249999, 470.77734375), (1085.1455078125, 560.44921875))
Falte
((974.9238281249999, 575.39453125), (1087.013671875, 642.6484375))
Trul
((959.9785156249999, 681.8798828125), (1085.1455078125, 769.68359375))
Til
((973.0556640624999, 793.9697265625), (1075.8046875, 876.1689453125))
Tiul
((973.0556640624999, 911.6640625), (1085.1455078125, 990.126953125))
True
((974.9238281249999, 1016.28125), (1075.8046875, 1081.6669921875))
falre
((963.7148437499999, 1117.162109375), (1085.1455078125, 1197.4931640625))
Falu
((976.7919921874999, 1223.6474609375), (1083.27734375, 1281.560546875))
falte
((965.5830078124999, 1315.1875), (1081.4091796875, 1389.9140625))
Falye
((963.7148437499999, 1429.1455078125), (1075.8046875, 1507.6083984375))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 478, '2': 595, '3': 678, '4': 799, '5': 922, '7': 1111, '8': 1229, '9': 1307, '10': 1427}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H6A3t08.jpg
OCR detection done with doctr
left top x of T/F: 5516.5859375
bottom right x of T/F: 6921.248046874999
left top x of SN: 783.7890624999999
bottom right x of SN: 1210.3066406249998
first t/f detection
due
((5640.36328125, 2465.17578125), (6104.9541015625, 2768.58203125))
drus
((5602.4375, 3034.0625), (6057.546875, 3252.1357421875))
True
((5697.251953125, 3517.6162109375), (6133.3984375, 3745.1708984375))
Tyue
((5659.326171875, 4200.2802734375), (6123.9169921875, 4418.353515625))
Trve
((5602.4375, 4769.1669921875), (6057.546875, 4996.7216796875))
Tyoe
((5668.8076171875, 5366.498046875), (6085.991210937501, 5565.6083984375))
True
((5602.4375, 5954.34765625), (6076.509765625001, 6181.90234375))
bue
((5621.400390625, 6399.9755859375), (6123.9169921875, 6684.4189453125))
Tvue
((5621.400390625, 6902.4921875), (6114.435546875, 7196.4169921875))
True
((5630.8818359375, 7623.08203125), (6171.324218749999, 7898.0439453125))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': True, '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['2', '5', '7', '8', '9', '10']
the assigned keys are ['1', '3', '4', '6']
['1', '3', '4', '6', '1', '3', '4', '6']
printing the number dict y_coordinate
{'1': 2730, '3': 3678, '4': 4228, '6': 5413}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': True, '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Rk1G1aS.jpg
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 961.765625
left top x of T/F: 5495.765624999999
bottom right x of T/F: 6657.203125
first t/f detection
TRUE
((5578.953125, 1875.4296875), (5972.3359375, 2058.3984375))
FALSE
((5569.804687500001, 2424.3359375), (6045.5234375, 2607.3046875))
TRUE
((5487.46875, 2973.2421875), (5990.6328125, 3201.953125))
TRUE
((5514.9140625, 4619.9609375), (5917.4453125, 4793.78125))
FALSE
((5597.25, 3531.296875), (6063.8203125, 3750.859375))
TRUE
((5606.3984375, 3988.71875), (5990.6328125, 4217.4296875))
TRUE
((5533.2109375, 5269.5), (5954.039062499999, 5443.3203125))
FALSE
((5606.3984375, 5772.6640625), (6018.078125000001, 5955.6328125))
TRUE
((5542.359375, 6230.0859375), (5963.1875, 6413.0546875))
TRVE
((5569.804687500001, 6879.625), (5944.890625, 7062.59375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1838, '2': 2396, '3': 2954, '4': 3522, '5': 3897, '6': 4464, '7': 5214, '8': 5790, '9': 6175, '10': 6943}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lTliwxI.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 333.1796875
left top x of T/F: 953.8671875
bottom right x of T/F: 1338.578125
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text1 i.e the prev text is the winner
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Tauls
((1040.609375, 595.9765625), (1136.9453125, 646.59375))
text2 i.e the incoming text is the winner
collision happend with box:595.9765625 and text:Tauls solving on the basis of percent match boxes
the current box specification are
Bul
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
text1 i.e the prev text is the winner
louue
((968.765625, 800.078125), (1084.6953125, 853.9609375))
collision happend with box:800.078125 and text:louue solving on the basis of percent match boxes
the current box specification are
pul
((978.5625, 883.3515625), (1094.4921875, 929.0703125))
text1 i.e the prev text is the winner
collision happend with box:800.078125 and text:louue solving on the basis of percent match boxes
the current box specification are
Tque
((1029.1796875, 966.625), (1146.7421875, 1018.875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filke
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text1 i.e the prev text is the winner
Tauls
((1040.609375, 595.9765625), (1136.9453125, 646.59375))
Bul
((976.9296875000001, 705.375), (1081.4296875, 759.2578125))
louue
((968.765625, 800.078125), (1084.6953125, 853.9609375))
pul
((978.5625, 883.3515625), (1094.4921875, 929.0703125))
Tque
((1029.1796875, 966.625), (1146.7421875, 1018.875))
bue
((983.4609375, 1056.4296875), (1078.1640625, 1111.9453125))
fe
((993.2578124999999, 1156.03125), (1076.53125, 1198.484375))
sue
((991.625, 1278.4921875), (1074.8984375, 1329.109375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 600, '2': 530, '3': 599, '4': 703, '5': 804, '6': 906, '7': 974, '8': 1077, '9': 1146, '10': 1249}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EPA6x5l.jpg
OCR detection done with doctr
left top x of T/F: 5679.21875
bottom right x of T/F: 6868.125
left top x of SN: 803.6328125
bottom right x of SN: 1238.1484374999998
first t/f detection
TRVE
((5679.429687499999, 2241.6953125), (6364.6640625, 2476.6328125))
TRUE
((5708.796875, 2799.671875), (6433.1875, 3073.765625))
TRVE
((5747.953125, 3396.8046875), (6452.765625, 3661.109375))
Othen
((5278.078125, 4923.8984375), (5689.21875, 5070.734375))
TRVE
((5806.6875, 3925.4140625), (6433.1875, 4150.5625))
TRUE
((5806.6875, 4434.4453125), (6472.343750000001, 4669.3828125))
Oor
((5238.921875, 5109.890625), (5699.0078125, 5256.7265625))
collision happend with box:5109.890625 and text:Oor solving on the basis of percent match boxes
the current box specification are
TRUR
((5865.421875, 5070.734375), (6491.921875, 5295.8828125))
text2 i.e the incoming text is the winner
the
((5483.6484375, 5677.65625), (5718.5859375, 5834.28125))
collision happend with box:5677.65625 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5826.265625, 5746.1796875), (6394.03125, 5981.1171875))
text2 i.e the incoming text is the winner
FALSE
((5845.84375, 6225.84375), (6580.0234375, 6441.203125))
the
((5542.3828125, 6656.5625), (5767.53125, 6822.9765625))
collision happend with box:6656.5625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5924.15625, 6734.875), (6570.234375, 6999.1796875))
text2 i.e the incoming text is the winner
FALSE
((5875.2109375, 7410.3203125), (6599.6015625, 7645.2578125))
the final dict without editing {'1': True, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are ['3']
the assigned keys are ['1', '2', '4', '5', '6', '7', '8', '9', '10']
['1', '2', '4', '5', '6', '7', '8', '9', '10', '1', '2', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2339, '2': 2897, '4': 4023, '5': 4385, '6': 4923, '7': 5726, '8': 6274, '9': 6656, '10': 7449}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SHj76OQ.jpg
OCR detection done with doctr
left top x of T/F: 5664.33984375
bottom right x of T/F: 6902.390625
left top x of SN: 799.72265625
bottom right x of SN: 1220.52734375
first t/f detection
Trve
((5729.91015625, 2278.3828125), (6443.0625, 2546.97265625))
True
((5665.078125, 2880.39453125), (6443.0625, 3139.72265625))
True
((5628.031250000001, 3306.43359375), (6526.41796875, 3602.80859375))
True
((5665.078125, 3936.23046875), (6368.968750000001, 4204.8203125))
True
((5665.078125, 4547.50390625), (6341.183593750001, 4797.5703125))
False
((5637.29296875, 5038.375), (6415.27734375, 5334.75))
True
((5618.769531250001, 5547.76953125), (6285.61328125, 5770.05078125))
True
((5563.19921875, 5983.0703125), (6313.398437500001, 6297.96875))
Tru
((5590.984375000001, 6483.203125), (5970.71484375, 6733.26953125))
True
((5553.9375, 7085.21484375), (6294.875, 7437.16015625))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2380, '2': 2973, '3': 3362, '4': 3945, '5': 4528, '6': 5112, '7': 5501, '8': 6075, '9': 6464, '10': 7057}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YUtXx1Q.jpg
OCR detection done with doctr
left top x of SN: 553.0546875
bottom right x of SN: 961.765625
left top x of T/F: 5495.765624999999
bottom right x of T/F: 6657.203125
first t/f detection
TRUE
((5578.953125, 1866.28125), (5981.484375, 2058.3984375))
FALSE
((5560.65625, 2433.484375), (6054.671875, 2607.3046875))
TRUE
((5487.46875, 2982.390625), (5990.6328125, 3192.8046875))
TRUE
((5514.9140625, 4610.8125), (5908.296875, 4793.78125))
FALSE
((5588.1015625, 3531.296875), (6063.8203125, 3750.859375))
TRUE
((5597.25, 3979.5703125), (5990.6328125, 4217.4296875))
TRUE
((5542.359375, 5260.3515625), (5944.890625, 5434.171875))
FALSE
((5606.3984375, 5772.6640625), (6018.078125000001, 5955.6328125))
TRUE
((5542.359375, 6230.0859375), (5963.1875, 6413.0546875))
TRVE
((5569.804687500001, 6879.625), (5944.890625, 7062.59375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1829, '2': 2396, '3': 2954, '4': 3522, '5': 3897, '6': 4455, '7': 5214, '8': 5790, '9': 6175, '10': 6934}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 406Rype.jpg
OCR detection done with doctr
left top x of SN: 790.4609375000001
bottom right x of SN: 1192.7421875
left top x of T/F: 5775.48046875
bottom right x of T/F: 6967.22265625
first t/f detection
folse
((5868.8359375, 1741.203125), (6350.445312500001, 2074.625))
True
((5804.00390625, 2343.21484375), (6322.660156250001, 2667.375))
Folse
((5831.7890625, 2917.44140625), (6313.398437500001, 3260.125))
Folse
((5804.00390625, 3408.3125), (6192.99609375, 3704.6875))
Tue
((5766.95703125, 3843.61328125), (6257.828125, 4186.296875))
folse.
((5813.265625, 4464.1484375), (6350.445312500001, 4853.140625))
Thue
((5739.171875, 5242.1328125), (6155.94921875, 5547.76953125))
Thue
((5748.43359375, 5742.265625), (6137.42578125, 5992.33203125))
false
((5794.7421875, 6260.921875), (6285.61328125, 6659.17578125))
True
((5794.7421875, 6909.2421875), (6174.47265625, 7168.5703125))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1768, '2': 2333, '3': 2898, '4': 3473, '5': 3852, '6': 4436, '7': 5195, '8': 5779, '9': 6168, '10': 6946}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DMStlYW.jpg
OCR detection done with doctr
left top x of SN: 129.10644531249997
bottom right x of SN: 363.4111328125
left top x of T/F: 1222.5732421875
bottom right x of T/F: 1656.580078125
first t/f detection
falu
((1259.7255859375, 576.9873046875), (1409.0634765625, 674.283203125))
collision happend with box:576.9873046875 and text:falu solving on the basis of percent match boxes
the current box specification are
fabe
((1257.462890625, 708.2236328125), (1370.59765625, 791.943359375))
text1 i.e the prev text is the winner
Taue
((1250.6748046875002, 830.4091796875), (1388.69921875, 929.9677734375))
collision happend with box:830.4091796875 and text:Taue solving on the basis of percent match boxes
the current box specification are
fivu
((1266.513671875, 959.3828125), (1404.5380859375, 1043.1025390625))
text1 i.e the prev text is the winner
Tur
((1257.462890625, 1101.9326171875), (1395.4873046875, 1192.4404296875))
collision happend with box:1101.9326171875 and text:Tur solving on the basis of percent match boxes
the current box specification are
Kul
((1243.88671875, 1221.85546875), (1377.3857421875, 1289.736328125))
text1 i.e the prev text is the winner
Taue
((1228.0478515625, 1334.990234375), (1375.123046875, 1423.2353515625))
collision happend with box:1334.990234375 and text:Taue solving on the basis of percent match boxes
the current box specification are
falke
((1248.412109375, 1441.3369140625), (1375.123046875, 1520.53125))
text2 i.e the incoming text is the winner
collision happend with box:1441.3369140625 and text:falke solving on the basis of percent match boxes
the current box specification are
Falue
((1246.1494140625, 1558.9970703125), (1370.59765625, 1640.4541015625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1259.7255859375, 576.9873046875), (1409.0634765625, 674.283203125))
fabe
((1257.462890625, 708.2236328125), (1370.59765625, 791.943359375))
Taue
((1250.6748046875002, 830.4091796875), (1388.69921875, 929.9677734375))
fivu
((1266.513671875, 959.3828125), (1404.5380859375, 1043.1025390625))
Tur
((1257.462890625, 1101.9326171875), (1395.4873046875, 1192.4404296875))
Kul
((1243.88671875, 1221.85546875), (1377.3857421875, 1289.736328125))
Taue
((1228.0478515625, 1334.990234375), (1375.123046875, 1423.2353515625))
falke
((1248.412109375, 1441.3369140625), (1375.123046875, 1520.53125))
Falue
((1246.1494140625, 1558.9970703125), (1370.59765625, 1640.4541015625))
Trou
((1234.8359375, 1742.275390625), (1386.4365234375, 1832.783203125))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 830, '2': 730, '3': 821, '4': 963, '5': 1097, '6': 1235, '7': 1328, '8': 1463, '9': 1558, '10': 1692}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xaxBugs.jpg
rotation started
['bE', 'to', 'C0', '1', 'oe', 'E', '3', 'I', 'I', ':', 'a', '1', 'I', '-', ':', 'I', 'E', 'I', 'I', '€', 'I', '1', 'f', 'I', 'I', 'I', '9', 'S', '2', 'I', 'E', 'I', 'I', '2', 'I', 'I', 'I', 'I', 'a', '2', 'E', 'I', 'E', 'I', 'I', 'I', 'E', 'a', 'a', 'E', 'I', 'E', '€', 'po', '2', '6', 'E', 'p', 'I', 'I', 'I', 'I', '-', 'E', '2', 'lE', 'I', 'I', 'iE', 'I', ':', 'I', 'oo', 'E', 'I', 'nj', 'o', 'oi', 'a', 'EU', '€', '-', 'E', 'E', 'I', 'in', 'e', '2', 'I', 'I', 'I', 'I', 'I', 'A', '1', 'so', '6', 'E', '-', 'E', 'of', 'E', 'F', '-', 'F', 'E', '>', 'E', 'F', 'I', 'E', '2', 'I', 'E', 'E', 'I', 'à', 'I', 'E', 't', 'I', 'I', 'I', 'd8', 'e', 'I', 'i', 'a', 'E', 'I', 'I', 'I', 'S', 'a', 'I', 'I', 'I', 'I', 'I', '-', 'E', 'E', 'I', '8', ':', 'E', 'I', 'E', 'a', ':', 'Lt', '2', 'I', '9', 'i', 'E', ':', 'I', '-', 'E', 'E', 'E', '2', 'E', 'E', 'e', 'E', '2', 'I', '2', 'it', 'E', 'I', 'I', 'E', 'I', '-', 'I', 'a', 'a', 'E', 'E', '€', 'I', 'E', 'E', 'E', 'a', 'a', 'I', 'P', 'I', '2', '-', '€', 'ro', 'à', 'A', '-', 'I', '€', ':', '8', 'a', '-', '-', '-', 'Maue', 'COLA', 'Io']
rotation started
['erep', 'uoosun', 'mou', '09', 'TOM', 'ozrpeloues', 'gou', 'op', '1841', 'Bep', 'Buruten', 'aup', 'ur', 'sjtegop', 'IO', 'esiott', 'oureds', 'XSTI', '947', 'WASUI', '10jourered', 'a', 'out', 'J0', 'onyer', 'y8iy', 'e', 'TAIM', 'OT', 'a', '03', 'omadeoo1', 'LLIBOT', 'Kew', 'popour', 'au9', 'Se', 'SOseoJoUr', 'Surnyzono', 'Jo', 'WAS', '9501-SA-outo', '20th', 'treu', '10M101S', 'SI', 'WAS', 'OUO-SA-OUO', 'Sursn', 'uonorpard', 'B', 'Suryeur', 'sossero', 'Jo', 'roqunt', '081er', 'e', 'TIIA', 'sulaigoid', 'ssepprmnur', 'IOJ', '6', 'astot', '2001', '204', 'ogeds', 'peurauo', 'oui', 'ur', 'IBOUUT-uou', '09', 'ues', 'NAS', 'ue', 'Jo', 'Arepunoq', 'dorsioap', 'auL', '8', 'sapou', 'JO', 'Joqunu', 'au7', '01', 'Teuor.odoad', 'Apoamp', 'SI', 'BOIT', 'UOISIDD', 'OU7', 'UT', 'Uotjoipaid', 'e', 'Buryeur', '1OJ', 'paimbal', 'BUILOAL', '2', '-sneD', 'e', 'SABMTE', 'SI', 'Suonnqugsip', 'tetssneD', 'OMI', 'Jo', 'OIDAXIUI', 'V', '9', 'uonnqusip', 'uers', 'Trepoy', 'pue', 'UOISIDOId', 'taomioQ', 'jod', 'R', 'ST', 'BAINO', '(0ou)', 'D11SLA1DBIEU)', 'Surgelodo', 'IOTTOJOT', 'OUL', 'C', ':', 'sioMyou', '204l', 'pemau', 'eur', 'ursquerpe18', 'oyy', 'agnduoo', '04', 'post', 'SI', 'queosop', 'querp', '-e18', "opya'susras-an", 'anepdnoy', 'posn', 'st', 'uoreBodoadypeg', '20e1', 'f', 'pue.', 'E', 'SIO90OA', '[uttoisuoump-p', 'Aue', 'IOJ', 'ouaur', 'Bote1smp.pITRA', 'R', 'SI', '(f', 'T)figzmpunsausog-', '=', '10UISSeTO', 'pourl-tou', 'e', 'SI', 'NNDI', '2', 'guourcordop', '101', 'NAS', 'ueyn', 'quoulaunbal', '0861005', 'ouAreoidAL', 'T', 'OSO', 'D0e1', '1082014pnu1', 'sl', 'NNM', '10]', 'suoualess', 'NS', 'o', 's', 'IVa/anaL', 'taJou', 'daqtunu', 'TIOI', 'mos', '011M', 'BSLIA', '(sod', 'O1)', '6', '10', 'ANHL', 'suanorTeydeo', 'ur', 'ASTYA', 'umpuey', '1e0p', 'pue']
rotation started
['VRD', 'EIy', '%', '-', ':', 'I', 'Q', '2', 'e', '%', '-', ':', '-', 'C', 'à', '-', '8', '2', '1', '-', 'E', '-', 'a', 'a', 'I', 'E', 'a', 'I', 'a', 'I', '', 'd', 'I', 'I', 'a', 'I', 'is', '-', 'I', 'E', 'e', '1', 'E', 'of', 'I', 'I', '2', 'a', 'I', 'e', '€', 'df', 'I', 'I', 'à', '', 'E', 'a', 'I', ':', 'e', 'E', 'à', 'i', 'I', 'E', '-', 'a', 'e', 'I', 'a', 'I', ':', 'I', '9', '-', 'I', ':', '', 'I', 'of', 'E', 'E', 'E', 'LE', 'E', 'e', 'I', '6', 'I', 'of', 'I', 'I', '1', 'I', ':', 'I', '5', '3', 'of', 'I', ':', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', '1', 'a', 'I', 'e', 'I', '8', 'a', 'e', '.', 'e', 'of', 'à', 'E', '2', 'I', 'a', 'I', '9', 'I', 'ta', 'I', 'U', 'Tr', '8', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 'I', 'I', 'E', 'I', 'i', 'I', '1', 'I', 'I', 's', 'I', 'I', 'I', 'E', 'à', '€', 'I', 'I', 'le', 'is', 'à', ':', 'i', '3', 'I', 'C', 'od', 'I', '-', '2', 'e', '-', ':', 'à', 'I', 'I', ':', '1', 'E', 'a', 'A', '€', 'à', '1', 'E', 'I', 'à', 'i', 'I', 'E', '1', '1', '7', '10', 'to', '7', '00', 'o', '10', 'of']
rotation started
['capital', 'letters', 'and', 'clearhand', 'TRUEON', 'FALSEin', '9.', '(10', 'pts)', 'Write', 'Write', 'your', 'toll', 'number', 'here:', '-', 'd', 'coi', 'TRUE/FALS', 'SN', 'Statement', 'requirement', 'for', 'KNNI', 'is', 'much', 'larger', '1', 'Typically', 'the', 'storage', 'than', 'SVM', 'for', 'deploymento', 'KNN', 'is', 'non-linear', 'classifier.', 'Tove', 'Tase', '2', 'a', '3', '1-cosmeSimalerityr.m', 'is', 'a', 'valid', 'distancemetric', 'for', 'any', 'd-dimensional', 'Vectors', 'a', 'and', '1', 'Ioue', 'Backpropogation', 'is', 'used', 'to.update', 'the', 'weights,', 'while', 'gra-', 'dient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'True', 'network.', 'l', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus-', 'plot', 'between', 'Precision', 'and', 'Recall', 'Tu', 'sian', 'distribution', 'Tve', 'Falae', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Treeis', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'originalspace.', 'False', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'Jarge', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVMis', 'slower', 'than', 'Troe', 'one-vs-rest', 'SVM.', '10', 'With', 'a:', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'increases,as', 'the', 'model', 'may', 'learn', 'tocapture', 'True', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data']
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 961.8437499999999
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:47:49] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : xaxBugs.jpg
[2024/07/01 15:47:50] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:47:50] ppocr DEBUG: dt_boxes num : 42, elapsed : 0.15755677223205566
[2024/07/01 15:47:52] ppocr DEBUG: rec_res num  : 42, elapsed : 1.94938325881958
OCR detection done
left top x of SN: 552.0
bottom right x of SN: 968.0
left top y of SN: 1763.0
bottom right y of SN: 2057.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/xaxBugs.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F0nOhUP.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
left top x of T/F: 5625.5
bottom right x of T/F: 6828.937500000001
first t/f detection
TRUE
((5716.78125, 1797.21875), (6556.6875, 2122.34375))
TRVE
((5626.468750000001, 2483.59375), (6484.437499999999, 2736.46875))
FALSE
((5617.437499999999, 3043.53125), (6592.812499999999, 3332.53125))
FALSE
((5608.40625, 3576.375), (6538.624999999999, 3856.34375))
TRUE
((5590.343749999999, 4064.0625), (6430.249999999999, 4298.875))
TRUE
((5653.562500000001, 4741.40625), (6493.468750000001, 4994.28125))
TRUE
((5608.40625, 5409.71875), (6457.343749999999, 5689.6875))
TRUE
((5608.40625, 5951.59375), (6394.125, 6186.40625))
FALSE
((5644.531249999999, 6475.40625), (6538.624999999999, 6764.40625))
TRUE
((5599.375000000001, 7089.53125), (6502.5, 7333.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2456, '3': 3043, '4': 3639, '5': 4027, '6': 4624, '7': 5409, '8': 6005, '9': 6403, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xL6QQZg.jpg
OCR detection done with doctr
left top x of SN: 76.55175781250004
bottom right x of SN: 321.8818359375
left top x of T/F: 1400.58984375
bottom right x of T/F: 1879.4482421875
first t/f detection
folu
((1443.2548828125, 643.25), (1614.1181640625, 743.7578125))
collision happend with box:643.25 and text:folu solving on the basis of percent match boxes
the current box specification are
Falle
((1448.2802734375, 776.4228515625), (1606.580078125, 859.341796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:776.4228515625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Trur
((1433.2041015625, 904.5703125), (1599.0419921875002, 1020.154296875))
text2 i.e the incoming text is the winner
collision happend with box:904.5703125 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tveu
((1453.3056640624998, 1065.3828125), (1606.580078125, 1168.4033203125))
text1 i.e the prev text is the winner
Tyul
((1445.767578125, 1223.6826171875), (1601.5546875, 1331.728515625))
collision happend with box:1223.6826171875 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1369.4189453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Teul
((1438.2294921875, 1490.0283203125), (1604.0673828125, 1593.048828125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
folu
((1443.2548828125, 643.25), (1614.1181640625, 743.7578125))
Falle
((1448.2802734375, 776.4228515625), (1606.580078125, 859.341796875))
Trur
((1433.2041015625, 904.5703125), (1599.0419921875002, 1020.154296875))
Tveu
((1453.3056640624998, 1065.3828125), (1606.580078125, 1168.4033203125))
Tyul
((1445.767578125, 1223.6826171875), (1601.5546875, 1331.728515625))
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
Teul
((1438.2294921875, 1490.0283203125), (1604.0673828125, 1593.048828125))
Tru
((1443.2548828125, 1630.7392578125), (1599.0419921875002, 1713.658203125))
false
((1448.2802734375, 1763.912109375), (1591.50390625, 1849.34375))
falu
((1438.2294921875, 1919.69921875), (1631.70703125, 2017.6943359375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 620, '2': 781, '3': 889, '4': 1052, '5': 1213, '6': 1374, '7': 1479, '8': 1643, '9': 1751, '10': 1914}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fq5o2TP.jpg
OCR detection done with doctr
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6467.687499999999
first t/f detection
Halsc
((5238.124999999999, 2447.46875), (5789.031250000001, 2709.375))
Halse
((5265.218749999999, 2926.125), (5734.843750000001, 3151.90625))
ttue
((5220.062500000001, 3404.78125), (5680.656250000001, 3630.5625))
toul
((5292.312499999999, 4000.84375), (5843.218750000001, 4217.59375))
False
((5292.312499999999, 4506.59375), (5743.875, 4723.34375))
Taue
((5211.031249999999, 5012.34375), (5680.656250000001, 5229.09375))
Truc
((5229.09375, 5491.0), (5725.812499999999, 5707.75))
Frue
((5183.9375, 5978.6875), (5698.718749999999, 6186.40625))
False
((5725.812499999999, 6475.40625), (6141.250000000001, 6692.15625))
Tul
((5292.312499999999, 7017.28125), (5816.125000000001, 7234.03125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2447, '2': 3025, '3': 3404, '4': 3964, '5': 4542, '6': 5102, '7': 5472, '8': 6041, '9': 6439, '10': 6981}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5nwXIEF.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tur
((1416.6328125, 643.2529296875), (1519.2529296875, 703.3232421875))
collision happend with box:643.2529296875 and text:Tur solving on the basis of percent match boxes
the current box specification are
True
((1414.1298828125, 778.4111328125), (1526.7617187500002, 838.4814453125))
text2 i.e the incoming text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fosn
((1396.609375, 911.06640625), (1524.2587890625, 971.13671875))
text1 i.e the prev text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fark
((1529.2646484375, 891.04296875), (1629.3818359374998, 956.119140625))
text2 i.e the incoming text is the winner
collision happend with box:891.04296875 and text:fark solving on the basis of percent match boxes
the current box specification are
Falte
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1058.7392578125 and text:Falte solving on the basis of percent match boxes
the current box specification are
Falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Tur
((1416.6328125, 643.2529296875), (1519.2529296875, 703.3232421875))
True
((1414.1298828125, 778.4111328125), (1526.7617187500002, 838.4814453125))
fosn
((1396.609375, 911.06640625), (1524.2587890625, 971.13671875))
collision happend with box:911.06640625 and text:fosn solving on the basis of percent match boxes
the current box specification are
fark
((1529.2646484375, 891.04296875), (1629.3818359374998, 956.119140625))
text2 i.e the incoming text is the winner
Falte
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
Falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
faese
((1421.6386718749998, 1349.0791015625), (1541.779296875, 1409.1494140625))
Falu
((1436.65625, 1479.2314453125), (1556.796875, 1539.3017578125))
ATru
((1369.0771484375, 1624.4013671875), (1521.755859375, 1681.96875))
Tyue
((1416.6328125, 1752.05078125), (1534.2705078125, 1797.103515625))
Tru
((1426.6445312500002, 1924.7529296875), (1541.779296875, 1987.326171875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 906, '2': 790, '3': 896, '4': 1056, '5': 1213, '6': 1376, '7': 1481, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oTtfso4.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5652.59375
bottom right x of T/F: 6856.031250000001
first t/f detection
Golse
((5789.031250000001, 1652.71875), (6321.874999999999, 1959.78125))
Yalse
((5743.875, 2302.96875), (6222.531250000001, 2573.90625))
Halse
((5698.718749999999, 2899.03125), (6222.531250000001, 3215.125))
Jalse
((5725.812499999999, 3431.875), (6186.406249999999, 3702.8125))
Jalse
((5725.812499999999, 3865.375), (6231.5625, 4082.125))
Yalse
((5716.78125, 4624.0), (6195.437500000001, 4885.90625))
True
((5743.875, 5301.34375), (6150.28125, 5590.34375))
True
((5761.937500000001, 5852.25), (6159.312499999999, 6141.25))
Yalse
((5716.78125, 6376.0625), (6240.593749999999, 6683.125))
True
((5743.875, 7035.34375), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2321, '3': 2908, '4': 3513, '5': 3901, '6': 4506, '7': 5310, '8': 5924, '9': 6330, '10': 7143}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MbaIt3p.jpg
OCR detection done with doctr
left top x of SN: 65.619140625
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
collision happend with box:625.748046875 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1388.5234375, 753.796875), (1506.908203125, 809.365234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:753.796875 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:886.677734375 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1036.470703125 and text:Falh solving on the basis of percent match boxes
the current box specification are
Felte
((1371.6113281249998, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
True
((1388.5234375, 753.796875), (1506.908203125, 809.365234375))
Fatte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
Felte
((1371.6113281249998, 1179.015625), (1494.828125, 1237.0))
Fula
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
False
((1410.267578125, 1449.609375), (1535.900390625, 1505.177734375))
Tyut
((1381.275390625, 1577.658203125), (1506.908203125, 1623.5625))
True
((1407.8515625, 1700.875), (1511.740234375, 1761.275390625))
Trut
((1374.02734375, 1879.66015625), (1489.99609375, 1935.228515625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 606, '2': 761, '3': 862, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x8FnUkW.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
collision happend with box:1145.138671875 and text:EER solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
Falye
((1340.119140625, 1398.052734375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
collision happend with box:1660.333984375 and text:RER solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1871.095703125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1135, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LSxnasq.jpg
OCR detection done with doctr
left top x of T/F: 5239.609375
bottom right x of T/F: 6419.34375
left top x of SN: 726.8750000000001
bottom right x of SN: 1126.4375
first t/f detection
TRUE
((5597.25, 1729.0546875), (6201.046875, 2030.953125))
collision happend with box:1729.0546875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Peite
((5267.90625, 1875.4296875), (5880.8515625, 2195.625))
text1 i.e the prev text is the winner
FlaFASE
((5295.3515625, 2332.8515625), (6310.828125000001, 2625.6015625))
FACSE
((5258.757812500001, 2918.3515625), (5999.781250000001, 3183.65625))
TRUE
((5277.0546875, 3494.703125), (5972.3359375, 3705.1171875))
TRUE
((5249.609375, 3942.9765625), (5926.59375, 4189.984375))
FTRUE
((5222.1640625, 4464.4375), (6146.15625, 4711.4453125))
FAGSE
((5203.8671875, 4967.6015625), (5935.7421875, 5223.7578125))
PALSE
((5322.796875, 5269.5), (6045.5234375, 5516.5078125))
Eue
((5267.90625, 5461.6171875), (5871.703125, 5681.1796875))
FALSE
((5185.5703125, 5928.1875), (5917.4453125, 6266.6796875))
FALSE
((5267.90625, 6440.5), (6008.9296875, 6833.8828125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1939, '2': 2497, '3': 2872, '4': 3421, '5': 3952, '6': 4510, '7': 4866, '8': 5443, '9': 5818, '10': 6385}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q2ejgty.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
Truc
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
text2 i.e the incoming text is the winner
collision happend with box:914.0625 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Fale
((1435.859375, 1231.4453125), (1547.578125, 1292.3828125))
text2 i.e the incoming text is the winner
collision happend with box:1231.4453125 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Truc
((1453.6328125, 650.0), (1567.890625, 700.78125))
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
Fale
((1435.859375, 1231.4453125), (1547.578125, 1292.3828125))
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
Falte
((1446.0156250000002, 1508.203125), (1565.3515625, 1569.140625))
True
((1458.7109375000002, 1665.625), (1565.3515625, 1716.40625))
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1505, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Icxu8bH.jpg
OCR detection done with doctr
left top x of T/F: 1238.18359375
bottom right x of T/F: 1696.828125
left top x of SN: 63.48046875000004
bottom right x of SN: 302.123046875
first t/f detection
falte
((1269.294921875, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falte solving on the basis of percent match boxes
the current box specification are
Falie
((1281.0234374999998, 727.16796875), (1428.802734375, 806.921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:727.16796875 and text:Falie solving on the basis of percent match boxes
the current box specification are
Tyue
((1273.986328125, 865.564453125), (1414.7285156249998, 950.009765625))
text1 i.e the prev text is the winner
Tvel
((1288.0605468750002, 1006.306640625), (1428.802734375, 1090.751953125))
collision happend with box:1006.306640625 and text:Tvel solving on the basis of percent match boxes
the current box specification are
lyue
((1290.40625, 1156.431640625), (1424.111328125, 1245.568359375))
text2 i.e the incoming text is the winner
collision happend with box:1156.431640625 and text:lyue solving on the basis of percent match boxes
the current box specification are
Tyul
((1285.71484375, 1287.791015625), (1421.7656250000002, 1358.162109375))
text2 i.e the incoming text is the winner
collision happend with box:1287.791015625 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Inul
((1288.0605468750002, 1405.076171875), (1426.45703125, 1489.521484375))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1269.294921875, 607.537109375), (1433.494140625, 699.01953125))
Falie
((1281.0234374999998, 727.16796875), (1428.802734375, 806.921875))
Tyue
((1273.986328125, 865.564453125), (1414.7285156249998, 950.009765625))
Tvel
((1288.0605468750002, 1006.306640625), (1428.802734375, 1090.751953125))
lyue
((1290.40625, 1156.431640625), (1424.111328125, 1245.568359375))
Tyul
((1285.71484375, 1287.791015625), (1421.7656250000002, 1358.162109375))
Inul
((1288.0605468750002, 1405.076171875), (1426.45703125, 1489.521484375))
Mrue
((1278.677734375, 1527.052734375), (1417.07421875, 1606.806640625))
Fale
((1285.71484375, 1656.06640625), (1410.037109375, 1726.4375))
Falu
((1278.677734375, 1796.80859375), (1414.7285156249998, 1876.5625))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['1', '5', '9']
the assigned keys are ['2', '3', '4', '6', '7', '8', '10']
['2', '3', '4', '6', '7', '8', '10', '2', '3', '4', '6', '7', '8', '10']
printing the number dict y_coordinate
{'2': 743, '3': 844, '4': 999, '6': 1292, '7': 1391, '8': 1538, '10': 1787, '1': 443}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6bqo0C9.jpg
OCR detection done with doctr
left top x of SN: 125.04394531249997
bottom right x of SN: 346.376953125
left top x of T/F: 980.0507812500001
bottom right x of T/F: 1361.99609375
first t/f detection
True
((996.6640625, 448.0498046875), (1080.9833984375, 495.99609375))
collision happend with box:448.0498046875 and text:True solving on the basis of percent match boxes
the current box specification are
False
((998.3173828125, 527.4091796875), (1099.169921875, 573.7021484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:527.4091796875 and text:False solving on the basis of percent match boxes
the current box specification are
false
((996.6640625, 606.7685546875), (1102.4765625, 654.71484375))
text2 i.e the incoming text is the winner
collision happend with box:606.7685546875 and text:false solving on the basis of percent match boxes
the current box specification are
True
((993.357421875, 710.927734375), (1084.2900390625, 752.2607421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:710.927734375 and text:True solving on the basis of percent match boxes
the current box specification are
fr
((986.744140625, 808.4736328125), (1037.9970703125, 856.419921875))
text1 i.e the prev text is the winner
collision happend with box:710.927734375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1044.6103515625, 815.0869140625), (1125.623046875, 856.419921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((996.6640625, 448.0498046875), (1080.9833984375, 495.99609375))
collision happend with box:448.0498046875 and text:True solving on the basis of percent match boxes
the current box specification are
False
((998.3173828125, 527.4091796875), (1099.169921875, 573.7021484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:527.4091796875 and text:False solving on the basis of percent match boxes
the current box specification are
false
((996.6640625, 606.7685546875), (1102.4765625, 654.71484375))
text2 i.e the incoming text is the winner
True
((993.357421875, 710.927734375), (1084.2900390625, 752.2607421875))
fr
((986.744140625, 808.4736328125), (1037.9970703125, 856.419921875))
collision happend with box:808.4736328125 and text:fr solving on the basis of percent match boxes
the current box specification are
True
((1044.6103515625, 815.0869140625), (1125.623046875, 856.419921875))
text2 i.e the incoming text is the winner
collision happend with box:815.0869140625 and text:True solving on the basis of percent match boxes
the current box specification are
False
((1003.27734375, 894.4462890625), (1100.8232421875, 934.1259765625))
true and false collision so given priority to text2 which is the incoming text
Trve
((1003.27734375, 985.37890625), (1087.5966796875, 1026.7119140625))
False
((1004.9306640625001, 1074.658203125), (1094.2099609375, 1107.724609375))
False
((1008.2373046875, 1158.9775390625), (1089.25, 1200.310546875))
False.
((1024.7705078125, 1261.4833984375), (1135.54296875, 1306.123046875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 424, '2': 530, '3': 598, '4': 702, '5': 805, '6': 907, '7': 977, '8': 1081, '9': 1150, '10': 1254}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ucH9S9s.jpg
OCR detection done with doctr
left top x of T/F: 5516.5859375
bottom right x of T/F: 6665.2490234375
left top x of SN: 1200.9726562499998
bottom right x of SN: 1599.0458984375002
first t/f detection
TRVE
((5592.9560546875, 2379.8427734375), (6076.509765625001, 2569.4716796875))
TRVE
((5564.51171875, 2863.396484375), (6067.0283203125, 3043.5439453125))
FALSE
((5583.474609375, 3346.9501953125), (6038.583984374999, 3517.6162109375))
FALSE
((5602.4375, 3868.4296875), (6085.991210937501, 4058.05859375))
FALJE
((5573.9931640625, 4456.279296875), (6085.991210937501, 4626.9453125))
FALSE
((5583.474609375, 4968.27734375), (6085.991210937501, 5138.943359375))
FALSE
((5573.9931640625, 5404.423828125), (6038.583984374999, 5594.052734375))
TRUE
((5536.067382812501, 5887.9775390625), (5972.2138671875, 6077.6064453125))
TRVE
((5592.9560546875, 6324.1240234375), (6085.991210937501, 6504.271484375))
TRVE
((5555.0302734375, 6911.9736328125), (5972.2138671875, 7101.6025390625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2474, '2': 2977, '3': 3318, '4': 3839, '5': 4342, '6': 4873, '7': 5224, '8': 5745, '9': 6106, '10': 6646}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uaLdeF8.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 676.44140625), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:676.44140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 916.212890625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
F
((925.80859375, 676.44140625), (952.802734375, 711.375))
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
F
((925.80859375, 879.69140625), (954.390625, 916.212890625))
F
((921.044921875, 963.849609375), (967.0937500000001, 1011.486328125))
T
((924.220703125, 1059.123046875), (948.0390625, 1081.353515625))
collision happend with box:1059.123046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((914.6933593750001, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
the.
((838.474609375, 1263.9609375), (878.171875, 1290.955078125))
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1270.3125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 420, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1062, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rIRR2QT.jpg
OCR detection done with doctr
left top x of SN: 97.265625
bottom right x of SN: 343.3828125
left top x of T/F: 1421.63671875
bottom right x of T/F: 1901.19140625
first t/f detection
falte
((1467.2382812500002, 656.0859375), (1635.07421875, 757.8046875))
collision happend with box:656.0859375 and text:falte solving on the basis of percent match boxes
the current box specification are
Falke
((1467.2382812500002, 785.77734375), (1629.98828125, 872.23828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:785.77734375 and text:Falke solving on the basis of percent match boxes
the current box specification are
Trut
((1451.98046875, 928.18359375), (1622.359375, 1029.90234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:928.18359375 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tel
((1474.8671875, 1083.3046875), (1629.98828125, 1185.0234375))
text1 i.e the prev text is the winner
Tyue
((1472.32421875, 1238.42578125), (1624.90234375, 1347.7734375))
collision happend with box:1238.42578125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
True
((1459.6093749999998, 1385.91796875), (1627.4453125000002, 1472.37890625))
text2 i.e the incoming text is the winner
collision happend with box:1385.91796875 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1467.2382812500002, 1513.06640625), (1627.4453125000002, 1604.61328125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1467.2382812500002, 656.0859375), (1635.07421875, 757.8046875))
Falke
((1467.2382812500002, 785.77734375), (1629.98828125, 872.23828125))
Trut
((1451.98046875, 928.18359375), (1622.359375, 1029.90234375))
Tel
((1474.8671875, 1083.3046875), (1629.98828125, 1185.0234375))
Tyue
((1472.32421875, 1238.42578125), (1624.90234375, 1347.7734375))
True
((1459.6093749999998, 1385.91796875), (1627.4453125000002, 1472.37890625))
Tul
((1467.2382812500002, 1513.06640625), (1627.4453125000002, 1604.61328125))
Frue
((1467.2382812500002, 1642.7578125), (1622.359375, 1731.76171875))
Falye
((1474.8671875, 1780.078125), (1609.64453125, 1861.453125))
False
((1462.15234375, 1935.19921875), (1617.2734375, 2029.2890625))
the final dict without editing {'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 912, '2': 793, '3': 905, '5': 1230, '6': 1388, '7': 1497, '8': 1658, '9': 1767, '10': 1932}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mMcX0kT.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5724.843750000001
bottom right x of T/F: 7009.562499999999
first t/f detection
FALSE
((5816.125000000001, 1986.875), (6475.40625, 2230.71875))
TRU6
((5770.96875, 2619.0625), (6376.062499999999, 2862.90625))
FALSE
((5734.843750000001, 3260.28125), (6385.093750000001, 3468.0))
TRU
((5680.656250000001, 3793.125), (6041.90625, 3982.78125))
TRUE
((5680.656250000001, 4262.75), (6222.531250000001, 4488.53125))
FALSE
((5879.34375, 4903.96875), (6583.78125, 5192.96875))
TRVE
((5861.281249999999, 5716.78125), (6556.6875, 5969.65625))
TRUE
((5816.125000000001, 6276.71875), (6385.093750000001, 6484.4375))
FALSE
((5834.187499999999, 6827.625), (6502.5, 7071.46875))
TRVE
((5743.875, 7450.78125), (6249.625000000001, 7658.5))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2619, '3': 3233, '4': 3847, '5': 4262, '6': 4876, '7': 5698, '8': 6312, '9': 6728, '10': 7550}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vhKiEc5.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 862.5000000000001
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6846.999999999999
first t/f detection
FALSE
((5816.125000000001, 2077.1875), (6321.874999999999, 2248.78125))
FALSE
((5816.125000000001, 2673.25), (6385.093750000001, 2871.9375))
FALSE
((5789.031250000001, 3296.40625), (6330.906250000001, 3504.125))
TRVE
((5716.78125, 3838.28125), (6186.406249999999, 4009.875))
TRUE
((5752.906249999999, 4316.9375), (6186.406249999999, 4479.5))
FALSE
((5725.812499999999, 4967.1875), (6213.499999999999, 5138.78125))
TRVE
((5752.906249999999, 5671.625), (6168.343750000001, 5852.25))
FALSE
((5779.999999999999, 6222.53125), (6222.531250000001, 6394.125))
TRUE
((5725.812499999999, 6764.40625), (6132.218749999999, 6945.03125))
TRUE
((5707.750000000001, 7360.46875), (6123.1875, 7532.0625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2664, '3': 3251, '4': 3856, '5': 4244, '6': 4831, '7': 5617, '8': 6204, '9': 6592, '10': 7369}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : frSrwVi.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRWE
((5202.0, 2185.5625), (5761.937500000001, 2402.3125))
TRUE
((5138.78125, 2682.28125), (5816.125000000001, 2926.125))
FALSE
((5229.09375, 3151.90625), (5834.187499999999, 3395.75))
FALSE
((5202.0, 3738.9375), (5852.25, 3982.78125))
FALSE
((5220.062500000001, 4362.09375), (5770.96875, 4569.8125))
FALSE
((5256.1875, 4795.59375), (5843.218750000001, 5057.5))
FALSE
((5202.0, 5292.3125), (5789.031250000001, 5509.0625))
TRUETKUE
((5247.156250000001, 5816.125), (6240.593749999999, 6023.84375))
FALSE
((5256.1875, 6249.625), (5861.281249999999, 6502.5))
T
((5247.156250000001, 6872.78125), (5409.718750000001, 7044.375))
collision happend with box:6872.78125 and text:T solving on the basis of percent match boxes
the current box specification are
RuE
((5391.65625, 6845.6875), (5807.093749999999, 7062.4375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['8']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '9', '10']
['1', '2', '3', '4', '5', '6', '7', '9', '10', '1', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2257, '2': 2826, '3': 3215, '4': 3811, '5': 4362, '6': 4940, '7': 5319, '9': 6303, '10': 6872}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VyHTNQ9.jpg
OCR detection done with doctr
left top x of SN: 1087.1953125
bottom right x of SN: 1494.7500000000002
left top x of T/F: 5592.4375
bottom right x of T/F: 6788.507812499999
first t/f detection
FALSE
((5621.400390625, 2578.953125), (6095.47265625, 2759.1005859375))
FALSE
((5649.8447265625, 3128.876953125), (6095.47265625, 3309.0244140625))
FALSE
((5697.251953125, 3565.0234375), (6142.8798828125, 3745.1708984375))
TRUE
((5678.2890625, 4058.05859375), (6067.0283203125, 4238.2060546875))
TRUE
((5640.36328125, 4645.908203125), (6085.991210937501, 4816.57421875))
TRUE
((5630.8818359375, 5167.3876953125), (6076.509765625001, 5347.53515625))
TRUe
((5687.7705078125, 5594.052734375), (6085.991210937501, 5774.2001953125))
TRUE
((5716.21484375, 6106.05078125), (6133.3984375, 6286.1982421875))
TRUC.
((5725.6962890625, 6551.6787109375), (6180.8056640625, 6731.826171875))
TRVe.
((5763.622070312499, 7215.3798828125), (6275.6201171875, 7386.0458984375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2607, '2': 3166, '3': 3536, '4': 4086, '5': 4645, '6': 5205, '7': 5594, '8': 6162, '9': 6532, '10': 7130}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y6Vf5sD.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6621.21875
left top x of SN: 258.03125
bottom right x of SN: 672.8437500000001
first t/f detection
FALSE
((5472.9375, 1914.625), (6096.09375, 2131.375))
TRUE
((5436.812500000001, 2546.8125), (5960.625, 2727.4375))
TRUE
((5454.874999999999, 3142.875), (5951.593750000001, 3368.65625))
FALSE
((5454.874999999999, 3693.78125), (6087.062500000001, 3892.46875))
FALSE
((5509.062499999999, 4127.28125), (6105.124999999999, 4325.96875))
TRUE
((5427.781249999999, 4804.625), (5915.468749999999, 4976.21875))
FALSE
((5509.062499999999, 5491.0), (6105.124999999999, 5662.59375))
TRUE
((5427.781249999999, 6059.96875), (5933.53125, 6276.71875))
FALSE
((5653.562500000001, 6403.15625), (6285.75, 6610.875))
T&Ur
((5472.9375, 6592.8125), (6032.875000000001, 6809.5625))
TRUE
((5409.718750000001, 7261.125), (5987.71875, 7468.84375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2023, '2': 2601, '3': 3179, '4': 3766, '5': 4154, '6': 4741, '7': 5527, '8': 6114, '9': 6511, '10': 7297}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wNpuM8I.jpg
OCR detection done with doctr
left top x of SN: 107.65624999999997
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1032.275390625, 415.72265625), (1085.44921875, 464.0625))
collision happend with box:415.72265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 502.734375), (1035.498046875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:502.734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 881.396484375), (1035.498046875, 924.90234375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((1032.275390625, 415.72265625), (1085.44921875, 464.0625))
T
((985.546875, 502.734375), (1035.498046875, 552.685546875))
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
T
((983.935546875, 881.396484375), (1035.498046875, 924.90234375))
or
((1000.0488281250001, 966.796875), (1085.44921875, 1013.525390625))
collision happend with box:966.796875 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 578, '4': 679, '5': 783, '6': 883, '7': 952, '8': 1055, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NGhWj87.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6476.718750000001
left top x of SN: 673.4687499999999
bottom right x of SN: 1088.28125
first t/f detection
TRUE
((5355.531250000001, 2212.65625), (5834.187499999999, 2429.40625))
TRUF
((5310.375, 2691.3125), (5825.15625, 2899.03125))
TRUE
((5319.406249999999, 3169.96875), (5834.187499999999, 3377.6875))
TRUE
((5355.531250000001, 3639.59375), (5807.093749999999, 3856.34375))
FALSE
((5346.499999999999, 4316.9375), (5906.4375, 4488.53125))
FALSE
((5301.343750000001, 4849.78125), (5825.15625, 5030.40625))
FALSE
((5373.593749999999, 5310.375), (5987.71875, 5481.96875))
TKUE
((5319.406249999999, 5843.21875), (5698.718749999999, 6014.8125))
TRUE
((5373.593749999999, 6276.71875), (5816.125000000001, 6484.4375))
TRUE
((5391.65625, 6890.84375), (5770.96875, 7071.46875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2880, '3': 3251, '4': 3811, '5': 4362, '6': 4931, '7': 5301, '8': 5870, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jx1zqEB.jpg
OCR detection done with doctr
left top x of SN: 121.27539062500003
bottom right x of SN: 341.240234375
left top x of T/F: 913.681640625
bottom right x of T/F: 1275.85546875
first t/f detection
Etie
((932.904296875, 373.517578125), (1008.22265625, 402.72265625))
collision happend with box:373.517578125 and text:Etie solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((931.3671874999999, 476.50390625), (1023.59375, 511.857421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:476.50390625 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
text2 i.e the incoming text is the winner
collision happend with box:557.970703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((926.7558593749999, 685.55078125), (1002.0742187500001, 716.29296875))
text1 i.e the prev text is the winner
TRVE
((929.830078125, 753.18359375), (1002.0742187500001, 783.92578125))
collision happend with box:753.18359375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((922.14453125, 857.70703125), (1006.685546875, 888.44921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Etie
((932.904296875, 373.517578125), (1008.22265625, 402.72265625))
collision happend with box:373.517578125 and text:Etie solving on the basis of percent match boxes
the current box specification are
FALSE
((939.052734375, 418.09375), (1025.130859375, 447.298828125))
text2 i.e the incoming text is the winner
collision happend with box:418.09375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((931.3671874999999, 476.50390625), (1023.59375, 511.857421875))
true and false collision so given priority to text2 which is the incoming text
TRUE
((926.7558593749999, 557.970703125), (1002.0742187500001, 588.712890625))
TRVE
((926.7558593749999, 685.55078125), (1002.0742187500001, 716.29296875))
collision happend with box:685.55078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((929.830078125, 753.18359375), (1002.0742187500001, 783.92578125))
text2 i.e the incoming text is the winner
FALSE
((922.14453125, 857.70703125), (1006.685546875, 888.44921875))
FALSE
((920.607421875, 942.248046875), (1009.7597656249999, 972.990234375))
FAL
((926.7558593749999, 1031.400390625), (979.017578125, 1062.142578125))
collision happend with box:1031.400390625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((980.5546875, 1032.9375), (1009.7597656249999, 1060.60546875))
text1 i.e the prev text is the winner
collision happend with box:1031.400390625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((926.7558593749999, 1095.958984375), (1008.22265625, 1131.3125))
true and false collision so given priority to text2 which is the incoming text
Tef
((926.7558593749999, 1200.482421875), (1008.22265625, 1235.8359375))
collision happend with box:1200.482421875 and text:Tef solving on the basis of percent match boxes
the current box specification are
FALSE
((931.3671874999999, 1258.892578125), (1014.3710937499999, 1289.634765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': False, '9': False, '10': False}
the unassigned keys are ['2', '3', '4', '5', '6']
the assigned keys are ['1', '7', '8', '9', '10']
['1', '7', '8', '9', '10', '1', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1117, '1': 650, '7': 936, '8': 1045, '10': 1225}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4us8p1f.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 645.7500000000001
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6567.03125
first t/f detection
TRUE
((5400.687499999999, 1761.09375), (5969.656249999999, 1968.8125))
FALSE
((5409.718750000001, 2357.15625), (5951.593750000001, 2564.875))
FALSE
((5436.812500000001, 2944.1875), (5942.562499999999, 3160.9375))
TRUE
((5409.718750000001, 3513.15625), (5960.625, 3711.84375))
TRUE
((5382.625000000001, 3964.71875), (5915.468749999999, 4172.4375))
FALSE
((5409.718750000001, 4633.03125), (6050.937499999999, 4876.875))
TRUE
((5400.687499999999, 5310.375), (5951.593750000001, 5527.125))
TRUE
((5391.65625, 5834.1875), (5915.468749999999, 6014.8125))
TRUE
((5418.75, 6394.125), (5942.562499999999, 6610.875))
TRUE
((5463.906250000001, 7008.25), (6032.875000000001, 7206.9375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1824, '2': 2420, '3': 2998, '4': 3585, '5': 3973, '6': 4569, '7': 5346, '8': 5933, '9': 6321, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yc12lqc.jpg
rotation started
['bf', '3', 'N', 'I', 'E', 'I', '9', 'E', 'L', 'I', '2', 'I', 'p', '8', 'I', 'it', 'e', 'E', 'E', '8', 'E', 'f', 'I', 'E', 'E', 'I', '8', 'E', 'I', 's', 'I', 'E', 'E', 'I', 'a', 'I', '8', 'I', 'f', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'I', 'E', 'it', 'I', 'E', 'E', 'f', 'a', 'Q', 'I', 'I', 'E', 'B', 'I', '8', 'it', '8', 'I', 'I', 'I', 'f', 'I', 'I', '8', '8', '2', 'a', 'E', '1', 'I', 'E', 'E', 'I', 'E', '1', '€', 'E', 'I', '€', 'E', 'I', 'E', 'e', '8', 'I', 'it', 'I', 'I', 'I', 'E', 'I', 'a', '2', 'I', 'of', '8', 'I', 'I', 'E', 'I', 'E', '8', '2', 'I', 'I', 'E', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'p', 't', 'E', 'E', '€', '9', 'f', 'I', 'E', 'I', 'e', 'E', 'a', 'E', 'I', 'I', 'I', 't', 'E', 'I', 'I', '1', 'E', 'F', 'I', 'I', 'I', 'F', '6o', '00', '1', 'o', 'CT', '4', '11', '2', 'so', 'a', 'E', '-', 'a', '9', 'E', 'E', 'i', 'I', 'E', 'E', 'F', '>', 'I', 'P', '&', 'I', 'I', 'I', '-', 'I', 'E', 'e', 'I', 'I', 'I', 'I', 'E', '2', 'I', 'I', 'E', '2', 'it', 'E', 'I', 'E', '2', 'E', 'I', 'I', 'it', 'I', 'I', 'E', '2', '€', 'E', 'E', ':', 'E', '€', '-', '2', 'I', '-', 'L', 'RE', 'te', '4', 'D', 'A', 'Din', 'X', 'MEd']
rotation started
['"ezep', 'ueosun', "'mou", '09', 'TTOM', 'azire.ioues', 'gou', 'op', 'geyn', 'egep', 'Surureng', '3041', 'eua', 'uT', 'smegep', 'JO', 'OSIOU', 'oyreds', 'amadeo', '01', 'ureol', 'Keur', 'lapou', 'au4', 'se', "'soseaIo", '-ur', 'SurayIeno', 'Jo', 'YSLI', 'eyn', "'WAS", 'UI', 'pojoure.red', 'D', 'au4', 'Jo', 'anyea', 'y8ry', 'e', 'YAIM', 'OT', 'uororpaad', 'B', 'Suryeur', "'sossero", 'Jo', 'roqunu', 'a8rel', 'e', 'YAIM', 'suarqoid', 'sseppramur', 'JOI', '6', '2091', "'WAS", '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', '35743', 'aoeds', 'TeurBto', 'auy', 'UI', 'JBOUIT-uou', 'aq', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsioap', 'OUL', '8', '3S789', "'sapou", 'Jo', 'poqunu', 'au7', '01', 'Teuorniodoud', 'Amperp', 'SI', 'BOIL', 'UOISIDOC', 'euy', 'UI', 'uororpard', 'e', 'Suryeur', 'JOJ', 'pammbar', 'OUIL', 'OUL', 'L', '95743', '"uornquasip', 'uerssnes', 'B', 'Skenre', 'SI', 'suorgnqugsip', 'uerssnes', 'OM7', 'Jo', 'amgXIu', 'V', '9', '30dL', '-ald', 'UOomgOq', 'nord', 'B', 'SI', 'OAINO', '(0OH)', 'orsutegpereud', 'Surge.rado', 'IOAIODOY', 'OUL', 'S', '2574', 'SI', 'quaosap', 'querpe1s', 'TIYM', "'SAU8IOM", 'auy', 'agepdn', '07', 'pasn', 'SI', 'uoneBodoxdypeg', '4', 'TreDoy', 'pue', 'UOISIO', '"YIOMIOU', '[emeu', 'eu7', 'UI', 'squerpers', 'au7', 'agnduoo', '01', 'pesn', ':f', 'pue', 'I', 'SIO9OOA', '308L', 'Teuorsueuump-p', 'Kue', 'IOJ', 'olIgauI', 'aouegsip', 'PITBA', 'B', 'SI', '(A-zAuopuagousoy', '-', 'I', '&', 'poyisselo', 'JBOUII-uou', 'e', 'SI', 'NNY', '2', 'quotutemmbar', 'a8e10qs', 'aun', 'STeordAL', 'I', '3081', 'IMaL', 'oivalanuL', 'quaurfoydap', '1', 'AvO', 'epO', '>', 'sere', 'FaS', 'ueya', '1a81e1', 'yonur', 'SI', 'NNX', 'JOJ', 'JOJ', 'WAS', 'NS', 'quouagens', 'OALIM', 'mor', ':0.104', 'paqunu', 'IIO.I', '29LM', '(sad', 'OT)', '6', 'IO', 'ANAL', 'Teardeo', 'UI', 'ASTVA', 'reepo', 'pure', 'S.I21101', 'Surgumpuey', 'Sepui']
rotation started
['na', 'V', 'MNO', '-', 'T', 'SAy', '%', '-', 'ERE', 'I', '-', '-', 'à', '-', '-', 'E', '€', 'à', '2', '2', 'a', 'E', 'a', 'I', 'i', 'is', 'E', 'a', 'I', 'is', 'I', 'E', 'I', 'I', 'is', 'I', 'a', 'I', 'I', 'I', 'à', 'I', 'a', 'E', 'a', 'of', '6', 'a', 's', 'is', 'a', 'I', 'I', 'iE', 'I', 'i', 'à', 'à', 'E', 'a', 'I', ':', 'e', 'I', 'I', 'a', '1', 'I', 'iE', 'I', 'of', ':', '1', 'I', 'I', 'f', 'I', '8', 'is', 'e', 'I', 'iE', 'o', 'e', 'a', 'I', 'E', '1', 'I', '2', '-', 'iE', '', '1', ':', ':', '0', 'is', '8', 'i', 'of', 'E', 'a', 'I', 'I', '8', 'E', '0', 'E', 'I', 'I', 'I', 'of', ':', 'I', 'I', 'is', 'I', 'T', 's', 'i', 'e', 'à', ':', 'is', 'e', 'I', '-', 'of', 'de', 'S', 'I', 'E', 'e', 'I', '1', 'o', 'I', 'à', 'a', 'E', 'I', 'of', 'I', 'a', '', '8', 'I', '5', 'a', '$', 'is', '00', 'I', 'E', 'a', 'I', 'à', 'I', 'I', 'I', 'I', '2', '1', 'I', 'I', 'I', 'C', '3', 'E', 'e', 'E', 'I', '1', 'I', 'I', '3', 'E', 'I', '1', 'iE', '-', 'e', 'E', 'à', 'E', 'e', 'o', 'E', 'I', '2', '3', ':', 'I', 'e', 'I', '1', 'I', 'I', 'I', 'T', 'E', '.', '', 'E', 'E', 'E', 'I', '€', 'I', 'I', '7', '11', '4', '10', '6', 'I', '00', 'o', '1f']
rotation started
['handwriting.', 'Ipbarn', 'and', 'clear', 'letters', 'in', 'capital', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'Sas', 'X', 'Hiae', 'cove', 'DNTE', '1', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', '1', 'Typically,', 'the', 'storage', 'deployment.', 'TRUE/FALS', 'TRUE', 'TRUG', 'than', 'SVM', 'for', 'is', 'much', 'larger', 'requirement', 'for', 'KNN', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalarityl.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALSE', 'FALSE', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRVE']
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 817.34375
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:50:38] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : yc12lqc.jpg
[2024/07/01 15:50:39] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:50:40] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.11483263969421387
[2024/07/01 15:50:42] ppocr DEBUG: rec_res num  : 41, elapsed : 1.9314453601837158
OCR detection done
left top x of SN: 447.0
bottom right x of SN: 905.0
left top y of SN: 1913.0
bottom right y of SN: 2158.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/yc12lqc.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nQw20fw.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1159.71875
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:414.94921875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((829.3515624999999, 496.03125), (869.09765625, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
PPLSE
((819.8125, 683.6328125), (904.07421875, 720.19921875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
FAL
((829.3515624999999, 496.03125), (869.09765625, 524.6484375))
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
PPLSE
((819.8125, 683.6328125), (904.07421875, 720.19921875))
PAL
((816.6328125, 766.3046875), (865.91796875, 798.1015625))
collision happend with box:766.3046875 and text:PAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 766.3046875), (900.89453125, 794.921875))
text1 i.e the prev text is the winner
collision happend with box:766.3046875 and text:PAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 874.4140625))
text2 i.e the incoming text is the winner
TRVE
((816.6328125, 930.05859375), (894.5351562500001, 953.90625))
collision happend with box:930.05859375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (896.125, 1028.62890625))
text2 i.e the incoming text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 996, '1': 325, '2': 421, '3': 483, '4': 581, '5': 677, '6': 772, '7': 836, '8': 931, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FMctx8O.jpg
rotation started
['eep', 'uaosun', '"mau', '01', 'Tm', 'ampeamal', 'JO', 'op', 'DE', 'aueg', 'Sum', 'aui', 'ul', 'sTesap', '10', 'astou', 'ogpeds', 'ampdeo', '01', 'mmer', 'famm', 'Ppom', 'a', 'se', 'seRal', 'IAuL', '-ur', 'Sumgiano', 'jo', 'ysu', 'aqi', 'TAS', 'a', 'mpmamad', 'ap', 'p', 'ane', 'yl', 'uoporpaad', 'e', 'Supgeur', '"sassep', 'go', 'nqum', 'allmer', 'a', 'Tm', 'smarnat', 'JAAYL', 'raoeds', 'Teurduo', 'aqi', 'uT', 'meaur', 'T-0O0', 'aq', 'D', 'ILAS', 'ma', 'la', 'fmpma', 'JOYL', 'd', 'Appamp', 'SI', 'BOIL', 'mogsted', 'aq', 'LE', 'cogorpead', 'a', 'Suppamm', 'ag', 'a', 'JS11', 'mornquistp', 'megssties', 'E', 'siange', 'SI', 'smognor', 'TETSSES', 'Cao', '39741', '-and', 'maamgaq', 'sopd', 'e', 'ST', 'aumo', '(oa)', 'OOERDRED', 'Su', '31Y', 'L', 'SI', 'waosap', 'magpel', 'agga', 'sutam', 'age', 'apapdn', 'au', 'gasi', '4', '30y', '0', 'CpP', 'lme', 'Jog', 'aurgm', 'aomup', 'PTRL', 'aE', 'EE', 'A', 'TE', 'TAS', '1591-51-900', 'mg', 'mog', 'ST', 'IIS', 'am-it-as', 'Sman', 'TI', '7', 'sepom', 'p', 'Bqm', 'ar', 'au', 'a', 'gire', 'aomjen', 'pmam', 'ap', 'L', 'sutaped', 'ap', '-', 'timm', 'aE', 'Jen', '-', 'Rgssep', 'a', '-', 'a', '3041', 'MAS', 'oRg', 'slmt', 'span', 'SE', '00E', 'ag', 'uommliar', '-', 'JAYL', '30g', '39TVA/AMTAL', 'mamgng', '/', 'F', 'y', 'saug', 'agum', '', 'a', 'aa', 'pantes', 'BE', 'a', '-', 'la', 'APA', 'ined', 'a', 'Bupasnponeng', 'mp', 'prue', 'a39E']
rotation started
['4', '219103', 'SNTIA', ':', '2', '-', '9', 'E', 'C', 'I', 'ktr', '', 'à', 'I', 'I', 'I', '1', 'I', '', 'I', 'I', 'I', 'A', '1', 'I', 'I', 'a', 'a', 'a', '', 'a', 'I', 'a', 'I', 'I', '1', 'I', 'ad', 'I', 'I', '1', 'I', '1', '8', 'à', 'I', '1', 'à', 'a', 'I', 'A', 'M', 'I', 'a', 'I', '1', 'I', 'I', '1', 'I', 'I', '#', 'à', 'I', 'I', 'à', 'I', 'A', '-', 'A', 'I', ':', '1', '-', '1', 'I', 'I', 'I', '-', 'I', 'I', '-', '-', ':', '-', '-', '3', 'à', 'J', 'I', '1', 'i', 'B', 'a', 'I', '4', 'a', 'E', 'I', '1', 'I', '1', '1', 'I', '1', 'a', 'I', 'a', 'B', 'E', 'I', 'I', 'a', 'a', 'e', '8', 'à', '1', 'a', '1', 'I', 'a', 'S', '1', 'I', 'a', 'L', 'a', '1', 'a', '-', 'J', "'8", 'a', 'I', 'a', 'I', 'I', '1', 'I', "'9", '1', '', 'à', 'I', 'I', 'a', 'I', '1', 'Y', 'à', 'a', 'e', '8', 'I', '1', 'J', '', '9', 'à', '1', 'a', 'J', 'A', '1', '-', 'e', '-', 'N', 'A', 'a', 'I', 'I', '1e', 'I', 'I', 'a', 'e', '1', 'I', 'I', '8', 'al', '1', 'I', 'I', 'a', "'8", '8', '1', 'I', '8', '8', '-', '-', '-', 'a', 'I', 'I', 'à', '1', '1', 'J']
rotation started
['', '-', '-', ':', 'A', '$', '/', 'Jetes', 'and', 'cear', 'huandariting', '21', 'gaa', 'Matne', '', 'EY', '-', 'LEF', 'in', 'cagittal', 'Witite', 'pour', 'mill', 'mumiber', 'heme', 'TRUE/FALSE', '4', 'Stattement', 'A', 'than', 'SVM', 'for', 'TRVE', 'Tigaicalis', 'fie', 'aanage', 'meguinement', 'for', 'KOX', 'is', 'mud', 'larger', 'Sigiimme', 'TRDE', 'a', 'momlmear', 'ddiasstfer', 'fai', 'iE', 'a', 'mailid', 'distamne', 'metric', 'for', 'a', 'dimemsional', 'TRUE', '-', 'mt', 'E', 'ompgatinn', 'ia', 'mged', 'ao', 'update', 'the', 'weigtnts', 'while', 'gradient', 'descent', 'is', 'TRVE', 'mommpute', 'the', 'gradienns', 'in', 'the', 'meural', 'metwork', 'e', 'Reeneiee', 'Opematting', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre', 'FALSE', 'miiue', 'af', 'fmmp', 'Gaumian', 'distributtions', 'is', 'always', 'a', 'Gamssian', 'distribution', 'FALSE', '-', 'Tiime', 'maguined', 'for', 'meling', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'P', 'TRUE', 'T', 'aud', 'Recal', 'mapartinnal', 'mo', 'dhe', 'mumiber', 'af', 'modes', '', '-', 'Bepundary', 'af', 'a', 'SVM', 'Cam', 'be', 'nom-linear', 'in', 'the', 'original', 'space.', 'TRUDE', 'Far', 'muitiias', 'gouitilemus', 'with', 'a', 'lange', 'mumber', 'of', 'classes,', 'making', 'a', 'prediction', 'TRVE', 'Ter', 'SSIDE', 'SW', 'is', 'slower', 'tham', 'one-vs-rest', 'SVM', 'a', 'allue', 'af', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'TRVE', '-', 'a', 'the', 'model', 'may', 'lear', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'traning', 'data', 'dhant', 'do', 'mot', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
rotation done for:  FMctx8O.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of T/F: 5429.013671875
bottom right x of T/F: 6613.810546875
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:51:06] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : FMctx8O.jpg
[2024/07/01 15:51:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:51:07] ppocr DEBUG: dt_boxes num : 30, elapsed : 0.16356372833251953
[2024/07/01 15:51:09] ppocr DEBUG: rec_res num  : 30, elapsed : 1.490708351135254
OCR detection done
cant detect s/n column also so going with all detection using box width
first t/f detection
NAEE
[[6797.0, 1200.0], [6978.0, 1310.0], [6704.0, 1750.0], [6524.0, 1639.0]]
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
COunsE
[[7187.0, 1255.0], [7392.0, 1376.0], [7039.0, 1964.0], [6834.0, 1843.0]]
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947]
the false list is  []
the true list for xdirn [1122]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947, 2133]
the false list is  []
the true list for xdirn [1122, 5524]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133]
the false list is  []
the true list for xdirn [1122, 5524]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947, 2133, 2679]
the false list is  []
the true list for xdirn [1122, 5524, 5608]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679]
the false list is  []
the true list for xdirn [1122, 5524, 5608]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5434.0, 4321.0], [6217.0, 4297.0], [6224.0, 4537.0], [5442.0, 4561.0]]
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[5482.0, 4797.0], [6214.0, 4821.0], [6207.0, 5041.0], [5475.0, 5017.0]]
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947, 2133, 2679, 3163, 6216]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163, 6216]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163, 6216]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [1947, 2133, 2679, 3163, 6216, 6806]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442, 5483]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163, 6216, 6806]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442, 5483]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [1947, 2133, 2679, 3163, 6216, 6806]
the false list is  []
the true list for xdirn [1122, 5524, 5608, 5543, 5442, 5483]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qNdhAQG.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6413.499999999999
left top x of SN: 989.5625
bottom right x of SN: 1377.2812500000002
first t/f detection
Tue
((5491.000000000001, 2456.5), (6050.937499999999, 2709.375))
Tue
((5364.5625, 2989.34375), (5987.71875, 3188.03125))
False
((5418.75, 3431.875), (6041.90625, 3639.59375))
Tue,
((5436.812500000001, 4000.84375), (6023.843749999999, 4172.4375))
Frtre
((5337.46875, 4533.6875), (5951.593750000001, 4732.375))
False
((5454.874999999999, 4714.3125), (6078.031249999999, 4913.0))
Tue
((5418.75, 4994.28125), (6023.843749999999, 5202.0))
fale
((5463.906250000001, 5454.875), (6050.937499999999, 5671.625))
Tue
((5409.718750000001, 5924.5), (5915.468749999999, 6105.125))
Tue
((5364.5625, 6348.96875), (5852.25, 6574.75))
falie
((5418.75, 6872.78125), (6014.8125, 7116.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2646, '2': 3151, '3': 3495, '4': 4018, '5': 4524, '6': 5048, '7': 5391, '8': 5906, '9': 6258, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mWBX4hq.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 325.20410156249994
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
Tyuc
((1416.1083984375, 627.615234375), (1518.2783203125002, 676.267578125))
collision happend with box:627.615234375 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 758.9765625), (1525.576171875, 807.62890625))
text2 i.e the incoming text is the winner
collision happend with box:758.9765625 and text:True solving on the basis of percent match boxes
the current box specification are
Falte
((1428.271484375, 885.47265625), (1540.171875, 938.990234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:885.47265625 and text:Falte solving on the basis of percent match boxes
the current box specification are
fatie
((1425.8388671875, 1019.2666015625), (1528.0087890625, 1077.6494140625))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1194.4150390625), (1520.7109375, 1243.0673828125))
collision happend with box:1194.4150390625 and text:Falk solving on the basis of percent match boxes
the current box specification are
false
((1416.1083984375, 1323.34375), (1523.1435546875, 1371.99609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1323.34375 and text:false solving on the basis of percent match boxes
the current box specification are
frda
((1408.810546875, 1454.705078125), (1537.7392578125, 1513.087890625))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Tyuc
((1416.1083984375, 627.615234375), (1518.2783203125002, 676.267578125))
True
((1420.9736328125, 758.9765625), (1525.576171875, 807.62890625))
Falte
((1428.271484375, 885.47265625), (1540.171875, 938.990234375))
fatie
((1425.8388671875, 1019.2666015625), (1528.0087890625, 1077.6494140625))
Falk
((1413.67578125, 1194.4150390625), (1520.7109375, 1243.0673828125))
false
((1416.1083984375, 1323.34375), (1523.1435546875, 1371.99609375))
frda
((1408.810546875, 1454.705078125), (1537.7392578125, 1513.087890625))
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
fek
((1552.3349609375, 1452.2724609375), (1635.0439453125, 1508.22265625))
text1 i.e the prev text is the winner
Thue
((1425.8388671875, 1586.06640625), (1525.576171875, 1634.71875))
Tuue
((1430.7041015624998, 1707.697265625), (1535.306640625, 1756.349609375))
True
((1408.810546875, 1890.1435546875), (1520.7109375, 1943.6611328125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 866, '2': 756, '3': 863, '4': 1021, '5': 1177, '6': 1333, '7': 1435, '8': 1595, '9': 1700, '10': 1858}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kLPP4io.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1224.91796875
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:549.296875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((886.05078125, 757.59765625), (957.02734375, 785.37109375))
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
text1 i.e the prev text is the winner
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((876.7929687499999, 925.78125), (940.0546875, 955.09765625))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
TRUE
((886.05078125, 757.59765625), (957.02734375, 785.37109375))
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
TRVE
((876.7929687499999, 925.78125), (940.0546875, 955.09765625))
FAL
((875.25, 1012.1875), (926.16796875, 1041.50390625))
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((926.16796875, 1013.73046875), (955.484375, 1039.9609375))
text1 i.e the prev text is the winner
FALSE
((876.7929687499999, 1093.96484375), (952.3984374999999, 1124.82421875))
TRUE
((870.6210937500001, 1206.6015625), (947.76953125, 1242.08984375))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 374, '2': 476, '3': 544, '4': 644, '5': 745, '6': 845, '7': 913, '8': 1016, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1gwlmOe.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6278.031249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5472.9375, 1652.71875), (6069.0, 1896.5625))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5138.78125, 1788.1875), (5761.937500000001, 2104.28125))
text2 i.e the incoming text is the winner
FtsFASE
((5165.875, 2230.71875), (6186.406249999999, 2519.71875))
FACSE
((5138.78125, 2835.8125), (5897.406250000001, 3079.65625))
TRUE
((5174.90625, 3395.75), (5861.281249999999, 3612.5))
TRUE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
FTRUE
((5129.75, 4371.125), (6069.0, 4614.96875))
FALSE
((5138.78125, 4867.84375), (5861.281249999999, 5129.75))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
RUE
((5192.96875, 5355.53125), (5798.0625, 5572.28125))
FALSE
((5138.78125, 5834.1875), (5861.281249999999, 6168.34375))
FALSE
((5229.09375, 6339.9375), (5951.593750000001, 6737.3125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1941, '2': 2483, '3': 2853, '4': 3404, '5': 3946, '6': 4497, '7': 4867, '8': 5427, '9': 5807, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oYYOzj0.jpg
OCR detection done with doctr
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6837.96875
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
F
((5852.25, 1779.15625), (6059.968750000001, 2023.0))
T
((5843.218750000001, 2393.28125), (6069.0, 2628.09375))
F
((5843.218750000001, 3043.53125), (6041.90625, 3278.34375))
T
((5752.906249999999, 3576.375), (6041.90625, 3775.0625))
T
((5852.25, 4046.0), (6123.1875, 4316.9375))
F
((5807.093749999999, 4669.15625), (5996.749999999999, 4958.15625))
T
((5843.218750000001, 5445.84375), (6132.218749999999, 5689.6875))
T
((5915.468749999999, 5960.625), (6150.28125, 6186.40625))
F
((5843.218750000001, 6484.4375), (6041.90625, 6719.25))
T
((5789.031250000001, 7225.0), (6050.937499999999, 7450.78125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3097, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6069, '9': 6466, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7UgFm9q.jpg
OCR detection done with doctr
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6919.25
left top x of SN: 547.0312500000001
bottom right x of SN: 961.8437499999999
first t/f detection
TRUE
((5635.5, 2013.96875), (6240.593749999999, 2257.8125))
TRVE
((5617.437499999999, 2610.03125), (6213.499999999999, 2817.75))
TRue
((5599.375000000001, 3179.0), (6231.5625, 3395.75))
FALSE
((5581.3125, 3829.25), (6231.5625, 4027.9375))
FALSE
((5545.187500000001, 4461.4375), (6231.5625, 4669.15625))
TRUE
((5500.03125, 5021.375), (6087.062500000001, 5238.125))
FALSE
((5518.093750000001, 5527.125), (6258.65625, 5770.96875))
TRUE
((5554.21875, 6059.96875), (6195.437500000001, 6276.71875))
TRUE
((5563.249999999999, 6547.65625), (6141.250000000001, 6764.40625))
TRVE
((5518.093750000001, 7252.09375), (6177.375, 7450.78125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2826, '3': 3233, '4': 3829, '5': 4434, '6': 5048, '7': 5454, '8': 6069, '9': 6484, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BlQwjrY.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tut
((1416.6328125, 640.75), (1519.2529296875, 700.8203125))
collision happend with box:640.75 and text:Tut solving on the basis of percent match boxes
the current box specification are
True
((1414.1298828125, 780.9140625), (1524.2587890625, 833.4755859375))
text2 i.e the incoming text is the winner
collision happend with box:780.9140625 and text:True solving on the basis of percent match boxes
the current box specification are
fosa
((1396.609375, 911.06640625), (1524.2587890625, 973.6396484375))
text2 i.e the incoming text is the winner
collision happend with box:911.06640625 and text:fosa solving on the basis of percent match boxes
the current box specification are
Falk
((1424.1416015625, 1058.7392578125), (1551.791015625, 1118.8095703125))
text2 i.e the incoming text is the winner
collision happend with box:1058.7392578125 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
text2 i.e the incoming text is the winner
fask
((1526.7617187500002, 888.5400390625), (1629.3818359374998, 956.119140625))
Ef
((1356.5625, 1351.58203125), (1441.662109375, 1406.646484375))
collision happend with box:1351.58203125 and text:Ef solving on the basis of percent match boxes
the current box specification are
Faes
((1421.6386718749998, 1346.576171875), (1539.2763671875, 1411.65234375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tut
((1416.6328125, 640.75), (1519.2529296875, 700.8203125))
True
((1414.1298828125, 780.9140625), (1524.2587890625, 833.4755859375))
fosa
((1396.609375, 911.06640625), (1524.2587890625, 973.6396484375))
Falk
((1424.1416015625, 1058.7392578125), (1551.791015625, 1118.8095703125))
falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
fask
((1526.7617187500002, 888.5400390625), (1629.3818359374998, 956.119140625))
Ef
((1356.5625, 1351.58203125), (1441.662109375, 1406.646484375))
collision happend with box:1351.58203125 and text:Ef solving on the basis of percent match boxes
the current box specification are
Faes
((1421.6386718749998, 1346.576171875), (1539.2763671875, 1411.65234375))
text2 i.e the incoming text is the winner
Falh
((1436.65625, 1476.728515625), (1554.2939453125, 1539.3017578125))
BThu
((1369.0771484375, 1624.4013671875), (1521.755859375, 1681.96875))
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
Tre
((1426.6445312500002, 1927.255859375), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 788, '3': 896, '4': 1056, '5': 1213, '6': 1374, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZvHkGNT.jpg
OCR detection done with doctr
left top x of SN: 920.1250000000002
bottom right x of SN: 1322.40625
left top x of T/F: 5275.34765625
bottom right x of T/F: 6374.47265625
first t/f detection
Toel
((5313.132812499999, 2232.07421875), (5748.43359375, 2417.30859375))
True
((5303.87109375, 2722.9453125), (5739.171875, 2908.1796875))
false
((5359.44140625, 3167.5078125), (5794.7421875, 3352.7421875))
Bllobemue
((5303.87109375, 3621.33203125), (6081.855468749999, 3797.3046875))
falke
((5655.81640625, 4241.8671875), (6072.593749999999, 4380.79296875))
collision happend with box:4241.8671875 and text:falke solving on the basis of percent match boxes
the current box specification are
rasuee
((5303.87109375, 4232.60546875), (5683.6015625, 4408.578125))
true and false collision so given priority to text2 which is the incoming text
-faise
((5266.82421875, 4667.90625), (5748.43359375, 4834.6171875))
-fane
((5303.87109375, 5093.9453125), (5794.7421875, 5325.48828125))
Joue
((5322.394531249999, 5566.29296875), (5804.00390625, 5742.265625))
Tnue
((5424.2734375, 5936.76171875), (5813.265625, 6131.2578125))
faue
((5331.656249999999, 6483.203125), (5868.8359375, 6696.22265625))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2722, '3': 3074, '4': 3612, '5': 4130, '6': 4667, '7': 5019, '8': 5557, '9': 5918, '10': 6464}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y1LnCHF.jpg
OCR detection done with doctr
left top x of T/F: 5331.09375
bottom right x of T/F: 6492.531250000001
left top x of SN: 690.2812499999999
bottom right x of SN: 1098.9921875
first t/f detection
TRUE
((5469.171875, 2159.03125), (6036.375, 2360.296875))
TRUE
((5460.0234375, 2689.640625), (6091.265625, 2863.4609375))
TRUE
((5423.4296875, 3156.2109375), (6072.96875, 3366.625))
FALSE
((5423.4296875, 3787.453125), (6063.8203125, 3952.125))
T
((5414.281250000001, 4363.8046875), (5615.546875, 4519.328125))
collision happend with box:4363.8046875 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5615.546875, 4345.5078125), (5981.484375, 4519.328125))
text2 i.e the incoming text is the winner
TRUE
((5368.539062499999, 4839.5234375), (5926.59375, 5013.34375))
FALSE
((5368.539062499999, 5306.09375), (5917.4453125, 5479.9140625))
FALSE
((5341.09375, 5781.8125), (5825.9609375, 5955.6328125))
TRUE
((5350.2421875, 6202.640625), (5853.40625, 6367.3125))
TRU
((5304.5, 6824.734375), (5716.1796875, 6989.40625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2241, '2': 2799, '3': 3165, '4': 3723, '5': 4272, '6': 4839, '7': 5205, '8': 5772, '9': 6147, '10': 6714}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xicjOgf.jpg
OCR detection done with doctr
left top x of SN: 175.12011718749997
bottom right x of SN: 397.96679687499994
left top x of T/F: 1015.779296875
bottom right x of T/F: 1400.59375
first t/f detection
fale
((1056.62890625, 474.7412109375), (1147.4638671875, 527.87109375))
collision happend with box:474.7412109375 and text:fale solving on the basis of percent match boxes
the current box specification are
filke
((1058.3427734375, 551.865234375), (1150.8916015625, 604.9951171875))
text1 i.e the prev text is the winner
collision happend with box:474.7412109375 and text:fale solving on the basis of percent match boxes
the current box specification are
Taus
((1101.189453125, 635.8447265625), (1200.59375, 687.2607421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:635.8447265625 and text:Taus solving on the basis of percent match boxes
the current box specification are
Bul
((1032.634765625, 745.5322265625), (1140.6083984375, 802.08984375))
text1 i.e the prev text is the winner
loue
((1024.0654296875, 843.22265625), (1138.89453125, 894.638671875))
collision happend with box:843.22265625 and text:loue solving on the basis of percent match boxes
the current box specification are
pull
((1030.9208984375, 922.060546875), (1150.8916015625, 971.7626953125))
text2 i.e the incoming text is the winner
collision happend with box:922.060546875 and text:pull solving on the basis of percent match boxes
the current box specification are
Tquie
((1082.3369140625, 1009.4677734375), (1193.73828125, 1059.169921875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
fale
((1056.62890625, 474.7412109375), (1147.4638671875, 527.87109375))
collision happend with box:474.7412109375 and text:fale solving on the basis of percent match boxes
the current box specification are
filke
((1058.3427734375, 551.865234375), (1150.8916015625, 604.9951171875))
text1 i.e the prev text is the winner
Taus
((1101.189453125, 635.8447265625), (1200.59375, 687.2607421875))
Bul
((1032.634765625, 745.5322265625), (1140.6083984375, 802.08984375))
loue
((1024.0654296875, 843.22265625), (1138.89453125, 894.638671875))
collision happend with box:843.22265625 and text:loue solving on the basis of percent match boxes
the current box specification are
pull
((1030.9208984375, 922.060546875), (1150.8916015625, 971.7626953125))
text2 i.e the incoming text is the winner
Tquie
((1082.3369140625, 1009.4677734375), (1193.73828125, 1059.169921875))
bue
((1034.3486328125, 1098.5888671875), (1128.611328125, 1151.71875))
Jue
((1036.0625, 1317.9638671875), (1121.755859375, 1372.8076171875))
fue
((1039.490234375, 1196.279296875), (1121.755859375, 1240.83984375))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are ['4', '5']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9', '10']
['1', '2', '3', '6', '7', '8', '9', '10', '1', '2', '3', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 574, '3': 642, '1': 642, '6': 951, '7': 1016, '8': 1120, '9': 1191, '10': 1292}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZcOeygj.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1885.0703125000002
first t/f detection
falu
((1443.859375, 632.2265625), (1621.59375, 738.8671875))
collision happend with box:632.2265625 and text:falu solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Ful
((1446.3984374999998, 1081.640625), (1611.4375, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1081.640625 and text:Ful solving on the basis of percent match boxes
the current box specification are
grw
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
text1 i.e the prev text is the winner
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
collision happend with box:1388.8671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1443.859375, 632.2265625), (1621.59375, 738.8671875))
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
Ful
((1446.3984374999998, 1081.640625), (1611.4375, 1180.6640625))
grw
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
fale
((1423.546875, 1645.3125), (1573.3515624999998, 1734.1796875))
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TQUHeNf.jpg
OCR detection done with doctr
left top x of T/F: 5994.685546875
bottom right x of T/F: 7182.675781249999
left top x of SN: 1503.8525390624998
bottom right x of SN: 1903.4013671875
first t/f detection
Taul
((6114.4599609375, 2594.66796875), (6653.3525390625, 2894.052734375))
Tue
((6064.5625, 3203.4169921875), (6483.701171875, 3442.9248046875))
d-dimensional
((5066.61328125, 3702.3916015625), (6014.6650390625, 4011.755859375))
collision happend with box:3702.3916015625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
false
((6124.439453125, 3742.3095703125), (6503.66015625, 3951.87890625))
true and false collision so given priority to text2 which is the incoming text
is
((5884.931640625, 4361.0380859375), (6044.603515625, 4520.7099609375))
collision happend with box:4361.0380859375 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((6114.4599609375, 4380.9970703125), (6882.880859375, 4660.4228515625))
text2 i.e the incoming text is the winner
Pre-
((5765.177734375001, 4989.74609375), (6074.5419921875, 5149.41796875))
collision happend with box:4989.74609375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((6184.31640625, 4929.869140625), (6922.798828125, 5209.294921875))
text2 i.e the incoming text is the winner
distribution.
((5296.1416015625, 5618.4541015625), (6124.439453125, 5798.0849609375))
collision happend with box:5618.4541015625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((6284.111328125, 5498.7001953125), (7012.6142578125, 5768.146484375))
text1 i.e the prev text is the winner
directly
((5625.46484375, 6037.5927734375), (6144.3984375, 6227.203125))
collision happend with box:6037.5927734375 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((6353.967773437501, 5997.6748046875), (7042.552734375001, 6237.1826171875))
true and false collision so given priority to text2 which is the incoming text
going with doctr less gap
starting with low row gap
first t/f detection
Taul
((6114.4599609375, 2594.66796875), (6653.3525390625, 2894.052734375))
Tue
((6064.5625, 3203.4169921875), (6483.701171875, 3442.9248046875))
d-dimensional
((5066.61328125, 3702.3916015625), (6014.6650390625, 4011.755859375))
collision happend with box:3702.3916015625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
false
((6124.439453125, 3742.3095703125), (6503.66015625, 3951.87890625))
true and false collision so given priority to text2 which is the incoming text
is
((5884.931640625, 4361.0380859375), (6044.603515625, 4520.7099609375))
collision happend with box:4361.0380859375 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((6114.4599609375, 4380.9970703125), (6882.880859375, 4660.4228515625))
text2 i.e the incoming text is the winner
Pre-
((5765.177734375001, 4989.74609375), (6074.5419921875, 5149.41796875))
collision happend with box:4989.74609375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((6184.31640625, 4929.869140625), (6922.798828125, 5209.294921875))
text2 i.e the incoming text is the winner
distribution.
((5296.1416015625, 5618.4541015625), (6124.439453125, 5798.0849609375))
FALSE
((6284.111328125, 5498.7001953125), (7012.6142578125, 5768.146484375))
directly
((5625.46484375, 6037.5927734375), (6144.3984375, 6227.203125))
collision happend with box:6037.5927734375 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((6353.967773437501, 5997.6748046875), (7042.552734375001, 6237.1826171875))
true and false collision so given priority to text2 which is the incoming text
space.
((5755.1982421875, 6716.1982421875), (6174.3369140625, 6865.890625))
TRIE
((6403.865234375001, 6616.4033203125), (7062.51171875, 6855.9111328125))
prediction
((5555.6083984375, 7115.3779296875), (6214.2548828125, 7285.029296875))
collision happend with box:7115.3779296875 and text:prediction solving on the basis of percent match boxes
the current box specification are
FALSE.
((6453.762695312501, 7185.234375), (7112.4091796875, 7414.7626953125))
text2 i.e the incoming text is the winner
Tue
((6373.9267578125, 7793.9833984375), (7032.573242187499, 8063.4296875))
collision happend with box:7793.9833984375 and text:Tue solving on the basis of percent match boxes
the current box specification are
overfitting
((5356.0185546875, 7774.0244140625), (6034.624023437501, 7943.67578125))
text2 i.e the incoming text is the winner
the
((6044.603515625, 7993.5732421875), (6284.111328125, 8143.265625))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 3303, '2': 3812, '3': 4171, '4': 4700, '5': 5249, '6': 5808, '7': 6187, '8': 6776, '9': 7175, '10': 7803}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qXZqYLa.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text1 i.e the prev text is the winner
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
collision happend with box:1330.0 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
folte
((1123.96875, 627.59375), (1244.5, 714.875))
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YqjoUp3.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 316.32421875
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 881.279296875), (954.390625, 916.212890625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
F
((925.80859375, 881.279296875), (954.390625, 916.212890625))
F
((924.220703125, 967.025390625), (968.681640625, 1011.486328125))
T
((917.869140625, 1133.75390625), (944.86328125, 1163.923828125))
T
((924.220703125, 1238.5546875), (954.390625, 1271.900390625))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 589, '2': 524, '3': 589, '4': 690, '5': 790, '6': 892, '7': 959, '8': 1060, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : diLM5gw.jpg
OCR detection done with doctr
left top x of T/F: 5471.968749999999
bottom right x of T/F: 6594.125
left top x of SN: 872.1562500000001
bottom right x of SN: 1277.9375
first t/f detection
Tove
((5644.531249999999, 2158.46875), (6014.8125, 2348.125))
Toe
((5500.03125, 2646.15625), (6014.8125, 2817.75))
Toué
((5481.968749999999, 3106.75), (5933.53125, 3332.53125))
False
((5409.718750000001, 3766.03125), (5924.500000000001, 3973.75))
false.
((5491.000000000001, 4262.75), (6050.937499999999, 4461.4375))
T
((5400.687499999999, 4768.5), (5599.375000000001, 4931.0625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2248, '2': 2799, '3': 3169, '4': 3738, '5': 4280, '6': 4840, '7': 5211, '8': 5770, '9': 6150, '10': 6728}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FpQD5VW.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5373.593749999999, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5373.593749999999, 2492.625), (6087.062500000001, 2754.53125))
FALSE
((5454.874999999999, 3025.46875), (6186.406249999999, 3269.3125))
FALSE
((5400.687499999999, 3639.59375), (6141.250000000001, 3856.34375))
FALSE
((5391.65625, 4226.625), (6096.09375, 4443.375))
FALS
((5445.84375, 4741.40625), (6041.90625, 4949.125))
FALSE
((5436.812500000001, 5192.96875), (6168.343750000001, 5400.6875))
TRUE
((5436.812500000001, 5725.8125), (6105.124999999999, 5969.65625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6439.28125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2754, '3': 3142, '4': 3702, '5': 4271, '6': 4849, '7': 5229, '8': 5798, '9': 6186, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f6kyRqj.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 325.20410156249994
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
Tyut
((1416.1083984375, 627.615234375), (1515.845703125, 676.267578125))
collision happend with box:627.615234375 and text:Tyut solving on the basis of percent match boxes
the current box specification are
Tuue
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:761.4091796875 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
text2 i.e the incoming text is the winner
collision happend with box:885.47265625 and text:Falk solving on the basis of percent match boxes
the current box specification are
fale
((1428.271484375, 1016.833984375), (1530.44140625, 1082.5146484375))
text2 i.e the incoming text is the winner
Falke
((1411.2431640625, 1194.4150390625), (1518.2783203125002, 1245.5))
collision happend with box:1194.4150390625 and text:Falke solving on the basis of percent match boxes
the current box specification are
fle
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
text1 i.e the prev text is the winner
frda
((1406.3779296874998, 1454.705078125), (1540.171875, 1513.087890625))
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
fest
((1549.90234375, 1447.4072265625), (1637.4765625, 1513.087890625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyut
((1416.1083984375, 627.615234375), (1515.845703125, 676.267578125))
Tuue
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
fale
((1428.271484375, 1016.833984375), (1530.44140625, 1082.5146484375))
Falke
((1411.2431640625, 1194.4150390625), (1518.2783203125002, 1245.5))
fle
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
frda
((1406.3779296874998, 1454.705078125), (1540.171875, 1513.087890625))
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
fest
((1549.90234375, 1447.4072265625), (1637.4765625, 1513.087890625))
text2 i.e the incoming text is the winner
The
((1425.8388671875, 1583.6337890625), (1525.576171875, 1634.71875))
True
((1430.7041015624998, 1707.697265625), (1535.306640625, 1758.7822265625))
Thut
((1406.3779296874998, 1890.1435546875), (1518.2783203125002, 1938.7958984375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 868, '2': 758, '3': 866, '4': 1021, '5': 1177, '6': 1333, '7': 1435, '8': 1595, '9': 1702, '10': 1856}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sPGI0Yj.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6422.531250000001
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5292.312499999999, 1905.59375), (5924.500000000001, 2149.4375))
TRVE
((5355.531250000001, 2447.46875), (5924.500000000001, 2664.21875))
FALSE
((5211.031249999999, 2989.34375), (5770.96875, 3206.09375))
FALSE
((5337.46875, 3540.25), (5978.687500000001, 3784.09375))
FALSE
((5328.437500000001, 4154.375), (6032.875000000001, 4371.125))
FALSE
((5247.156250000001, 4678.1875), (5915.468749999999, 4885.90625))
FALSE
((5274.250000000001, 5192.96875), (6023.843749999999, 5391.65625))
FALSE
((5238.124999999999, 5698.71875), (5825.15625, 5870.3125))
TRVE
((5337.46875, 6177.375), (5861.281249999999, 6358.0))
FALSE
((5328.437500000001, 6782.46875), (6014.8125, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2610, '3': 3007, '4': 3585, '5': 4172, '6': 4759, '7': 5147, '8': 5743, '9': 6132, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gOTMKLB.jpg
OCR detection done with doctr
left top x of T/F: 5696.7333984375
bottom right x of T/F: 6921.248046874999
left top x of SN: 1125.12109375
bottom right x of SN: 1542.1572265625
first t/f detection
Trie
((5773.103515625, 2133.3251953125), (6304.064453124999, 2360.8798828125))
TTue
((5630.8818359375, 2664.2861328125), (6123.9169921875, 2901.322265625))
Tyue
((5763.622070312499, 3128.876953125), (6408.3603515625, 3384.8759765625))
False
((5706.7333984375, 3783.0966796875), (6370.4345703125, 4039.095703125))
Fe
((5716.21484375, 4399.390625), (6266.138671875, 4589.01953125))
ue
((5735.177734375, 4589.01953125), (6379.916015625, 4807.0927734375))
Fyue
((5649.8447265625, 4920.8701171875), (6161.8427734375, 5110.4990234375))
Falje
((5545.548828125, 5309.609375), (6067.0283203125, 5584.5712890625))
True
((5592.9560546875, 5764.71875), (6057.546875, 5992.2734375))
Falde
((5488.66015625, 6210.3466796875), (6048.0654296875, 6437.9013671875))
Falie
((5545.548828125, 6731.826171875), (6057.546875, 6968.8623046875))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['2', '4', '9']
the assigned keys are ['1', '3', '5', '6', '7', '8', '10']
['1', '3', '5', '6', '7', '8', '10', '1', '3', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 2228, '3': 3138, '5': 4228, '6': 4778, '7': 5157, '8': 5679, '10': 6580}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : niEMuqt.jpg
OCR detection done with doctr
left top x of T/F: 6084.69140625
bottom right x of T/F: 7392.008789062499
left top x of SN: 1042.6201171875002
bottom right x of SN: 1469.7636718750002
first t/f detection
TRUE
((6134.234375, 2422.0068359375), (6737.2646484375, 2669.150390625))
TRUE
((6134.234375, 3015.1513671875), (6747.150390625, 3232.6376953125))
TRUE
((6134.234375, 3578.638671875), (6776.8076171875, 3815.896484375))
FALSE
((6144.1201171875, 4231.09765625), (6806.46484375, 4448.583984375))
FALSE
((6144.1201171875, 4873.6708984375), (6836.1220703125, 5091.1572265625))
TRUE
((6114.462890625, 5427.2724609375), (6707.607421874999, 5654.64453125))
FALSE
((6163.8916015625, 5951.216796875), (6895.436523437501, 6178.5888671875))
TRUE
((6213.320312499999, 6475.1611328125), (6865.779296875001, 6692.6474609375))
TRUE
((6233.091796875, 6969.4482421875), (6836.1220703125, 7196.8203125))
the
((5867.3193359375, 7809.736328125), (6104.5771484375, 7967.908203125))
collision happend with box:7809.736328125 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((6223.206054687499, 7661.4501953125), (6895.436523437501, 7878.9365234375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2708, '2': 3282, '3': 3687, '4': 4290, '5': 4893, '6': 5506, '7': 5911, '8': 6534, '9': 6949, '10': 7582}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0Ld34zC.jpg
OCR detection done with doctr
left top x of T/F: 6034.603515625
bottom right x of T/F: 7352.3271484375
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:53:59] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 0Ld34zC.jpg
[2024/07/01 15:54:00] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:54:01] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.15708637237548828
[2024/07/01 15:54:03] ppocr DEBUG: rec_res num  : 40, elapsed : 1.9527881145477295
OCR detection done
cant detect s/n column also so going with all detection using box width
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  []
the false list is  []
the true list for xdirn []
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2023]
the false list is  []
the true list for xdirn [1329]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
deployment.
[[1340.0, 2651.0], [2074.0, 2651.0], [2074.0, 2800.0], [1340.0, 2800.0]]
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
first t/f detection
FALSE
[[6136.0, 2874.0], [6893.0, 2874.0], [6893.0, 3140.0], [6136.0, 3140.0]]
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [1329, 6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2']
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2']
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246]
the false list is  []
the true list for xdirn [6147]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
first t/f detection
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081]
the false list is  []
the true list for xdirn [6147, 6056]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
first t/f detection
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7']
first t/f detection
the true list is  [2023, 2246, 4081, 5344, 5868]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2', '3', '7']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8']
first t/f detection
FALSE
[[6187.0, 6395.0], [6928.0, 6422.0], [6918.0, 6698.0], [6176.0, 6671.0]]
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8', '9']
first t/f detection
the true list is  [2023, 2246, 4081, 5344, 6898]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': True, '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['1', '2', '3', '6', '7', '8']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8', '9']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
['1', '2', '3', '7', '8', '9']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
['1', '2', '3', '7', '8', '9', '10']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
['1', '2', '3', '7', '8', '9', '10']
first t/f detection
FALSE
[[6169.0, 7585.0], [6973.0, 7626.0], [6957.0, 7935.0], [6153.0, 7894.0]]
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
['1', '2', '3', '7', '8', '9', '10']
the true list is  [2023, 2246, 4081, 5344]
the false list is  []
the true list for xdirn [6147, 6056, 6104, 6133, 6126]
the false list for xdirn []
the final dict for y is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
['1', '2', '3', '7', '8', '9', '10']
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 96QZdd8.jpg
OCR detection done with doctr
left top x of SN: 947.9101562500001
bottom right x of SN: 1350.19140625
left top x of T/F: 5525.4140625
bottom right x of T/F: 6772.7265625
first t/f detection
TRUE
((5553.9375, 2139.45703125), (5952.19140625, 2333.953125))
TRUE
((5479.84375, 2611.8046875), (5942.9296875, 2843.34765625))
FALSE
((5563.19921875, 3121.19921875), (6081.855468749999, 3334.21875))
FALSE
((5553.9375, 3732.47265625), (6063.332031249999, 3945.4921875))
FALSE
((5544.67578125, 4334.484375), (6044.80859375, 4501.1953125))
FALSE
((5526.15234375, 4862.40234375), (6035.546875, 5038.375))
TRUE
((5526.15234375, 5279.1796875), (5979.9765625, 5445.890625))
TRUE
((5498.3671875, 5807.09765625), (5942.9296875, 5983.0703125))
TRUE
((5535.4140625, 6214.61328125), (5979.9765625, 6399.84765625))
TRUE
((5553.9375, 6724.0078125), (6035.546875, 6937.02734375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2398, '2': 2935, '3': 3297, '4': 3843, '5': 4390, '6': 4945, '7': 5306, '8': 5862, '9': 6233, '10': 6807}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H6JMOwY.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5373.593749999999, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5373.593749999999, 2492.625), (6096.09375, 2754.53125))
FALSE
((5454.874999999999, 3016.4375), (6195.437500000001, 3269.3125))
FALSE
((5391.65625, 3621.53125), (6159.312499999999, 3856.34375))
FALSE
((5391.65625, 4226.625), (6105.124999999999, 4434.34375))
FALS
((5445.84375, 4750.4375), (6050.937499999999, 4958.15625))
FALSE
((5427.781249999999, 5202.0), (6168.343750000001, 5400.6875))
TRUE
((5445.84375, 5743.875), (6096.09375, 5960.625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6439.28125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2754, '3': 3133, '4': 3702, '5': 4271, '6': 4849, '7': 5229, '8': 5807, '9': 6186, '10': 6773}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CG1NIoo.jpg
OCR detection done with doctr
left top x of T/F: 5522.744140625
bottom right x of T/F: 6698.16796875
left top x of SN: 984.30859375
bottom right x of SN: 1398.634765625
first t/f detection
TRUE
((5542.1171875, 2390.126953125), (6198.23046875, 2605.70703125))
TRUE
((5654.593750000001, 2877.525390625), (6338.826171875, 3083.732421875))
False
((5729.578125, 3364.923828125), (6329.453124999999, 3571.130859375))
False
((5729.578125, 3955.42578125), (6273.21484375, 4133.513671875))
False
((5692.085937499999, 4536.5546875), (6291.9609375, 4742.76171875))
false
((5560.86328125, 5042.69921875), (6141.9921875, 5220.787109375))
True
((5692.085937499999, 5511.3515625), (6198.23046875, 5698.8125))
True
((5757.697265625, 5951.884765625), (6245.095703124999, 6129.97265625))
Trrue
((5813.935546875, 6467.40234375), (6320.080078125, 6654.86328125))
Trwe
((5776.443359375, 7011.0390625), (6338.826171875, 7189.126953125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2540, '2': 3074, '3': 3430, '4': 3983, '5': 4517, '6': 5070, '7': 5436, '8': 5989, '9': 6364, '10': 6936}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lbg7D6C.jpg
rotation started
['E', '6', '0', '2', '', 'Ct', '', '3', '3', '1', '2', 'I', '%', 'E', '9', 'T', 'I', 'a', 'I', 'I', 'tn', '€', '2', 'E', 'A', 'I', 'F', 'I', 'I', 't', 'I', 'la', 'I', 'I', '€', 'I', 'E', 'I', 'I', '2', 'I', 'I', '1', '2', '1', 'I', '2', 'f', 'I', 'I', 'E', 'E', '8', '-', 'E', 'I', 'E', 'E', '3', 'I', 'I', 'I', '3', 'of', '£', 'in', 'I', 'I', 'I', 'I', 'D', 'I', 'I', 'I', 'e', 'E', 'I', 'I', '8', 'E', '88', 'I', 'E', 'I', 'f', 'I', 'E', 'I', 'O', 'I', 'I', 'I', 'E', 'E', '€', '€', 'E', 'I', '8', 'E', 'tE', 'I', 'a', '8', 'la', '6', '8a', 'I', 'E', '2', 'E', 'I', 'I', 'I', 'I', 'I', '-', 'E', '-', 'E', 'I', 'E', 'E', 'I', 'I', 'E', 'E', 'le', 'I', 'I', '2', 'E', '€', 'I', 'it', 'o', 'E', 'I', 'E', 'I', '8', 'I', 'E', '8', '2', '2', 'I', 'E', '-', 'E', '&', 'E', 'I', '-', 'a', ':', 'E', 'E', '€', 'E', 'I', '2', 'E', 'I', 'E', 'I', '€', 'LE', 'a', 'I', '0', 'E', '6', 'a', 'E', 'E', 'a', '2', 'E', 'E', 'I', 'P', ':', 'F', ':', '>', 'E', 'E', 'I', 'I', 'E', 'E', 't', 'E', 'E', 'I', 'E', '€', 'I', 'I', 'E', 'E', '2', '2', '€', 'A', 'a', '-', 'f', 'a', ':', 'I', '-', '-', 'O', 'tm']
rotation started
['"erep', 'uoosun', 'Mou', '01', 'ITOM', 'oz1je10008', 'gou', 'op', '7849', 'eyep', 'Suture.rg', 'a47', 'ul', 'siresap', 'JO', 'OSIOU', 'oyrgds', 'YSuI', 'ou1', "'WAS", 'UII', 'Jojourered', 'D', 'o44', 'Jo', 'onjeA', '4819', 'e', 'YIM', 'OT', 'ans)', 'omgdeo', '01', 'UIBOT', 'Keur', '(opour', 'o47', 'se', "'SOSPOJOUL", 'Sumay.rano', 'JO', 'WAS', '9S0.1-SA-OtIO', '-', '2031', 'ueya', 'JOMOTS', 'SI', 'WAS', 'auo-SA-QuO', 'Buisn', 'uonorpard', 'e', 'Suryeur', "'sossero", 'Jo', 'paqunu', 'a8ier', 'e', 'Y31M', 'sulargoid', 'ssepotgnur', 'JOd', '6', 'ou7', 'UT', 'JeouT-tou', '3q', 'ugo', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uoisiop', 'AUL', '8', 'sopou', 'Jo', 'Joqumnu', 'au4', '01', 'JBuomodoxd', 'Appamp', 'SI', 'BOJL', 'uorsIDaA', 'au7', 'TII', 'uonorpaad', 'e', 'Suryeu', 'JOJ', 'pammbar', 'OUIL', 'JYL', 'L', '-snes', '2', 'SienTe', 'ST', 'suonnquasip', 'ueissneg', 'OMA', 'Jo', 'omaxtu', 'V', '9', 'e', 'SI', 'aAIJ', '(DOH)', 'orasuen0e.etO', 'Burgerado', 'Iontasot', 'OUL', 'S', "'aoeds", 'jeurouo', '2810', 'e', '20101', '-', '3a', '"uornquasip', 'uets', 'xou', 'Tesay', 'pue', 'uoIsIaId', 'L30M709', 'soyd', 'yiongau', 'anul', '[emau', 'aun', 'UII', 'squerpe1s', '349', 'agnduloo', '07', 'posn', 'SI', 'Auposop', 'quarp', '-BI8', 'aTIYM', "'sqy81om", 'ou7', 'agepdn', '01', 'pasn', 'SI', 'uoteBodoxdypeg', '1', 'Sue', 'JOJ', 'DIIgOUI', 'aoupsip', 'PITEA', '8', 'SI', '(R-zhgumpuagausoo', '1', 'à', 'S', 'anel', '>', '050', 'INgL', 'f', 'pue', 'C', 'SIOAJOA', 'Jetorsuouurp-p', 'IBOUIT-Uou', '8', 'SI', 'NNX', 'G', 'quoufoidop', 'JOJ', 'WAS', 'uey2', 'quouozmbas', 'aBe.oqs', 'oy1', 'Seoidi', 'I', 'logisseo', '1OBrey', 'yonui', 'S!', 'NNY', '10]', 'quauagess', 'NS', 'mor', '311M', 'TIVI/anuL', 'à', ':aJay', 'Jaqumnu', 'IJOI', '39L1M', '(sad', 'OT)', "'6", 'UI', 'ASTVA', 'IO', 'GAUL', 'Wlapaey', 'peopp', 'pue', 'S.101101', 'jeaides']
rotation started
['MIny', '1', 'I', '2', 'à', '2', '-', ':', '€', 'à', 'à', 'à', '2', ':', 'E', 'I', '-', '1', 's', 'E', 'ba', 'I', 'a', '6', 'I', 'is', 'a', 'à', 'e', 'a', 'a', 'à', '8', 'I', 'iE', 'I', 'a', '€', 'oe', 'E', 'i', 'de', '€', 'I', '€', 'I', 'E', 'of', 'I', 'is', 'I', 'u', 'i', 'I', 'I', 'e', '3', 'e', '%', 'I', 'E', 'e', 'I', ':', '-', '8', 'a', 'a', 'f', 'a', 'à', '-', 'I', 'o', 'I', 'iA', 'e', 'I', '8', 'I', 'I', 'E', 'I', 'E', 'a', ':', 'O', 'e', 'a', '88', 'of', '-', '1', 'I', '8', '-', 'e', '2', 'I', 'is', '5', 'of', 'i', 'I', 'I', 'I', '-', '7', 'E', 'I', 'I', 'I', '1', '2', 'iis', 'E', 'I', 'I', '9', 'a', 'à', '6', 'I', 'a', 'I', 'of', 'I', ':', '', 'I', '2', 'I', 'I', 'a', '-', '.A', 'I', 'I', 'I', 'a', 'E', ':', 'is', 'I', 'à', 'a', 'I', 'I', ':', 'I', 'I', '1', 'I', 'I', ':', 'E', '11', 'I', 'I', ':', '1', 'e', 'I', '1', 'I', '2', '3', 'i', ':', 'a', 'I', 'de', '00', '-', 'E', 'a', 'is', ':', '-', 'I', 'I', 'I', 'E', 'I', 'a', '2', '3', '-', 'à', 'E', 'e', '', 'a', 'A', ':', 'E', 'E', 'E', '1', 'E', '-', 'I', '€', 'of', '7', '1', '4', '10', '', '1', '0o', '', '00']
rotation started
['letters', 'and', 'clear', 'FALSE', 'in', 'capital', 'handmna', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', '', 'Write', 'your', 'SN', 'Statement', '1', 'Typically,', 'the', 'storage', 'than', 'SVM', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'TRUE/FAL', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'Toue', 'Talse', 'classifier.', '3', '1', '-', 'cosineSimalarityle.', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gra-', 'd-dimensional', 'vectors', 'I', 'and', 'J.', 'Toue', 'dient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'True', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus-', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'hodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'plot', 'between', 'Precision', 'and', 'Recall.', 'Tot', 'sian', 'distribution.', 'Tve', 'Falge', 'Falge', 'original', 'space,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'True', 'one-Vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'Specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'of', 'overfitting', 'increases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'Trve', '-', 'geheralize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 922.7519531250001
bottom right x of SN: 1361.5986328125
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:55:28] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : lbg7D6C.jpg
[2024/07/01 15:55:29] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:55:30] ppocr DEBUG: dt_boxes num : 47, elapsed : 0.12647223472595215
[2024/07/01 15:55:32] ppocr DEBUG: rec_res num  : 47, elapsed : 2.1048924922943115
OCR detection done
left top x of SN: 975.0
bottom right x of SN: 1386.0
left top y of SN: 2045.0
bottom right y of SN: 2369.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/lbg7D6C.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tDvfNiE.jpg
OCR detection done with doctr
left top x of SN: 235.578125
bottom right x of SN: 477.60742187500006
left top x of T/F: 1334.390625
bottom right x of T/F: 1773.421875
first t/f detection
falte
((1370.6337890624998, 641.7646484375), (1511.392578125, 744.3515625))
collision happend with box:641.7646484375 and text:falte solving on the basis of percent match boxes
the current box specification are
false
((1370.6337890624998, 775.3662109375), (1482.763671875, 849.32421875))
text2 i.e the incoming text is the winner
collision happend with box:775.3662109375 and text:false solving on the basis of percent match boxes
the current box specification are
Tee
((1361.0908203125, 894.6533203125), (1499.4638671875, 994.8544921875))
text1 i.e the prev text is the winner
RiwU
((1375.4052734375, 1025.869140625), (1513.7783203125, 1114.1416015625))
collision happend with box:1025.869140625 and text:RiwU solving on the basis of percent match boxes
the current box specification are
Teu
((1358.705078125, 1164.2421875), (1504.2353515625, 1262.0576171875))
text2 i.e the incoming text is the winner
collision happend with box:1164.2421875 and text:Teu solving on the basis of percent match boxes
the current box specification are
Tyul
((1344.390625, 1288.30078125), (1482.763671875, 1359.873046875))
text2 i.e the incoming text is the winner
collision happend with box:1288.30078125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
True
((1327.6904296875, 1395.6591796875), (1480.3779296875, 1491.0888671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falte
((1370.6337890624998, 641.7646484375), (1511.392578125, 744.3515625))
false
((1370.6337890624998, 775.3662109375), (1482.763671875, 849.32421875))
Tee
((1361.0908203125, 894.6533203125), (1499.4638671875, 994.8544921875))
RiwU
((1375.4052734375, 1025.869140625), (1513.7783203125, 1114.1416015625))
Teu
((1358.705078125, 1164.2421875), (1504.2353515625, 1262.0576171875))
Tyul
((1344.390625, 1288.30078125), (1482.763671875, 1359.873046875))
True
((1327.6904296875, 1395.6591796875), (1480.3779296875, 1491.0888671875))
folye
((1351.5478515625, 1507.7890625), (1470.8349609375, 1586.5185546875))
Falu
((1349.162109375, 1627.076171875), (1473.220703125, 1703.419921875))
Tru
((1334.84765625, 1808.392578125), (1480.3779296875, 1896.6650390625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 656, '2': 789, '3': 882, '4': 1021, '5': 1154, '6': 1295, '7': 1383, '8': 1524, '9': 1615, '10': 1751}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EB96Q7Y.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((896.2421874999999, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 911.25))
text2 i.e the incoming text is the winner
collision happend with box:878.02734375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
F
((921.5546875, 579.0234375), (950.03125, 615.41015625))
T.
((896.2421874999999, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
T
((913.64453125, 878.02734375), (945.2851562500001, 911.25))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
F
((905.734375, 1222.91015625), (934.2109374999999, 1257.71484375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DT4N2Zg.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tror
((1128.125, 741.890625), (1238.265625, 822.9375))
text2 i.e the incoming text is the winner
collision happend with box:741.890625 and text:Tror solving on the basis of percent match boxes
the current box specification are
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
text2 i.e the incoming text is the winner
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
a
((1408.671875, 773.0625), (1421.140625, 791.765625))
text1 i.e the prev text is the winner
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
folre
((1121.890625, 629.671875), (1244.5, 714.875))
Tror
((1128.125, 741.890625), (1238.265625, 822.9375))
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
a
((1408.671875, 773.0625), (1421.140625, 791.765625))
text1 i.e the prev text is the winner
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
Tue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
Fale
((1142.671875, 1332.078125), (1244.5, 1398.578125))
falye
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eJT0NAj.jpg
OCR detection done with doctr
left top x of SN: 134.91601562499994
bottom right x of SN: 377.46484375
left top x of T/F: 1398.37890625
bottom right x of T/F: 1868.58203125
first t/f detection
folre
((1408.37890625, 668.021484375), (1571.005859375, 770.6015625))
collision happend with box:668.021484375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trok
((1423.390625, 808.130859375), (1583.515625, 890.6953125))
text1 i.e the prev text is the winner
collision happend with box:668.021484375 and text:folre solving on the basis of percent match boxes
the current box specification are
Falke
((1581.013671875, 798.123046875), (1683.59375, 880.6875))
text2 i.e the incoming text is the winner
collision happend with box:798.123046875 and text:Falke solving on the basis of percent match boxes
the current box specification are
la
((1480.935546875, 938.232421875), (1586.017578125, 988.271484375))
text1 i.e the prev text is the winner
collision happend with box:798.123046875 and text:Falke solving on the basis of percent match boxes
the current box specification are
Vue
((1560.9980468749998, 955.74609375), (1671.083984375, 1033.306640625))
text1 i.e the prev text is the winner
frvl
((1548.48828125, 1085.84765625), (1681.0917968750002, 1183.423828125))
collision happend with box:1085.84765625 and text:frvl solving on the basis of percent match boxes
the current box specification are
Foloe
((1403.375, 1238.466796875), (1566.001953125, 1336.04296875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folre
((1408.37890625, 668.021484375), (1571.005859375, 770.6015625))
Trok
((1423.390625, 808.130859375), (1583.515625, 890.6953125))
collision happend with box:808.130859375 and text:Trok solving on the basis of percent match boxes
the current box specification are
Falke
((1581.013671875, 798.123046875), (1683.59375, 880.6875))
text2 i.e the incoming text is the winner
la
((1480.935546875, 938.232421875), (1586.017578125, 988.271484375))
collision happend with box:938.232421875 and text:la solving on the basis of percent match boxes
the current box specification are
Vue
((1560.9980468749998, 955.74609375), (1671.083984375, 1033.306640625))
text1 i.e the prev text is the winner
frvl
((1548.48828125, 1085.84765625), (1681.0917968750002, 1183.423828125))
Foloe
((1403.375, 1238.466796875), (1566.001953125, 1336.04296875))
True
((1413.3828125000002, 1353.556640625), (1566.001953125, 1446.12890625))
Tue
((1418.38671875, 1476.15234375), (1563.5, 1568.724609375))
Falu
((1433.3984375, 1621.265625), (1566.001953125, 1693.822265625))
falke
((1423.390625, 1748.865234375), (1573.5078125, 1836.43359375))
Falx
((1425.892578125, 1903.986328125), (1586.017578125, 2004.064453125))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 933, '2': 815, '3': 918, '4': 1075, '5': 1225, '6': 1381, '7': 1486, '8': 1641, '9': 1746, '10': 1901}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZGzhVNg.jpg
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 853.4687499999999
left top x of T/F: 5544.21875
bottom right x of T/F: 6738.624999999999
first t/f detection
FALSE
((5653.562500000001, 1914.625), (6285.75, 2131.375))
TRVE
((5617.437499999999, 2492.625), (6141.250000000001, 2709.375))
TRUE
((5545.187500000001, 3052.5625), (6069.0, 3305.4375))
PALSE
((5617.437499999999, 3576.375), (6294.781249999999, 3793.125))
TRUE
((5644.531249999999, 4027.9375), (6222.531250000001, 4226.625))
FALSE
((5698.718749999999, 4696.25), (6285.75, 4940.09375))
TRUE
((5644.531249999999, 5409.71875), (6195.437500000001, 5617.4375))
FALSE
((5680.656250000001, 5933.53125), (6258.65625, 6150.28125))
TRUE
((5689.6875, 6520.5625), (6276.718750000001, 6764.40625))
FALSE
((5698.718749999999, 7071.46875), (6339.9375, 7333.375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2411, '3': 2998, '4': 3585, '5': 3973, '6': 4578, '7': 5382, '8': 5987, '9': 6394, '10': 7215}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QjnYgjU.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6603.156249999999
left top x of SN: 556.0625
bottom right x of SN: 961.8437499999999
first t/f detection
TRVE
((5825.15625, 1661.75), (6330.906250000001, 1833.34375))
FALSE
((5915.468749999999, 2203.625), (6439.281250000001, 2384.25))
TRUE
((5798.0625, 2772.59375), (6376.062499999999, 2971.28125))
Trirt
((5454.874999999999, 1779.15625), (6050.937499999999, 2032.03125))
Fabir
((5509.062499999999, 2357.15625), (5942.562499999999, 2573.90625))
Tue
((5463.906250000001, 2926.125), (5951.593750000001, 3151.90625))
FALSE
((5969.656249999999, 3314.46875), (6484.437499999999, 3531.21875))
TRUE
((5816.125000000001, 3711.84375), (6394.125, 3919.5625))
TRUE
((5725.812499999999, 4289.84375), (6249.625000000001, 4497.5625))
Ezel
((5536.156249999999, 4506.59375), (6114.156250000001, 4759.46875))
fatse
((5500.03125, 3422.84375), (5960.625, 3657.65625))
Tecl
((5500.03125, 3856.34375), (5960.625, 4091.15625))
TRUE
((5789.031250000001, 5075.5625), (6367.03125, 5283.28125))
collision happend with box:5075.5625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Treel
((5554.21875, 5192.96875), (6105.124999999999, 5445.84375))
text2 i.e the incoming text is the winner
FALSE
((5915.468749999999, 5626.46875), (6529.59375, 5879.34375))
collision happend with box:5626.46875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Fabre
((5518.093750000001, 5743.875), (6069.0, 5996.75))
true and false collision so given priority to text2 which is the incoming text
TRUE
((5491.000000000001, 6294.78125), (6186.406249999999, 6493.46875))
TRUE
((5500.03125, 6899.875), (6249.625000000001, 7152.75))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1914, '2': 2465, '3': 3007, '4': 3567, '5': 3937, '6': 4506, '7': 5247, '8': 5816, '9': 6204, '10': 6981}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 54jROSP.jpg
OCR detection done with doctr
left top x of T/F: 5943.5234375
bottom right x of T/F: 7181.375
left top x of SN: 1126.671875
bottom right x of SN: 1551.3984375
first t/f detection
TRUG
((6041.625000000001, 2349.375), (6638.757812499999, 2535.3671875))
TRVE
((6012.2578125, 2907.3515625), (6589.812499999999, 3083.5546875))
FALSE
((6051.4140625, 3416.3828125), (6736.6484375, 3641.53125))
FALSE
((6041.625000000001, 4023.3046875), (6726.859375, 4199.5078125))
TRVE
((6061.203125, 4630.2265625), (6687.703125, 4806.4296875))
FALSE
((6041.625000000001, 5119.6796875), (6707.28125, 5286.09375))
TFALSE
((6119.9375, 5599.34375), (6893.2734375, 5765.7578125))
TRVE
((6090.5703125, 6118.1640625), (6687.703125, 6255.2109375))
TRVE
((6159.093749999999, 6548.8828125), (6766.015624999999, 6725.0859375))
-TRVE
((6139.515625, 7185.171875), (6697.4921875, 7332.0078125))
collision happend with box:7185.171875 and text:-TRVE solving on the basis of percent match boxes
the current box specification are
the
((5738.1640625, 7292.8515625), (5963.3125, 7449.4765625))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2486, '2': 3073, '3': 3455, '4': 4052, '5': 4630, '6': 5207, '7': 5599, '8': 6196, '9': 6578, '10': 7175}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rzQDZm4.jpg
OCR detection done with doctr
left top x of SN: 617.0937499999999
bottom right x of SN: 1025.8046875
left top x of T/F: 5578.1015625
bottom right x of T/F: 6785.281250000001
first t/f detection
TRUR
((5633.84375, 2012.65625), (6063.8203125, 2195.625))
FALSE
((5652.140625, 2470.078125), (6228.4921875, 2726.234375))
TRUE
((5679.5859375, 3128.765625), (6155.304687500001, 3366.625))
FALIE
((5679.5859375, 3577.0390625), (6164.453125, 3760.0078125))
TRUE
((5606.3984375, 4043.609375), (6082.1171875, 4226.578125))
FALE
((5624.6953125, 4748.0390625), (6210.1953125, 5004.1953125))
T
((5633.84375, 5406.7265625), (5835.109375, 5589.6953125))
collision happend with box:5406.7265625 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5844.2578125, 5388.4296875), (6237.640625, 5607.9921875))
text2 i.e the incoming text is the winner
TRUE
((5688.734375, 5900.7421875), (6201.046875, 6129.453125))
TRUE
((5633.84375, 6358.1640625), (6146.15625, 6577.7265625))
TRUE
((5633.84375, 7044.296875), (6274.234375, 7254.7109375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1921, '2': 2488, '3': 3055, '4': 3641, '5': 4016, '6': 4592, '7': 5360, '8': 5937, '9': 6330, '10': 7099}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zciEYbt.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6240.593749999999, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5779.999999999999, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1KUsNqb.jpg
rotation started
['of', '', '00', '1', '', 'CT', '4', '', '2', 'I', 'E', 'I', '9', 'P', 'E', '>', 'I', 'E', 'a', 'T', 'E', 'a', 'I', '8', 'I', 'iE', 'I', ':', 'e', '-', '8', 'e', 'I', 'I', 'E', 'I', 'E', 'I', 'I', '€', 'I', 'of', 'I', 'E', 'E', 'E', 'I', '8', 'I', 'e', 'I', 'E', ':', 'I', '9', 'I', '3', 'E', 'it', 'I', 'E', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'E', 'E', 'it', 'o', 'a', 'I', 'I', 'I', 'I', 'Q', 'E', '8', 'B', 'I', 'I', 'I', 'a', 'of', 'I', '8', 'E', 'I', '8', 'E', ':', '2', 'I', 'I', 'E', '1', 'E', 'I', 'I', 'E', '€', 'E', 'e', 'I', 't', '8', 'I', 'I', 'I', '2', 'I', 'f', '8', 'I', 'E', 'I', 'I', 'I', 't', 'a', 'E', 'E', 'I', '11', '2', '16', 'E', 'E', '-', 'a', '9', 'E', 'DE', '1', 'E', 'I', 'it', 'I', 'a', 'E', 'I', '1', '-', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'E', 'E', 'E', 'I', 'a', 'I', 'I', 'I', 'E', 'E', 'E', '=', ':', 'I', 'E', 'I', ':', 'E', '2', '€', '9', 'of', 'I', 'E', 'I', 'E', 'F', 'I', 'a', 'E', 'E', 'E', 'I', '2', 'I', 'I', '1', 'I', ':', 't', 'I', 'I', 'I', 'F', 'it', 'I', '2', '-', '€', '-', 'à', '-', 'E', '€', 'E', 'a', '2', 'I', 'L', '-']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'ezireioues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'oun', 'uI', 'sTregop', 'JO', 'OSIOU', 'oyreds', 'ongdes', '07', 'UIeOT', 'Keur', 'lopour', 'au7', 'se', "'soseaIo", '9021', '-Ul', 'SurnnyIano', 'Jo', 'YSTI', 'ou4', "'WAS", 'UI', 'penourered', 'D', 'ou4', 'Jo', 'anreA', 'y8ry', 'B', 'Y9IM', 'OT', "'IAS", '9SOI-SA-QUO', 'ueya', 'JOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Bursn', '95143', 'uonorpard', 'B', 'Suryeur', "'sessero", 'Jo', 'poqunu', 'a81eT', 'e', 'YAIM', 'suerqoid', 'ssepormu', 'JOJ', '6', '9031', 'raoeds', '[eursto', '044', 'UI', 'JeQUII-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorstoap', 'AUL', '8', "'sopou", 'Jo', 'poqunu', 'au7', '07', 'Teuorgiodord', '>S14J', 'Atgoamp', 'SI', 'BOIL', 'UOISIDOT', 'ou9', 'UI', 'uororpard', 'B', 'Suryeur', 'JOJ', 'paambar', 'OWIL', 'OUL', 'L', '301', '"uorgnquasip', 'ueissneD', 'B', 'SRBMTe', 'SI', 'suoranquasip', 'uerssnen', 'OM7', 'Jo', 'amgXIu', 'V', '9', '2514J', 'Treoay', 'pue', 'UOISIO', '9fT', '-aId', 'uoomgaq', 'gord', 'B', 'SI', 'OAINO', '(DOH)', 'DIASLIOg0BIeUD', 'Surgerado', 'IOAIODOH', 'AUL', 'S', 'YIOMIOU', 'Temneu', 'au9', 'UI', 'squerpers', 'au7', 'annduoo', '01', 'posn', 'quaosap', 'querpes', 'ATIYM', "'SqUBIOM", 'e47', 'agepdn', '07', 'posn', 'SI', 'uoneBodoxdypeg', '4', '3N3L', 'SI', ':f', 'pue', 'I', 'SIO100A', 'souensip', 'PITBA', 'B', 'SI', '(@-z/@quaopunagousoy', '-', 'I', '&', 'A03L', 'Teuoistoump-p', 'Kue', 'JOJ', 'OLIOu', '"poyIsSeTD', 'reouIT-uou', 'B', 'SI', 'NNX', '2', '95143', 'quourfordop', 'a8e101s', 'ayn', 'SimordAL', 'I', 'yonu', 'SI', 'NNX', 'IOJ', 'quettaabar', 'ueyz', '1031e1', 'AMZL', 'MIVA/ANHL', 'JOJ', 'WAS', 'quouagens', 'NS', 'mor', 'O9LIM', 'naqumu', 'ITOI', ':0104', '(sad', 'OT)', '6', 'O1LM', '10', 'ANAL', 'Teardeo', 'UI', 'ASTVA', 'S.121181', 'pue', 'ADIRU', '1eOp']
rotation started
['I', ':', ':', '2', 'à', ':', '-', 'à', '-', '', ':', '€', 'a', 'E', 'a', ':', 'is', 'I', 'à', 'I', 'E', 'e', 'iE', 'I', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'a', 'a', 'is', 'I', 'a', 'à', 'I', 'I', '€', 'e', '1', 'I', 'iE', ':', 'E', 'I', 'I', '8', 'is', 'e', 'I', 'e', 'I', 'E', ':', 'o', 'iE', '', '-', '-', 'E', 'a', 'i', 'I', 'of', 'I', 'E', '0', 'E', 'I', '8', 'I', 'I', 'I', 'I', 'of', ':', 'is', 'e', 'à', ':', 'I', 'a', 'I', 'I', 'is', 'de', 'I', 'de', 'f', 'E', 'I', 'o', 'I', 'E', 'I', 'of', 'I', 'a', '8', 'E', 'is', '9', 'I', 'à', 'I', 'I', 'I', 'I', 'I', 'I', 'T', 'E', 'à', 'I', '<', 'E', '2', '3', '', '', 'a', 'I', 'of', 's', 'a', '1', 'I', 'iE', 'i', 'a', ':', 'e', 'I', 'I', 'of', 'I', 'e', 'I', 'I', 'iE', 'E', 'o', 'I', 'I', 'I', 'E', 'I', 'à', 'a', '1', 'I', '-', 'is', 'E', 'ba', 'I', 'I', '1', 'in', 'a', 'of', 'E', 'à', 'E', 'e', '', '-', 'a', 'is', 'i', 'E', 'of', 'de', 'I', 'E', 'I', 'à', 'a', 'de', ':', 'I', ':', '8', 'a', '1', 'E', '3', ':', 'I', 'e', 'I', 'I', 'I', '1', 'I', '2', '11', 'E', ':', 'i', '€', 'I', 'I', '7', '11', '4', '10', '00', '', '19']
rotation started
['and', 'clear', 'letters', 'FALSE', 'in', 'capital', 'TRUE', 'or', 'pts)', 'Write', '9.', '(10', 'number', 'here:', 'Write', 'your', 'roll', 'TRUE/FAIS', 'SN', 'Statement', 'SVM', 'for', 'TEVE', 'KNN', 'is', 'much', 'larger', 'than', 'requirement', 'for', '1', 'Typically,', 'the', 'storage', 'deployment.', 'FAVSE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalarity(z.J)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional.', 'TRVE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRVE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FRUe', 'cision', 'and', 'Recall.', 'FAVSE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FAUSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'FALSE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'TRUG', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 251.15624999999994
bottom right x of SN: 678.1640625000001
TRUE/FALSE not detected. Skipping this part of processing.
going with paddleocr
[2024/07/01 15:56:55] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 1KUsNqb.jpg
[2024/07/01 15:56:56] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/07/01 15:56:57] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.16193413734436035
[2024/07/01 15:56:59] ppocr DEBUG: rec_res num  : 41, elapsed : 1.9654629230499268
OCR detection done
left top x of SN: 309.0
bottom right x of SN: 718.0
left top y of SN: 1942.0
bottom right y of SN: 2238.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/1KUsNqb.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DCqErqb.jpg
OCR detection done with doctr
left top x of SN: 452.42187499999983
bottom right x of SN: 870.2812499999999
left top x of T/F: 5687.8828125
bottom right x of T/F: 6922.5078125
first t/f detection
FALSE
((5743.625, 2094.9921875), (6393.1640625, 2305.40625))
FALSE
((5734.4765625, 2717.0859375), (6393.1640625, 2918.3515625))
FALSE
((5725.328125, 3311.734375), (6347.421875, 3485.5546875))
TRUE
((5661.289062499999, 3833.1953125), (6292.531250000001, 4043.609375))
FALSE
((5725.328125, 4290.6171875), (6338.2734375, 4491.8828125))
FALSE
((5725.328125, 5013.34375), (6475.5, 5223.7578125))
TRUE
((5624.6953125, 5690.328125), (6255.9375, 5900.7421875))
TRUE
((5670.4375, 6193.4921875), (6274.234375, 6403.90625))
TRUE
((5707.031250000001, 6724.1015625), (6274.234375, 6952.8125))
FALSE
((5716.1796875, 7373.640625), (6347.421875, 7547.4609375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2707, '3': 3302, '4': 3906, '5': 4299, '6': 4903, '7': 5690, '8': 6284, '9': 6687, '10': 7474}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rtCMIC1.jpg
OCR detection done with doctr
left top x of SN: 110.7265625
bottom right x of SN: 333.1796875
left top x of T/F: 953.8671875
bottom right x of T/F: 1340.2109375
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filfe
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text2 i.e the incoming text is the winner
collision happend with box:514.3359375 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Tuule
((1040.609375, 595.9765625), (1136.9453125, 644.9609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:595.9765625 and text:Tuule solving on the basis of percent match boxes
the current box specification are
Bul
((978.5625, 705.375), (1083.0625, 759.2578125))
text1 i.e the prev text is the winner
Touue
((968.765625, 800.078125), (1084.6953125, 853.9609375))
collision happend with box:800.078125 and text:Touue solving on the basis of percent match boxes
the current box specification are
pul
((978.5625, 883.3515625), (1094.4921875, 929.0703125))
text1 i.e the prev text is the winner
collision happend with box:800.078125 and text:Touue solving on the basis of percent match boxes
the current box specification are
Tque
((1029.1796875, 966.625), (1146.7421875, 1018.875))
text1 i.e the prev text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Falg
((998.15625, 435.9609375), (1086.328125, 488.2109375))
collision happend with box:435.9609375 and text:Falg solving on the basis of percent match boxes
the current box specification are
Filfe
((1001.421875, 514.3359375), (1092.859375, 563.3203125))
text2 i.e the incoming text is the winner
Tuule
((1040.609375, 595.9765625), (1136.9453125, 644.9609375))
Bul
((978.5625, 705.375), (1083.0625, 759.2578125))
Touue
((968.765625, 800.078125), (1084.6953125, 853.9609375))
pul
((978.5625, 883.3515625), (1094.4921875, 929.0703125))
Tque
((1029.1796875, 966.625), (1146.7421875, 1018.875))
bue
((985.09375, 1058.0625), (1076.53125, 1108.6796875))
fe
((991.625, 1154.3984375), (1097.7578125, 1200.1171875))
sue
((991.625, 1278.4921875), (1074.8984375, 1329.109375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 600, '2': 530, '3': 599, '4': 703, '5': 804, '6': 906, '7': 974, '8': 1077, '9': 1146, '10': 1249}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nD8jfSQ.jpg
OCR detection done with doctr
left top x of SN: 163.96191406249997
bottom right x of SN: 403.32910156250006
left top x of T/F: 1339.25390625
bottom right x of T/F: 1794.1435546874998
first t/f detection
folu
((1381.4111328125, 672.828125), (1534.7763671875, 764.3525390625))
collision happend with box:672.828125 and text:folu solving on the basis of percent match boxes
the current box specification are
Falke
((1383.884765625, 794.0361328125), (1527.3554687500002, 870.71875))
text2 i.e the incoming text is the winner
collision happend with box:794.0361328125 and text:Falke solving on the basis of percent match boxes
the current box specification are
Trur
((1371.5166015625, 915.244140625), (1519.9345703125, 1019.13671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:915.244140625 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tior
((1386.3583984375, 1061.1884765625), (1527.3554687500002, 1165.0810546875))
text1 i.e the prev text is the winner
Tue
((1381.4111328125, 1209.6064453125), (1522.408203125, 1313.4990234375))
collision happend with box:1209.6064453125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1369.0429687499998, 1348.1298828125), (1527.3554687500002, 1429.759765625))
text2 i.e the incoming text is the winner
collision happend with box:1348.1298828125 and text:Trul solving on the basis of percent match boxes
the current box specification are
fsul
((1378.9375, 1464.390625), (1524.8818359375, 1553.44140625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
folu
((1381.4111328125, 672.828125), (1534.7763671875, 764.3525390625))
Falke
((1383.884765625, 794.0361328125), (1527.3554687500002, 870.71875))
Trur
((1371.5166015625, 915.244140625), (1519.9345703125, 1019.13671875))
Tior
((1386.3583984375, 1061.1884765625), (1527.3554687500002, 1165.0810546875))
Tue
((1381.4111328125, 1209.6064453125), (1522.408203125, 1313.4990234375))
Trul
((1369.0429687499998, 1348.1298828125), (1527.3554687500002, 1429.759765625))
fsul
((1378.9375, 1464.390625), (1524.8818359375, 1553.44140625))
True
((1378.9375, 1593.01953125), (1514.9873046875, 1667.228515625))
Fase
((1383.884765625, 1716.701171875), (1507.56640625, 1790.91015625))
Falue
((1371.5166015625, 1862.6455078125), (1539.7236328125, 1949.22265625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 910, '2': 811, '3': 910, '4': 1061, '5': 1207, '6': 1355, '7': 1454, '8': 1602, '9': 1704, '10': 1855}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KB26N1r.jpg
OCR detection done with doctr
left top x of T/F: 5312.796875
bottom right x of T/F: 6529.125
left top x of SN: 671.9843749999998
bottom right x of SN: 1080.6953125
first t/f detection
TRUE
((5395.984375, 2104.140625), (6027.2265625, 2323.703125))
TRUE
((5423.4296875, 2689.640625), (6072.96875, 2909.203125))
AKE
((5496.6171875, 3211.1015625), (5990.6328125, 3384.921875))
FALSE
((5295.3515625, 3403.21875), (5990.6328125, 3613.6328125))
FALSE
((5331.9453125, 4034.4609375), (6072.96875, 4235.7265625))
FALSE
((5350.2421875, 4427.84375), (6008.9296875, 4647.40625))
FALSE
((5350.2421875, 4949.3046875), (5990.6328125, 5150.5703125))
TRUE
((5368.539062499999, 5370.1328125), (5999.781250000001, 5617.140625))
TRU
((5395.984375, 5864.1484375), (5844.2578125, 6092.859375))
TRUE
((5386.8359375, 6385.609375), (6027.2265625, 6596.0234375))
FALSE
((5414.281250000001, 7007.703125), (6118.7109375, 7208.96875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2396, '2': 2954, '3': 3320, '4': 3888, '5': 4427, '6': 4995, '7': 5370, '8': 5937, '9': 6321, '10': 6897}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WcYuBgk.jpg
OCR detection done with doctr
left top x of SN: 77.701171875
bottom right x of SN: 320.9296875
left top x of T/F: 1318.41015625
bottom right x of T/F: 1781.32421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 672.095703125))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
Tyue
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text1 i.e the prev text is the winner
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Lesk
((1347.14453125, 1142.796875), (1457.208984375, 1199.0))
text1 i.e the prev text is the winner
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Fadte
((1347.14453125, 1280.962890625), (1454.8671875, 1337.166015625))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 672.095703125))
Tyue
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
Lesk
((1347.14453125, 1142.796875), (1457.208984375, 1199.0))
collision happend with box:1142.796875 and text:Lesk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
Fadte
((1347.14453125, 1280.962890625), (1454.8671875, 1337.166015625))
Falye
((1337.77734375, 1395.7109375), (1454.8671875, 1454.255859375))
Truc
((1344.802734375, 1533.876953125), (1436.1328125, 1583.0546875))
R
((1365.87890625, 1660.333984375), (1447.8417968750002, 1695.4609375))
collision happend with box:1660.333984375 and text:R solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1639.2578125), (1583.666015625, 1700.14453125))
text2 i.e the incoming text is the winner
Trut
((1354.169921875, 1814.892578125), (1466.576171875, 1873.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
the unassigned keys are ['4', '7']
the assigned keys are ['1', '2', '3', '5', '6', '8', '9', '10']
['1', '2', '3', '5', '6', '8', '9', '10', '1', '2', '3', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 840, '2': 737, '3': 836, '5': 1135, '6': 1290, '8': 1538, '9': 1643, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cbIcLP0.jpg
OCR detection done with doctr
left top x of SN: 230.53125
bottom right x of SN: 482.20898437499994
left top x of T/F: 1547.9736328125
bottom right x of T/F: 2030.900390625
first t/f detection
Trie
((1613.1103515625, 755.373046875), (1737.1679687500002, 810.509765625))
collision happend with box:755.373046875 and text:Trie solving on the basis of percent match boxes
the current box specification are
True
((1593.8125, 890.4580078125), (1709.5996093750002, 956.6220703125))
text2 i.e the incoming text is the winner
collision happend with box:890.4580078125 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1626.89453125, 1020.029296875), (1745.4384765625, 1075.166015625))
text2 i.e the incoming text is the winner
collision happend with box:1020.029296875 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falk
((1613.1103515625, 1174.412109375), (1731.654296875, 1232.3056640625))
text2 i.e the incoming text is the winner
collision happend with box:1174.412109375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falie
((1610.353515625, 1337.0654296875), (1720.626953125, 1394.958984375))
text2 i.e the incoming text is the winner
collision happend with box:1337.0654296875 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falje
((1599.326171875, 1480.4208984375), (1739.9248046875, 1543.828125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Trie
((1613.1103515625, 755.373046875), (1737.1679687500002, 810.509765625))
True
((1593.8125, 890.4580078125), (1709.5996093750002, 956.6220703125))
Falie
((1626.89453125, 1020.029296875), (1745.4384765625, 1075.166015625))
Falk
((1613.1103515625, 1174.412109375), (1731.654296875, 1232.3056640625))
Falie
((1610.353515625, 1337.0654296875), (1720.626953125, 1394.958984375))
Falje
((1599.326171875, 1480.4208984375), (1739.9248046875, 1543.828125))
Falre
((1621.380859375, 1615.505859375), (1739.9248046875, 1673.3994140625))
True
((1629.6513671875, 1767.1318359375), (1745.4384765625, 1822.2685546875))
True
((1632.408203125, 1885.67578125), (1728.8974609375, 1946.326171875))
True
((1621.380859375, 2084.16796875), (1720.626953125, 2144.818359375))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': 'UNASSIGNED', '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '5']
the assigned keys are ['2', '3', '4', '6', '7', '8', '9', '10']
['2', '3', '4', '6', '7', '8', '9', '10', '2', '3', '4', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 918, '3': 1025, '4': 1196, '6': 1516, '7': 1623, '8': 1789, '9': 1899, '10': 2059, '1': 618}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': 'UNASSIGNED', '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zaZoS31.jpg
OCR detection done with doctr
left top x of SN: 121.5
bottom right x of SN: 337.63671875
left top x of T/F: 849.595703125
bottom right x of T/F: 1205.78515625
first t/f detection
TRUE
((867.80859375, 356.439453125), (941.724609375, 387.6484375))
collision happend with box:356.439453125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((869.451171875, 443.49609375), (936.796875, 473.0625))
text1 i.e the prev text is the winner
collision happend with box:356.439453125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((874.3789062499999, 523.982421875), (915.443359375, 551.90625))
text2 i.e the incoming text is the winner
collision happend with box:523.982421875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((917.0859375, 527.267578125), (943.3671875, 550.263671875))
text1 i.e the prev text is the winner
collision happend with box:523.982421875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((867.80859375, 615.966796875), (943.3671875, 647.17578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:615.966796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((864.5234375, 712.87890625), (945.009765625, 745.73046875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
TRUE
((867.80859375, 356.439453125), (941.724609375, 387.6484375))
TRVE
((869.451171875, 443.49609375), (936.796875, 473.0625))
FAL
((874.3789062499999, 523.982421875), (915.443359375, 551.90625))
collision happend with box:523.982421875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((917.0859375, 527.267578125), (943.3671875, 550.263671875))
text1 i.e the prev text is the winner
FALSE
((867.80859375, 615.966796875), (943.3671875, 647.17578125))
FALSE
((864.5234375, 712.87890625), (945.009765625, 745.73046875))
FALSE
((857.953125, 795.0078125), (943.3671875, 824.57421875))
collision happend with box:795.0078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((864.5234375, 873.8515625), (945.009765625, 905.060546875))
text2 i.e the incoming text is the winner
TRVE
((859.595703125, 955.98046875), (936.796875, 985.546875))
collision happend with box:955.98046875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((862.880859375, 1026.611328125), (938.439453125, 1057.8203125))
text2 i.e the incoming text is the winner
TRVE
((874.3789062499999, 1120.23828125), (948.294921875, 1153.08984375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1021, '1': 353, '2': 446, '3': 510, '4': 606, '5': 701, '6': 798, '7': 860, '8': 957, '10': 1120}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u2GZM4K.jpg
OCR detection done with doctr
left top x of SN: 88.421875
bottom right x of SN: 306.484375
left top x of T/F: 863.8124999999999
bottom right x of T/F: 1232.40625
first t/f detection
Fale
((886.5, 418.6875), (959.4531249999999, 453.578125))
collision happend with box:418.6875 and text:Fale solving on the basis of percent match boxes
the current box specification are
Trure
((886.5, 505.9140625), (975.3125000000001, 542.390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:505.9140625 and text:Trure solving on the basis of percent match boxes
the current box specification are
Tuue
((883.3281250000001, 597.8984375), (961.0390625, 629.6171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:597.8984375 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Tyuuc
((886.5, 689.8828125), (967.3828125, 726.359375))
text2 i.e the incoming text is the winner
collision happend with box:689.8828125 and text:Tyuuc solving on the basis of percent match boxes
the current box specification are
Truue
((892.84375, 799.3125), (968.9687500000001, 837.375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:799.3125 and text:Truue solving on the basis of percent match boxes
the current box specification are
Truue
((897.6015625, 883.3671875), (973.7265625, 919.84375))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Fale
((886.5, 418.6875), (959.4531249999999, 453.578125))
Trure
((886.5, 505.9140625), (975.3125000000001, 542.390625))
Tuue
((883.3281250000001, 597.8984375), (961.0390625, 629.6171875))
Tyuuc
((886.5, 689.8828125), (967.3828125, 726.359375))
Truue
((892.84375, 799.3125), (968.9687500000001, 837.375))
Truue
((897.6015625, 883.3671875), (973.7265625, 919.84375))
Tywue
((899.1875, 965.8359375), (976.8984375, 997.5546875))
Faye
((905.53125, 1049.890625), (976.8984375, 1081.609375))
Tywe
((892.84375, 1130.7734375), (972.140625, 1170.421875))
Fale
((894.4296875, 1238.6171875), (973.7265625, 1275.09375))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 417, '2': 518, '3': 585, '4': 688, '5': 789, '6': 891, '7': 957, '8': 1059, '9': 1129, '10': 1230}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yo3KVbK.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6729.59375
left top x of SN: 601.2187500000001
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5707.750000000001, 1968.8125), (6177.375, 2149.4375))
TRUE
((5716.78125, 2510.6875), (6150.28125, 2673.25))
PALSE
((5698.718749999999, 3043.53125), (6195.437500000001, 3224.15625))
PALSE
((5689.6875, 3621.53125), (6240.593749999999, 3784.09375))
FALSE
((5671.624999999999, 4217.59375), (6204.46875, 4389.1875))
FALSE
((5698.718749999999, 4741.40625), (6177.375, 4913.0))
TRUE
((5626.468750000001, 5192.96875), (6078.031249999999, 5355.53125))
TRUE
((5617.437499999999, 5761.9375), (6023.843749999999, 5924.5))
TRUE
((5608.40625, 6258.65625), (6050.937499999999, 6421.21875))
TRUE
((5644.531249999999, 6981.15625), (6096.09375, 7152.75))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 2998, '4': 3603, '5': 4199, '6': 4795, '7': 5202, '8': 5807, '9': 6213, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XZfYPZf.jpg
OCR detection done with doctr
left top x of T/F: 5670.656250000001
bottom right x of T/F: 6937.312500000001
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
falal
((5861.281249999999, 1851.40625), (6574.750000000001, 2113.3125))
False
((5689.6875, 2492.625), (6285.75, 2808.71875))
Falbo
((5834.187499999999, 3188.03125), (6448.3125, 3458.96875))
Faldg
((5689.6875, 3711.84375), (6177.375, 3937.625))
Falal
((5644.531249999999, 4154.375), (6168.343750000001, 4380.15625))
TJul
((5843.218750000001, 4858.8125), (6484.437499999999, 5147.8125))
Tow
((5834.187499999999, 5572.28125), (6493.468750000001, 5888.375))
Palp
((5897.406250000001, 6069.0), (6502.5, 6421.21875))
Trul
((5843.218750000001, 6683.125), (6493.468750000001, 7044.375))
Touul
((5798.0625, 7252.09375), (6547.656250000001, 7541.09375))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2655, '3': 3251, '4': 3847, '5': 4244, '6': 4849, '7': 5662, '8': 6267, '9': 6674, '10': 7486}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : smkLrZa.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
Falue
((1271.640625, 1794.462890625), (1426.45703125, 1888.291015625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RRxEwCR.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1572.1171875, 744.8203125))
collision happend with box:644.5078125 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
collision happend with box:1228.828125 and text:Trwv solving on the basis of percent match boxes
the current box specification are
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
text2 i.e the incoming text is the winner
collision happend with box:1346.6953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
text2 i.e the incoming text is the winner
going with doctr less gap
starting with low row gap
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1572.1171875, 744.8203125))
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
falwe
((1429.171875, 1755.46875), (1584.6562500000002, 1858.2890625))
Falte
((1416.6328125, 1918.4765625), (1614.75, 2046.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 900, '4': 1060, '5': 1218, '6': 1381, '7': 1487, '8': 1650, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5GvROcS.jpg
OCR detection done with doctr
left top x of T/F: 5506.890625
bottom right x of T/F: 6800.51171875
left top x of SN: 392.2070312500001
bottom right x of SN: 803.75
first t/f detection
TRUE
((5637.29296875, 1796.7734375), (6267.08984375, 2120.93359375))
FALSE
((5618.769531250001, 2417.30859375), (6331.921875000001, 2685.8984375))
TRUE
((5563.19921875, 2889.65625), (6396.75390625, 3297.171875))
TRUE
((5553.9375, 3602.80859375), (6294.875, 3899.18359375))
FALSE
((5609.507812500001, 4306.69921875), (6387.4921875, 4566.02734375))
TRUE
((5600.246093750001, 4899.44921875), (6257.828125, 5158.77734375))
TRUE
((5637.29296875, 5399.58203125), (6387.4921875, 5658.91015625))
FALSE
((5692.86328125, 5955.28515625), (6378.23046875, 6205.3515625))
TRUE
((5618.769531250001, 6464.6796875), (6322.660156250001, 6733.26953125))
FALSE
((5702.125, 7159.30859375), (6415.27734375, 7427.8984375))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2797, '3': 3204, '4': 3815, '5': 4436, '6': 5056, '7': 5464, '8': 6084, '9': 6501, '10': 7113}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ly91BaO.jpg
OCR detection done with doctr
left top x of T/F: 5451.3203125
bottom right x of T/F: 6643.0625
left top x of SN: 864.5546874999999
bottom right x of SN: 1276.0976562500002
first t/f detection
Trie
((5526.15234375, 1944.9609375), (6044.80859375, 2167.2421875))
Tue
((5396.48828125, 2463.6171875), (5905.8828125, 2722.9453125))
Tyue
((5461.3203125, 2935.96484375), (6183.734375, 3186.03125))
False
((5535.4140625, 3621.33203125), (6155.94921875, 3834.3515625))
re
((5600.246093750001, 4214.08203125), (6081.855468749999, 4399.31640625))
True
((5581.722656250001, 4399.31640625), (6202.2578125, 4603.07421875))
Tyue
((5498.3671875, 4742.0), (6026.28515625, 4917.97265625))
False
((5415.01171875, 5130.9921875), (5924.40625, 5390.3203125))
True
((5461.3203125, 5594.078125), (5933.66796875, 5779.3125))
Falye
((5405.75, 6047.90234375), (5924.40625, 6233.13671875))
False
((5470.58203125, 6566.55859375), (5970.71484375, 6779.578125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2204, '2': 2750, '3': 3111, '4': 3658, '5': 4195, '6': 4751, '7': 5103, '8': 5649, '9': 6020, '10': 6566}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H9hqtAY.jpg
OCR detection done with doctr
left top x of SN: 562.5214843749998
bottom right x of SN: 986.2207031250001
left top x of T/F: 5860.173828124999
bottom right x of T/F: 7091.8359375
first t/f detection
FALSE
((5907.666015625, 2455.73828125), (6488.794921875, 2624.453125))
FALSE
((5888.919921875, 3074.359375), (6432.556640625, 3214.955078125))
FALSE
((5888.919921875, 3664.861328125), (6451.302734375, 3833.576171875))
TRUE
((5832.681640625, 4208.498046875), (6291.9609375, 4395.958984375))
FALSE
((5823.30859375, 4686.5234375), (6357.572265625, 4827.119140625))
FALSE
((5851.427734375, 5333.263671875), (6470.048828125, 5511.3515625))
TRUE
((5823.30859375, 6054.98828125), (6320.080078125, 6242.44921875))
TRUE
((5804.5625, 6598.625), (6310.70703125, 6823.578125))
TRUE
((5767.0703125, 7114.142578125), (6301.333984375001, 7282.857421875))
TRUE
((5842.054687500001, 7807.748046875), (6357.572265625, 8023.328125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2399, '2': 3008, '3': 3617, '4': 4217, '5': 4611, '6': 5220, '7': 6026, '8': 6626, '9': 7029, '10': 7835}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
Processing complete. Images saved to: Phase1Dataset/output Phase1Dataset/detection
