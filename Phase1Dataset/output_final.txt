OCR detection done with doctr
left top x of T/F: 5318.437500000001
bottom right x of T/F: 6585.093750000001
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
TROE
((5491.000000000001, 1752.0625), (5996.749999999999, 1968.8125))
TROE
((5445.84375, 2402.3125), (5987.71875, 2628.09375))
FALIE
((5445.84375, 2799.6875), (6032.875000000001, 3070.625))
FALSE
((5400.687499999999, 3477.03125), (6014.8125, 3693.78125))
TRUE
((5454.874999999999, 4235.65625), (6023.843749999999, 4452.40625))
TROE
((5310.375, 4642.0625), (5852.25, 4858.8125))
FALSE
((5518.093750000001, 5129.75), (6096.09375, 5301.34375))
TROE
((5310.375, 5626.46875), (5816.125000000001, 5843.21875))
TROE
((5436.812500000001, 6087.0625), (5915.468749999999, 6303.8125))
TROE
((5400.687499999999, 6601.84375), (5951.593750000001, 6827.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2131, '2': 2727, '3': 3124, '4': 3711, '5': 4298, '6': 4885, '7': 5274, '8': 5861, '9': 6258, '10': 6845}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : atMTlVH.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 327.63671875
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
True
((1416.1083984375, 627.615234375), (1518.2783203125002, 678.7001953125))
collision happend with box:627.615234375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:761.4091796875 and text:True solving on the basis of percent match boxes
the current box specification are
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
text2 i.e the incoming text is the winner
collision happend with box:885.47265625 and text:Falk solving on the basis of percent match boxes
the current box specification are
falte
((1425.8388671875, 1019.2666015625), (1530.44140625, 1077.6494140625))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
collision happend with box:1191.982421875 and text:Falk solving on the basis of percent match boxes
the current box specification are
fale
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
text2 i.e the incoming text is the winner
collision happend with box:1325.7763671875 and text:fale solving on the basis of percent match boxes
the current box specification are
fata
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1457.1376953125 and text:fata solving on the basis of percent match boxes
the current box specification are
fek
((1552.3349609375, 1452.2724609375), (1635.0439453125, 1508.22265625))
text1 i.e the prev text is the winner
collision happend with box:1457.1376953125 and text:fata solving on the basis of percent match boxes
the current box specification are
Thue
((1425.8388671875, 1586.06640625), (1525.576171875, 1634.71875))
text1 i.e the prev text is the winner
Tue
((1433.1367187500002, 1707.697265625), (1535.306640625, 1756.349609375))
True
((1408.810546875, 1890.1435546875), (1518.2783203125002, 1938.7958984375))
the final dict without editing {'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 603, '2': 758, '3': 863, '4': 1021, '5': 1177, '6': 1333, '7': 1437, '8': 1595, '9': 1702, '10': 1858}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MNx2JmJ.jpg
OCR detection done with doctr
left top x of T/F: 4948.15625
bottom right x of T/F: 6151.593750000001
left top x of SN: 357.3750000000001
bottom right x of SN: 772.1874999999999
first t/f detection
TRUE
((5057.5, 2321.03125), (5472.9375, 2519.71875))
TRUE
((5075.5625, 2844.84375), (5509.062499999999, 3061.59375))
d-dimensional
((4118.25, 3296.40625), (4949.125, 3531.21875))
collision happend with box:3296.40625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5084.59375, 3233.1875), (5716.78125, 3531.21875))
true and false collision so given priority to text2 which is the incoming text
is
((4831.71875, 3883.4375), (4958.15625, 4018.90625))
collision happend with box:3883.4375 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5202.0, 3811.1875), (5779.999999999999, 4064.0625))
text2 i.e the incoming text is the winner
Pre-
((4714.3125, 4434.34375), (4985.25, 4587.875))
collision happend with box:4434.34375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5192.96875, 4380.15625), (5761.937500000001, 4633.03125))
text2 i.e the incoming text is the winner
FALSE
((5174.90625, 4885.90625), (5734.843750000001, 5102.65625))
collision happend with box:4885.90625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4289.84375, 4976.21875), (5012.34375, 5174.90625))
text2 i.e the incoming text is the winner
directly
((4587.875, 5355.53125), (5039.4375, 5527.125))
collision happend with box:5355.53125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRVE
((5192.96875, 5355.53125), (5635.5, 5536.15625))
text1 i.e the prev text is the winner
space.
((4687.21875, 5933.53125), (5066.53125, 6096.09375))
collision happend with box:5933.53125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5238.124999999999, 5870.3125), (5653.562500000001, 6069.0))
text2 i.e the incoming text is the winner
prediction
((4515.625, 6276.71875), (5111.6875, 6475.40625))
collision happend with box:6276.71875 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5238.124999999999, 6303.8125), (5689.6875, 6484.4375))
text2 i.e the incoming text is the winner
overfitting
((4353.0625, 6845.6875), (4958.15625, 7053.40625))
collision happend with box:6845.6875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRVE
((5301.343750000001, 6854.71875), (5888.374999999999, 7071.46875))
text1 i.e the prev text is the winner
the
((4940.09375, 7017.28125), (5156.84375, 7170.8125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2655, '2': 3215, '3': 3585, '4': 4145, '5': 4705, '6': 5274, '7': 5653}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 94eVJfM.jpg
OCR detection done with doctr
left top x of T/F: 5625.5
bottom right x of T/F: 6955.374999999999
left top x of SN: 808.9374999999999
bottom right x of SN: 1232.7812499999998
first t/f detection
TRUE
((5707.750000000001, 2158.46875), (6213.499999999999, 2375.21875))
TRUE
((5680.656250000001, 2790.65625), (6204.46875, 2971.28125))
TRUE
((5707.750000000001, 3242.21875), (6195.437500000001, 3422.84375))
FALSE
((5698.718749999999, 3901.5), (6222.531250000001, 4082.125))
FALSE
((5770.96875, 4524.65625), (6267.687499999999, 4696.25))
TRUE
((5743.875, 5057.5), (6231.5625, 5229.09375))
Teve
((5680.656250000001, 5536.15625), (6141.250000000001, 5716.78125))
TRUE
((5770.96875, 6087.0625), (6177.375, 6222.53125))
PRU
((5725.812499999999, 6601.84375), (6123.1875, 6773.4375))
collision happend with box:6601.84375 and text:PRU solving on the basis of percent match boxes
the current box specification are
FALSE
((6150.28125, 6592.8125), (6674.093749999999, 6755.375))
text2 i.e the incoming text is the winner
TRUE.
((5798.0625, 7170.8125), (6358.000000000001, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2447, '2': 3007, '3': 3386, '4': 3973, '5': 4551, '6': 5138, '7': 5536, '8': 6141, '9': 6547, '10': 7161}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : naF0DTz.jpg
rotation started
['bS', '6o', '00', '-', '', 'CT', '4', '3', 'N', 'I', 'E', 'I', '9', 'E', 'E', '>', 'E', 'E', '7', 'a', 'E', 'I', '2', 'e', 'E', '-', 'I', 'E', '8', '8', 'it', 'a', 'I', ':', '€', 'I', 'I', 'I', 'I', 'I', 'E', '%', 'I', 'I', '8', 'E', 'E', 'E', 'E', 'a', 'I', 'e', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', '3', 'I', '2', 'I', 'I', 'e', 'E', 'E', 'tn', 'I', 'E', 'E', 'of', 'I', 'E', 'Q', 'E', 'B', 'I', '8', 'I', '2', 'I', 'f', 'I', 'I', 'I', 'I', 'a', 'I', '8', '2', 'E', 'I', 'E', 'E', 'I', 'E', 'I', 'E', 'I', 'E', 'I', 'I', 'it', 'I', '8', 'I', 'E', 'I', 't', '€', '2', 'e', 'I', 'I', '1', '2', 'so', 'E', 'E', '-', 'E', '2', 'E', 'E', 'I', 'I', 'E', 'I', 'I', '8', 'E', 'I', 'I', '-', 'E', '2', 't', 'I', 'E', 'E', '2', 'D', '€', '8', 'I', 'E', 'e', 'I', 'e', 'a', '2', 'i', 'of', 'I', 'E', 'I', 'I', 'I', '2', ':', 'E', '€', '2', '2', 'I', 'E', 'I', 'E', 'F', 'E', 'E', 'I', 'a', 'I', 'I', ':', 't', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'E', 'a', 'I', 'I', '1', 'I', 't', 'I', 'F', 'I', 'I']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'ozyre.ioues', 'qou', 'op', '7e44', 'egep', 'Surureng', 'euA', 'ur', 'smegop', 'IO', 'esTOU', 'oyreds', 'emngdeo', '01', 'UIBOT', 'Keur', 'popour', 'a44', 'Se', "'soseaIo", '-UI', 'Suray.eno', 'Jo', 'YSLI', 'oy9', "'WAS", 'UI', 'rjowrered', 'D', 'a49', 'Jo', 'anTeA', 'y81y', 'e', 'YAIM', 'OI', 'AS', '9SOI-SA-QU0', 'ueya', 'JOMOTS', 'SI', 'WAS', 'QUO-SA-QUO', 'Sursn', 'uororpard', 'B', 'Suryeur', "'sesserp", 'Jo', 'poqunu', '081eT', 'B', 'YAIM', 'suarqoId', 'sserormu', 'JOI', '6', 'raoeds', 'TEULSTIO', 'ou4', 'uI', 'JeQUIT-uou', '0q', 'ues', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsrpap', 'OUL', '8', "'sopou", 'Jo', 'poqunu', 'a44', '07', 'Teuorgiodo.d', 'AToamp', 'SI', 'DOJIL', 'UOISIDOCI', '047', 'uI', 'uororpard', 'B', 'Suryeur', 'JOJ', 'pambar', 'BWIL', 'OUL', 'L', '"uornquasip', 'uerssnes', 'B', 'Siemre', 'SI', 'Suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIUL', 'V', '9', 'TreDoy', 'pue', 'UOISIO', '-aId', 'uoomgoq', 'gord', 'B', 'SI', 'OAINO', '(DOH)', 'orasuiegpe.euD', 'Surgeiado', 'IOAIODOY', 'BUL', 'S', 'YIOMTOU', '[emeu', 'o47', 'UI', 'squerpe.1s', 'au7', 'agnduoo', '07', 'posn', 'SI', 'quaosop', 'querpe1s', 'OTIYM', "'sq481OM", 'ou7', 'agepdn', '07', 'pasn', 'SI', 'uome8odoxdypeg', '4', ':f', 'pue', 'I', 'SIO900A', 'Kue', 'JOJ', 'OLIgOuI', 'souensip', 'PITRA', 'B', 'SI', '(A-z/@quorpusgauzsoy', '-', 'I', '&', 'Teuorsueuump-p', 'loyissepo', 'JeQuII-uou', 'B', 'SI', 'NNY', '3', 'quourfordap', 'quetemmbar', 'a8e10qs', 'auy', 'STeoidAL', 'I', '1081eT', 'yonur', 'SI', 'NNY', 'JOJ', 'IOJ', 'IAS', 'ueyz', 'quouagens', 'NS', '1SIVa/anuL', 'paqumu', 'IIOI', 'mor', 'OTLIM', ':aJ0u', '29LM', '(sad', 'OT)', '6', 'IO', 'ANUL', 'Teardeo', 'UI', 'ASTVA', 'pue', 'S121101', 'Surguumpuey', 'reapo']
rotation started
['E', 'E', 'a', 'E', ':', '-', '1', 'is', 'E', 's', 'I', 'is', 'I', 'à', 'I', 'I', 'I', 'E', 'e', 'E', 'I', '1', 'I', 'is', 'I', '€', 'of', '6', 'a', 'i', 'I', 'a', '8a', 'I', 'I', ':', 'e', 'I', 'I', 'iE', 'e', ':', '1', 'E', 'I', '€', 'is', 'I', 'iE', 'o', 'e', 'I', '2', 'e', 'I', 'E', 'a', 'I', 'à', ':', 'o', 'i', ':', '', 'I', 'of', 'I', 'o', 'E', 'D', '.', 'I', 'I', ':', 'I', 'I', 'of', 'is', 'I', 'I', 'I', 'de', 'à', ':', 'I', 'a', 'E', 'of', 'de', 'a', 'I', 'I', 'I', 'à', 'e', 'à', 'I', ':', 's', '$', 'à', 'I', 'I', 'I', 'I', 'a', 'I', 'e', 'I', 'iE', 'I', 'of', 'I', 'I', ':', 'E', 'I', 'à', 's', 'I', 'I', 'a', 'a', 'is', 'à', '€', 'I', 'I', 'I', 'e', 'E', 'I', '1', 'ia', '-', 'of', 'E', 'à', 'E', 'e', 'o', '-', '8', 'is', 'I', '-', 'i', 'is', 'a', 'E', 'I', 'S', 'I', 'E', 'e', 'E', '8', 'I', 'is', '8', '8', 'I', '2', ':', 'I', '1', 'I', 'E', '11', 'I', 'I', 'I', 'C', '3', 'E', 'I', 'of', 'I', '8', 'I', 'I', 'a', 'I', 'E', 'I', 'A', 'E', 'E', 'à', 'I', '€', 'I', 'I', '7', '11', '4', '10', '', 'A', '0O', 'o', '19']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/FAISI', 'SN', 'Statement', 'much', 'larger', 'than', 'SVM', 'for', '-', 'requirement', 'for', 'KNN', 'is', '1', 'Typically,', 'the', 'storage', 'deployment.', '-', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'cision', 'and', 'Recall.', 'in', 'the', 'neural', 'network.', 'F', 'gradients', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'F', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'TT', 'F', 'T', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', '7']
OCR detection done with doctr
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:14:31] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : naF0DTz.jpg
[2024/06/28 14:14:32] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:14:33] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.24685907363891602
[2024/06/28 14:14:35] ppocr DEBUG: rec_res num  : 34, elapsed : 2.2300832271575928
OCR detection done
left top x of T/F: 5800.0
bottom right x of T/F: 6712.0
left top y of T/F: 1269.0
bottom right y of T/F: 1862.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[828.0, 1850.0], [1015.0, 1850.0], [1015.0, 1975.0], [828.0, 1975.0]]
first t/f detection
first t/f detection
deployment.
[[1143.0, 2418.0], [1852.0, 2418.0], [1852.0, 2582.0], [1143.0, 2582.0]]
first t/f detection
first t/f detection
F
[[5951.0, 3738.0], [6246.0, 3738.0], [6246.0, 4104.0], [5951.0, 4104.0]]
first t/f detection
L
[[5978.0, 4414.0], [6255.0, 4444.0], [6199.0, 4930.0], [5923.0, 4900.0]]
the true list is  [1814, 1965, 3160]
the false list is  []
the true list for xdirn [1110, 5911, 5852]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
left top x of SN: 828.0
bottom right x of SN: 1155.0
left top y of SN: 1850.0
bottom right y of SN: 2115.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6ZEaAgP.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
text2 i.e the incoming text is the winner
collision happend with box:914.0625 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
False
((1438.3984375, 1228.90625), (1547.578125, 1289.84375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1228.90625 and text:False solving on the basis of percent match boxes
the current box specification are
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1383.7890625 and text:Falje solving on the basis of percent match boxes
the current box specification are
Falre
((1446.0156250000002, 1508.203125), (1565.3515625, 1569.140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1508.203125 and text:Falre solving on the basis of percent match boxes
the current box specification are
True
((1458.7109375000002, 1665.625), (1565.3515625, 1716.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1665.625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
text2 i.e the incoming text is the winner
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1505, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rjFS7o6.jpg
OCR detection done with doctr
left top x of T/F: 686.951171875
bottom right x of T/F: 1053.26171875
left top x of SN: -9.265624999999993
bottom right x of SN: 205.638671875
first t/f detection
for
((672.6699218750001, 280.751953125), (701.50390625, 306.55078125))
collision happend with box:280.751953125 and text:for solving on the basis of percent match boxes
the current box specification are
Tyue
((716.6796875, 268.611328125), (801.6640625, 311.103515625))
text2 i.e the incoming text is the winner
collision happend with box:268.611328125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((733.373046875, 350.560546875), (813.8046875, 386.982421875))
text1 i.e the prev text is the winner
collision happend with box:268.611328125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fole
((753.1015625, 421.88671875), (827.462890625, 465.896484375))
text2 i.e the incoming text is the winner
collision happend with box:421.88671875 and text:Fole solving on the basis of percent match boxes
the current box specification are
is
((721.232421875, 525.08203125), (742.478515625, 547.845703125))
text1 i.e the prev text is the winner
collision happend with box:421.88671875 and text:Fole solving on the basis of percent match boxes
the current box specification are
fosse
((762.20703125, 505.353515625), (841.1210937499999, 550.880859375))
text2 i.e the incoming text is the winner
collision happend with box:505.353515625 and text:fosse solving on the basis of percent match boxes
the current box specification are
Pre
((713.64453125, 613.1015625), (757.654296875, 643.453125))
text1 i.e the prev text is the winner
collision happend with box:505.353515625 and text:fosse solving on the basis of percent match boxes
the current box specification are
Folse
((780.41796875, 593.373046875), (859.33203125, 640.41796875))
text2 i.e the incoming text is the winner
d-dimensional
((604.37890625, 429.474609375), (731.85546875, 478.037109375))
collision happend with box:429.474609375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((654.458984375, 528.1171875), (724.267578125, 561.50390625))
text1 i.e the prev text is the winner
betweeu
((642.318359375, 619.171875), (721.232421875, 657.111328125))
collision happend with box:619.171875 and text:betweeu solving on the basis of percent match boxes
the current box specification are
Fake
((794.076171875, 675.322265625), (876.025390625, 719.33203125))
text2 i.e the incoming text is the winner
collision happend with box:675.322265625 and text:Fake solving on the basis of percent match boxes
the current box specification are
Fasse
((806.216796875, 746.6484375), (880.5781250000001, 792.17578125))
text2 i.e the incoming text is the winner
collision happend with box:746.6484375 and text:Fasse solving on the basis of percent match boxes
the current box specification are
True
((818.3574218749999, 834.66796875), (889.68359375, 874.125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:834.66796875 and text:True solving on the basis of percent match boxes
the current box specification are
distribution.
((662.046875, 704.15625), (775.865234375, 746.6484375))
text2 i.e the incoming text is the winner
collision happend with box:704.15625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tree
((652.94140625, 778.517578125), (698.46875, 808.869140625))
text1 i.e the prev text is the winner
collision happend with box:704.15625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((695.4335937500001, 777.0), (716.6796875, 799.763671875))
text1 i.e the prev text is the winner
collision happend with box:704.15625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((712.126953125, 764.859375), (784.970703125, 801.28125))
text1 i.e the prev text is the winner
original
((674.1875, 866.537109375), (740.9609375000001, 898.40625))
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((739.443359375, 860.466796875), (795.5937499999999, 890.818359375))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
making
((640.80078125, 931.79296875), (712.126953125, 968.21484375))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
a
((706.0566406249999, 933.310546875), (724.267578125, 954.556640625))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((719.71484375, 916.6171875), (810.7695312500001, 954.556640625))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
Trwe
((827.462890625, 909.029296875), (900.306640625, 948.486328125))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
of
((681.7753906249999, 1022.84765625), (707.57421875, 1051.681640625))
text1 i.e the prev text is the winner
collision happend with box:866.537109375 and text:original solving on the basis of percent match boxes
the current box specification are
overfitting
((704.5390625, 1010.70703125), (797.1113281249999, 1048.646484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1010.70703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Trwe
((842.6386718749999, 1000.083984375), (924.5878906250001, 1047.12890625))
text1 i.e the prev text is the winner
collision happend with box:1010.70703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
or
((692.3984375, 1059.26953125), (715.162109375, 1077.48046875))
text1 i.e the prev text is the winner
collision happend with box:1010.70703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((713.64453125, 1044.09375), (775.865234375, 1075.962890625))
text2 i.e the incoming text is the winner
collision happend with box:1044.09375 and text:details solving on the basis of percent match boxes
the current box specification are
thè
((795.5937499999999, 1034.98828125), (830.498046875, 1062.3046875))
text1 i.e the prev text is the winner
collision happend with box:1044.09375 and text:details solving on the basis of percent match boxes
the current box specification are
noise
((643.8359375, 1057.751953125), (693.916015625, 1088.103515625))
text1 i.e the prev text is the winner
collision happend with box:1044.09375 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((683.2929687499999, 1082.033203125), (734.890625, 1112.384765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1082.033203125 and text:data. solving on the basis of percent match boxes
the current box specification are
unseen
((624.107421875, 1092.65625), (687.845703125, 1124.525390625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 388, '2': 479, '3': 540, '4': 631, '5': 720, '6': 811, '8': 965, '9': 1025, '10': 1115}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2sjzRpB.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6702.5
left top x of SN: 258.03125
bottom right x of SN: 672.8437500000001
first t/f detection
TRUG
((5500.03125, 1688.84375), (6240.593749999999, 1932.6875))
TRUG
((5545.187500000001, 2384.25), (6222.531250000001, 2682.28125))
FALSE
((5581.3125, 2890.0), (6339.9375, 3188.03125))
FALSG
((5563.249999999999, 3495.09375), (6222.531250000001, 3757.0))
TRUE
((5581.3125, 4009.875), (6267.687499999999, 4307.90625))
FALSE
((5599.375000000001, 4777.53125), (6330.906250000001, 5021.375))
TRUG
((5581.3125, 5337.46875), (6403.156249999999, 5626.46875))
TRUG
((5608.40625, 5870.3125), (6312.84375, 6114.15625))
the
((5238.124999999999, 5337.46875), (5472.9375, 5491.0))
the
((5274.250000000001, 6339.9375), (5509.062499999999, 6484.4375))
collision happend with box:6339.9375 and text:the solving on the basis of percent match boxes
the current box specification are
PALSG
((5734.843750000001, 6412.1875), (6367.03125, 6619.90625))
text2 i.e the incoming text is the winner
TRUE
((5581.3125, 7071.46875), (6285.75, 7333.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6793
printing the number dict y_coordinate
{'1': 1941, '2': 2537, '3': 3133, '4': 3729, '5': 4127, '6': 4723, '7': 5509, '8': 6105, '9': 6493, '10': 6793}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : W9e6qNn.jpg
OCR detection done with doctr
left top x of SN: 402.5312499999999
bottom right x of SN: 835.4062500000001
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6819.906249999999
first t/f detection
Fale
((5599.375000000001, 1995.90625), (5906.4375, 2248.78125))
Fle
((5509.062499999999, 2564.875), (5870.312500000001, 2790.65625))
Trve
((5436.812500000001, 3124.8125), (5888.374999999999, 3395.75))
Trie
((5418.75, 3729.90625), (5752.906249999999, 3991.8125))
Fabe
((5427.781249999999, 4298.875), (5888.374999999999, 4560.78125))
Tre
((5355.531250000001, 4885.90625), (5698.718749999999, 5084.59375))
True
((5382.625000000001, 5400.6875), (5798.0625, 5617.4375))
Trve
((5382.625000000001, 5879.34375), (5798.0625, 6159.3125))
Fale
((5382.625000000001, 6412.1875), (5770.96875, 6637.96875))
Tre
((5310.375, 7125.65625), (5752.906249999999, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2528, '3': 2944, '4': 3567, '5': 4181, '6': 4795, '7': 5202, '8': 5816, '9': 6222, '10': 6827}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qi8cQd9.jpg
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'handwriting.', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FALSE', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'TRHE', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'TRWE', 'classifier.', '3', '1-', 'cosineSimalaritylz.g)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'vectors', 'I', 'and', 'y.', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUETRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'FALSE', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'TRUE', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.']
rotation done for:  Qi8cQd9.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRHE
((5211.031249999999, 2185.5625), (5761.937500000001, 2402.3125))
TRWE
((5156.84375, 2700.34375), (5843.218750000001, 2917.09375))
FALSE
((5247.156250000001, 3169.96875), (5834.187499999999, 3377.6875))
FALSE
((5220.062500000001, 3729.90625), (5852.25, 3982.78125))
FALSE
((5229.09375, 4362.09375), (5770.96875, 4569.8125))
FALSE
((5256.1875, 4795.59375), (5852.25, 5057.5))
FALSE
((5211.031249999999, 5292.3125), (5807.093749999999, 5509.0625))
TRUETRUE
((5247.156250000001, 5816.125), (6240.593749999999, 6023.84375))
FALSE
((5256.1875, 6240.59375), (5834.187499999999, 6511.53125))
TRUE
((5238.124999999999, 6836.65625), (5807.093749999999, 7089.53125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2248, '2': 2826, '3': 3206, '4': 3784, '5': 4362, '6': 4940, '7': 5319, '8': 5906, '9': 6294, '10': 6881}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8r86TYY.jpg
OCR detection done with doctr
left top x of T/F: 5246.1875
bottom right x of T/F: 6341.250000000001
left top x of SN: 619.2812499999999
bottom right x of SN: 1016.0312499999999
first t/f detection
Tul
((5229.09375, 2113.3125), (5572.281250000001, 2348.125))
True
((5192.96875, 2628.09375), (5581.3125, 2817.75))
True
((5220.062500000001, 3106.75), (5653.562500000001, 3287.375))
Falsl
((5283.28125, 3657.65625), (5653.562500000001, 3847.3125))
alll
((5211.031249999999, 4262.75), (5608.40625, 4452.40625))
false
((5165.875, 4813.65625), (5536.156249999999, 5030.40625))
True
((5147.8125, 5229.09375), (5463.906250000001, 5481.96875))
Falye
((5183.9375, 5752.90625), (5527.125, 5978.6875))
Ti
((5247.156250000001, 6800.53125), (5527.125, 6990.1875))
Tvul
((5147.8125, 6195.4375), (5491.000000000001, 6376.0625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2817, '3': 3197, '4': 3738, '5': 4280, '6': 4831, '7': 5202, '8': 5752, '9': 6132, '10': 6692}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rYEPaeR.jpg
OCR detection done with doctr
left top x of SN: 91.80078125000003
bottom right x of SN: 310.716796875
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 390.716796875), (970.830078125, 428.076171875))
collision happend with box:390.716796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((882.1015625, 474.775390625), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:474.775390625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((875.875, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((886.7714843750001, 653.7890625), (961.490234375, 684.921875))
collision happend with box:653.7890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (967.716796875, 792.330078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
TRUE
((886.7714843750001, 926.201171875), (958.3769531250001, 957.333984375))
collision happend with box:926.201171875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((891.4414062500001, 1016.486328125), (977.056640625, 1046.0625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
PAL
((891.4414062500001, 1094.318359375), (939.697265625, 1130.12109375))
text1 i.e the prev text is the winner
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
SE
((941.25390625, 1097.431640625), (970.830078125, 1128.564453125))
text1 i.e the prev text is the winner
FALSE
((892.998046875, 1209.509765625), (972.38671875, 1240.642578125))
the final dict without editing {'1': False, '2': False, '3': 'NULL', '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 392, '2': 491, '3': 558, '4': 658, '5': 758, '7': 927, '8': 1030, '9': 1097, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'NULL', '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sB9gIJP.jpg
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6485.75
left top x of SN: 646.3749999999999
bottom right x of SN: 1052.15625
first t/f detection
1Hml
((5202.0, 2275.875), (5590.343749999999, 2501.65625))
Thue
((5138.78125, 2781.625), (5590.343749999999, 3007.40625))
Trl
((5373.593749999999, 3197.0625), (5798.0625, 3377.6875))
Treul
((5337.46875, 3847.3125), (5834.187499999999, 4064.0625))
1rue
((5211.031249999999, 4470.46875), (5653.562500000001, 4678.1875))
Trul
((5247.156250000001, 4949.125), (5635.5, 5165.875))
Falul
((5337.46875, 5256.1875), (5789.031250000001, 5518.09375))
ud
((5238.124999999999, 5436.8125), (5716.78125, 5644.53125))
Cala
((5183.9375, 5834.1875), (5626.468750000001, 6059.96875))
collision happend with box:5834.1875 and text:Cala solving on the basis of percent match boxes
the current box specification are
TMul
((5680.656250000001, 5888.375), (6014.8125, 6087.0625))
text2 i.e the incoming text is the winner
Tralsl
((5183.9375, 6339.9375), (5626.468750000001, 6574.75))
Trul
((5165.875, 6899.875), (5608.40625, 7080.5))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '7']
['1', '2', '3', '4', '5', '7', '1', '2', '3', '4', '5', '7']
printing the number dict y_coordinate
{'1': 2293, '2': 2835, '3': 3206, '4': 3784, '5': 4316, '7': 5265}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': 'UNASSIGNED', '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ao4IYZg.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6612.187500000001
left top x of SN: 402.5312499999999
bottom right x of SN: 817.34375
first t/f detection
Taue
((5454.874999999999, 2113.3125), (5834.187499999999, 2402.3125))
Falue
((5418.75, 2745.5), (5825.15625, 2980.3125))
Tau
((5382.625000000001, 3296.40625), (5779.999999999999, 3486.0625))
Fale
((5572.281250000001, 3883.4375), (5951.593750000001, 4118.25))
True
((5409.718750000001, 4533.6875), (5825.15625, 4777.53125))
Taue
((5463.906250000001, 5075.5625), (5915.468749999999, 5283.28125))
Falee
((5418.75, 5527.125), (5825.15625, 5743.875))
FateTaue
((5346.499999999999, 6041.90625), (6204.46875, 6276.71875))
Taue
((5364.5625, 6574.75), (5734.843750000001, 6791.5))
Thue
((5500.03125, 7179.84375), (5852.25, 7369.5))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2492, '2': 3079, '3': 3468, '4': 4055, '5': 4642, '6': 5229, '7': 5617, '8': 6213, '9': 6610, '10': 7206}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : b2UruIc.jpg
OCR detection done with doctr
left top x of T/F: 5128.78125
bottom right x of T/F: 6332.218749999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
TRVE
((5202.0, 1995.90625), (5870.312500000001, 2312.0))
XRXXFFAISE
((5220.062500000001, 2582.9375), (6195.437500000001, 2871.9375))
PALSE
((5165.875, 3079.65625), (5969.656249999999, 3377.6875))
FALSE
((5102.65625, 3630.5625), (5933.53125, 3919.5625))
TRUE
((5066.53125, 4208.5625), (5852.25, 4542.71875))
PALSE
((5021.375, 4750.4375), (5843.218750000001, 5075.5625))
PALSE
((5057.5, 5238.125), (5897.406250000001, 5527.125))
TRUE
((5012.34375, 5743.875), (5671.624999999999, 6041.90625))
TRUE
((5039.4375, 6159.3125), (5689.6875, 6466.375))
TRUZ
((4922.03125, 6773.4375), (5725.812499999999, 7152.75))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['2', '4', '7', '9']
the assigned keys are ['1', '3', '5', '6', '8', '10']
['1', '3', '5', '6', '8', '10', '1', '3', '5', '6', '8', '10']
printing the number dict y_coordinate
{'1': 2230, '3': 3115, '5': 4226, '6': 4768, '8': 5653, '10': 6565}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EXLa4p7.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1146.8955078125
bottom right x of T/F: 1580.0957031250002
first t/f detection
falre
((1185.06640625, 526.5791015625), (1334.5888671875, 626.2607421875))
collision happend with box:526.5791015625 and text:falre solving on the basis of percent match boxes
the current box specification are
falre
((1180.732421875, 656.5986328125), (1297.75, 734.6103515625))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:falre solving on the basis of percent match boxes
the current box specification are
Trul
((1182.8994140625, 788.78515625), (1308.5849609375, 871.130859375))
text2 i.e the incoming text is the winner
collision happend with box:788.78515625 and text:Trul solving on the basis of percent match boxes
the current box specification are
Rul
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:910.13671875 and text:Rul solving on the basis of percent match boxes
the current box specification are
True
((1182.8994140625, 1053.158203125), (1321.5869140625002, 1142.0048828125))
text2 i.e the incoming text is the winner
collision happend with box:1053.158203125 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
text2 i.e the incoming text is the winner
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tyue
((1156.8955078125, 1285.0263671875), (1302.083984375, 1373.873046875))
text1 i.e the prev text is the winner
Folwe
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
collision happend with box:1393.3759765625 and text:Folwe solving on the basis of percent match boxes
the current box specification are
Falu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
text2 i.e the incoming text is the winner
Tru
((1165.5634765624998, 1692.4208984375), (1315.0859375, 1781.267578125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 775, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1187, '7': 1280, '8': 1419, '9': 1512, '10': 1649}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LRccyJJ.jpg
OCR detection done with doctr
left top x of SN: 736.6875000000001
bottom right x of SN: 1151.5
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6783.78125
first t/f detection
TRUE
((5599.375000000001, 2248.78125), (6168.343750000001, 2447.46875))
TRUE
((5590.343749999999, 2772.59375), (6195.437500000001, 2971.28125))
TRUE
((5635.5, 3242.21875), (6231.5625, 3413.8125))
TRUE
((5572.281250000001, 3892.46875), (6159.312499999999, 4109.21875))
TRUE
((5581.3125, 4452.40625), (6087.062500000001, 4633.03125))
False
((5581.3125, 4958.15625), (6032.875000000001, 5138.78125))
TRUE
((5608.40625, 5265.21875), (6240.593749999999, 5472.9375))
Teese
((5662.59375, 5445.84375), (6123.1875, 5626.46875))
TRUE
((5491.000000000001, 5951.59375), (6096.09375, 6150.28125))
Talse
((5617.437499999999, 6484.4375), (6114.156250000001, 6665.0625))
TRUE
((5572.281250000001, 7098.5625), (6168.343750000001, 7315.3125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2664, '3': 3052, '4': 3639, '5': 4235, '6': 4840, '7': 5238, '8': 5843, '9': 6240, '10': 6845}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WJstHO0.jpg
rotation started
['40', 'Iot', '-', '6', 'M2UI', 'RENO', 'R9y', 'tnang', '', 'puy', '-', 'a', 'SAIAL', 'LU', ':', '3', ':', '(', 'H', 's', 'E', 'a', '-', 'i', 'iis', 'E', 'a', 'I', '€', '-', '2', '-', '9', 'F', ':', 'E', 'E', 'is', 'à', 'E', 'e', 'I', 'I', 'I', 'E', 'is', 'I', '8a', 'I', 'I', 'E', '1', 'I', '1', 'à', 'I', 'a', 'e', 'of', '6', ':', 'a', 'is', '', 'I', 'I', 'iE', 'I', '1', ':', 'à', '€', 'a', 'I', 'E', 'e', 'I', 'i', 'e', '1', 'I', 'iE', 'I', 'of', ':', '1', 'I', 'I', 'f', 'I', '8', 'is', 'e', 'I', 'iE', 'o', 'e', 'a', 'I', '8', 'i', 'I', '2', '-', 'iE', 'a', 'I', ':', ':', 'o', 'I', '', 'i', 'of', ':', 'a', 'I', 'is', 'I', 'o', 'E', 'D', 'E', 'I', 'I', 'I', 'of', 'E', 'I', 'is', 'I', 'i', 'I', 'I', 'a', '1', 'e', 'à', ':', 'is', 'of', 'I', '2', 'I', 'e', 'e', 'E', 'de', 'S', 'I', 'E', 'I', '1', '8', '1', 'I', 'à', ':', 'a', 'of', 'I', 'I', '3', 'a', 'E', '8', 'I', ':', 'e', '8', '$', 'is', '8', 'I', 'E', 'I', 'à', 'I', 'a', 'I', ':', 'I', 'I', 'I', '1', 'I', 'a', 'I', '11', 'I', 'I', 'I', 'a', 'S', '(', 'I', '1', 'E', 'I', '1', 'ia', '2', 'oS', 'E', 'à', 'a', 'e', 'o', 'T', 'E', 'I', 'A', 'e', 'e', 'E', 'I', 'E', 'I', 'I', '7', '11', '4', '12', '', '', '00', '', '9']
rotation started
['A', 'and', 'clear', 'handwriting.', 'capital', 'letters', 'FALSE', 'in', 'TRUE', 'or', '9.', '(10', 'pts)', 'Write', 'y', 'here:', 'E', 'A', 'S', '&', '6', '', 'a', '4', '%', 'roll', 'number', 'Write', 'your', 'SN', 'Statement', '1', 'Typically,', 'deployment.', 'TRUE/FAL', 'iA', 'for', 'TRUE', 'TRUE', 'larger', 'than', 'SVM', 'for', 'KNN', 'is', 'much', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', '3', '1-', 'cosineSimalaritv(z.)', 'is', 'a', 'valid', 'distance', 'vectors', 'I', 'and', 'y.', 'descent', 'is', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'TRUE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', 'XROZ', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'space.', 'TRUE', 'making', 'a', 'prediction', 'TRUE', 'TRUE', 'overfitting', 'in-', 'in', 'the']
rotation started
['1n', '6o', '00', 'a', 'N', 'L', '2', 'E', 'I', '9', 'F', 'P', 'A', 'I', 'F', 'a', '7', '2', 'a', 'I', 'I', 'I', 'e', 'E', 'F', 'I', 'E', '8', '8', 'it', 'a', 'i', 'I', '€', 'I', 'I', 'I', 'I', 'I', 'of', 'I', 'E', 'I', '8', 'E', 'E', 'A', 'E', 'I', 'se', 'I', 'E', 'E', '1', 'E', 'I', '3', '8', 'I', 'of', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'I', 'E', 't', 'I', 'E', 'E', 'of', 'I', 'a', 'I', 'Q', 'E', 'B', 'I', '8', 'it', 'I', '2', 'of', 'I', 'I', 'I', 'I', 'I', '2', '8', '2', '8', 'E', 'I', 'I', 'I', 'E', '-', 'I', 'E', '1', 'E', 'E', 'I', 'E', 'E', 'I', 'E', 'e', '8', 'I', 'it', 'I', 'I', 'I', 'I', 'I', '2', 'I', '%', 'E', '8', 'I', '1', 'E', 'I', 'E', '2', 'E', '2', 'I', 'I', 'I', 'I', 'I', 'I', '2', 'E', 'I', 'it', '2', 'E', 'E', '€', '9', 'of', 'I', 'E', 'I', 'E', 'E', 'a', 'F', 'I', 'I', 'i', 'it', 'I', 'E', 'I', 'E', 'F', '1', 'I', 'I', 'I', 'F', 'a', '1', 'o', 'OT', '4', 's', 'E', 'E', 'E', 'E', '2', 'E', 'E', 'i', 'I', 'E', 'E', '1', 'E', '2', 'it', 'E', 'I', 'E', '2', 'a', 'a', 'I', 'I', 'it', 'I', 'I', '-', 'a', '-', '€', '-', '8', '-', '', '-', '-', 'à', 'v', 'a', '-E', 'Ind', 'à', 'T', 'MANE', 'Corpe', 'y', 'DATE', 'Dle', 'Op', 'TITLE', '-r']
rotation started
['"egep', 'uoosun', 'mou', '01', 'ITOM', 'azireioues', 'gou', 'op', 'geyg', 'egep', 'Sururen', 'D0AL', 'ouy', 'uT', 'smegop', 'JO', 'osIou', 'oypoads', 'amgdes', '01', 'ureal', 'Keur', 'lopour', 'a47', 'se', "'saseaI", '-Ur', 'Surayieno', 'Jo', 'YSLI', 'oua', 'WAS', 'ur', 'pegeurered', 'D', 'aya', 'Jo', 'anyea', 'y814', 'e', 'YAIM', 'OT', 'uorgorpard', 'B', 'Surpgeur', "'sassepo", 'Jo', 'poqunu', 'a81er', 'B', 'YAIM', 'suarqoud', 'ssepprmu', 'JOI', '6', 'D0JL', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo-SA-QUo', 'Bursn', '3031', 'ooeds', 'TeurBuo', 'oyy', 'uT', 'JeQUIT-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsioap', 'BUL', '8', 'X', '209', "'sapou", 'Jo', 'pequnu', 'aya', '07', 'reuoriodord', '3574J', 'Arpemp', 'SI', 'OOIL', 'LOISIDOZ', 'oy4', 'UI', 'uomorpard', 'B', 'Suryeu', 'JOJ', 'pammber', 'BUIL', 'BUL', 'L', '"uoranqugsip', 'uerssneD', 'B', 'sienre', 'SI', 'suorgnqugsip', 'uerssneD', 'OM7', 'Jo', 'amgxu', 'V', '9', 'TreDoy', 'pue', 'UOISIO', '3S1HE', '-aId', 'uDamgeq', 'nord', 'e', 'SI', 'OAINO', '(DO4)', 'orsuteg0eIeuD', 'Surgerado', 'IBAIODOY', 'BUL', 'S', '"YIOMIOU', 'Temeu', 'aun', 'ul', 'squerpe1s', 'aya', 'agnduoo', '07', 'pesn', '20YL', 'SI', 'quaosap', 'querpe18', 'OTIYM', "'squ810M", 'auy', 'agepdn', '07', 'posn', 'SI', 'uone8odoxdypeg', '#', ':f', 'pue', 'I', 'SIO90OA', 'aourensip', 'PITEA', 'B', 'SI', '(@-z)Aguopuagousoy', '-', 'I', 'E', '3874', 'Teuorsuotup-p', 'Kure', 'IOJ', 'ougour', 'layissepp', 'meouyl-uou', 'e', 'SI', 'NNY', '7', '30YL', 'quourkordap', 'a8810qS', 'aya', 'STeoidAL', 'I', '3', '4', 'e', 'So', 's', 'y', 'A', '', 'R', '40', 'A', 'JOJ', 'quetrambar', '103.181', 'ypnu', 'SI', 'NNY', 'D0s', 'L', 'JOJ', 'WAS', 'ueya', 'quouagess', 'NS', 'mox', 'B9LIM', 'ITOII', 'laqumu', ':0104', 'TIva/anaL', '(sad', 'OT)', '6', '2ZLM', 'IO', 'ANUL', 'Teardeo', 'UI', 'ASTVA', 'Surumpuey', '18OT0', 'pure', 'SIO91e1', 'S']
OCR detection done with doctr
left top x of SN: 5938.687500000001
bottom right x of SN: 6335.437500000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:16:15] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : WJstHO0.jpg
[2024/06/28 14:16:16] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:16:17] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.13472294807434082
[2024/06/28 14:16:19] ppocr DEBUG: rec_res num  : 32, elapsed : 1.413597822189331
[2024/06/28 14:16:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:16:20] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.1785743236541748
[2024/06/28 14:16:22] ppocr DEBUG: rec_res num  : 38, elapsed : 1.4150056838989258
['CCOTTTT', 'NARE', 'FHTSE', 'TRUE', 'TRUE', 'FAE5E', 'TROE', 'TRUE', 'TROE', 'TRUE', 'NS', '2', '3', '4', '10', '5', '7', '9', '8']
[2024/06/28 14:16:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:16:23] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12158966064453125
[2024/06/28 14:16:25] ppocr DEBUG: rec_res num  : 39, elapsed : 1.7119476795196533
['Ind', 'TTTLE', 'NNAME', 'CCOsr', 'TRUE/FALS', 'Write your roll number here:', 'DATE', 'Statement', 'SN', 'TRUE', 'Typically, the storage requirement for KNN is much larger than SVM for', 'deployment.', 'TRUE', 'KNN is a non-linear classifier.', 'FALSE', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', 'vectors x and y.', 'TRUE', 'Backpropogation is used to update the weights,while gradient descent is', 'used to compute the gradients in the neural network.', 'FALSE', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', '5', 'cision and Recall.', 'TRUE', 'A mixture of two Gaussian distributions is always a Gaussian distribution', '6', 'FALSE', 'The Time required for making a prediction in the Decision Tree is directly', '7', 'KRUE', 'proportional to the number of nodes.', 'TRUE', 'TRUE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'TRUE', 'training data that do not generalize well to new, unseen data.']
[2024/06/28 14:16:26] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:16:26] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.13334894180297852
[2024/06/28 14:16:28] ppocr DEBUG: rec_res num  : 46, elapsed : 1.6594600677490234
['10', '6', '8', 'SN', '9', '2', 'training data that do not generalize well to new, unseen data.', 'The Time required for making a prediction in the Decision Tree is directly', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'proportional to the number of nodes.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', ' used to compute the gradients in the neural network.', 'Backpropogation is used to update the weights while gradient descent is', 'KNN is a non-linear classifier.', 'Statement', 'cision and Recall.', 'vectors x and y.', 'deployment.', 'Write your roll number here:', 'TRUE', 'TRUE', 'TRUE', 'FALSE', 'TRUE/FALA', 'TRUE', 'TRUE', 'KAE', 'FALSE', 'FALSE', 'TRUE', 'TRUE', 'COURSE', 'DATE', 'TITLE.', 'Ple']
[2024/06/28 14:16:29] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:16:30] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.12425971031188965
[2024/06/28 14:16:31] ppocr DEBUG: rec_res num  : 32, elapsed : 1.353381633758545
['TRUE', 'O0', 'TRUE', 'TROE', 'X', 'FAU5E', 'TRUE', 'FASSE', 'TRUE', 'TRUE', 'Iple', 'DATE', 'NS', 'OF', 'NAME', 'pul']
OCR detection done
left top x of SN: 5990.0
bottom right x of SN: 6317.0
left top y of SN: 7389.0
bottom right y of SN: 7644.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/WJstHO0.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3kYHjN0.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6558.000000000001
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
STRVE
((5481.968749999999, 1743.03125), (6114.156250000001, 1941.71875))
FALSE
((5463.906250000001, 2357.15625), (6150.28125, 2528.75))
TRU
((5355.531250000001, 2853.875), (5807.093749999999, 3034.5))
TRU
((5346.499999999999, 3477.03125), (5834.187499999999, 3684.75))
FALSE
((5518.093750000001, 4091.15625), (6222.531250000001, 4289.84375))
TRVE
((5418.75, 4687.21875), (6087.062500000001, 4849.78125))
FALSE
((5463.906250000001, 5147.8125), (6087.062500000001, 5319.40625))
FALSE
((5418.75, 5689.6875), (6032.875000000001, 5861.28125))
TRUE
((5436.812500000001, 6186.40625), (6014.8125, 6358.0))
FALSE
((5536.156249999999, 6818.59375), (6159.312499999999, 6990.1875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2564, '3': 2953, '4': 3540, '5': 4127, '6': 4723, '7': 5111, '8': 5716, '9': 6123, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : r9ByOWm.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Fake
((1526.5898437500002, 766.1865234375), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
collision happend with box:1307.5927734375 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
text2 i.e the incoming text is the winner
collision happend with box:1440.52734375 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falu
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1580.712890625 and text:Falu solving on the basis of percent match boxes
the current box specification are
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
text2 i.e the incoming text is the winner
collision happend with box:1706.396484375 and text:Falue solving on the basis of percent match boxes
the current box specification are
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NzBinsy.jpg
OCR detection done with doctr
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6404.46875
first t/f detection
TRUE
((5220.062500000001, 1995.90625), (5761.937500000001, 2212.65625))
TRUE.
((5174.90625, 2555.84375), (5852.25, 2763.5625))
TRURE
((5174.90625, 3079.65625), (5761.937500000001, 3287.375))
Falle
((5111.6875, 3585.40625), (5653.562500000001, 3856.34375))
false
((5238.124999999999, 4009.875), (5716.78125, 4217.59375))
Folse
((5265.218749999999, 4560.78125), (5761.937500000001, 4768.5))
false
((5174.90625, 5021.375), (5671.624999999999, 5283.28125))
Palse
((5192.96875, 5581.3125), (5689.6875, 5798.0625))
False
((5138.78125, 6050.9375), (5608.40625, 6285.75))
TRUE
((5129.75, 6791.5), (5689.6875, 6990.1875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2601, '3': 2971, '4': 3531, '5': 4073, '6': 4642, '7': 5012, '8': 5572, '9': 5951, '10': 6529}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PAaDQxm.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 310.11328125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1226.4609375
first t/f detection
FALSE
((884.5078125, 393.45703125), (967.828125, 428.9453125))
collision happend with box:393.45703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((884.5078125, 470.60546875), (966.28515625, 501.46484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:470.60546875 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 552.3828125), (958.5703125, 583.2421875))
text2 i.e the incoming text is the winner
collision happend with box:552.3828125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((872.1640625, 649.58984375), (952.3984374999999, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((887.5937499999999, 756.0546875), (958.5703125, 786.9140625))
collision happend with box:756.0546875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((878.3359375000001, 839.375), (952.3984374999999, 874.86328125))
text1 i.e the prev text is the winner
TRUE
((876.7929687499999, 922.6953125), (941.5976562499999, 955.09765625))
collision happend with box:922.6953125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((875.25, 1010.64453125), (927.7109375, 1041.50390625))
text2 i.e the incoming text is the winner
collision happend with box:1010.64453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((926.16796875, 1013.73046875), (957.02734375, 1041.50390625))
text1 i.e the prev text is the winner
collision happend with box:1010.64453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((875.25, 1090.87890625), (955.484375, 1126.3671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1090.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((872.1640625, 1208.14453125), (949.3125, 1239.00390625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '6', '7', '9', '10']
the assigned keys are ['2', '3', '4', '5', '8']
['2', '3', '4', '5', '8', '2', '3', '4', '5', '8']
printing the number dict y_coordinate
{'2': 478, '3': 546, '4': 649, '5': 746, '8': 1018, '1': 178}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XZZpu5U.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1146.8955078125
bottom right x of T/F: 1580.0957031250002
first t/f detection
falte
((1185.06640625, 524.412109375), (1334.5888671875, 626.2607421875))
collision happend with box:524.412109375 and text:falte solving on the basis of percent match boxes
the current box specification are
falee
((1178.5654296875, 654.431640625), (1297.75, 734.6103515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:654.431640625 and text:falee solving on the basis of percent match boxes
the current box specification are
Teuu
((1180.732421875, 784.451171875), (1310.751953125, 873.2978515625))
text2 i.e the incoming text is the winner
collision happend with box:784.451171875 and text:Teuu solving on the basis of percent match boxes
the current box specification are
Rul
((1191.5673828125, 910.13671875), (1328.087890625, 996.81640625))
text2 i.e the incoming text is the winner
collision happend with box:910.13671875 and text:Rul solving on the basis of percent match boxes
the current box specification are
Teue
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
text1 i.e the prev text is the winner
Tul
((1167.73046875, 1170.17578125), (1308.5849609375, 1241.6865234375))
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trur
((1156.8955078125, 1282.859375), (1302.083984375, 1373.873046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1282.859375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Folw
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
text1 i.e the prev text is the winner
Folu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
Tre
((1165.5634765624998, 1690.25390625), (1315.0859375, 1781.267578125))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 777, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1189, '7': 1280, '8': 1419, '9': 1512, '10': 1649}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sJcae3x.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6494.781249999999
left top x of SN: 610.25
bottom right x of SN: 1016.0312499999999
first t/f detection
FALSE
((5391.65625, 2050.09375), (6096.09375, 2293.9375))
TRUE
((5382.625000000001, 2582.9375), (6005.781250000001, 2826.78125))
TRUE
((5409.718750000001, 3070.625), (6023.843749999999, 3287.375))
FALSE
((5445.84375, 3648.625), (6105.124999999999, 3865.375))
TRUE
((5427.781249999999, 4199.53125), (6059.968750000001, 4416.28125))
FALSE
((5481.968749999999, 4732.375), (6159.312499999999, 4931.0625))
FALSE
((5500.03125, 5183.9375), (6177.375, 5427.78125))
TRUE
((5355.531250000001, 5689.6875), (5933.53125, 5906.4375))
TRUE
((5373.593749999999, 6105.125), (5915.468749999999, 6312.84375))
TRVE
((5373.593749999999, 6764.40625), (6005.781250000001, 6981.15625))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2745, '3': 3124, '4': 3684, '5': 4253, '6': 4831, '7': 5211, '8': 5780, '9': 6159, '10': 6728}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FNjcH1n.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6458.65625
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
True
((5274.250000000001, 1734.0), (5716.78125, 2013.96875))
Tue
((5292.312499999999, 2275.875), (5752.906249999999, 2537.78125))
False
((5337.46875, 2718.40625), (5816.125000000001, 3043.53125))
False
((5319.406249999999, 3314.46875), (5789.031250000001, 3639.59375))
True
((5301.343750000001, 3973.75), (5779.999999999999, 4262.75))
False
((5319.406249999999, 4443.375), (5798.0625, 4759.46875))
Folse
((5310.375, 4949.125), (5725.812499999999, 5229.09375))
True
((5328.437500000001, 5518.09375), (5734.843750000001, 5743.875))
Tue
((5301.343750000001, 5987.71875), (5752.906249999999, 6249.625))
Thue
((5328.437500000001, 6565.71875), (5825.15625, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2546, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5039, '8': 5635, '9': 6023, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2EufWcq.jpg
rotation started
['E', '8', 'N', 'D3', 'E', 'I', '2', 'F', 'F', '5', 'I', 'P', 'a', 'E', 'I', 'I', 'p.', '8', 'I', 'e', '7', 'H', 'E', 'E', 'I', 'I', 'I', 'E', ':', 'I', 'i', '[', '8', 'I', '2', 'I', 'E', 'e', 'E', 'I', '8', 'a', 'I', '€', 'I', 'e', 'I', '!', '2', 'I', 'g', '1', 'I', '&', 'LE', 'I', 'I', 'E', 'E', 'F', 'I', '9', 'a', 'I', 'I', 'a', 'E', 'B', 'I', 'I', '8', 'a', 'f', '5', 'I', 'I', 'I', 'I', '8', '2', 'P', 'E', '1', 'I', 'E', 'i', 'I', 'E', '1', '&', 'E', 'I', 'E', 'E', 'I', 'g', '8', 'it', 'I', 'I', 'I', 'I', 'I', ':', 'I', 'of', 'LE', '8', 'I', '1', 'E', 'I', '£', 'le', '3', '-', 'I', 'I', 'I', 'I', 'I', '2', 'E', 'I', 'e', '1E', 'P', 'A', 'e', 'I', 'E', 'I', 'E', 'e', 'E', 'I', 'I', 'I', 'iE', 'I', 'E', 'I', 'F', 'F', 'I', '1', 'I', 'I', '7', 'E', 'o', '2', '', 'E', 'E', 'I', ':', '1', '2', 'I', 'I', 'I', 'I', 'I', 'E', '2', '1E', 'I', 'I', 'E', '2', 'E', '-', 'à', 'à', 'I', '1', 'I', 'E', 'E', 'I', 'E', 'E', 'I', 'tn', 'I', 'I', 'H', 'a', '-', 'à', '8', '-', 'q7', '-', '4', '-', 'Ind', 'à', '(', 'MAME', 'Conpe', 'l', 'DITE', 'DE', 'Op', 'ILE', '-']
rotation started
['mup', 'uaostm', 'mat', '01', 'IOM', 'azgeroual', 'zotr', 'op', '1e4i', 'eiep', 'Bururens', '2081', 'au3', 'usiap', '10', 'astout', 'oyiads', 'amides', '07', 'UIEOL', 'Ketir', 'pour', 'au', 'Re', "'soseats", '-ur', 'Sumayiano', 'Jo', 'Ysu', 'au', 'WAS', 'ur', 'denoturured', '9', 'ous', 'jo.anres', 'q8ry', 'E', 'TIIA', 'OT', 'uonoipaid', 'e', 'Supyeur', "'sassep", 'Jo', 'laquunu', '08181e', 'TIIAA', 'stuajgoad', 'dssepopuer', '1o1', '6', 'D0JL', 'IAS', '18a1-SA-ouo', 'ueui', 'JamoTs', 'SI', 'IVAS', 'ato-SA-auo', 'Suisn', '2031', 'aoeds', 'Teursuro', 'aui', 'ul', 'Jeour-uour', '09', 'tres', 'WAS', 'tre', 'Jo', 'Arepunog', 'uoustoap', 'AUL', 'S', 'KX', '203L', 'sapou', 'Jo', 'paquinu', 'au', '01', 'reuoruodoad', '35743', 'Atpaltp', 'SI', 'DaIL', 'uorsioa', 'aya', 'ur', 'uotorpaad', 'e:', 'Suryeur', '10)', 'paambar', 'aunt', 'OHL', 'toinquisip', 'ueissnes', '8', 'SABMJE', 'SI', 'suornquasip', 'treisstres', 'OM1', 'jo', 'ainixour', 'V', '9', 'mpeag', 'pue', 'RoISIO', '35749', '-1d', 'uaamgag', 'nojd', 'Bst', 'aama', '(00H)', 'onsuopereu)', 'Suyerado', 'Janoau', 'OULL', 'C', 'yromgau', 'remau', 'ous', 'tIt', 'sjuaspeis', 'ou1', 'agndido', '01', 'pasn', '20YL', 'SI', 'auaosap', 'quorpersaTA', '"susiam', 'aui', 'agupdn', '01', 'posn', 'sr', 'uone3odordypeg', '1', 'f', 'pue', 'I', 'S102001', 'Aue', 'JOF', 'ounanl', 'eoumsip', 'PIRA', 'RSt', 'IA-ryenaepunsoumed-t', '35703', 'reuoisuoturp-p', 'aogissels', 'Jeaur-uou', 'de', 'st', 'NNX', '2', 'quontazmbar', 'ale1o1s', 'our', 'Ameoidil', '30YL', 'quouttordap', '%', '', 'so', 'so', '>', '/', 'F', '-', 'J0j', '1a8101', 'upntu', 'SI', 'NNX', 'anaL', '101', 'WAS', 'teus', 'juauagers', 'NS', 'IjOJ', 'inok', '311M', 'walanuL', 'aaqumu', 'sazou', 'DILMt', '(sid', 'ot).', '6', '98111', '10', 'anal', 'Teudea', 'Ut', 'Sunumpuer', 'Jeop', 'pure', 's107101', '-']
rotation started
['MIULE', 'Doxto', 'ot', 'Mg7', 'epeag', 'MATAN', '-', 'pyy', '(', 'A', 'E', '-', '(', 'a', ':', '3', ':', '-', ':', '-', '2', 'E', '-', '€', '3', 'E', 'I', 'I', 'I', 'a', 'e', 'I', ':tn', '2', '1', '4', 'a', 'I', 'I', 'E', 'is', 'I', 'a', 'I', 'I', '1', 'I', 'a', '1', 'a', 'e', 'of', '8', 'à', 'd', 'I', 'A', 'I', 'iE', '2', ':', 'd', 'I', 'à', '1', 'a', 'e', 'I', 'a', 'I', 'LE', 'of', 'I', 'I', ':', '1', 'I', 'I', 'I', '8', 'is', '3', 'E', 'e', 'I', 'a', 'e', 'I', 'a', 'I', '2', 'I', 'E', 'a', '1', 'E', ':', 'S', 'I', 'I', 'de', 'I', 'te', 'a', 'C', '£', 'I', 'I', 'I', 'of', ':', 'I', 'is', 'I', 'I', 'a', 'I', 'de', 'I', 'a', 'i', 'I', 'de', 'e', 'a', 'de', 'of', 'I', 'I', '1', 'E', '3', 'I', 'i', 'I', 'E', 'I', '1', 'o', 'I', 'e', 'a', 'H', 'de', 'I', 'I', 'à', 'I', 'a', 'ed', 'a', '3', 'I', 'I', 'I', '-', 'I', 'T', 'e', 'I', 'I', 'à', 'I', ':', '4', 'au', 'Go', '4', '', 'to', 'E', '€', '-', '2', 'E', 'I', '1', 'is', 'a', 's', 'E', 'à', 'a', 'e', 'c', 'I', 'à', '1', 'a', '1', 'I', 'E', 'a', '1', 'I', '1', 'E', 'a', ':', 'I', 'I', 'I', ']', '1', 'I', '2', 'à', '2', 'I', 'a', 'I', 'I', '7', '0o', 'a', '1e']
rotation started
['letters', 'and', 'clear', 'handwriting:', 'in', 'capital', 'TRUE', 'or', 'FALSE', '0', '(10', 'pts)', 'Write', '', '', 'E', '-', '', 'A', '5', 'here:', 'Write', 'your', 'roli', 'number', 'TRUE/FAL', 'A', 'for', 'TRUE', 'TRUE', 'SN', 'Statement', 'larger', 'than', 'SVM', 'requirement', 'for', 'KNN', 'is', 'much', 'A', 'Typically,', 'the', 'storage', 'depleyment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier', 'for', 'metrie', 'o2', 'any-didimehsional', 'FALSE', '', 'cotineSimalartytsgle', 'a', 'valid', 'distance', 'vectors', 'I', 'and', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRUE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receivér', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre', 'FALSE', 'cision', 'and', 'Recall.', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', 'XBZ', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'space,', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is.slower', 'than', 'one-vs-restSVM.', '10', 'With', 'a', 'high', 'salue', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'training', 'data', 'that', 'do', 'not', 'géneralize', 'well', 'to', 'new;', 'unseen', 'data.', 'TRUE', 'overfitting', 'in', 'the', 'creases,', 'as', 'the', 'model.may', 'learn', 'to.capture', 'specific', 'hoise', 'or', 'details', 'in-', 'TRUE']
OCR detection done with doctr
left top x of SN: 691.53125
bottom right x of SN: 1106.34375
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:17:22] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 2EufWcq.jpg
[2024/06/28 14:17:23] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:17:24] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.14936423301696777
[2024/06/28 14:17:25] ppocr DEBUG: rec_res num  : 34, elapsed : 1.5666441917419434
[2024/06/28 14:17:26] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:17:27] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.2076117992401123
[2024/06/28 14:17:29] ppocr DEBUG: rec_res num  : 40, elapsed : 1.5190966129302979
['2KNN. is  non-linear lassifier', 'SN', '4', 'The Tune required for making a prediction in the Decision Tree is.directly', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'training data that do not generalize well to new useen data', 'using.one-ys-one SVM is.slower than one-vs-rest SVM', 'proportional to the number of nodes.', 'The Recciver Operating Characteristic (ROC curve is a plot. between Pre', 'used to compute the gradients in the neural network', 'Backpropogation is used to update the weights while gradient descent is', 'vectors.x andy', 'Statement', 'cision and Recall.', 'deployment.', 'Write your roll number here', 'TRUE', 'TRUE', 'FALSE', 'TRUE/FAL', 'TRUE', 'TRUE', 'TRUE', 'FALSE', 'XRUE', 'FALSE', 'TRUE', 'TRUE', 'Ind', 'COURSE', 'DATE OF', 'TITLE.', 'ple']
[2024/06/28 14:17:29] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:17:30] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.1232919692993164
[2024/06/28 14:17:31] ppocr DEBUG: rec_res num  : 32, elapsed : 1.2294800281524658
['TRUE', 'OL', 'TRUE', 'TRUE', 'TROE', 'FASSE', 'TRUE', 'TRUE', 'DATE', 'COURSE', 'AME', 'AA', 'TITLE', 'duthan', 'puj']
[2024/06/28 14:17:32] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:17:33] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.12928438186645508
[2024/06/28 14:17:34] ppocr DEBUG: rec_res num  : 32, elapsed : 1.2257261276245117
['PALSE', 'FASSE', 'TAUE', 'TRUE', 'FAUSE', 'TRUE', 'TRUE', 'TROE', 'TRUE', '8', '16', 'or', '&']
[2024/06/28 14:17:35] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:17:35] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.11754703521728516
[2024/06/28 14:17:37] ppocr DEBUG: rec_res num  : 34, elapsed : 1.5206096172332764
['Ino', 'TTTLE', 'COUSSr', 'TRUE/FALS', 'Write your roll number here:', 'PATE', 'Statement', 'TRUE', 'Typically the storage requirement for KNNis much larger than SVM for', 'deployment..', 'TRUE', 'KNN is a non-linear classifier', 'FALSE', 'vectors.x andy', 'TRUE', 'Backpropogation is used to update the weights while gradient descent is', 'used to compute the gradients in the neural network.', 'FALSE', 'The Receiver Operating Characteristic (ROC curve is a plot.between Pre.', 'cision and Recall.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'TRUE', '6', 'FALSE', 'TheTine required for making a prediction in the Decision Tree is.directly', 'XAE', 'proportional to the number of nodes', 'The decision boundary of an SVM can be non-linear in the original space', 'TRUE', 'TRUE', 'using.one-ys-one SVM is.slower than one-vs-rest SVM.', 'TRUE', 'training data that do not generalize well to new unseen data']
OCR detection done
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/2EufWcq.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lqdSQBD.jpg
OCR detection done with doctr
left top x of SN: 736.6875000000001
bottom right x of SN: 1151.5
left top x of T/F: 5733.875
bottom right x of T/F: 6955.374999999999
first t/f detection
TRUE
((5770.96875, 2176.53125), (6448.3125, 2375.21875))
TRUE
((5789.031250000001, 2772.59375), (6421.21875, 2980.3125))
FALSE
((5689.6875, 3350.59375), (6394.125, 3549.28125))
FALSE
((5608.40625, 3874.40625), (6339.9375, 4118.25))
TRUE
((5572.281250000001, 4371.125), (6186.406249999999, 4542.71875))
TRUE
((5509.062499999999, 5021.375), (6195.437500000001, 5220.0625))
TRUE
((5427.781249999999, 5716.78125), (6159.312499999999, 5888.375))
TRUE
((5409.718750000001, 6204.46875), (6041.90625, 6403.15625))
FALSE
((5337.46875, 6755.375), (6123.1875, 6954.0625))
TRVE
((5283.28125, 7360.46875), (5825.15625, 7523.03125))
the final dict without editing {'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 7080, '2': 2447, '3': 3016}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SMm9p1N.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6314.156250000001
left top x of SN: 673.4687499999999
bottom right x of SN: 1079.25
first t/f detection
TRUE
((5301.343750000001, 2023.0), (5834.187499999999, 2230.71875))
TRUE
((5247.156250000001, 2537.78125), (5834.187499999999, 2754.53125))
TRVE
((5247.156250000001, 3043.53125), (5752.906249999999, 3269.3125))
FALSE
((5301.343750000001, 3522.1875), (5906.4375, 3720.875))
FALSE
((5283.28125, 4145.34375), (5861.281249999999, 4344.03125))
TRVE
((5310.375, 4605.9375), (5761.937500000001, 4786.5625))
TRUE
((5355.531250000001, 5048.46875), (5888.374999999999, 5220.0625))
TRUE
((5337.46875, 5536.15625), (5861.281249999999, 5743.875))
TRUE
((5319.406249999999, 5969.65625), (5852.25, 6195.4375))
TRUE
((5337.46875, 6574.75), (5870.312500000001, 6782.46875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2700, '3': 3061, '4': 3603, '5': 4145, '6': 4696, '7': 5066, '8': 5626, '9': 5996, '10': 6556}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IRpxdDf.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1224.91796875
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 501.46484375))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:549.296875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((886.05078125, 757.59765625), (958.5703125, 786.9140625))
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
text1 i.e the prev text is the winner
TRUE
((876.7929687499999, 925.78125), (941.5976562499999, 955.09765625))
collision happend with box:925.78125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((875.25, 1012.1875), (927.7109375, 1041.50390625))
text2 i.e the incoming text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((924.625, 1013.73046875), (957.02734375, 1039.9609375))
text1 i.e the prev text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((876.7929687499999, 1093.96484375), (953.9414062500001, 1124.82421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1093.96484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((872.1640625, 1208.14453125), (946.2265625, 1239.00390625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 374, '2': 476, '3': 544, '4': 644, '5': 745, '6': 847, '7': 913, '8': 1015, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0MCLnne.jpg
OCR detection done with doctr
left top x of SN: 953.4375000000001
bottom right x of SN: 1359.21875
left top x of T/F: 5490.03125
bottom right x of T/F: 6630.249999999999
first t/f detection
FRE
((5599.375000000001, 2158.46875), (6096.09375, 2293.9375))
collision happend with box:2158.46875 and text:FRE solving on the basis of percent match boxes
the current box specification are
TRUE
((5689.6875, 2312.0), (6186.406249999999, 2519.71875))
text2 i.e the incoming text is the winner
PAUG
((5554.21875, 2601.0), (6114.156250000001, 2808.71875))
FAUE
((5527.125, 2980.3125), (6041.90625, 3197.0625))
TRUE
((5635.5, 3702.8125), (6141.250000000001, 3874.40625))
TAUE
((5536.156249999999, 4199.53125), (6050.937499999999, 4371.125))
FAUE
((5761.937500000001, 4614.96875), (6240.593749999999, 4750.4375))
TRUG
((5581.3125, 5229.09375), (6005.781250000001, 5400.6875))
TRLE
((5491.000000000001, 5653.5625), (5924.500000000001, 5861.28125))
TRUE
((5590.343749999999, 6105.125), (5960.625, 6240.59375))
TLUL
((5572.281250000001, 6529.59375), (5996.749999999999, 6701.1875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2646, '3': 3016, '4': 3576, '5': 4136, '6': 4705, '7': 5075, '8': 5635, '9': 6023, '10': 6592}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SWEGOOj.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 331.162109375
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((988.76953125, 507.568359375), (1032.275390625, 549.462890625))
collision happend with box:507.568359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 591.357421875), (1030.6640625, 626.806640625))
text2 i.e the incoming text is the winner
collision happend with box:591.357421875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((998.4375, 671.923828125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
T
((987.1582031249999, 884.619140625), (1030.6640625, 923.291015625))
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
oT
((1001.66015625, 970.01953125), (1079.00390625, 1011.9140625))
text2 i.e the incoming text is the winner
collision happend with box:970.01953125 and text:oT solving on the basis of percent match boxes
the current box specification are
F
((983.935546875, 1045.751953125), (1022.607421875, 1087.646484375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '5', '6']
the assigned keys are ['2', '3', '4', '7', '8', '9', '10']
['2', '3', '4', '7', '8', '9', '10', '2', '3', '4', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 509, '3': 578, '4': 684, '7': 952, '8': 1057, '9': 1127, '10': 1227, '1': 209}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6xcmfsB.jpg
OCR detection done with doctr
left top x of SN: 646.3749999999999
bottom right x of SN: 1052.15625
left top x of T/F: 5056.53125
bottom right x of T/F: 6205.781250000001
first t/f detection
TRUE
((5111.6875, 1589.5), (5599.375000000001, 1761.09375))
FALSE
((5111.6875, 2077.1875), (5662.59375, 2284.90625))
TRUE
((5084.59375, 2510.6875), (5626.468750000001, 2682.28125))
FALSE
((5048.46875, 3079.65625), (5563.249999999999, 3215.125))
FALSE
((5039.4375, 3657.65625), (5554.21875, 3829.25))
FALSE
((5021.375, 4064.0625), (5572.281250000001, 4262.75))
TRUE
((5048.46875, 4497.5625), (5545.187500000001, 4714.3125))
TRUE.
((5021.375, 5030.40625), (5545.187500000001, 5202.0))
TRUE
((4994.28125, 5454.875), (5518.093750000001, 5635.5))
TRUE
((4985.25, 6005.78125), (5518.093750000001, 6213.5))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1562, '2': 2095, '3': 2456, '4': 3007, '5': 3540, '6': 4073, '7': 4434, '8': 4967, '9': 5328, '10': 5870}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IOj3f0x.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6603.156249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
first t/f detection
A
((6502.5, 650.25), (6556.6875, 704.4375))
Thsl
((5491.000000000001, 2158.46875), (6087.062500000001, 2366.1875))
Fase
((6132.218749999999, 2456.5), (6475.40625, 2718.40625))
Tauue
((5599.375000000001, 3224.15625), (6159.312499999999, 3422.84375))
Tuul
((5536.156249999999, 3612.5), (6114.156250000001, 3820.21875))
Felse
((5491.000000000001, 4208.5625), (6023.843749999999, 4461.4375))
False
((6069.0, 4669.15625), (6511.531249999999, 4885.90625))
collision happend with box:4669.15625 and text:False solving on the basis of percent match boxes
the current box specification are
Llee
((5554.21875, 4777.53125), (6114.156250000001, 5003.3125))
text1 i.e the prev text is the winner
false
((5491.000000000001, 5274.25), (5960.625, 5500.03125))
Trul
((5518.093750000001, 5807.09375), (5987.71875, 6023.84375))
Tue
((5518.093750000001, 6358.0), (6023.843749999999, 6574.75))
Tue
((5545.187500000001, 7053.40625), (6005.781250000001, 7270.15625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2736, '3': 3124, '4': 3702, '5': 4280, '6': 4885, '7': 5283, '8': 5888, '9': 6294, '10': 6908}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qet6ZdJ.jpg
rotation started
['and', 'clear', 'handwriting.', 'in', 'capital', 'letters', 'Write', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', 'TRUE', 'TRUE', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityl.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FALSE', 'TRUE', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'PRUE', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
rotation done for:  Qet6ZdJ.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 438.6562500000001
bottom right x of SN: 853.4687499999999
first t/f detection
TRUE
((5481.968749999999, 2113.3125), (6132.218749999999, 2357.15625))
TRUE
((5518.093750000001, 2573.90625), (6150.28125, 2790.65625))
FALSE
((5481.968749999999, 3142.875), (6294.781249999999, 3314.46875))
FALSE
((5500.03125, 3747.96875), (6231.5625, 3946.65625))
FALSE
((5527.125, 4425.3125), (6141.250000000001, 4596.90625))
FALSE
((5400.687499999999, 4867.84375), (6132.218749999999, 5066.53125))
FALSE
((5518.093750000001, 5337.46875), (6276.718750000001, 5545.1875))
TRUE
((5563.249999999999, 5879.34375), (6204.46875, 6096.09375))
FALSE
((5527.125, 6376.0625), (6240.593749999999, 6574.75))
PRUE
((5527.125, 7017.28125), (6132.218749999999, 7188.875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2826, '3': 3224, '4': 3820, '5': 4407, '6': 5012, '7': 5409, '8': 6005, '9': 6412, '10': 7008}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VOWRKeG.jpg
OCR detection done with doctr
left top x of SN: 908.28125
bottom right x of SN: 1305.03125
left top x of T/F: 5228.124999999999
bottom right x of T/F: 6359.312499999999
first t/f detection
FALSE
((5301.343750000001, 1905.59375), (5825.15625, 2086.21875))
FALSE
((5310.375, 2429.40625), (5825.15625, 2610.03125))
TRUE
((5256.1875, 2844.84375), (5807.093749999999, 3052.5625))
TRUE
((5301.343750000001, 3368.65625), (5906.4375, 3612.5))
FALSE
((5346.499999999999, 3919.5625), (5825.15625, 4082.125))
TRUE
((5274.250000000001, 4425.3125), (5770.96875, 4605.9375))
PALSE
((5319.406249999999, 4840.75), (5942.562499999999, 5057.5))
TRUE
((5274.250000000001, 5328.4375), (5779.999999999999, 5509.0625))
TRUE
((5247.156250000001, 5725.8125), (5716.78125, 5897.40625))
TRUE
((5274.250000000001, 6339.9375), (5789.031250000001, 6511.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2528, '3': 2880, '4': 3395, '5': 3919, '6': 4443, '7': 4786, '8': 5319, '9': 5671, '10': 6213}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pzjmQaX.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6558.000000000001
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
first t/f detection
dabe
((5463.906250000001, 2312.0), (5861.281249999999, 2610.03125))
Jalas
((5445.84375, 2908.0625), (5807.093749999999, 3142.875))
drwe
((5536.156249999999, 3395.75), (5879.34375, 3630.5625))
Arae
((5491.000000000001, 3838.28125), (5915.468749999999, 4055.03125))
collision happend with box:3838.28125 and text:Arae solving on the basis of percent match boxes
the current box specification are
Jalae
((5897.406250000001, 3811.1875), (6358.000000000001, 4073.09375))
text2 i.e the incoming text is the winner
Jrwe
((5491.000000000001, 4398.21875), (5924.500000000001, 4669.15625))
dorue
((5527.125, 5138.78125), (5978.687500000001, 5418.75))
the
((5192.96875, 6177.375), (5400.687499999999, 6312.84375))
collision happend with box:6177.375 and text:the solving on the basis of percent match boxes
the current box specification are
oruc
((5581.3125, 6258.65625), (5987.71875, 6484.4375))
text2 i.e the incoming text is the winner
doue
((5644.531249999999, 6881.8125), (6041.90625, 7071.46875))
the final dict without editing {'1': 'NULL', '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': 'NULL', '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2411, '3': 2971, '4': 3540, '5': 3919, '6': 4497, '7': 5274, '8': 5852, '9': 6249, '10': 7044}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': 'NULL', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hhP1kex.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6792.812499999999
left top x of SN: 411.5625000000001
bottom right x of SN: 835.4062500000001
first t/f detection
TRUE
((5527.125, 2104.28125), (6367.03125, 2357.15625))
TRUE
((5554.21875, 2646.15625), (6339.9375, 2935.15625))
TRUE
((5608.40625, 3197.0625), (6394.125, 3486.0625))
FALSE
((5509.062499999999, 3766.03125), (6466.375000000001, 4136.3125))
FALSE
((5554.21875, 4461.4375), (6448.3125, 4750.4375))
FALS
((5554.21875, 4985.25), (6231.5625, 5292.3125))
FALSE
((5527.125, 5491.0), (6448.3125, 5743.875))
TRUE
((5518.093750000001, 6023.84375), (6294.781249999999, 6258.65625))
TRUE
((5527.125, 6475.40625), (6385.093750000001, 6728.28125))
TRUE
((5536.156249999999, 7152.75), (6385.093750000001, 7396.59375))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '4']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9', '10']
['2', '3', '5', '6', '7', '8', '9', '10', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2962, '3': 3386, '5': 4596, '6': 5220, '7': 5617, '8': 6258, '9': 6628, '10': 7252, '1': 2662}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MmuQQou.jpg
OCR detection done with doctr
left top x of SN: 1251.4687500000002
bottom right x of SN: 1666.2812499999998
left top x of T/F: 5833.218750000001
bottom right x of T/F: 7117.937499999999
first t/f detection
TRUE
((5789.031250000001, 2339.09375), (6195.437500000001, 2555.84375))
TRUE
((5653.562500000001, 2844.84375), (6087.062500000001, 3025.46875))
FALSE
((5644.531249999999, 3350.59375), (6159.312499999999, 3531.21875))
FALSE
((5518.093750000001, 3937.625), (6041.90625, 4145.34375))
FALSE
((5418.75, 4515.625), (5915.468749999999, 4696.25))
FALSE
((5265.218749999999, 5003.3125), (5834.187499999999, 5256.1875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '5', '6', '7', '8', '10']
the assigned keys are ['2', '3', '9']
['2', '3', '9', '2', '3', '9']
printing the number dict y_coordinate
{'9': 523, '2': 2483, '3': 2844, '1': 2183}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GUALkq5.jpg
OCR detection done with doctr
left top x of SN: 673.4687499999999
bottom right x of SN: 1061.1875
left top x of T/F: 5065.5625
bottom right x of T/F: 6151.593750000001
first t/f detection
Truc
((5093.625, 2528.75), (5617.437499999999, 2754.53125))
Trw
((5129.75, 2998.375), (5653.562500000001, 3215.125))
faye
((5165.875, 3422.84375), (5779.999999999999, 3684.75))
falk
((5202.0, 4009.875), (5743.875, 4235.65625))
falye
((5229.09375, 4614.96875), (5779.999999999999, 4813.65625))
True
((5192.96875, 5066.53125), (5698.718749999999, 5274.25))
True.
((5156.84375, 5500.03125), (5861.281249999999, 5707.75))
True
((5220.062500000001, 5978.6875), (5743.875, 6159.3125))
Truc
((5211.031249999999, 6430.25), (5698.718749999999, 6647.0))
Trul
((5229.09375, 7008.25), (5680.656250000001, 7188.875))
collision happend with box:7008.25 and text:Trul solving on the basis of percent match boxes
the current box specification are
the
((4885.90625, 7116.625), (5093.625, 7270.15625))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2808, '2': 3332, '3': 3684, '4': 4208, '5': 4732, '6': 5265, '7': 5626, '8': 6168, '9': 6538, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8uEnJiI.jpg
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 934.7499999999999
left top x of T/F: 5192.0
bottom right x of T/F: 6395.437500000001
first t/f detection
FALSE
((5238.124999999999, 2375.21875), (5933.53125, 2582.9375))
TRUE
((5192.96875, 2890.0), (5770.96875, 3052.5625))
Falu.
((5183.9375, 3233.1875), (5761.937500000001, 3486.0625))
FALSE
((5138.78125, 3874.40625), (5834.187499999999, 4091.15625))
FALS
((5129.75, 4434.34375), (5671.624999999999, 4660.125))
TRUE
((5048.46875, 4976.21875), (5698.718749999999, 5220.0625))
FALSE
((5057.5, 5391.65625), (5698.718749999999, 5608.40625))
TRUE
((4994.28125, 5960.625), (5581.3125, 6177.375))
TRUE
((5021.375, 6348.96875), (5671.624999999999, 6601.84375))
TRUE
((5057.5, 6908.90625), (5698.718749999999, 7152.75))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2203, '2': 2772, '3': 3160, '4': 3729, '5': 4289, '6': 4858, '7': 5220, '8': 5789, '9': 6168, '10': 6737}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TXVeZeI.jpg
OCR detection done with doctr
left top x of T/F: 5273.28125
bottom right x of T/F: 6458.65625
left top x of SN: 727.6562499999999
bottom right x of SN: 1124.40625
first t/f detection
TRUE
((5337.46875, 1833.34375), (5996.749999999999, 2086.21875))
TRUE
((5328.437500000001, 2375.21875), (6014.8125, 2637.125))
FALSE
((5301.343750000001, 2871.9375), (6041.90625, 3160.9375))
TRVE
((5310.375, 3486.0625), (5951.593750000001, 3702.8125))
FALS
((5247.156250000001, 4082.125), (5798.0625, 4289.84375))
FALSE
((5238.124999999999, 4569.8125), (6032.875000000001, 4777.53125))
FALSE
((5229.09375, 5048.46875), (6023.843749999999, 5256.1875))
TRU
((5229.09375, 5500.03125), (5671.624999999999, 5734.84375))
collision happend with box:5500.03125 and text:TRU solving on the basis of percent match boxes
the current box specification are
U
((5590.343749999999, 5527.125), (5897.406250000001, 5716.78125))
text1 i.e the prev text is the winner
SE
((5644.531249999999, 5969.65625), (5942.562499999999, 6159.3125))
collision happend with box:5969.65625 and text:SE solving on the basis of percent match boxes
the current box specification are
FAL
((5174.90625, 5969.65625), (5635.5, 6177.375))
text2 i.e the incoming text is the winner
FALSE
((5192.96875, 6583.78125), (6014.8125, 6827.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2619, '3': 2989, '4': 3531, '5': 4064, '6': 4605, '7': 4967, '8': 5509, '9': 5870, '10': 6421}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KikF8Hg.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6630.249999999999
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
first t/f detection
FALSE
((5463.906250000001, 1923.65625), (6087.062500000001, 2185.5625))
FALSE
((5454.874999999999, 2492.625), (6087.062500000001, 2709.375))
TRUE
((5373.593749999999, 2953.21875), (5969.656249999999, 3215.125))
TRUE
((5265.218749999999, 3639.59375), (5924.500000000001, 3892.46875))
TRUE
((5355.531250000001, 4262.75), (5942.562499999999, 4470.46875))
FALSE
((5409.718750000001, 4840.75), (6023.843749999999, 5012.34375))
FALSE
((5319.406249999999, 5301.34375), (5969.656249999999, 5509.0625))
FALS
((5427.781249999999, 5807.09375), (5924.500000000001, 6014.8125))
FALSE
((5427.781249999999, 6285.75), (6159.312499999999, 6493.46875))
TRUE
((5355.531250000001, 6926.96875), (5978.687500000001, 7134.6875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2068, '2': 2673, '3': 3070, '4': 3675, '5': 4280, '6': 4885, '7': 5301, '8': 5915, '9': 6321, '10': 6945}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dKh1074.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6765.718749999999
left top x of SN: 700.5624999999999
bottom right x of SN: 1115.375
first t/f detection
TRUG
((5617.437499999999, 2004.9375), (6204.46875, 2176.53125))
TRVE
((5572.281250000001, 2555.84375), (6141.250000000001, 2718.40625))
FALSE
((5590.343749999999, 3070.625), (6258.65625, 3278.34375))
FALSE
((5554.21875, 3675.71875), (6222.531250000001, 3838.28125))
TRVE
((5545.187500000001, 4280.8125), (6159.312499999999, 4443.375))
FALSE
((5509.062499999999, 4759.46875), (6159.312499999999, 4922.03125))
TFALSE
((5563.249999999999, 5238.125), (6330.906250000001, 5409.71875))
TRVE
((5500.03125, 5743.875), (6114.156250000001, 5906.4375))
TRVE
((5563.249999999999, 6195.4375), (6159.312499999999, 6358.0))
TRVE
((5518.093750000001, 6818.59375), (6078.031249999999, 6981.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3052, '4': 3630, '5': 4208, '6': 4795, '7': 5183, '8': 5770, '9': 6159, '10': 6746}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hOqd6O1.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6621.21875
left top x of SN: 330.2812500000001
bottom right x of SN: 745.0937499999999
first t/f detection
FALSE
((5472.9375, 1670.78125), (6159.312499999999, 1932.6875))
TRUE
((5500.03125, 2212.65625), (6177.375, 2519.71875))
FALSE
((5509.062499999999, 2817.75), (6222.531250000001, 3079.65625))
TRUE
((5491.000000000001, 3377.6875), (6105.124999999999, 3594.4375))
TRUE
((5472.9375, 3802.15625), (6132.218749999999, 4055.03125))
FALSE
((5536.156249999999, 4551.75), (6231.5625, 4804.625))
TRUE
((5509.062499999999, 5192.96875), (6059.968750000001, 5400.6875))
TRUE
((5463.906250000001, 5707.75), (6141.250000000001, 6005.78125))
the
((5183.9375, 6204.46875), (5409.718750000001, 6339.9375))
collision happend with box:6204.46875 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5653.562500000001, 6258.65625), (6385.093750000001, 6556.6875))
text2 i.e the incoming text is the winner
TRUE
((5527.125, 6945.03125), (6096.09375, 7215.96875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1824, '2': 2402, '3': 2980, '4': 3558, '5': 3937, '6': 4533, '7': 5310, '8': 5897, '9': 6294, '10': 7071}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Lj8xMTS.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
TRVE
((5229.09375, 1833.34375), (5879.34375, 2086.21875))
TRUE
((5202.0, 2411.34375), (6005.781250000001, 2664.21875))
TRVE
((5247.156250000001, 3007.40625), (5960.625, 3260.28125))
TRUE
((5310.375, 3531.21875), (5897.406250000001, 3747.96875))
TRUF
((5292.312499999999, 4036.96875), (5933.53125, 4253.71875))
TRUR
((5328.437500000001, 4669.15625), (5996.749999999999, 4885.90625))
TRVE
((5265.218749999999, 5337.46875), (5861.281249999999, 5581.3125))
FALSE
((5319.406249999999, 5825.15625), (6005.781250000001, 6023.84375))
TRUP
((5364.5625, 6348.96875), (5987.71875, 6565.71875))
collision happend with box:6348.96875 and text:TRUP solving on the basis of percent match boxes
the current box specification are
the
((4976.21875, 6267.6875), (5211.031249999999, 6412.1875))
text1 i.e the prev text is the winner
FALSE
((5328.437500000001, 7008.25), (6023.843749999999, 7225.0))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['1', '2', '3', '4', '5', '9']
the assigned keys are ['6', '7', '8', '10']
printing the number dict y_coordinate
{'6': 4569, '7': 5319, '8': 5906, '10': 7071}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SUT4AWW.jpg
OCR detection done with doctr
left top x of SN: 107.65624999999997
bottom right x of SN: 329.55078125
left top x of T/F: 964.267578125
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 464.0625))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 502.734375), (1035.498046875, 551.07421875))
text2 i.e the incoming text is the winner
collision happend with box:502.734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1029.052734375, 631.640625))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 778.271484375), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:778.271484375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 884.619140625), (1032.275390625, 924.90234375))
text2 i.e the incoming text is the winner
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
ot
((1000.0488281250001, 966.796875), (1083.837890625, 1015.13671875))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:ot solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 580, '2': 509, '3': 578, '4': 679, '5': 781, '6': 884, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tjERJXl.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/tjERJXl.jpg: {{function_node __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds.
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ESaXykv.jpg
OCR detection done with doctr
left top x of SN: 65.619140625
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Tyue
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
collision happend with box:625.748046875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
True
((1388.5234375, 753.796875), (1506.908203125, 809.365234375))
text2 i.e the incoming text is the winner
collision happend with box:753.796875 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1395.771484375, 884.26171875), (1523.8203125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:884.26171875 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Falr
((1398.1875, 1036.470703125), (1523.8203125, 1092.0390625))
text2 i.e the incoming text is the winner
collision happend with box:1036.470703125 and text:Falr solving on the basis of percent match boxes
the current box specification are
Flt
((1374.02734375, 1176.599609375), (1494.828125, 1237.0))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1176.599609375 and text:Flt solving on the basis of percent match boxes
the current box specification are
Fulau
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
text2 i.e the incoming text is the winner
collision happend with box:1326.392578125 and text:Fulau solving on the basis of percent match boxes
the current box specification are
False
((1410.267578125, 1449.609375), (1533.484375, 1510.009765625))
text1 i.e the prev text is the winner
Tyue
((1381.275390625, 1577.658203125), (1506.908203125, 1623.5625))
collision happend with box:1577.658203125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
True
((1407.8515625, 1700.875), (1511.740234375, 1758.859375))
text2 i.e the incoming text is the winner
Trt
((1376.443359375, 1882.076171875), (1487.580078125, 1930.396484375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 862, '2': 761, '3': 864, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SqzzLX5.jpg
rotation started
['of', '3', 'N', '-', '2', 'F', '', 'I', 'E', '2', 'T', 'E', 'I', 'I', 'a', '8', 'I', 'E', '&', 'F', 'à', 'H', 'le', 'I', 'I', 'I', 'E', 'I', 'I', 'I', 'I', '€', 'F', 'I', '9', 'I', 'E', 'F', 'I', '8', 'a', 'I', 'e', '1', 'I', 'F', 'a', 'E', '1', 'I', 'E', 'iE', 'I', '2', 'e', 'I', 'f', '2', 'I', 'I', 'le', 'I', 'I', 'E', 'E', 'F', 'E', '2', 'I', 'a', 'I', 'o', 'E', 'B', 'I', '8', 'i', 'I', 'f', 'I', 'I', 'I', 'I', 'I', '2', 'P', 'E', 'a', '8', '1', 'E', ':', 'I', 'E', '1', 'E', 'B', 'I', 'I', '2', 'E', 'I', '8', 'E', '8', 'E', 'i', 'I', 'I', 'E', 'I', 'I', '2', 'I', 'f', 'E', '8', '#', 'I', 'E', 'I', 'E', '', 'f', 'I', '3', 'I', 'I', 'I', 'E', ':', '2', '5', 'I', 'iE', 'e', ':', 'E', '€', '9', 'o', 'I', 'E', 'I', 'E', 'a', 'le', '2', 'I', 'I', '1', 'E', 'I', 'E', 'I', 'I', '1', 'I', 'F', 'I', 'E', '7', 'I', '', '0o', 'E', 'I', '9', 'F', '1', 'o', 'UT', '+', 'is', 'a', 'E', 'E', 'E', 'a', 'E', 'iE', 'i', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'E', 'E', 'I', 'I', 'F', '2', 'E', 'I', 'E', 'T', 'F', '7', 'F', 'T', 'T', 'T', '€', 'I', 'T', 'I']
rotation started
['wep', 'tloosun', "'mau", '01', 'IIOM', 'azielottas', 'jou', 'op', 'neyg', 'eyep', 'Sururen', 'ay1', 'ul', 'strejop', '10', 'asiou', 'oylods', 'aangdes', '01', 'uJeal', 'Aeur', 'ppou', 'oui', 'se', "'sosean", '-UI', 'Surnyono', 'jo', 'yeu', 'o42', "'INAS", 'ut', 'igouuered', 'o', 'ou7', 'jo', 'anjea', '4814', 'E', 'qIM', 'Ol', 'aft', 'INAS', '2501-SA-0010', 'ueya', '1amo]s', 'SI', 'JAS', '0u0-SA-0ho', 'Suisn', 'amli', 'uonaipoud', 'e', 'Suryeu', "'sossepp", 'jo', 'laqumu', 'a8re1', 'e', 'VA1M', 'suajqoad', 'ssepprmur', '101', '6', '>hed', '"aoeds', 'jeurBuo', '0q1', 'ul', 'Jeauil-uou', '29', 'ue)', 'NAS', 'ue', 'Jo', 'Arepunoq', 'uorsiop', 'OUL', '8', '"sopou', 'jo', 'Joqunu', 'oa', '01', 'jeuonodoud', 'amtl', 'Apoanp', 's!', 'JOIL', 'uorsia', 'ay', 'ut', 'nopaipaad', 'e', 'Suryeur', '1OJ', 'pamnbal', 'OUIIL', 'JUL', 'L', 'aml)', 'amli', '"uounquistp', 'ueissneg', 'u', 'sienre', 'sisuonnqunsip', 'ueisshes', 'Om1', 'jo', 'amixtui', 'V', '9', '-ad', 'uaamjoq', 'zord', 'e', 'SI', 'DAINS', '(Do4)', 'onstagereys', 'Sugendo', 'Jaataoou', 'OYL', 'S', 'Tesoy', 'pue', 'uotsto', 'yiomau', 'peanou', 'ay1', 'ut', 'sjuatper?', 'ou1', 'aandwoo', '0)', 'positi', 'amll', 'S!', 'juassop', 'quarpeas', 'OTYA', "'S14810m", '0q1', 'ogepdn', '01', 'posn', 'SI', 'uoneSodoudypeg', 't', '>mll', '(euoistounp-p', 'ide', 'JOJ', 'oupou', 'JoueIsIP', 'PICA', 'e', 'SI', '(Rxyipuupusgousu', '-1', 'E', '-f', 'plle', 'I', 'SJOJJOA', '>dl', '"magissep', 'Jeour-uou', 'e', 'SI', 'NNN', '2', 'JuouLiondop', 'anpd', '10)', 'IYAS', 'ueyi', '1081e1', 'ypnu', 'SI', 'NNM', 'Joj', 'juououmbau', 'Selo1s', '041', 'sIeoidi', 'I', '357V4/30HI', 'quowajess', 'NS', ':JJot', 'Joquint', '1j0', 'anor', 'OIHAL', 'Xusumpuet', 'JJp', 'puu', 'SDIPI', '(viidus', 'UI', 'ASTVADIIN.L', 'JIUM', '(sid', 'O1)', '6']
rotation started
['I', 'i', '2', '2', 'à', 'à', 'à', 'à', 'i', 'i', 'i', 'ly', 'E', 'a', 'I', 'i', 'i2', 'E', 'I', 'I', 'iE', 'k', '1', 'E', 'e', 'I', 'I', '.E', '.A', 'I', 'I', 'I', 'I', '1', 'I', '1', ':', 'I', 'a', 'E', 'e', 'of', '&', '4', 'E', 'iE', '', 'I', 'is', 'I', '1', ':', 'I', 'i', ':', 'E', 'a', 'I', '-', 'de', 'I', '1', 'f', 'I', ':', 'I', 'of', 'E', '1', 'i', 'I', '1', '€', '.E', 'e', 'I', 'is', '9', 'e', 'E', 'i', 'I', '7', 'e', 'I', ':', '.E', 'd', 'f', ':', 'I', '9', 'a', 'i', 'E', '', 'I', 'iy', 'of', 'I', '9', 'E', 'o', 'E', 'I', 'I', '1', 'I', 'of', 'E', 'I', 'E', 'I', 'i', 'is', 'a', 'i', 'e', 'ia', 'e', 'I', 's', 'E', 'of', 'de', 'e', '1', 's', 'I', 'I', 'E', '9', '1', 'à', 'a', 'E', '1', 'of', 'I', 'e', 'a', 'H', 'I', 'a', 'a', 'i', '.4', 'o', 'E', 'a', 'I', 'I', 'A', 'I', 'I', 'I', '-', '2', 'L', 'I', 'I', 'E', 'I', 'I', 'A', 'à', '1', 'in', 'I', 'I', 'E', 'I', '1', 'iE', '2', 'E', 'E', 'à', 'E', 'e', 'ci', 'I', 'I', 'E', 'I', '!', 'e', 'I', 'I', 'à', 'I', '1', 'I', 'A', 'E', 'i', '€', 'I', 'I', '7', '-', '2', '', '8', 'T', '00', '', 'o']
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUEor', 'FALSE', 'in', 'capital', 'lettets', 'and', 'clraf', 'handwriting', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FALSE', '1', 'Typically.', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'Feulse', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'Trute', 'Truue', '3', '1-msme-Stmdlaritir.a)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'Truue', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'and', 'cision', 'Recall.', 'Tyuc', 'True', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'Tywe', 'proportional', 'to', 'the', 'humber', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'tbe', 'original', 'space.', 'paye', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'Tywe', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-Vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'Fale']
OCR detection done with doctr
left top x of SN: 88.421875
bottom right x of SN: 306.484375
left top x of T/F: 863.8124999999999
bottom right x of T/F: 1230.8203125
first t/f detection
Feulse
((886.5, 418.6875), (959.4531249999999, 453.578125))
collision happend with box:418.6875 and text:Feulse solving on the basis of percent match boxes
the current box specification are
Trute
((884.9140625, 505.9140625), (973.7265625, 542.390625))
text2 i.e the incoming text is the winner
collision happend with box:505.9140625 and text:Trute solving on the basis of percent match boxes
the current box specification are
Truue
((881.7421875, 599.484375), (961.0390625, 629.6171875))
text2 i.e the incoming text is the winner
collision happend with box:599.484375 and text:Truue solving on the basis of percent match boxes
the current box specification are
Truue
((886.5, 688.296875), (967.3828125, 724.7734375))
text2 i.e the incoming text is the winner
collision happend with box:688.296875 and text:Truue solving on the basis of percent match boxes
the current box specification are
Tyuc
((892.84375, 800.8984375), (967.3828125, 838.9609375))
text1 i.e the prev text is the winner
True
((897.6015625, 881.78125), (972.140625, 919.84375))
collision happend with box:881.78125 and text:True solving on the basis of percent match boxes
the current box specification are
Tywe
((897.6015625, 962.6640625), (978.484375, 1000.7265625))
text1 i.e the prev text is the winner
paye
((905.53125, 1048.3046875), (978.484375, 1083.1953125))
collision happend with box:1048.3046875 and text:paye solving on the basis of percent match boxes
the current box specification are
Tywe
((892.84375, 1129.1875), (970.5546875, 1170.421875))
text2 i.e the incoming text is the winner
collision happend with box:1129.1875 and text:Tywe solving on the basis of percent match boxes
the current box specification are
Fale
((894.4296875, 1238.6171875), (972.140625, 1275.09375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 418, '2': 520, '3': 585, '4': 688, '5': 789, '6': 891, '7': 957, '8': 1060, '9': 1129, '10': 1230}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RNxITzv.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1345.068359375
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 462.451171875))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 504.345703125), (1033.88671875, 551.07421875))
text2 i.e the incoming text is the winner
collision happend with box:504.345703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1032.275390625, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 884.619140625), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
or
((1000.0488281250001, 966.796875), (1083.837890625, 1013.525390625))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 576, '4': 681, '5': 781, '6': 883, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nV9zHTn.jpg
rotation started
['I', '2', '-', '2', '-', '-', '2', ':', '2', '2', '2', 'a', 'E', ':', 'I', '1', 'is', '2', 'e', 'I', 'is', 'I', 'à', 'I', '#', 'e', 'E', 'I', '1', 'I', 'I', 'is', 'I', 'a', 'I', 'E', 'I', 'a', 'e', '', 'I', 'is', 'I', 'iE', 'a', 'a', 'E', 'I', 'I', 'I', 'I', 'e', 'iE', 'I', 'of', 'T', '8', 'is', 'e', 'e', 'de', 'E', 'I', 'I', 'i', 'iE', 'I', '8', 'I', '9', 'I', 'I', 'I', ':', 'E', 'I', 'à', 's', '-', 'I', 'I', 'of', '6', 'a', '1', 'a', 'I', ':', 'e', 'I', ':', '1', 'E', 'I', 'iE', 'o', 'I', '2', 'a', '-', '-', 'à', 'a', 'o', 'a', 'I', 'of', 'E', '0', '.', 'I', 'I', 'of', ':', 'I', 'is', '1', 'de', 'à', ':', 'is', 'e', 'I', 'e', 'E', 'of', 'de', 'S', 'I', 'E', 'e', 'I', 'I', '8', 'I', 'I', 'à', ':', 'E', 'of', 'I', 'e', 'I', '8', 'o', 'I', 'E', 'à', 'I', ':', 'a', 's', 'S', 'I', 'I', 'I', '11', 'I', 'I', 'I', 'C', '3', '1', 'iE', '-', 's', 'E', 'à', 'E', 'e', 'o', '-', 'i', '-', 'a', 'is', 'I', '2', 'E', ':', 'I', 'de', 'I', 'I', '8', 'is', 'I', '1', 'I', 'E', 'I', '9', 'E', 'I', '', 'E', 'E', 'E', '-', '€', 'I', 'I', '7', '11', '4', '12', '', 'I', '0O', 'o', '19']
rotation started
['and', 'clear', 'handwriting.', 'FALSE', 'in', 'capital', 'letters', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'TRVE', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'FALSE', 'TRUE', '3', '1', '-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', 'used', 'to', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'FALSE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'TRUE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'TRUE', 'SVM.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRVE']
rotation done for:  nV9zHTn.jpg
Number of times rotation done: 2
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6729.59375
left top x of SN: 528.96875
bottom right x of SN: 934.7499999999999
first t/f detection
TRVE
((5563.249999999999, 2077.1875), (6330.906250000001, 2366.1875))
FALSE
((5626.468750000001, 2691.3125), (6339.9375, 2953.21875))
TRUE
((5554.21875, 3215.125), (6177.375, 3477.03125))
FALSE
((5491.000000000001, 3874.40625), (6168.343750000001, 4118.25))
FALSE
((5472.9375, 4506.59375), (6177.375, 4705.28125))
TRUE
((5445.84375, 4994.28125), (6050.937499999999, 5247.15625))
TRUE
((5445.84375, 5500.03125), (6132.218749999999, 5761.9375))
TRUE
((5382.625000000001, 5987.71875), (6032.875000000001, 6231.5625))
TRUE
((5409.718750000001, 6439.28125), (6041.90625, 6683.125))
TRVE
((5409.718750000001, 7062.4375), (6023.843749999999, 7306.28125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2817, '3': 3215, '4': 3811, '5': 4389, '6': 4985, '7': 5373, '8': 5960, '9': 6348, '10': 6936}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Kk3EIE8.jpg
OCR detection done with doctr
left top x of T/F: 5020.40625
bottom right x of T/F: 6449.625000000001
left top x of SN: 321.2499999999999
bottom right x of SN: 754.1250000000001
first t/f detection
bue
((5192.96875, 2167.5), (5644.531249999999, 2456.5))
drus
((5192.96875, 2727.4375), (5617.437499999999, 2953.21875))
Ttve
((5301.343750000001, 3215.125), (5734.843750000001, 3431.875))
collision happend with box:3215.125 and text:Ttve solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4154.375, 3251.25), (5057.5, 3504.125))
text2 i.e the incoming text is the winner
is
((4940.09375, 3883.4375), (5084.59375, 4027.9375))
collision happend with box:3883.4375 and text:is solving on the basis of percent match boxes
the current box specification are
yue
((5337.46875, 3910.53125), (5798.0625, 4091.15625))
text2 i.e the incoming text is the winner
True
((5364.5625, 4461.4375), (5761.937500000001, 4678.1875))
collision happend with box:4461.4375 and text:True solving on the basis of percent match boxes
the current box specification are
Pre-
((4795.59375, 4479.5), (5102.65625, 4660.125))
text1 i.e the prev text is the winner
distribution.
((4335.0, 5111.6875), (5138.78125, 5283.28125))
direetly
((4651.09375, 5527.125), (5174.90625, 5698.71875))
Toe
((5418.75, 5057.5), (5834.187499999999, 5256.1875))
True
((5355.531250000001, 5662.59375), (5834.187499999999, 5843.21875))
buue
((5427.781249999999, 6078.03125), (5915.468749999999, 6348.96875))
Tvue
((5445.84375, 6610.875), (5951.593750000001, 6872.78125))
space.
((4759.46875, 6177.375), (5183.9375, 6358.0))
prediction
((4569.8125, 6583.78125), (5220.062500000001, 6755.375))
overfitting
((4362.09375, 7197.90625), (5039.4375, 7396.59375))
the
((5021.375, 7423.6875), (5283.28125, 7604.3125))
collision happend with box:7423.6875 and text:the solving on the basis of percent match boxes
the current box specification are
True
((5527.125, 7324.34375), (6032.875000000001, 7550.125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['1', '2', '3', '4', '8', '9']
the assigned keys are ['5', '6', '7', '10']
printing the number dict y_coordinate
{'5': 4750, '6': 5301, '7': 5698, '10': 7387}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GiTl4gv.jpg
rotation started
['s', 'E', 'E', '€', 'a', '9', 'E', 'E', '1', 'I', 'E', 'E', 's', '2', '1', 'o', 'CT', 'A', '7', 'DE', 'y', 'E', 'L', 'it', '1', '1', 'I', 'E', 'I', '8', 'H', 'po', 'I', '-', 'I', 'E', 'I', 'E', 'E', '2', 'e', 'I', '1', 'I', 'I', 'I', '1', 'I', 'S', 'a', 'I', 'E', 'it', '1', 'e', 'I', 'I', 'i', 'I', 'E', 'I', 'I', 'I', '8', 't', 'p', 'I', 'I', 'I', 'E', 'I', 'E', 'E', 'E', 'I', 'I', '8', 'I', '1', 'E', 'I', 'I', 'E', '3', 'I', '€', 'E', 'e', 't', '2', 'E', 'B', 'I', 'E', 'I', 'I', 'E', '2', 'I', '2', 'lt', 'I', 'I', 'I', 'I', 'I', '7', 'it', '1', '1', '1', '2', '6', 'B', 'o0', '€', 'A', 'D', 'E', 'I', 'I', 'e', '€', 'ee', 'E', 'E', 'E', 'E', 'L', '9', '2', '8', 'E', 'E', 'E', 'it', '€', 'P', 'B', 'I', 'P', 'I', 'I', 'A', '2', 'I', 'I', 'E', '2', 't', 'E', 'I', 'E', '2', 'E', 'a', 'I', 'p', '2', 'I', '€', '-', '1', '8', '8', '&', 'I', '€', '1', 'E', 'I', '8', 'f', 'I', '3', '2', 'I', 'I', '1', 'E', '2', 'I', '8', 'E', '€', '2', 'o', 'I', 'E', 'I', 'F', 'E', '2', 'I', 'I', '1', 'it', 'I', 'I', 'E', '-', 'S', '-', 'I', ':', 'I', '€', 'S', '€', 'à', '-', 'E', '', 'E', 'MA', 'C']
rotation started
['qou', 'op', '1842', 'egep', 'Sururen', 'mau', '04', 'IIOM', 'azreza1a8', 'Keur', 'popour', 'aua', 'Se', "'sasea1o", 'OT', '"egep', 'uaasun', '10', 'astou', 'oyipads', 'amades', '07', 'tueal', '1ooure.ed', 'D', 'aui', 'jo', 'anpea', '4814', 'e', 'YAIM', 'IOMOTS', 'SI', 'WAS', 'oto-SA-auo', 'IOI', '6', 'sutergoud', 'ssepramur', 'Kreptoq', 'totstoap', 'au1', 'ul', 'sieiap', 'YSLI', 'au2', 'WAS', 'ul', 'Sursn', '35741', '-UI', 'Supayiano', 'jo', '2501-5A-00', 'ureyy', 'WAS', '1aqumnu', 'aBrel', 'B', 'YALAL', 'sassepo', 'jo', 'B', 'Buryeur', 'tred', 'NAS', 'ue', 'jo', 'au1', 'ul', 'reauyr-tiou', 'aq', '8', 'auL', '35783', 'uonorpad', '01', 'Teorzodoxd', '3024', 'a0eds', 'Teur3uo', '35783', 'STpaHp', 'SI', 'D01L', 'sapou', 'jo', 'saquunur', 'au2', 'pazbar', 'QULL', 'BUL', 'L', '3514d', 'B', 'Bupyeur', '10J', 'uorstoaa', 'aua', 'ut', 'uonorpad', 'uerssneg', 'B', 'sienTe', 'amAXTuL', 'V', '9', 'T8004', 'pue', 'uoIsto', '10A13001', 'BUL', 'S', 'au4', 'aanduoo', '01', 'pasn', 'V', 'ureissnes', 'OM7', 'jo', 'SI', 'suonnqunstp', '(004)', 'onsLEarpeIeD', 'tornqunstp', '3A2LH', 'Buyezado', 'gord', 'B', 'SI', 'aamo', '301L', '-ald', '1291300', '307l', 'SI', 'qutaasap', 'Temotr', 'aut', 'UI', 'squorpe18', 'SI', 'none@godosdypeg', 'XIOM011', 'quorpe.8', 'OTILM', '1s24310x', 'aud', 'agepdn', '07', 'pasn', '-f', 'pue', 'I', 'SI0109A', '1', 'T', '&', 'B', 'SI', 'NNY', '2', '7tact.fordap', 'STrdKL', 'I', 'quatutazens', 'TTOI', 'mor', '39LM', '8', 'SI', 'esnumpungauner', '-agissep', 'IROtT-TOu', '101', '01110111', '301181S1P', 'PITEA', '357', 'U3', 'imrtoptammpp', 'Kue', 'a3e.1015', 'aua', 'DSTHES', 'FAF', '10j', 'auoutazmbar', 'NS', 'ypnt', 'SI', 'NNX', 'ureyz', '123101', 'PR4', 'JOJ', 'NAS', '308L', 'astva/anua', ':a101', 'saquanu', '(sad', 'ot)', '6', '211ZM', '10', 'ENAL', 'Teydeo', 'Ut', 'aSTVA', 'ptte', 'S107101', '18010', 'sunpzapunet']
rotation started
['Iny', 'a', 'a', 'L', '-', 'a', 'E', '-', '-', '9', 'E', ':', '-', 'à', 'I', '2', 'd', 'à', 'e', 'ia', '1', 'A', '&', '1', '1', '1', '8a', 'I', 'I', 'I', 'i', '1', '4f', 'e', 'a', 'I', 'E', 'e', '1', '4', 'a', 'a', 'E', 'e', 'I', 'I', '2', 'a', '1', '1', 's', 'I', 'I', 'a', '1', 'a', 'à', 'E', 'e', 'I', '6', 'E', 'A', '9', 'I', 'E', 'E', '1', '9', 'I', 'I', 'i', 'E', 's', 'E', '1', '9', '1', '1', 'I', 'E', 'a', 'I', 'I', 'e', '8a', '1', '2', '8a', 'i', '1', 'e', 'a', 'I', '-', '1', '%', 'is', 'a', '1', 'o4', 'de', ')', 'i', '8', '1', '2', 'E', '1', 'I', '3', '1', 'à', '1', 'a', '1', 'T', 'e', 'I', 'e', 'A', 'e', 'I', 'E', '1', '8', 'E', '1', 'S', '5', '1', 'o', 'a', 'I', 'I', '1', '1', '2', 'E', 'I', 'I', 'E', 'à', 'I', 'E', 'I', 'I', 'e', 'a', 'B', '8', 'I', 'I', 'à', 'I', '3', 'A', 'à', '1', 'A', 'I', '1', 'I', 'I', ':', '1', 'I', '2', '11', 'I', '10', '44', 'I', 'a', 'c', ':', '3', '-', 'a', 'L', '1', 's', '2', 'a', 'E', '1', 'I', '2', 'E', 'I', '1', 'A', '2', '6', 'a', 'à', '2', 'e', 'oi', '4', 'E', '€', 'I', 'e', 'E', 'E', 'I', '1', 'I', 'e', 'E', '', '19', '6o', '8', '1', '%', '1']
rotation started
['hamderitings', 'and', 'clear', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'OT', '9.', '(10', 'pts)', 'TRUE/FALSE', 'number', 'here:', 'Write', 'your', 'roll', 'Statement', 'Typically', 'the', 'storage', 'deployment', '2', 'KNN', '3', '4', 'TRUE', 'SVM', 'for', 'Fette', 'larger', 'than', 'is', 'much', 'SN', '1', 'for', 'KNN', 'requirement', 'classifier.', 'Fats-FASE', 'd-dimensional', 'any', 'is', 'a', 'non-linear', '1-', 'CcontineSimalaritytsan', 'vectors', 'I', 'and', 'y.', 'Beckpropogation', 'used', 'to', 'compute', 'Receiver', 'Operating', 'The', '5', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', '7', 'FALSE', 'distance', 'metric', 'for', 'is', 'a', 'valid', 'is', 'descent', 'VE', 'TR', 'Pre-', 'TRUE', 'between', 'TRUE', 'FT', 'while', 'gradient', 'update', 'the', 'weights,', 'the', 'neural', 'network.', 'in', 'Characteristic', 'is', 'used', 'to', 'the', 'gradients', '(ROC)', 'curve', 'is', 'a', 'plot', 'a', 'Gaussian', 'distribution.', 'distributions', 'is', 'always', 'for', 'making', 'a', 'prediction', 'of', 'nodes.', 'of', 'an', 'SVM', 'can', 'be', 'with', 'a', 'large', 'SVM', 'is', 'slower', 'of', 'the', 'C', 'parameter', 'as', 'the', 'model', 'may', 'that', 'do', 'not', 'generalize', 'of', 'two', 'Gaussian', 'Tree', 'is', 'directly', 'FALSE', 'in', 'the', 'Decision', 'PALSE', 'Fzve', 'FALSE', 'The', 'Time', 'required', 'to', 'the', 'number', 'proportional', 'decision', 'boundary', 'The', '8', 'multiclass', 'problems', '9', 'For', 'one-vs-one', 'using', 'With', 'a', 'high', 'value', '10', 'creases,', 'training', 'data', 'space.', 'non-linear', 'in', 'the', 'original', 'making', 'a', 'prediction', 'number', 'of', 'classes,', 'than', 'one-vs-rest', 'SVM.', 'in-', 'the', 'risk', 'of', 'overftting', 'in', 'SVM,', 'specific', 'noise', 'unseen', 'data.', 'well', 'to', 'new,', 'FALSE', 'or', 'details', 'in', 'the', 'learn', 'to', 'capture']
OCR detection done with doctr
left top x of T/F: 4532.71875
bottom right x of T/F: 5772.281250000001
left top x of SN: 131.59374999999986
bottom right x of SN: 564.4687500000001
first t/f detection
TRUE
((4985.25, 1372.75), (5572.281250000001, 1634.65625))
for
((4353.0625, 1571.4375), (4542.71875, 1724.96875))
collision happend with box:1571.4375 and text:for solving on the basis of percent match boxes
the current box specification are
Fette
((4687.21875, 1544.34375), (5301.343750000001, 1842.375))
text2 i.e the incoming text is the winner
d-dimensional
((3874.40625, 2501.65625), (4750.4375, 2844.84375))
collision happend with box:2501.65625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((4849.78125, 2519.71875), (5617.437499999999, 2871.9375))
true and false collision so given priority to text2 which is the incoming text
is
((4678.1875, 3106.75), (4804.625, 3242.21875))
collision happend with box:3106.75 and text:is solving on the basis of percent match boxes
the current box specification are
descent
((4217.59375, 3115.78125), (4687.21875, 3341.5625))
text2 i.e the incoming text is the winner
collision happend with box:3115.78125 and text:descent solving on the basis of percent match boxes
the current box specification are
TR
((4967.1875, 3151.90625), (5292.312499999999, 3386.71875))
text2 i.e the incoming text is the winner
Pre-
((4614.96875, 3657.65625), (4903.96875, 3838.28125))
collision happend with box:3657.65625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5012.34375, 3540.25), (5716.78125, 3874.40625))
text2 i.e the incoming text is the winner
between
((4136.3125, 3702.8125), (4651.09375, 3928.59375))
FT
((5111.6875, 4136.3125), (5355.531250000001, 4353.0625))
collision happend with box:4136.3125 and text:FT solving on the basis of percent match boxes
the current box specification are
distribution.
((4253.71875, 4199.53125), (5030.40625, 4479.5))
text2 i.e the incoming text is the winner
is
((4479.5, 4660.125), (4624.0, 4804.625))
collision happend with box:4660.125 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4605.9375, 4578.84375), (5075.5625, 4804.625))
text2 i.e the incoming text is the winner
space.
((4786.5625, 5165.875), (5165.875, 5346.5))
collision happend with box:5165.875 and text:space. solving on the basis of percent match boxes
the current box specification are
original
((4335.0, 5192.96875), (4795.59375, 5409.71875))
text2 i.e the incoming text is the winner
making
((4109.21875, 5608.40625), (4578.84375, 5825.15625))
collision happend with box:5608.40625 and text:making solving on the basis of percent match boxes
the current box specification are
a
((4551.75, 5626.46875), (4669.15625, 5743.875))
text2 i.e the incoming text is the winner
collision happend with box:5626.46875 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4642.0625, 5509.0625), (5265.218749999999, 5761.9375))
text2 i.e the incoming text is the winner
of
((4407.25, 6204.46875), (4551.75, 6348.96875))
collision happend with box:6204.46875 and text:of solving on the basis of percent match boxes
the current box specification are
overftting
((4542.71875, 6096.09375), (5183.9375, 6348.96875))
text2 i.e the incoming text is the winner
data.
((4407.25, 6556.6875), (4732.375, 6737.3125))
collision happend with box:6556.6875 and text:data. solving on the basis of percent match boxes
the current box specification are
or
((4461.4375, 6412.1875), (4605.9375, 6529.59375))
text1 i.e the prev text is the winner
details
((4596.90625, 6312.84375), (5030.40625, 6520.5625))
collision happend with box:6312.84375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5165.875, 6267.6875), (5391.65625, 6430.25))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'2': 2871, '1': 2330}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YaewHUB.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6603.156249999999
left top x of SN: 366.40625
bottom right x of SN: 781.2187500000001
first t/f detection
A
((5608.40625, 2131.375), (5969.656249999999, 2366.1875))
T
((5644.531249999999, 2709.375), (5834.187499999999, 2890.0))
T'
((5554.21875, 3070.625), (6041.90625, 3386.71875))
T
((5518.093750000001, 3928.59375), (5761.937500000001, 4127.28125))
T
((5527.125, 4461.4375), (5798.0625, 4642.0625))
A
((5527.125, 5003.3125), (5716.78125, 5247.15625))
F
((5581.3125, 5509.0625), (5734.843750000001, 5743.875))
T
((5653.562500000001, 6041.90625), (5834.187499999999, 6195.4375))
T
((5626.468750000001, 6547.65625), (5825.15625, 6728.28125))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2402, '2': 2998, '3': 3395, '4': 4009, '5': 4605, '6': 5229, '7': 5635, '8': 6258, '9': 6674, '10': 7297}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J5RlmQv.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6377.375
left top x of SN: 330.2812500000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2519, '3': 3061, '4': 3630, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sKJHopD.jpg
OCR detection done with doctr
left top x of SN: 899.2500000000001
bottom right x of SN: 1305.03125
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5445.84375, 2357.15625), (6069.0, 2528.75))
TRUE
((5527.125, 2853.875), (6186.406249999999, 3016.4375))
False
((5572.281250000001, 3314.46875), (6168.343750000001, 3531.21875))
False
((5518.093750000001, 3892.46875), (6087.062500000001, 4091.15625))
False
((5472.9375, 4479.5), (6050.937499999999, 4696.25))
false
((5292.312499999999, 4958.15625), (5897.406250000001, 5165.875))
True
((5409.718750000001, 5454.875), (5915.468749999999, 5635.5))
True
((5454.874999999999, 5879.34375), (5942.562499999999, 6087.0625))
Trrue
((5481.968749999999, 6403.15625), (5987.71875, 6619.90625))
True
((5427.781249999999, 6945.03125), (5987.71875, 7143.71875))
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 3142, '2': 2772, '3': 3124, '4': 3675, '5': 4208, '6': 4768}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Q9W8wOw.jpg
OCR detection done with doctr
left top x of SN: 150.4169921875
bottom right x of SN: 386.7587890625
left top x of T/F: 1222.740234375
bottom right x of T/F: 1677.6103515625
first t/f detection
handwriting
((1059.380859375, 212.365234375), (1237.07421875, 281.708984375))
falue
((1258.744140625, 611.091796875), (1395.2646484375, 702.10546875))
collision happend with box:611.091796875 and text:falue solving on the basis of percent match boxes
the current box specification are
falre
((1237.07421875, 738.9443359375), (1349.7578125, 808.2880859375))
text2 i.e the incoming text is the winner
collision happend with box:738.9443359375 and text:falre solving on the basis of percent match boxes
the current box specification are
Truu
((1215.4042968749998, 871.130859375), (1347.5908203125, 944.80859375))
text2 i.e the incoming text is the winner
collision happend with box:871.130859375 and text:Truu solving on the basis of percent match boxes
the current box specification are
Tul
((1219.73828125, 1003.3173828125), (1334.5888671875, 1068.3271484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1003.3173828125 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1182.8994140625, 1137.6708984375), (1310.751953125, 1213.515625))
text2 i.e the incoming text is the winner
collision happend with box:1137.6708984375 and text:True solving on the basis of percent match boxes
the current box specification are
Tyul
((1163.396484375, 1254.6884765625), (1284.748046875, 1306.6962890625))
text2 i.e the incoming text is the winner
collision happend with box:1254.6884765625 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Tyue
((1120.056640625, 1363.0380859375), (1263.078125, 1434.548828125))
text1 i.e the prev text is the winner
falue
((1126.5576171875, 1467.0537109375), (1243.5751953125, 1532.0634765625))
collision happend with box:1467.0537109375 and text:falue solving on the basis of percent match boxes
the current box specification are
falie
((1104.8876953125, 1581.904296875), (1228.40625, 1649.0810546875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 459, '2': 595, '3': 689, '4': 832, '5': 959}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pgxC4RR.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1330.56640625
first t/f detection
Fale
((991.9921875, 433.447265625), (1077.392578125, 481.787109375))
collision happend with box:433.447265625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Filfe
((991.9921875, 509.1796875), (1083.837890625, 557.51953125))
text2 i.e the incoming text is the winner
collision happend with box:509.1796875 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Taus
((1025.830078125, 591.357421875), (1127.34375, 644.53125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:591.357421875 and text:Taus solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 700.927734375), (1069.3359375, 754.1015625))
text1 i.e the prev text is the winner
Toune
((954.9316406250001, 795.99609375), (1070.947265625, 847.55859375))
collision happend with box:795.99609375 and text:Toune solving on the basis of percent match boxes
the current box specification are
puul
((962.9882812500001, 879.78515625), (1080.615234375, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:879.78515625 and text:puul solving on the basis of percent match boxes
the current box specification are
Tque
((1011.328125, 961.962890625), (1127.34375, 1015.13671875))
text1 i.e the prev text is the winner
bue
((966.2109375, 1055.419921875), (1058.056640625, 1103.759765625))
Sue
((971.044921875, 1274.560546875), (1050.0, 1326.123046875))
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 580, '2': 512, '3': 580, '4': 683, '5': 786, '6': 887, '7': 953, '8': 1058, '9': 1127, '10': 1229}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jMBzTSY.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6684.437499999999
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5581.3125, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5527.125, 3052.5625), (6069.0, 3224.15625))
TRUE
((5590.343749999999, 3585.40625), (6078.031249999999, 3747.96875))
TRUE
((5626.468750000001, 4109.21875), (6087.062500000001, 4244.6875))
FALSE
((5527.125, 4750.4375), (6059.968750000001, 4885.90625))
TRUE
((5608.40625, 5445.84375), (6078.031249999999, 5581.3125))
TRUE
((5590.343749999999, 5933.53125), (6087.062500000001, 6105.125))
TRUE
((5626.468750000001, 6457.34375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3088, '4': 3675, '5': 4064, '6': 4642, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kJqpZlJ.jpg
OCR detection done with doctr
left top x of T/F: 4912.03125
bottom right x of T/F: 6079.34375
left top x of SN: 637.34375
bottom right x of SN: 1034.09375
first t/f detection
TRVE
((5021.375, 1941.71875), (5527.125, 2167.5))
TRVE
((5048.46875, 2429.40625), (5563.249999999999, 2655.1875))
d-dimensional
((4127.28125, 2890.0), (4958.15625, 3133.84375))
collision happend with box:2890.0 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5102.65625, 2908.0625), (5581.3125, 3124.8125))
true and false collision so given priority to text2 which is the incoming text
is
((4858.8125, 3486.0625), (4985.25, 3612.5))
collision happend with box:3486.0625 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5174.90625, 3413.8125), (5680.656250000001, 3666.6875))
text2 i.e the incoming text is the winner
Pre-
((4768.5, 4036.96875), (5030.40625, 4190.5))
collision happend with box:4036.96875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5220.062500000001, 4009.875), (5734.843750000001, 4235.65625))
text2 i.e the incoming text is the winner
FALIE
((5283.28125, 4524.65625), (5789.031250000001, 4732.375))
collision happend with box:4524.65625 and text:FALIE solving on the basis of percent match boxes
the current box specification are
distribution.
((4362.09375, 4578.84375), (5093.625, 4795.59375))
text2 i.e the incoming text is the winner
directly
((4660.125, 4958.15625), (5120.71875, 5138.78125))
collision happend with box:4958.15625 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5310.375, 4967.1875), (5779.999999999999, 5174.90625))
true and false collision so given priority to text2 which is the incoming text
space.
((4786.5625, 5545.1875), (5165.875, 5707.75))
collision happend with box:5545.1875 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5328.437500000001, 5472.9375), (5752.906249999999, 5653.5625))
text2 i.e the incoming text is the winner
prediction
((4624.0, 5906.4375), (5211.031249999999, 6078.03125))
collision happend with box:5906.4375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TAVE
((5409.718750000001, 5879.34375), (5933.53125, 6087.0625))
text2 i.e the incoming text is the winner
overfitting
((4461.4375, 6457.34375), (5075.5625, 6656.03125))
collision happend with box:6457.34375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUE
((5445.84375, 6493.46875), (5861.281249999999, 6665.0625))
true and false collision so given priority to text2 which is the incoming text
details
((4506.59375, 6656.03125), (4922.03125, 6818.59375))
collision happend with box:6656.03125 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5066.53125, 6628.9375), (5283.28125, 6782.46875))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 2483, '2': 2989, '3': 3323, '4': 3838, '5': 4353, '6': 4885}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gtyqlcL.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Toue
((5445.84375, 1986.875), (5969.656249999999, 2212.65625))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4244.6875), (5960.625, 4443.375))
Tue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Tue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : e38fphp.jpg
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6413.499999999999
left top x of SN: 700.5624999999999
bottom right x of SN: 1097.3125
first t/f detection
A
((6312.84375, 216.75), (6367.03125, 289.0))
TRVE
((5274.250000000001, 1851.40625), (5779.999999999999, 2077.1875))
FALSG
((5229.09375, 2393.28125), (5798.0625, 2591.96875))
TRUE
((5292.312499999999, 2808.71875), (5789.031250000001, 3034.5))
FALSE
((5328.437500000001, 3404.78125), (5789.031250000001, 3585.40625))
FALSE
((5328.437500000001, 3946.65625), (5807.093749999999, 4154.375))
FA
((5265.218749999999, 4479.5), (5472.9375, 4651.09375))
collision happend with box:4479.5 and text:FA solving on the basis of percent match boxes
the current box specification are
LSE
((5463.906250000001, 4488.53125), (5734.843750000001, 4642.0625))
text2 i.e the incoming text is the winner
FALSE
((5310.375, 4876.875), (5761.937500000001, 5048.46875))
TRUE
((5292.312499999999, 5391.65625), (5789.031250000001, 5599.375))
TRUE
((5346.499999999999, 5852.25), (5825.15625, 6032.875))
TRUE
((5337.46875, 6312.84375), (5743.875, 6484.4375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2573, '3': 2944, '4': 3495, '5': 4046, '6': 4605, '7': 4967, '8': 5527, '9': 5906, '10': 6466}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vxiTFZD.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 951.376953125
bottom right x of T/F: 1330.56640625
first t/f detection
falle
((991.9921875, 433.447265625), (1079.00390625, 483.3984375))
collision happend with box:433.447265625 and text:falle solving on the basis of percent match boxes
the current box specification are
filke
((988.76953125, 507.568359375), (1083.837890625, 562.353515625))
text1 i.e the prev text is the winner
Tyule
((1030.6640625, 594.580078125), (1130.56640625, 641.30859375))
collision happend with box:594.580078125 and text:Tyule solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 700.927734375), (1069.3359375, 754.1015625))
text1 i.e the prev text is the winner
loue
((954.9316406250001, 795.99609375), (1070.947265625, 847.55859375))
collision happend with box:795.99609375 and text:loue solving on the basis of percent match boxes
the current box specification are
purl
((961.376953125, 878.173828125), (1080.615234375, 921.6796875))
text2 i.e the incoming text is the winner
collision happend with box:878.173828125 and text:purl solving on the basis of percent match boxes
the current box specification are
Taue
((1012.939453125, 963.57421875), (1127.34375, 1015.13671875))
text2 i.e the incoming text is the winner
collision happend with box:963.57421875 and text:Taue solving on the basis of percent match boxes
the current box specification are
bue
((966.2109375, 1055.419921875), (1058.056640625, 1105.37109375))
text1 i.e the prev text is the winner
fe
((969.4335937499999, 1148.876953125), (1054.833984375, 1195.60546875))
collision happend with box:1148.876953125 and text:fe solving on the basis of percent match boxes
the current box specification are
sue
((969.4335937499999, 1272.94921875), (1050.0, 1324.51171875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 514, '3': 580, '4': 683, '5': 786, '6': 887, '7': 953, '8': 1057, '9': 1126, '10': 1231}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VT1eUse.jpg
rotation started
['bf', '6', '00', '1', '', 'OT', '4', '', 'N', 'E', 'I', 'E', 'E', '7', 'a', 'I', 'I', 'I', 'E', 'e', 'E', '8', '8', 't', 'a', 'I', ':', 'E', 'I', 'I', 'I', 'E', '8', 'f', 'E', 'E', 'E', ':', 'E', 'I', 's', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', '2', 'I', '2', 'I', 'E', 'I', 'E', 'E', 'tn', 'I', 'E', 'E', 'of', 'a', 'Q', 'I', 'I', 'I', ':', 'B', '8', 'I', 'a', 'I', 'I', '9', 'I', 'I', '8', '2', 'a', 'E', 'I', 'E', 'E', 'I', 'E', 'I', 'I', 'E', 'I', '€', 'E', 'I', 'E', 'e', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'of', '8', 'I', 'I', 'E', 'I', 'I', 'E', 'E', 'it', '8', '€', '9', 'of', 'E', 'I', 'I', 'E', 'I', 'E', 'F', '11', '2', '16', 'E', 'E', '€', 'a', '9', 'E', 'DE', 'I', 'E', 'A', 'I', 'E', 'a', '-', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 'tn', 'I', '8', '€', 'I', '1', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 'it', 'E', 'E', 'I', '8', 'I', 'I', 'I', 'E', 'E', 'E', '2', 'I', 'I', 'I', 'E', 'E', 'E', 'I', 'E', 'e', 'I', '1', 'I', '€', ':', 't', 'I', 'I', 'I', 'I', ')', 'F', 'it', 'I', '8', ':', 'E', 'd', '4', '8', '?', '-', ':', '-', 'à', '€', '-', '€', 'I', 'V', '', 'A', '2', 'o6', '-', '2']
rotation started
['E0al', '"egep', 'uoosun', "'mou", '01', 'TTOM', 'azireioues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'eu4', 'UI', 'sTregop', 'JO', 'OSIOU', 'oytoeds', 'amgdes', '01', 'ureeT', 'Keu', 'lopour', 'o47', 'Se', "'SoseaIo", 'BRgp', '-UI', 'Sumay.reno', 'Jo', 'YSLI', 'ou9', "'WAS", 'ur', 'pojourered', 'D', 'o47', 'Jo', 'onTeA', 'y814', 'e', 'YAIM', 'OT', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'QUO-SA-QUO', 'Sursn', '303l', 'uororpard', 'B', 'Suryeur', "'sessero", 'Jo', 'pequnu', 'a81eT', 'B', 'Y9IM', 'sulerqoId', 'ssepprgmu', 'JOI', '6', 'Ens)', 'BEROT', '"aoeds', 'TBULSTIO', 'ou9', 'UI', 'JBOUII-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstop', 'OUL', '8', '2514122', 'sopou', 'Jo', 'requnu', 'au7', '07', 'Teuorgodoud', 'Atgpamp', 'SI', 'OOIL', 'UOISIDOC', 'ou7', 'ul', 'uonorpad', 'B', 'Suryeu', 'IOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '25743', '"uorgnqugsip', 'ueissnes', 'B', 'skenre', 'SI', 'suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'TeDay', 'pue', 'UOISIO', 'JOyl', '-ald', 'UOOMg0q', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'OISLIO90BIUD', 'Surgeredo', 'IOAIODOH', 'BUL', 'C', 'YIOMIOU', 'Temeu', 'o47', 'UI', 'squerpe.1s', 'au7', 'aanduoo', '07', 'posn', '35767', 'R', '5', 'SI', 'queosep', 'querpe1s', 'OTIYM', "'SQ481OM", 'au7', 'agepdn', '07', 'posn', 'SI', 'uone8odoxdypeg', '#', ':f', 'pue', 'I', 'SIO900A', 'aouegsip', 'PITBA', 'B', 'SI', "(A'z)@quopusgausoy", '-', 'I', 'S', 'Kue', 'IOJ', 'olIgOur', '30yl', '303l0', 'Teuorsueuup-p', 'layissel', 'reourr-uou', 'B', 'SI', 'NNY', '2', 'queurdordap', 'a8e.10qs', 'au1', 'STeordAL', 'I', 'IOJ', 'quetembal', '1981e1', 'yonu', 'SI', 'NNY', 'Indl', 'JOJ', 'IAS', 'ueyz', 'quouegess', 'NS', 'O9LIM', '5an', 'X', 'SIVa/anaL', 'naqunu', 'IIOI', 'mor', ':a.104', 'Lay', 'mah', 'e', '(sad', 'O1)', "'6", '21LIM', 'IO', 'ENUL', 'UI', 'ASTVA', 'Teadeo', 'SI01101', 'Surgumpueu', 'reapo', 'pue']
rotation started
['of', 'of', '?', '4', 'à', 'a', '-', '-', ':', '&', 'N', '-', '-', 'A', '', ':', 'E', '-', '-', 'd', ':', 'a', '-', 'a', 'E', 'a', 'I', '-', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'a', 'iE', 'I', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'I', '', 'I', 'e', 'I', 'iE', 'E', '1', 'I', 'is', 'e', 'I', 'iE', 'o', 'I', '-', 'I', 'E', 'I', 'a', '-', 'à', ':', 'o', 'E', '', 'I', 'of', 'I', 'E', 'E', 'U', 'I', 'I', 'of', 'E', 'I', 'is', 'a', '-', 'de', 'à', ':', 'of', 'I', 'a', 'E', 'de', 'I', 'I', 'I', '-', 'e', 'a', ':', 'I', '5', 'a', 's', 'a', 'I', 'e', 'I', 'iE', 'I', 'of', 'I', '(', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', 'I', '8', 'de', 'e', 'iE', 'i', '8', 'I', 'I', 'E', 'is', 'e', 'S', 'I', 'E', 'a', '8', 'I', 'is', '9', 'I', 'E', 'I', '11', 'I', 'I', 'C', '3', 'of', '5', '$', '2', '', 'I', ':', 'a', 'I', '3', 'E', 'I', 'I', '1', 'a', 'a', 'ot', 'E', 'à', 'a', 'e', 'o', ':', '8', 'is', 'I', 'I', 'I', 'E', '3', ':', 'I', 'e', 'I', '1', 'I', '2', 'E', 'I', 'of', 'I', '0', 'I', 'I', 'à', 'I', 'I', 'I', 'I', 'E', '8', 'I', 'T', 'E', 'à', 'A', 'E', 'à', '-', '€', 'I', 'I', '7', '11', '4', '10', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'TRUE', 'or', 'pts)', 'Write', '9.', '(10', 'a', 'A', 'prmra', 'number', 'here:', 'Write', 'your', 'roll', 'TRUE/FALSN', 'AP', 'SN', 'Statement', 'SVM', 'for', 'TRUE', 'URS', 'is', 'much', 'larger', 'than', 'requirement', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'deployment.', 'OTRUE', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'rebe', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'be', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'oas', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'TRUE', 'using', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'learn', 'may', '1208', 'TRUE', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:21:10] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : VT1eUse.jpg
[2024/06/28 14:21:11] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:21:12] ppocr DEBUG: dt_boxes num : 43, elapsed : 0.14975714683532715
[2024/06/28 14:21:14] ppocr DEBUG: rec_res num  : 43, elapsed : 2.036870002746582
[2024/06/28 14:21:14] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:21:15] ppocr DEBUG: dt_boxes num : 42, elapsed : 0.17870330810546875
[2024/06/28 14:21:17] ppocr DEBUG: rec_res num  : 42, elapsed : 1.7400448322296143
['6', '8', '9', 'SN', 'Co', '2', '9.(10 pts) Write TRUE or FALSE in capital letters and clear', 'With a high value of the C parameter in SVM, the risk of overfitting in-', 'creases, as the model may learn to capture specific noise or details in the', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'training data that do not generalize well to new, unseen data.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'proportional to the number of nodes.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'cision and Recall.', 'used to compute the gradients in the neural network.', 'Backpropogation is used to update the weights, while gradient descent is', 'KNN is a non-linear classifier.', 'deployment.', 'Statement', 'vectors x and y.', 'Write your roll number here:', 'TRUE', 'FoTRUE', 'TRUE', 'FALSE', 'TRUE', 'Ee FALSE', 'DTRUE', 'FOeFALSE', 'TRUE', 'TRUE', 'URS']
[2024/06/28 14:21:18] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:21:18] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12177395820617676
[2024/06/28 14:21:20] ppocr DEBUG: rec_res num  : 39, elapsed : 1.785196304321289
['TRUE', '10', 'TRUE', '6', '8', 'FAASE', '9', 'TRUE', 'TAtE', '2', 'OTRE', 'TRUE', 'NS', 'stnne', 'URS']
[2024/06/28 14:21:21] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:21:22] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.11861395835876465
[2024/06/28 14:21:23] ppocr DEBUG: rec_res num  : 35, elapsed : 1.3510727882385254
['DTRE', 'TRUE', 'TAUE', 'FAASE', 'TRUE', 'FRUE', '80D', 'NS', '2', '3', '6', '4', '5', '7', '8', '9']
[2024/06/28 14:21:24] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:21:24] ppocr DEBUG: dt_boxes num : 43, elapsed : 0.12102651596069336
[2024/06/28 14:21:26] ppocr DEBUG: rec_res num  : 43, elapsed : 1.948563814163208
['riting', 'In', '9.(10 pts Write TRUE or FALSE in capital lette', 'Write your roll number here:', 'TRUE', 'Statement', 'URS', 'SN', 'Typically, the storage requirement for KNN is much larger than SVM for', '1', 'deployment.', 'DTRUE', 'KNN is a non-linear classifier.', '2', 'TRUE', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', '3', 'vectors x and y', 'FOERFALSE', 'Backpropogation is used to update the weights, while gradient descent is', 'X', 'used to compute the gradients in the neural network.', 'TRUE', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', '5', 'cision and Recall.', 'FALSE', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', '6', 'The Time required for making a prediction in the Decision Tree is directly.', 'RFALSE', 'proportional to the number of nodes.', 'FoTRUE', '8', '9', 'TRUE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'creases, as the model may learn to capture specific noise or details in the', 'TRUE', 'training data that do not generalize well to new, unseen data.']
OCR detection done
left top x of SN: 562.0
bottom right x of SN: 968.0
left top y of SN: 1830.0
bottom right y of SN: 2124.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/VT1eUse.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XHbvbhu.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6684.437499999999
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
Toue
((5472.9375, 2059.125), (5933.53125, 2275.875))
Taue
((5355.531250000001, 2601.0), (5834.187499999999, 2826.78125))
Toue
((5463.906250000001, 3061.59375), (5852.25, 3278.34375))
Tue
((5319.406249999999, 3747.96875), (5725.812499999999, 3973.75))
Tue
((5364.5625, 4389.1875), (5807.093749999999, 4605.9375))
Fale
((5364.5625, 4858.8125), (5798.0625, 5075.5625))
Tyue
((5391.65625, 5400.6875), (5852.25, 5635.5))
Tue
((5409.718750000001, 5888.375), (5879.34375, 6105.125))
Toue
((5427.781249999999, 6367.03125), (5870.312500000001, 6583.78125))
fabe
((5391.65625, 7044.375), (5779.999999999999, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2754, '3': 3151, '4': 3738, '5': 4325, '6': 4922, '7': 5310, '8': 5906, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qwUhUnX.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 787.1113281249999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((804.69921875, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fohe
((810.7695312500001, 478.037109375), (879.0605468750001, 508.388671875))
text1 i.e the prev text is the winner
Fase
((801.6640625, 559.986328125), (877.54296875, 594.890625))
collision happend with box:559.986328125 and text:Fase solving on the basis of percent match boxes
the current box specification are
Faue
((804.69921875, 652.55859375), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fahe
((804.69921875, 736.025390625), (882.095703125, 766.376953125))
text1 i.e the prev text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 807.3515625), (876.025390625, 840.73828125))
text2 i.e the incoming text is the winner
collision happend with box:807.3515625 and text:Fase solving on the basis of percent match boxes
the current box specification are
True
((803.181640625, 892.3359375), (869.955078125, 924.205078125))
text2 i.e the incoming text is the winner
collision happend with box:892.3359375 and text:True solving on the basis of percent match boxes
the current box specification are
Trwe
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
text1 i.e the prev text is the winner
Trwe
((795.5937499999999, 1065.33984375), (876.025390625, 1100.244140625))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 745, '7': 805, '8': 896, '9': 960, '10': 1053}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : z9iMChP.jpg
OCR detection done with doctr
left top x of T/F: 898.203125
bottom right x of T/F: 1290.283203125
left top x of SN: 49.6484375
bottom right x of SN: 271.54296875
first t/f detection
T
((980.712890625, 377.05078125), (1032.275390625, 425.390625))
collision happend with box:377.05078125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((948.486328125, 470.5078125), (993.603515625, 515.625))
text2 i.e the incoming text is the winner
collision happend with box:470.5078125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((953.3203125, 554.296875), (996.8261718749999, 591.357421875))
text2 i.e the incoming text is the winner
collision happend with box:554.296875 and text:T solving on the basis of percent match boxes
the current box specification are
is
((904.9804687499999, 662.255859375), (930.76171875, 688.037109375))
text2 i.e the incoming text is the winner
collision happend with box:662.255859375 and text:is solving on the basis of percent match boxes
the current box specification are
F
((980.712890625, 633.251953125), (1016.162109375, 676.7578125))
text2 i.e the incoming text is the winner
for
((867.9199218749999, 391.552734375), (901.7578125, 418.9453125))
d-dimensional
((772.8515625, 557.51953125), (921.09375, 601.025390625))
collision happend with box:557.51953125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((824.4140625, 663.8671875), (904.9804687499999, 694.482421875))
text1 i.e the prev text is the winner
Pre-
((888.8671875, 760.546875), (938.818359375, 792.7734375))
collision happend with box:760.546875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
T
((1011.328125, 742.822265625), (1056.4453125, 784.716796875))
text2 i.e the incoming text is the winner
collision happend with box:742.822265625 and text:T solving on the basis of percent match boxes
the current box specification are
distribution.
((819.580078125, 860.44921875), (951.708984375, 899.12109375))
text2 i.e the incoming text is the winner
collision happend with box:860.44921875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
T
((993.603515625, 847.55859375), (1038.720703125, 886.23046875))
text1 i.e the prev text is the winner
collision happend with box:860.44921875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((874.365234375, 928.125), (958.154296875, 965.185546875))
text1 i.e the prev text is the winner
collision happend with box:860.44921875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
oT
((1020.99609375, 928.125), (1098.33984375, 970.01953125))
text1 i.e the prev text is the winner
collision happend with box:860.44921875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
F
((1016.162109375, 1008.69140625), (1045.166015625, 1048.974609375))
text1 i.e the prev text is the winner
original
((817.9687500000001, 1034.47265625), (901.7578125, 1071.533203125))
collision happend with box:1034.47265625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((900.1464843750001, 1032.861328125), (966.2109375, 1065.087890625))
text1 i.e the prev text is the winner
collision happend with box:1034.47265625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((869.53125, 1098.92578125), (979.1015625, 1135.986328125))
text1 i.e the prev text is the winner
overfitting
((845.3613281250001, 1202.05078125), (953.3203125, 1240.72265625))
collision happend with box:1202.05078125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((853.41796875, 1239.111328125), (925.927734375, 1271.337890625))
text2 i.e the incoming text is the winner
collision happend with box:1239.111328125 and text:details solving on the basis of percent match boxes
the current box specification are
the
((953.3203125, 1234.27734375), (991.9921875, 1261.669921875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 621, '2': 555, '3': 623, '4': 726, '5': 828, '6': 929, '7': 997, '8': 1100, '9': 1169, '10': 1271}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lvPI3dz.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/lvPI3dz.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} Expected begin, end, and strides to be 1D equal size tensors, but got shapes [2], [1], and [1] instead. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GUJBXzs.jpg
rotation started
['3', 'N', 'd', 'CA', 'dE', '66', 'co', 'P', '5', '2', 'E', 'e', '2', '3', '>', 'I', '5i', 'E', 'I', 'I', 'I', ':', 'I', '-', 'E', 'I', 'E', 'à', 'E', 'I', 'I', 'I', 'E', '1', 'E', '8', 'I', '1', 'E', 'e', 'I', 'F', 'a', ':', 'y', '&', 'E', 'E', 'I', 'E', 'E', 'I', '', '8', '1', 'i', '8', 'I', '*', '1', 'e', 'E', 'E', 'L', '€', '8', 'I', 'EA', 'E', 'I', 'E', 'a', 'I', 'De', '1', 'e', 'I', 'e', ':', 'E', 'P', 'I', 'L5', 'f', ':', 'i', 'E', 'E', '1', 'I', 'E', ':', 'I', 'I', '%', '8', 'I', 'I', 'I', 'E', '€', 'a', 'I', 'I', 'E', 'E', 'F', 'I', 'e', '1E', 'I', 'I', '4', 'E', 'I', 'I', 'I', 'a', 'le', 'X', 'E', 'I', 'E', 'E', 'V', 'E', 'LE', ':', '1', 'I', 'I', 'I', 'I', 'I', '1', '2', '-', 'E', 'E', '-', '-', '9', 'E', '2', 'I', 'E', 'I', 'I', '1', ':', '1', 'I', 'E', '&', 'E', '€', 'I', 'I', 'E', 'E', '3', 'I', 'E', 'I', 'I', 'I', 'I', '3', 'à', 'I', 'I', 'e', 'E', 'a', '!', 'E', 'E', 'I', 'à', 'E', 'E', 'E', 'E', '-', '-', 'E']
rotation started
['OL', 'Duo', 'SI', 'Lo1-1ari1)-a', '#', 'vreys', '1220018', 'SI', 'a0e1.9801', 'tO', 'laquantr', 'aaeds-ae', 'usiseq', 'auz', 'jo', '30AL', 'atioono', 'VILA', 'palfor', 'SI', 'pp', 'OUL', '09', 'papeor', 'SI', 'DIP', 'V', '6', 'jo-onua', 'parpadxa', 'OUL', 'X', 'ou', '1e41', 'X', 'stdn', 'Burutog', '2081', 'e', 'jo.Kugeqo1d', 'EAIL', 'aus', '01', 'Tetonodoad', '8', ':', '01', 'SATISTIOS', 'SLVaT', 'goseiep', 'ayn', 'ur', 'siotano', '018', 'someay', 'Tie', 'geug', '35153', 'Jager', 'ssepo', '0>C)0', 'a18', 'A', 'pae', 'X', 'JI', '0192', '29', 'ITLA', 'Soumsse', 'sakeg', 'BAIEN', 'L:', 'TOAIS', 'quopuedapur', 'STrettormipuoo', '30AL', 'au7', 'gshtr', 'K', '10', 'X', 'jo.eto', '1580L', '28', '9:', '1O1', 'aOteLTEA', 'axmeBouranutg', 'ge4a', 'yons', 'soigerren', 'IO', '0', '>', '(X)0', '104910', 'tayl', '10201x)000', 'ittopue', 'panyga-7ea10m1', '30y', '-', 'Anpexo', 'strornquasip', 'enepJl', '0y1', 'Jo', 'suer', 'OtI', 'ttaut', 'S=R', 'NOTTOT', 'ar8', 'xumetu', 'OOUeTRAO0', 'goafoad', 'HIM', 'VDdOUL', 't', 'aui', 'r', 'remotaed', 'B', 'JOE', 'E', 'SAruopuodapur', 'sourooag', 'Vod', '2', 'JI', 'xo', '1', '09', 'squted', 'piep-az', 'sseui', 'Anqegoad', 'au7', 'j0', 'anjas', '(Ai)oupr.and', '<', '(2)20u01.102', ':Ouo', '35703', 'aNil', 'ueqi', '1a19313', '39', 'meouonauny', 'Toefoad', 'COAL', 'JU', 'VAT', '01', 'gtroreatnba', 'Bursn', 'ssup', 'ypuo', 'jorsajdunes', '35143', 'Vod', 'ofj', 'pae', 'u18120', 'aus', 'taom1ag', 'Cou1', 'Jo', 'aoe.11', '8', 'uey', 'pll', '0', 'quod', 'D', 'JI', '', 'quouianes', 'NS', 'ou', '09', '(enba', 'St', '00', 'xieui', '30L', 'aouenstp', 'upaptpang', 'asiva/anal', 'roqumer', 'Iol', 'mok', 'B11M', ':0101', 'anM', '(sid', '01)', '9', 'padeo', 'TiI', 'ASIVS', 'IO', 'GNUL', 'z0op', 'prre', '101101', 'SuApuetT']
rotation started
['E', '-', '2', 'E', ':', 'E', '-', 'a', 'E', '-', 'e', '8', 'i', 'I', 'I', 'e', 'e', 'I', 'V', 'V', '.', 'E', 's', 'I', '1', '-', 'E', 'E', 'I', 'd', '-', '3', 'I', 'I', 'I', '1', 'a', 'a', 'I', 'e', 'o', 'E', 'i', 'I', '1', '2', 'I', '-', 'I', 'sa', 'à', ':', 'I', '-', 'D', 'e', 'e', '2', '8', 'a', '-', 'a', 'I', 'à', 'os', '3', 'e', 'S', '4', 'E', 'y', 'I', '1', 'e', ':', 'I', '1', 'S', 'a', 'e', 'E', '1', 'I', 'E', '.', 'I', ':', 'I', 'I', '3', '4', 'I', 'i', '-', 'i', '1', '1', 'à', 'A', 'de', 'oe', 'I', '2', 'I', 'I', 'a', 'I', '1', ':', '1', ':', 'E', 'S', '1', '1', 'de', 'i', 'a', 'à', '1', 'e', '9', 'oE', '-', 'I', '1', 'I', ':', 'E', 'E', 'e', 'H', 'as', 'I', 'I', 'I', '€', 'E', 'R', 'I', 'L', 'I', 'I', 'I', '-', 'I', 'I', 'I', 'I', 'I', 'i', 'e', ':', 'à', 'E', 'E', 'o', 'E', '3', ':', 'E', 'I', 'à', 'A', '1', 'à', '1', '1', 'I', '4', 'i9', 'a', 'A', '1', '&', 'I', 'a', 'E', 'à', '1', 'E', ':', 'de', '€', '-', '4', ':', '0o', 'a', 'De', '2', '1', 'ai', '$2', '8', 'd', 'T', 'o', '4']
rotation started
['letter', 'and', 'clear', 'handwriting.', 'TRUE', 'or', 'FALSE', 'incapital', '6.', '(10', 'pts)', 'Write', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/EALSE', 'SN', 'Statement', 'the', 'Euclidean', 'dtistance', 'TRUE', 'of', 'thematrix', 'an', 'is', 'egual-to', 'If', 'dER.', 'then', 'a', 'trace', 'between', 'the', 'origin', 'and', 'the', 'point', 'ai', 'using', 'PCA', 'FALSE', 'samples', 'of', 'each', 'class', 'mass', 'funetioncan', 'equivalent', 'to', 'LDA', 'if', 'we.', 'project', 't;', 'the', 'value', 'of', 'the', 'probability', '2', 'PCAbecomes', 'independently.', '3', 'For', 'a', 'particular', 'one:', 'be', 'greater', 'than', 'TRUE', 'CALSE', 'TRUE', '[1,', 'OLE', 'if', 'variance(z)', '>', 'pariancely)', 'then', 'the', 'rank', 'of', 'the', 'covariance', '2D-data', 'points', 'to', '4', 'The', 'PCA', 'will', 'project', 'i5', 'IF', 'data', 'will', 'be', 'zero.', 'IfX', 'and', 'y', 'are', 'two', 'at', 'least', 'one', '0)X0', '7', 'Naive', 'Bayes', 'assumes', 'class', 'label.', '8', "LDA'iS", '9', 'A', 'die', 'is', 'number', 'on', 'that', 'face', 'is', 'greater', 'B=', '10', 'matrix', 'distributions', 'exactly', 'follow', 'y=x', 'such', 'that', 'Comtx.)<Othen', 'TRUE', 'real-valued', 'random', 'variables', 'of', 'X', 'or', 'Y', 'must', 'have', 'negative', 'either', 'afx)', '<0', 'Or', 'variance', 'ie.', '6', 'independent', 'given', 'the', 'TRUE', 'that', 'all', 'features', 'are', 'conditionally', 'FALSE', 'to', 'outliers', 'inthe', 'dataset:', 'sensitive', 'up', 'is', 'proportional', 'to', 'the', 'TRUE', 'of', 'a', 'face', 'coming', 'value-of', 'X', 'loaded', 'sO', 'that', 'the', 'probability', 'outcome', 'Xi', 'The', 'expected', 'The', 'die', 'is', 'rolled', 'with', 'than', '4.', '(IL1T.1-1.077isone', 'TRUE', 'of', 'the', 'basis', 'in', '2D-space.']
OCR detection done with doctr
left top x of SN: 113.53125000000014
bottom right x of SN: 564.4687500000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:21:59] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : GUJBXzs.jpg
[2024/06/28 14:22:00] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:01] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.14203929901123047
[2024/06/28 14:22:03] ppocr DEBUG: rec_res num  : 36, elapsed : 1.9504313468933105
[2024/06/28 14:22:03] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:04] ppocr DEBUG: dt_boxes num : 65, elapsed : 0.18778419494628906
[2024/06/28 14:22:06] ppocr DEBUG: rec_res num  : 65, elapsed : 2.0415689945220947
['6(10 pts)Write TRUE or FALSE incapital letter and clear handwriting', 'SN Statement', '5', ':6', 'independently.:', 'For a particular x,the value of the probability mass function can be greater than', 'one:', '9', 'Write your roll number. here', 'f data distributions exactly follow y-x then the rank of the covariance matrix', 'will.be.zero.', '10B={11-10}isone of the basis in2Dspac', 'LDAis sensitive to outhiers in.the dataset', 'at leastoneofXor y must have.negative variance i.ceither o(X<0 or', '00', 'Naive Bayes assumes that all features are conditionally independent given the', 'class label', 'number on that face. The die is rolld with outcome X.The expected value of X', 'A die is loaded so that the probability of a face coming up is proportional tothe', 'is greater.than.4.', '......', '..', '::', '.', '.::', ':', '.', 'TRUE/EALSE', 'TRWE', 'PATRUE', 'FALSE', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'FAISE', 'TRUE']
[2024/06/28 14:22:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:08] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.11685657501220703
[2024/06/28 14:22:10] ppocr DEBUG: rec_res num  : 36, elapsed : 1.8728315830230713
['TRNE', 'TTRU', '0', 'TRUE', 'one', 'TRUG', 'NS']
[2024/06/28 14:22:10] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:11] ppocr DEBUG: dt_boxes num : 50, elapsed : 0.12413859367370605
[2024/06/28 14:22:13] ppocr DEBUG: rec_res num  : 50, elapsed : 1.8163254261016846
['TRUE', 'EASSE', 'TRUP', '...', '0', '.6', '8']
[2024/06/28 14:22:14] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:14] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.11573410034179688
[2024/06/28 14:22:16] ppocr DEBUG: rec_res num  : 36, elapsed : 1.8914079666137695
['6.(10 pts) WriteTRUE or FALSE in capital letter and clear handwriting', 'TRUE/EALSE', 'Write your roll number here', 'TRVE', 'Statement', 'SN', 'If d c Rd then a trace of the matrix anis eqnal to the Euelidean distanice', 'FALSE', 'between the origin and the point a', 'PCA.becones equivalent to LDA if we.project samples of cnch clnss using PCA.', 'TRUE', 'independently.', 'For a particular x,the value of the probability mass function can be greater than', 'FALSE', 'one:', 'The PCA will project.2D-data points.to [1 0 if variance(x)>variance(y', 'TRUE', 'If data distributions exactly follow y-x, then the rank of the covariance matrix', 'will.be.zero.', 'TRUE', 'If X and Y are two real-valued random variables such that CouXY0 then', 'at least oneof Xor y must have.negative variance i.e.either o(X)0 or', 'TRUE', '0(Y)0', 'Naive Bayes assumes that all features are conditionally independent given the', 'FALSE', 'classlabel..', 'TRUE', 'LDA is sensitive to outhiers in the dataset', 'A die is loaded so that the probability of a face.coming up is proportional to the', 'number on that face.The die is rolled with outcome X.The expected value of X', 'TRUE', 'is greater.than4.', '10B={11-10}isone of thebasis in 2Dspace']
OCR detection done
left top x of SN: 161.0
bottom right x of SN: 540.0
left top y of SN: 1710.0
bottom right y of SN: 1965.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/GUJBXzs.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : obx0nEW.jpg
OCR detection done with doctr
left top x of T/F: 5038.46875
bottom right x of T/F: 6314.156250000001
left top x of SN: 77.40624999999987
bottom right x of SN: 519.3125
first t/f detection
Taul
((5147.8125, 1643.6875), (5644.531249999999, 1860.4375))
collision happend with box:1643.6875 and text:Taul solving on the basis of percent match boxes
the current box specification are
distance
((4515.625, 1743.03125), (5048.46875, 1959.78125))
true and false collision so given priority to text2 which is the incoming text
PCA
((4777.53125, 2330.0625), (5111.6875, 2519.71875))
collision happend with box:2330.0625 and text:PCA solving on the basis of percent match boxes
the current box specification are
Taul
((5229.09375, 2284.90625), (5761.937500000001, 2492.625))
text2 i.e the incoming text is the winner
than
((4876.875, 2917.09375), (5183.9375, 3097.71875))
collision happend with box:2917.09375 and text:than solving on the basis of percent match boxes
the current box specification are
Fahe
((5391.65625, 2826.78125), (5888.374999999999, 3088.6875))
text2 i.e the incoming text is the winner
Toe
((5409.718750000001, 3359.625), (5942.562499999999, 3567.34375))
variance(y).
((4325.96875, 3522.1875), (5084.59375, 3775.0625))
matrix
((4858.8125, 3883.4375), (5319.406249999999, 4091.15625))
collision happend with box:3883.4375 and text:matrix solving on the basis of percent match boxes
the current box specification are
Trul
((5454.874999999999, 3847.3125), (6014.8125, 4064.0625))
true and false collision so given priority to text2 which is the incoming text
then
((5075.5625, 4470.46875), (5391.65625, 4642.0625))
collision happend with box:4470.46875 and text:then solving on the basis of percent match boxes
the current box specification are
Taul
((5590.343749999999, 4452.40625), (6123.1875, 4669.15625))
text2 i.e the incoming text is the winner
OT
((5247.156250000001, 4687.21875), (5409.718750000001, 4804.625))
the
((5265.218749999999, 5238.125), (5491.000000000001, 5400.6875))
collision happend with box:5238.125 and text:the solving on the basis of percent match boxes
the current box specification are
Toue
((5662.59375, 5156.84375), (6276.718750000001, 5409.71875))
text2 i.e the incoming text is the winner
PEEER
((6014.8125, 5707.75), (6294.781249999999, 5852.25))
proportional
((4479.5, 6240.59375), (5256.1875, 6493.46875))
collision happend with box:6240.59375 and text:proportional solving on the basis of percent match boxes
the current box specification are
to
((5247.156250000001, 6258.65625), (5391.65625, 6385.09375))
text1 i.e the prev text is the winner
collision happend with box:6240.59375 and text:proportional solving on the basis of percent match boxes
the current box specification are
the
((5400.687499999999, 6213.5), (5626.468750000001, 6367.03125))
text1 i.e the prev text is the winner
value
((5021.375, 6430.25), (5364.5625, 6601.84375))
collision happend with box:6430.25 and text:value solving on the basis of percent match boxes
the current box specification are
of
((5355.531250000001, 6412.1875), (5518.093750000001, 6565.71875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2357, '3': 3495, '2': 2926}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vrEo0y1.jpg
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 934.7499999999999
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6558.000000000001
first t/f detection
TRUE
((5463.906250000001, 2384.25), (5924.500000000001, 2601.0))
TRUE
((5373.593749999999, 2899.03125), (5861.281249999999, 3106.75))
FALSE
((5382.625000000001, 3422.84375), (5978.687500000001, 3621.53125))
TRU
((5382.625000000001, 3973.75), (5879.34375, 4181.46875))
FALSE
((5391.65625, 4587.875), (5996.749999999999, 4759.46875))
TRUE
((5337.46875, 5075.5625), (5897.406250000001, 5283.28125))
TRUE
((5436.812500000001, 5545.1875), (5951.593750000001, 5752.90625))
FAESE
((5391.65625, 6078.03125), (5996.749999999999, 6249.625))
collision happend with box:6078.03125 and text:FAESE solving on the basis of percent match boxes
the current box specification are
TRUE
((6023.843749999999, 6050.9375), (6538.624999999999, 6258.65625))
text2 i.e the incoming text is the winner
TRUE
((5391.65625, 6556.6875), (5942.562499999999, 6755.375))
TRUE
((5436.812500000001, 7252.09375), (5960.625, 7468.84375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2890, '3': 3287, '4': 3874, '5': 4461, '6': 5057, '7': 5454, '8': 6041, '9': 6448, '10': 7044}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZGGigCm.jpg
OCR detection done with doctr
left top x of SN: 321.2499999999999
bottom right x of SN: 736.0625
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6729.59375
first t/f detection
FALSE
((5644.531249999999, 1824.3125), (6240.593749999999, 2032.03125))
TRUE
((5635.5, 2402.3125), (6258.65625, 2619.0625))
FALSE
((5572.281250000001, 3061.59375), (6159.312499999999, 3278.34375))
TRUE
((5572.281250000001, 3594.4375), (6150.28125, 3766.03125))
TRUE
((5608.40625, 4091.15625), (6114.156250000001, 4298.875))
FALSE
((5554.21875, 4732.375), (6168.343750000001, 4940.09375))
TRUE
((5536.156249999999, 5454.875), (6105.124999999999, 5653.5625))
TRUE
((5500.03125, 5987.71875), (6087.062500000001, 6195.4375))
TRCE
((5581.3125, 6466.375), (6285.75, 6665.0625))
FALSE
((5554.21875, 7279.1875), (6204.46875, 7495.9375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2420, '3': 3016, '4': 3612, '5': 4000, '6': 4596, '7': 5400, '8': 6005, '9': 6421, '10': 7243}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vljoMvg.jpg
OCR detection done with doctr
left top x of SN: 267.0624999999999
bottom right x of SN: 699.9375000000001
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6684.437499999999
first t/f detection
FALSE
((5536.156249999999, 2122.34375), (6358.000000000001, 2402.3125))
FALSE
((5509.062499999999, 3341.5625), (6294.781249999999, 3630.5625))
TRUE
((5536.156249999999, 3865.375), (6186.406249999999, 4109.21875))
FALSE
((5527.125, 4289.84375), (6249.625000000001, 4542.71875))
FALSE
((5518.093750000001, 4894.9375), (6303.812500000001, 5192.96875))
TRUE
((5590.343749999999, 5563.25), (6330.906250000001, 5861.28125))
TRUE
((5590.343749999999, 6123.1875), (6258.65625, 6385.09375))
TRUE
((5590.343749999999, 7315.3125), (6367.03125, 7658.5))
the final dict without editing {'1': False, '2': 'NULL', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2149, '2': 2781, '3': 3377}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2PvIZDE.jpg
OCR detection done with doctr
left top x of T/F: 4803.65625
bottom right x of T/F: 6151.593750000001
left top x of SN: 41.28125
bottom right x of SN: 483.1875000000001
first t/f detection
for
((4587.875, 1833.34375), (4813.65625, 2032.03125))
collision happend with box:1833.34375 and text:for solving on the basis of percent match boxes
the current box specification are
Tue
((5048.46875, 1743.03125), (5599.375000000001, 1968.8125))
text2 i.e the incoming text is the winner
False
((5129.75, 2302.96875), (5608.40625, 2591.96875))
True
((5274.250000000001, 2826.78125), (5798.0625, 3052.5625))
collision happend with box:2826.78125 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4055.0312499999995, 2862.90625), (4976.21875, 3188.03125))
text2 i.e the incoming text is the winner
is
((4876.875, 3486.0625), (5030.40625, 3657.65625))
collision happend with box:3486.0625 and text:is solving on the basis of percent match boxes
the current box specification are
folie
((5192.96875, 3377.6875), (5653.562500000001, 3648.625))
text2 i.e the incoming text is the winner
collision happend with box:3377.6875 and text:folie solving on the basis of percent match boxes
the current box specification are
descent
((4389.1875, 3513.15625), (4885.90625, 3729.90625))
text2 i.e the incoming text is the winner
Pre
((4795.59375, 4082.125), (5111.6875, 4262.75))
collision happend with box:4082.125 and text:Pre solving on the basis of percent match boxes
the current box specification are
True
((5328.437500000001, 3955.6875), (5924.500000000001, 4199.53125))
text2 i.e the incoming text is the winner
between
((4298.875, 4118.25), (4831.71875, 4335.0))
Tsue
((5373.593749999999, 4560.78125), (5969.656249999999, 4804.625))
Tue
((5563.249999999999, 5048.46875), (6059.968750000001, 5220.0625))
False
((5536.156249999999, 5509.0625), (6087.062500000001, 5725.8125))
Tue
((5644.531249999999, 5987.71875), (6150.28125, 6204.46875))
distribution.
((4425.3125, 4660.125), (5211.031249999999, 4913.0))
directly
((4759.46875, 5048.46875), (5265.218749999999, 5265.21875))
original
((4461.4375, 5689.6875), (4958.15625, 5906.4375))
collision happend with box:5689.6875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4940.09375, 5662.59375), (5319.406249999999, 5852.25))
text1 i.e the prev text is the winner
a
((4687.21875, 6141.25), (4804.625, 6258.65625))
collision happend with box:6141.25 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4777.53125, 6023.84375), (5427.781249999999, 6276.71875))
text2 i.e the incoming text is the winner
overfitting
((4669.15625, 6656.03125), (5319.406249999999, 6872.78125))
collision happend with box:6656.03125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((5301.343750000001, 6800.53125), (5563.249999999999, 6990.1875))
text1 i.e the prev text is the winner
details
((4723.34375, 6854.71875), (5174.90625, 7071.46875))
unseen-data
((4064.0625, 7089.53125), (4858.8125, 7369.5))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['2', '3']
['2', '3', '2', '3']
printing the number dict y_coordinate
{'2': 3133, '3': 3567, '1': 2833}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PJeMxbg.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6458.65625
left top x of SN: 718.625
bottom right x of SN: 1124.40625
first t/f detection
TRVE
((5346.499999999999, 2104.28125), (5897.406250000001, 2357.15625))
FALSE
((5328.437500000001, 2619.0625), (5897.406250000001, 2835.8125))
FALSE
((5337.46875, 3061.59375), (5888.374999999999, 3287.375))
TRUE
((5400.687499999999, 3657.65625), (5897.406250000001, 3829.25))
FALSE
((5400.687499999999, 4235.65625), (5924.500000000001, 4452.40625))
FALSE
((5409.718750000001, 4660.125), (5996.749999999999, 4876.875))
collision happend with box:4660.125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4497.5625, 4777.53125), (5202.0, 4940.09375))
text2 i.e the incoming text is the winner
directly
((4768.5, 5129.75), (5220.062500000001, 5301.34375))
collision happend with box:5129.75 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5400.687499999999, 5093.625), (5942.562499999999, 5346.5))
true and false collision so given priority to text2 which is the incoming text
space.
((4867.84375, 5707.75), (5220.062500000001, 5843.21875))
collision happend with box:5707.75 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((5409.718750000001, 5590.34375), (5888.374999999999, 5816.125))
text2 i.e the incoming text is the winner
prediction
((4687.21875, 6041.90625), (5256.1875, 6213.5))
collision happend with box:6041.90625 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5463.906250000001, 6023.84375), (5978.687500000001, 6240.59375))
text2 i.e the incoming text is the winner
the
((5075.5625, 6746.34375), (5292.312499999999, 6899.875))
collision happend with box:6746.34375 and text:the solving on the basis of percent match boxes
the current box specification are
TRV
((5481.968749999999, 6647.0), (5861.281249999999, 6836.65625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6558
printing the number dict y_coordinate
{'1': 2465, '2': 2998, '3': 3359, '4': 3901, '5': 4443, '6': 4994, '7': 5364, '8': 5888, '9': 6258, '10': 6558}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': 'NULL', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5VUV5Ds.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Fake
((1526.5898437500002, 766.1865234375), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
collision happend with box:1307.5927734375 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
text2 i.e the incoming text is the winner
collision happend with box:1440.52734375 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
text2 i.e the incoming text is the winner
collision happend with box:1580.712890625 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1706.396484375 and text:Falue solving on the basis of percent match boxes
the current box specification are
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CsJgfN3.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (952.802734375, 914.625))
text2 i.e the incoming text is the winner
collision happend with box:879.69140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((924.220703125, 965.4375), (963.9179687500001, 1008.310546875))
text2 i.e the incoming text is the winner
collision happend with box:965.4375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((921.044921875, 1055.947265625), (949.626953125, 1082.94140625))
text2 i.e the incoming text is the winner
collision happend with box:1055.947265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((914.6933593750001, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
collision happend with box:1132.166015625 and text:T solving on the basis of percent match boxes
the current box specification are
the.
((838.474609375, 1263.9609375), (878.171875, 1289.3671875))
text2 i.e the incoming text is the winner
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1271.900390625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 589, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1060, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Qr2F5vt.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6819.906249999999
left top x of SN: 375.4374999999999
bottom right x of SN: 790.25
first t/f detection
TRUE
((5599.375000000001, 1941.71875), (6240.593749999999, 2158.46875))
TRVE
((5581.3125, 2438.4375), (6222.531250000001, 2682.28125))
FALSE
((5590.343749999999, 3179.0), (6258.65625, 3386.71875))
TRVE
((5536.156249999999, 3693.78125), (6114.156250000001, 3910.53125))
TRUE
((5608.40625, 4353.0625), (6376.062499999999, 4551.75))
FALSE
((5653.562500000001, 4876.875), (6249.625000000001, 5075.5625))
TRUE
((5626.468750000001, 5608.40625), (6159.312499999999, 5816.125))
TRUE
((5689.6875, 6141.25), (6294.781249999999, 6348.96875))
TRUE
((5707.750000000001, 6674.09375), (6222.531250000001, 6890.84375))
TRUE
((5725.812499999999, 7351.4375), (6240.593749999999, 7559.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2637, '3': 3224, '4': 3820, '5': 4217, '6': 4804, '7': 5599, '8': 6204, '9': 6610, '10': 7414}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RCTcSK5.jpg
OCR detection done with doctr
left top x of T/F: 5083.625
bottom right x of T/F: 6530.906250000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:22:58] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : RCTcSK5.jpg
[2024/06/28 14:22:59] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:22:59] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.14303159713745117
[2024/06/28 14:23:01] ppocr DEBUG: rec_res num  : 38, elapsed : 1.990598201751709
OCR detection done
left top x of T/F: 5139.0
bottom right x of T/F: 6319.0
left top y of T/F: 1235.0
bottom right y of T/F: 1501.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
first t/f detection
first t/f detection
FALSE
[[5385.0, 3067.0], [6034.0, 2945.0], [6082.0, 3185.0], [5433.0, 3307.0]]
first t/f detection
first t/f detection
FALSE
[[5580.0, 4755.0], [6162.0, 4694.0], [6184.0, 4898.0], [5602.0, 4958.0]]
first t/f detection
will be zero.
[[616.0, 4927.0], [1360.0, 4851.0], [1374.0, 4986.0], [630.0, 5062.0]]
first t/f detection
first t/f detection
FALSE
[[5755.0, 6085.0], [6387.0, 6023.0], [6412.0, 6265.0], [5780.0, 6327.0]]
first t/f detection
class label.
[[801.0, 6316.0], [1472.0, 6226.0], [1495.0, 6390.0], [824.0, 6481.0]]
first t/f detection
first t/f detection
the true list is  [1790, 2106, 2443, 4062, 5524, 6636, 7261]
the false list is  []
the true list for xdirn [5315, 200, 5342, 5569, 5710, 5830, 5962]
the false list for xdirn []
the final dict for y is: 
{'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': 'NULL'}
the final dict for x is: 
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict without editing {'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': 'NULL'}
['1', '2', '3', '5', '8', '10']
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XtmUIuV.jpg
OCR detection done with doctr
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6810.875
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5725.812499999999, 1688.84375), (6348.968749999999, 1896.5625))
FALSE
((5752.906249999999, 2248.78125), (6358.000000000001, 2447.46875))
FALSE
((5816.125000000001, 2853.875), (6430.249999999999, 3070.625))
TRUE
((5671.624999999999, 3449.9375), (6195.437500000001, 3657.65625))
TRVE
((5680.656250000001, 3883.4375), (6231.5625, 4100.1875))
F
((5743.875, 4587.875), (5906.4375, 4786.5625))
collision happend with box:4587.875 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5897.406250000001, 4596.90625), (6303.812500000001, 4768.5))
text2 i.e the incoming text is the winner
T
((5698.718749999999, 5229.09375), (5960.625, 5409.71875))
collision happend with box:5229.09375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5933.53125, 5220.0625), (6294.781249999999, 5400.6875))
text2 i.e the incoming text is the winner
TRVE
((5779.999999999999, 5743.875), (6285.75, 5951.59375))
FALSE
((5834.187499999999, 6330.90625), (6448.3125, 6529.59375))
TRUE
((5861.281249999999, 6872.78125), (6385.093750000001, 7053.40625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2411, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5915, '9': 6312, '10': 7116}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uJgHSki.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6440.593749999999
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
False
((5364.5625, 1752.0625), (5825.15625, 1986.875))
FALSE
((5355.531250000001, 2375.21875), (5951.593750000001, 2628.09375))
TYWL
((5319.406249999999, 2989.34375), (5807.093749999999, 3169.96875))
FALSE
((5301.343750000001, 4642.0625), (5933.53125, 4849.78125))
Trwe
((5319.406249999999, 5310.375), (5734.843750000001, 5481.96875))
TrWC
((5283.28125, 5825.15625), (5734.843750000001, 5996.75))
TRVE
((5355.531250000001, 6403.15625), (5915.468749999999, 6610.875))
TRUE
((5274.250000000001, 6972.125), (5834.187499999999, 7188.875))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2528, '3': 3088, '4': 3657, '5': 4027, '6': 4596, '7': 5355, '8': 5924, '9': 6312, '10': 7080}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x6TAizQ.jpg
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6756.6875
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Palze
((5671.624999999999, 1454.03125), (6159.312499999999, 1734.0))
Folse
((5680.656250000001, 2004.9375), (6213.499999999999, 2321.03125))
Troul
((5536.156249999999, 2709.375), (6141.250000000001, 2953.21875))
Jalse
((5527.125, 3197.0625), (6240.593749999999, 3449.9375))
Zuue
((5581.3125, 3702.8125), (6096.09375, 3928.59375))
Jalie
((5509.062499999999, 4262.75), (6123.1875, 4506.59375))
Lel
((5527.125, 5057.5), (6204.46875, 5265.21875))
Juus
((5617.437499999999, 5554.21875), (6204.46875, 5770.96875))
Juub
((5680.656250000001, 6367.03125), (6348.968749999999, 6565.71875))
Tlull
((5599.375000000001, 6818.59375), (6141.250000000001, 7026.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1661, '2': 2230, '3': 2808, '4': 3377, '5': 3757, '6': 4344, '7': 5120, '8': 5707, '9': 6096, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nhDmSKc.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6548.968749999999
left top x of SN: 438.6562500000001
bottom right x of SN: 862.5000000000001
first t/f detection
TRUE
((5545.187500000001, 1842.375), (6032.875000000001, 2050.09375))
TRUE
((5590.343749999999, 2384.25), (6032.875000000001, 2564.875))
FALSE
((5599.375000000001, 2917.09375), (6123.1875, 3124.8125))
FALSE
((5626.468750000001, 3486.0625), (6186.406249999999, 3693.78125))
collision happend with box:3486.0625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
is
((5192.96875, 3468.0), (5337.46875, 3639.59375))
text1 i.e the prev text is the winner
Pre
((5057.5, 4082.125), (5364.5625, 4253.71875))
collision happend with box:4082.125 and text:Pre solving on the basis of percent match boxes
the current box specification are
FALSE
((5635.5, 4082.125), (6195.437500000001, 4289.84375))
text2 i.e the incoming text is the winner
PALSE
((5707.750000000001, 4614.96875), (6186.406249999999, 4795.59375))
TRUE
((5662.59375, 5066.53125), (6105.124999999999, 5247.15625))
TRUE
((5689.6875, 5635.5), (6105.124999999999, 5807.09375))
TRUE
((5707.750000000001, 6141.25), (6150.28125, 6312.84375))
distribution.
((4605.9375, 4678.1875), (5391.65625, 4876.875))
directly
((4922.03125, 5084.59375), (5400.687499999999, 5256.1875))
space.
((5048.46875, 5707.75), (5418.75, 5843.21875))
prediction
((4849.78125, 6087.0625), (5463.906250000001, 6249.625))
the
((5301.343750000001, 6863.75), (5527.125, 7017.28125))
collision happend with box:6863.75 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5770.96875, 6845.6875), (6249.625000000001, 7053.40625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2158, '2': 2736, '3': 3133, '4': 3729, '5': 4325, '6': 4931, '7': 5328}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qDeau8F.jpg
OCR detection done with doctr
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6774.750000000001
left top x of SN: 664.4375
bottom right x of SN: 1079.25
first t/f detection
Falle
((5825.15625, 1869.46875), (6466.375000000001, 2131.375))
True
((5698.718749999999, 2456.5), (6294.781249999999, 2727.4375))
faly
((5689.6875, 2980.3125), (6339.9375, 3242.21875))
TTwe
((5770.96875, 3504.125), (6412.187500000001, 3747.96875))
falke
((5752.906249999999, 3973.75), (6502.5, 4262.75))
falle
((5725.812499999999, 4651.09375), (6502.5, 4931.0625))
Tne
((5734.843750000001, 5283.28125), (6430.249999999999, 5572.28125))
Trn
((5707.750000000001, 5852.25), (6421.21875, 6069.0))
falle
((5743.875, 6321.875), (6394.125, 6583.78125))
Trul
((5789.031250000001, 6954.0625), (6430.249999999999, 7170.8125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2537, '3': 3097, '4': 3666, '5': 4046, '6': 4614, '7': 5373, '8': 5951, '9': 6330, '10': 7098}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dmBFpeL.jpg
OCR detection done with doctr
left top x of SN: 375.4374999999999
bottom right x of SN: 799.2812499999999
left top x of T/F: 5625.5
bottom right x of T/F: 6856.031250000001
first t/f detection
TRUE
((5662.59375, 2059.125), (6240.593749999999, 2275.875))
FALSE
((5734.843750000001, 2655.1875), (6367.03125, 2871.9375))
FALSE
((5689.6875, 3224.15625), (6285.75, 3486.0625))
TRUE
((5662.59375, 3793.125), (6159.312499999999, 3973.75))
TRUE
((5707.750000000001, 4271.78125), (6213.499999999999, 4452.40625))
TRUE
((5671.624999999999, 4913.0), (6240.593749999999, 5111.6875))
TRUE
((5662.59375, 5590.34375), (6195.437500000001, 5816.125))
TRUE
((5671.624999999999, 6132.21875), (6240.593749999999, 6330.90625))
TRUE
((5707.750000000001, 6719.25), (6249.625000000001, 6945.03125))
TRUE
((5734.843750000001, 7324.34375), (6231.5625, 7532.0625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2691, '3': 3296, '4': 3901, '5': 4289, '6': 4876, '7': 5644, '8': 6231, '9': 6619, '10': 7405}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k0xTfJi.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5463.906250000001, 2519.71875), (5825.15625, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5409.718750000001, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
True
((5409.718750000001, 5373.59375), (5825.15625, 5572.28125))
Trve
((5427.781249999999, 5834.1875), (5825.15625, 6114.15625))
Fale
((5436.812500000001, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5816.125000000001, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3630, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7c7a0By.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6368.343750000001
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
FALSE
((5256.1875, 1914.625), (5924.500000000001, 2158.46875))
TRUE
((5274.250000000001, 2456.5), (6005.781250000001, 2700.34375))
TRUE
((5238.124999999999, 2971.28125), (5978.687500000001, 3215.125))
FALSE
((5274.250000000001, 3540.25), (5951.593750000001, 3747.96875))
FALSE
((5310.375, 4136.3125), (6005.781250000001, 4335.0))
FALSE
((5328.437500000001, 4614.96875), (6078.031249999999, 4822.6875))
FALSE
((5337.46875, 5129.75), (6005.781250000001, 5301.34375))
TRUE
((5283.28125, 5590.34375), (5933.53125, 5807.09375))
TRUE
((5346.499999999999, 6023.84375), (5960.625, 6240.59375))
FALSE
((5373.593749999999, 6683.125), (6032.875000000001, 6890.84375))
collision happend with box:6683.125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((5003.3125, 6809.5625), (5229.09375, 6954.0625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2736, '3': 3106, '4': 3666, '5': 4226, '6': 4795, '7': 5174, '8': 5752, '9': 6141, '10': 6728}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3zxEEBC.jpg
OCR detection done with doctr
left top x of T/F: 840.96875
bottom right x of T/F: 1209.74609375
left top x of SN: 66.89453125
bottom right x of SN: 284.25390625
first t/f detection
FALSE
((861.865234375, 373.59375), (949.0371093750001, 412.509765625))
collision happend with box:373.59375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((861.865234375, 454.5390625), (950.59375, 498.125))
text2 i.e the incoming text is the winner
collision happend with box:454.5390625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((717.09765625, 540.154296875), (850.96875, 575.95703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:540.154296875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRVE
((861.865234375, 537.041015625), (947.4804687499999, 580.626953125))
text1 i.e the prev text is the winner
collision happend with box:540.154296875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((835.40234375, 642.892578125), (857.1953125, 667.798828125))
text1 i.e the prev text is the winner
collision happend with box:540.154296875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRVE
((878.98828125, 636.666015625), (953.7070312500001, 667.798828125))
text1 i.e the prev text is the winner
Pre-
((818.2792968749999, 742.517578125), (861.865234375, 768.98046875))
collision happend with box:742.517578125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((880.5449218749999, 740.9609375), (967.716796875, 776.763671875))
text2 i.e the incoming text is the winner
collision happend with box:740.9609375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((886.7714843750001, 828.1328125), (961.490234375, 859.265625))
text1 i.e the prev text is the winner
collision happend with box:740.9609375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((748.23046875, 842.142578125), (869.6484375, 876.388671875))
text2 i.e the incoming text is the winner
collision happend with box:842.142578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((798.0429687500001, 910.634765625), (874.318359375, 941.767578125))
text1 i.e the prev text is the winner
collision happend with box:842.142578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRUE
((894.5546875, 905.96484375), (969.2734375, 941.767578125))
text1 i.e the prev text is the winner
collision happend with box:842.142578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((902.337890625, 996.25), (992.623046875, 1032.052734375))
text1 i.e the prev text is the winner
space.
((818.2792968749999, 1018.04296875), (877.431640625, 1042.94921875))
collision happend with box:1018.04296875 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((787.1464843749999, 1080.30859375), (886.7714843750001, 1114.5546875))
text2 i.e the incoming text is the winner
collision happend with box:1080.30859375 and text:prediction solving on the basis of percent match boxes
the current box specification are
FAL
((908.564453125, 1078.751953125), (959.93359375, 1108.328125))
text2 i.e the incoming text is the winner
collision happend with box:1078.751953125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((956.8203125, 1078.751953125), (991.06640625, 1106.771484375))
text1 i.e the prev text is the winner
collision happend with box:1078.751953125 and text:FAL solving on the basis of percent match boxes
the current box specification are
overfitting
((759.126953125, 1184.603515625), (860.3085937500001, 1218.849609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1184.603515625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
FALSE
((914.791015625, 1189.2734375), (998.849609375, 1226.6328125))
text2 i.e the incoming text is the winner
collision happend with box:1189.2734375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((860.3085937500001, 1217.29296875), (894.5546875, 1243.755859375))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 412, '2': 512, '3': 580, '4': 680, '5': 779, '6': 885, '7': 949, '8': 1050, '9': 1120, '10': 1221}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ul9u6l6.jpg
OCR detection done with doctr
left top x of SN: 92.36718750000003
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1217.328125
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((903.4375000000001, 466.3359375), (926.5234375, 500.1953125))
text2 i.e the incoming text is the winner
collision happend with box:466.3359375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 535.59375), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
collision happend with box:535.59375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((897.28125, 634.09375), (926.5234375, 664.875))
text2 i.e the incoming text is the winner
collision happend with box:634.09375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 743.3671875), (924.9843750000001, 777.2265625))
text2 i.e the incoming text is the winner
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
collision happend with box:835.7109375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((891.125, 918.8203125), (924.9843750000001, 949.6015625))
text2 i.e the incoming text is the winner
collision happend with box:918.8203125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1005.0078125), (924.9843750000001, 1040.40625))
text2 i.e the incoming text is the winner
collision happend with box:1005.0078125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1083.5), (929.6015625, 1118.8984375))
text2 i.e the incoming text is the winner
collision happend with box:1083.5 and text:F solving on the basis of percent match boxes
the current box specification are
F
((898.8203124999999, 1192.7734375), (928.0625, 1226.6328125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 377, '2': 480, '3': 547, '4': 649, '5': 749, '6': 851, '7': 920, '8': 1021, '9': 1089, '10': 1191}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MgghiL8.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1318.41015625
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1349.486328125, 606.525390625), (1459.55078125, 667.412109375))
collision happend with box:606.525390625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 725.95703125), (1583.666015625, 786.84375))
text2 i.e the incoming text is the winner
collision happend with box:725.95703125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
LR
((1347.14453125, 1142.796875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Fase
((1349.486328125, 1283.3046875), (1457.208984375, 1339.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1283.3046875 and text:Fase solving on the basis of percent match boxes
the current box specification are
Falyi
((1337.77734375, 1393.369140625), (1457.208984375, 1454.255859375))
text2 i.e the incoming text is the winner
collision happend with box:1393.369140625 and text:Falyi solving on the basis of percent match boxes
the current box specification are
Truc
((1342.4609375, 1531.53515625), (1440.81640625, 1587.73828125))
text2 i.e the incoming text is the winner
collision happend with box:1531.53515625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Rt
((1361.1953125, 1655.650390625), (1457.208984375, 1700.14453125))
text1 i.e the prev text is the winner
collision happend with box:1531.53515625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1468.91796875, 1639.2578125), (1583.666015625, 1700.14453125))
text2 i.e the incoming text is the winner
Truc
((1356.5117187500002, 1814.892578125), (1466.576171875, 1873.4375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '5': 1135, '6': 1287, '7': 1391, '8': 1538, '9': 1641, '10': 1789}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MV5KDC8.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 787.1113281249999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 434.02734375))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((810.7695312500001, 478.037109375), (880.5781250000001, 511.423828125))
text2 i.e the incoming text is the winner
collision happend with box:478.037109375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Faue
((801.6640625, 559.986328125), (877.54296875, 594.890625))
text2 i.e the incoming text is the winner
collision happend with box:559.986328125 and text:Faue solving on the basis of percent match boxes
the current box specification are
Faue
((806.216796875, 652.55859375), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
FaMe
((806.216796875, 736.025390625), (885.130859375, 766.376953125))
text1 i.e the prev text is the winner
collision happend with box:652.55859375 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 807.3515625), (876.025390625, 840.73828125))
text2 i.e the incoming text is the winner
collision happend with box:807.3515625 and text:Fase solving on the basis of percent match boxes
the current box specification are
True
((803.181640625, 892.3359375), (869.955078125, 924.205078125))
text2 i.e the incoming text is the winner
Tywe
((795.5937499999999, 1066.857421875), (876.025390625, 1101.76171875))
collision happend with box:1066.857421875 and text:Tywe solving on the basis of percent match boxes
the current box specification are
True
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 745, '7': 805, '8': 898, '9': 959, '10': 1054}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lgTFx2j.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
collision happend with box:598.0078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:882.7734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1140.64453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 598, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jz2iZTo.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 874.5234374999999
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((927.396484375, 789.181640625), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:789.181640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 914.625))
text2 i.e the incoming text is the winner
collision happend with box:879.69140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 963.849609375), (967.0937500000001, 1011.486328125))
text2 i.e the incoming text is the winner
collision happend with box:963.849609375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((919.45703125, 1055.947265625), (951.21484375, 1084.529296875))
text2 i.e the incoming text is the winner
collision happend with box:1055.947265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((916.28125, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
collision happend with box:1132.166015625 and text:T solving on the basis of percent match boxes
the current box specification are
the.
((838.474609375, 1263.9609375), (876.583984375, 1289.3671875))
text2 i.e the incoming text is the winner
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1271.900390625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1062, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y50hEHK.jpg
OCR detection done with doctr
left top x of SN: 148.62890624999997
bottom right x of SN: 367.203125
left top x of T/F: 909.9960937499999
bottom right x of T/F: 1282.0078125
first t/f detection
handeriting.
((795.0156250000001, 123.4375), (916.91015625, 166.640625))
FALSE
((927.7109375, 427.40234375), (1007.9453125, 467.51953125))
collision happend with box:427.40234375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((915.3671875, 506.09375), (1003.3164062499999, 541.58203125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:506.09375 and text:FAISE solving on the basis of percent match boxes
the current box specification are
TRUE
((907.65234375, 583.2421875), (983.2578125000001, 623.359375))
text2 i.e the incoming text is the winner
collision happend with box:583.2421875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((886.05078125, 685.078125), (961.65625, 723.65234375))
text1 i.e the prev text is the winner
TRVE
((886.05078125, 788.45703125), (958.5703125, 825.48828125))
collision happend with box:788.45703125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((870.6210937500001, 871.77734375), (938.51171875, 910.3515625))
text2 i.e the incoming text is the winner
collision happend with box:871.77734375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((855.19140625, 953.5546875), (921.5390625000001, 992.12890625))
text2 i.e the incoming text is the winner
collision happend with box:953.5546875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
SE
((893.765625, 1047.67578125), (926.16796875, 1078.53515625))
text1 i.e the prev text is the winner
FALSE
((833.58984375, 1121.73828125), (913.82421875, 1160.3125))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '9']
['1', '2', '3', '4', '5', '6', '9', '1', '2', '3', '4', '5', '6', '9']
printing the number dict y_coordinate
{'9': 66, '1': 334, '2': 432, '6': 800, '3': 499, '4': 601, '5': 700}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': True, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3G7htqD.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRIE
((5192.96875, 1616.59375), (5707.750000000001, 1833.34375))
TRIE
((5183.9375, 2113.3125), (5626.468750000001, 2330.0625))
FALSE
((5211.031249999999, 2727.4375), (5707.750000000001, 2953.21875))
FALSE
((5220.062500000001, 3206.09375), (5698.718749999999, 3413.8125))
TRUE
((5238.124999999999, 3684.75), (5725.812499999999, 3865.375))
TRUE
((5165.875, 4298.875), (5725.812499999999, 4497.5625))
TRDE
((5229.09375, 4985.25), (5626.468750000001, 5174.90625))
TRUE
((5183.9375, 5391.65625), (5653.562500000001, 5572.28125))
FALSE
((5202.0, 5942.5625), (5707.750000000001, 6105.125))
TRUE
((5156.84375, 6502.5), (5662.59375, 6683.125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1643, '2': 2176, '3': 2718, '4': 3269, '5': 3621, '6': 4172, '7': 4885, '8': 5427, '9': 5789, '10': 6520}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bO9N14J.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6756.6875
left top x of SN: 312.21875
bottom right x of SN: 727.0312500000001
first t/f detection
FALSE
((5599.375000000001, 1607.5625), (6132.218749999999, 1815.28125))
TRUE
((5608.40625, 2212.65625), (6186.406249999999, 2384.25))
FALSE
((5590.343749999999, 2790.65625), (6168.343750000001, 2989.34375))
TRUE
((5590.343749999999, 3269.3125), (6186.406249999999, 3513.15625))
TRUE
((5527.125, 3820.21875), (6141.250000000001, 4036.96875))
FALSE
((5572.281250000001, 4470.46875), (6249.625000000001, 4687.21875))
TRUE
((5572.281250000001, 5247.15625), (6213.499999999999, 5454.875))
FALSE
((5617.437499999999, 5752.90625), (6276.718750000001, 5969.65625))
TRUE
((5581.3125, 6358.0), (6312.84375, 6610.875))
TRUE
((5644.531249999999, 7044.375), (6222.531250000001, 7252.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1616, '2': 2203, '3': 2790, '4': 3386, '5': 3784, '6': 4389, '7': 5192, '8': 5807, '9': 6213, '10': 7035}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nx4Jtjd.jpg
OCR detection done with doctr
left top x of T/F: 4695.28125
bottom right x of T/F: 5998.0625
left top x of SN: 131.59374999999986
bottom right x of SN: 564.4687500000001
first t/f detection
for
((4533.6875, 2212.65625), (4732.375, 2366.1875))
collision happend with box:2212.65625 and text:for solving on the basis of percent match boxes
the current box specification are
Halse
((4822.6875, 2140.40625), (5391.65625, 2438.4375))
text2 i.e the incoming text is the winner
Jolse
((4931.0625, 2628.09375), (5418.75, 2890.0))
d-dimensional
((4064.0625, 3142.875), (4913.0, 3440.90625))
collision happend with box:3142.875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Hue
((4985.25, 3097.71875), (5463.906250000001, 3359.625))
text1 i.e the prev text is the winner
is
((4858.8125, 3729.90625), (4985.25, 3865.375))
collision happend with box:3729.90625 and text:is solving on the basis of percent match boxes
the current box specification are
descent
((4398.21875, 3738.9375), (4858.8125, 3955.6875))
text2 i.e the incoming text is the winner
between
((4325.96875, 4316.9375), (4822.6875, 4542.71875))
toul
((5147.8125, 3630.5625), (5734.843750000001, 3946.65625))
Pre-
((4795.59375, 4271.78125), (5084.59375, 4461.4375))
collision happend with box:4271.78125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
False
((5256.1875, 4181.46875), (5716.78125, 4407.25))
text2 i.e the incoming text is the winner
Taue
((5265.218749999999, 4678.1875), (5761.937500000001, 4931.0625))
collision happend with box:4678.1875 and text:Taue solving on the basis of percent match boxes
the current box specification are
distribution.
((4443.375, 4813.65625), (5202.0, 5102.65625))
text2 i.e the incoming text is the winner
is
((4669.15625, 5283.28125), (4795.59375, 5418.75))
collision happend with box:5283.28125 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4786.5625, 5202.0), (5265.218749999999, 5418.75))
text2 i.e the incoming text is the winner
collision happend with box:5202.0 and text:directly solving on the basis of percent match boxes
the current box specification are
Trut
((5373.593749999999, 5147.8125), (5897.406250000001, 5409.71875))
true and false collision so given priority to text2 which is the incoming text
Frue
((5427.781249999999, 5644.53125), (5951.593750000001, 5861.28125))
collision happend with box:5644.53125 and text:Frue solving on the basis of percent match boxes
the current box specification are
space.
((4967.1875, 5789.03125), (5355.531250000001, 5969.65625))
text1 i.e the prev text is the winner
original
((4515.625, 5816.125), (4985.25, 6041.90625))
making
((4307.90625, 6240.59375), (4759.46875, 6457.34375))
collision happend with box:6240.59375 and text:making solving on the basis of percent match boxes
the current box specification are
a
((4741.40625, 6249.625), (4849.78125, 6376.0625))
text2 i.e the incoming text is the winner
collision happend with box:6249.625 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4813.65625, 6132.21875), (5445.84375, 6385.09375))
text2 i.e the incoming text is the winner
of
((4578.84375, 6809.5625), (4732.375, 6972.125))
collision happend with box:6809.5625 and text:of solving on the basis of percent match boxes
the current box specification are
overftting
((4723.34375, 6710.21875), (5355.531250000001, 6963.09375))
text2 i.e the incoming text is the winner
the
((5346.499999999999, 6881.8125), (5563.249999999999, 7035.34375))
collision happend with box:6881.8125 and text:the solving on the basis of percent match boxes
the current box specification are
or
((4633.03125, 7026.3125), (4786.5625, 7143.71875))
text2 i.e the incoming text is the winner
collision happend with box:7026.3125 and text:or solving on the basis of percent match boxes
the current box specification are
details
((4786.5625, 6917.9375), (5202.0, 7134.6875))
text2 i.e the incoming text is the winner
data.
((4587.875, 7170.8125), (4913.0, 7342.40625))
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2908, '2': 3468}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Sm6e1Td.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1238.18359375
bottom right x of T/F: 1694.482421875
first t/f detection
folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:folu solving on the basis of percent match boxes
the current box specification are
falke
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:falke solving on the basis of percent match boxes
the current box specification are
Trut
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:853.8359375 and text:Trut solving on the basis of percent match boxes
the current box specification are
Tvo
((1283.369140625, 996.923828125), (1424.111328125, 1097.7890625))
text1 i.e the prev text is the winner
Tyue
((1281.0234374999998, 1144.703125), (1421.7656250000002, 1247.9140625))
collision happend with box:1144.703125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tyul
((1273.986328125, 1395.693359375), (1424.111328125, 1489.521484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1395.693359375 and text:Tyul solving on the basis of percent match boxes
the current box specification are
True
((1278.677734375, 1524.70703125), (1417.07421875, 1604.4609375))
text2 i.e the incoming text is the winner
collision happend with box:1524.70703125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
False
((1271.640625, 1794.462890625), (1426.45703125, 1888.291015625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 593, '2': 743, '3': 844, '4': 992, '5': 1142, '6': 1290, '7': 1388, '8': 1538, '9': 1637, '10': 1787}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DlrYDgV.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6521.874999999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1016.0312499999999
first t/f detection
TTRUE
((5418.75, 2059.125), (6087.062500000001, 2321.03125))
TRUE
((5445.84375, 2655.1875), (6159.312499999999, 2899.03125))
FALSE
((5463.906250000001, 3097.71875), (6195.437500000001, 3341.5625))
TRUE
((5445.84375, 3802.15625), (6087.062500000001, 4009.875))
FALSE
((5427.781249999999, 4362.09375), (6150.28125, 4569.8125))
FALSE
((5472.9375, 4840.75), (6105.124999999999, 5048.46875))
FALSE
((5491.000000000001, 5337.46875), (6141.250000000001, 5554.21875))
TRUE
((5445.84375, 5843.21875), (6114.156250000001, 6041.90625))
TRUE
((5481.968749999999, 6330.90625), (6159.312499999999, 6529.59375))
TRUG
((5436.812500000001, 6890.84375), (6123.1875, 7107.59375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2339, '2': 2908, '3': 3287, '4': 3856, '5': 4425, '6': 5003, '7': 5382, '8': 5951, '9': 6339, '10': 6917}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v10kqqM.jpg
OCR detection done with doctr
left top x of SN: 87.37500000000001
bottom right x of SN: 308.5078125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 577.44140625), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((912.0625, 683.4375), (946.8671875000001, 722.98828125))
collision happend with box:683.4375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 824.23828125))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((910.48046875, 874.86328125), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1224.4921875), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 417, '2': 517, '3': 585, '4': 688, '5': 789, '6': 890, '8': 1059, '9': 1124, '10': 1226}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : STcovYo.jpg
OCR detection done with doctr
left top x of T/F: 5119.75
bottom right x of T/F: 6278.031249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 988.9374999999999
first t/f detection
TRUE
((5472.9375, 1652.71875), (6078.031249999999, 1905.59375))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fotte
((5183.9375, 1797.21875), (5734.843750000001, 2104.28125))
text2 i.e the incoming text is the winner
ROFASE
((5174.90625, 2230.71875), (6195.437500000001, 2519.71875))
FACSE
((5147.8125, 2826.78125), (5888.374999999999, 3079.65625))
TRUE
((5174.90625, 3395.75), (5870.312500000001, 3612.5))
TRVE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
ATRUE
((5120.71875, 4371.125), (6059.968750000001, 4624.0))
FALSE
((5120.71875, 4876.875), (5852.25, 5138.78125))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
RUE
((5174.90625, 5346.5), (5798.0625, 5590.34375))
FALSE
((5129.75, 5834.1875), (5879.34375, 6168.34375))
FALSE
((5220.062500000001, 6358.0), (5978.687500000001, 6755.375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'UNASSIGNED', '9': False, '10': False}
the unassigned keys are ['1', '4', '5', '8']
the assigned keys are ['2', '3', '6', '7', '9', '10']
['2', '3', '6', '7', '9', '10', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'2': 2501, '3': 2890, '6': 4506, '7': 4876, '9': 5816, '10': 6367, '1': 2201}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': False, '8': 'UNASSIGNED', '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VQI5gRv.jpg
OCR detection done with doctr
left top x of SN: 1116.0000000000002
bottom right x of SN: 1521.78125
left top x of T/F: 5517.125
bottom right x of T/F: 6684.437499999999
first t/f detection
TRUE
((5518.093750000001, 2330.0625), (5996.749999999999, 2546.8125))
TRUE
((5463.906250000001, 2835.8125), (5942.562499999999, 3061.59375))
TRUE
((5418.75, 3278.34375), (5852.25, 3458.96875))
FALSE
((5292.312499999999, 3829.25), (5861.281249999999, 4036.96875))
FALSE
((5283.28125, 4398.21875), (5816.125000000001, 4624.0))
FALSE
((5211.031249999999, 4876.875), (5752.906249999999, 5093.625))
FALSE
((5147.8125, 5283.28125), (5662.59375, 5500.03125))
TRUE
((5084.59375, 5816.125), (5518.093750000001, 6032.875))
the final dict without editing {'1': True, '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2980, '2': 2610, '3': 2962}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fj6yfEh.jpg
OCR detection done with doctr
left top x of SN: 141.49414062499997
bottom right x of SN: 365.0
left top x of T/F: 994.8828124999999
bottom right x of T/F: 1378.90625
first t/f detection
F
((988.76953125, 443.115234375), (1043.5546875, 493.06640625))
collision happend with box:443.115234375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1062.890625, 439.892578125), (1114.453125, 488.232421875))
text2 i.e the incoming text is the winner
collision happend with box:439.892578125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((1006.494140625, 525.29296875), (1058.056640625, 573.6328125))
text2 i.e the incoming text is the winner
collision happend with box:525.29296875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((996.8261718749999, 607.470703125), (1046.77734375, 652.587890625))
text2 i.e the incoming text is the winner
collision happend with box:607.470703125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1006.494140625, 694.482421875), (1041.943359375, 744.43359375))
text2 i.e the incoming text is the winner
collision happend with box:694.482421875 and text:F solving on the basis of percent match boxes
the current box specification are
L
((972.6562500000001, 813.720703125), (995.21484375, 833.056640625))
text2 i.e the incoming text is the winner
collision happend with box:813.720703125 and text:L solving on the basis of percent match boxes
the current box specification are
T
((1017.7734375000001, 800.830078125), (1070.947265625, 849.169921875))
text2 i.e the incoming text is the winner
collision happend with box:800.830078125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((979.1015625, 907.177734375), (1027.44140625, 944.23828125))
text2 i.e the incoming text is the winner
collision happend with box:907.177734375 and text:T solving on the basis of percent match boxes
the current box specification are
pr
((987.1582031249999, 989.35546875), (1069.3359375, 1037.6953125))
text2 i.e the incoming text is the winner
collision happend with box:989.35546875 and text:pr solving on the basis of percent match boxes
the current box specification are
F
((966.2109375, 1066.69921875), (1001.66015625, 1108.59375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 1397
printing the number dict y_coordinate
{'1': 378, '2': 483, '3': 551, '4': 654, '5': 754, '6': 857, '7': 924, '8': 1028, '9': 1097, '10': 1397}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 15KUC2C.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6240.593749999999, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HGxZ4n9.jpg
OCR detection done with doctr
left top x of SN: 91.615234375
bottom right x of SN: 310.259765625
left top x of T/F: 861.806640625
bottom right x of T/F: 1226.384765625
first t/f detection
Fele
((885.18359375, 423.603515625), (965.4453125, 457.7890625))
collision happend with box:423.603515625 and text:Fele solving on the basis of percent match boxes
the current box specification are
lyue
((882.2109374999999, 511.296875), (960.9863281250001, 541.0234375))
text2 i.e the incoming text is the winner
collision happend with box:511.296875 and text:lyue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 606.421875), (960.9863281250001, 640.607421875))
text2 i.e the incoming text is the winner
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tine
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
text1 i.e the prev text is the winner
Igtue
((877.751953125, 790.7265625), (950.58203125, 824.912109375))
collision happend with box:790.7265625 and text:Igtue solving on the basis of percent match boxes
the current box specification are
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 905.173828125))
text2 i.e the incoming text is the winner
collision happend with box:870.98828125 and text:Trwe solving on the basis of percent match boxes
the current box specification are
False
((885.18359375, 957.1953125), (956.52734375, 986.921875))
text2 i.e the incoming text is the winner
collision happend with box:957.1953125 and text:False solving on the basis of percent match boxes
the current box specification are
Faje
((882.2109374999999, 1035.970703125), (950.58203125, 1068.669921875))
text1 i.e the prev text is the winner
Tyue
((880.7246093750001, 1159.3359375), (960.9863281250001, 1195.0078125))
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '10']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9']
['1', '2', '3', '6', '7', '8', '9', '1', '2', '3', '6', '7', '8', '9']
printing the number dict y_coordinate
{'2': 432, '3': 499, '1': 502, '6': 802, '7': 868, '8': 970, '9': 1037}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CVgnnPz.jpg
OCR detection done with doctr
left top x of SN: 101.279296875
bottom right x of SN: 319.21875
left top x of T/F: 890.068359375
bottom right x of T/F: 1256.37890625
first t/f detection
Eeue
((913.7265625, 358.1484375), (986.5703125, 386.982421875))
collision happend with box:358.1484375 and text:Eeue solving on the basis of percent match boxes
the current box specification are
FALSE
((919.796875, 402.158203125), (1004.78125, 430.9921875))
text2 i.e the incoming text is the winner
collision happend with box:402.158203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((910.69140625, 459.826171875), (1003.263671875, 496.248046875))
text2 i.e the incoming text is the winner
collision happend with box:459.826171875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((907.65625, 538.740234375), (985.052734375, 575.162109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:538.740234375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((915.244140625, 669.251953125), (986.5703125, 699.603515625))
text1 i.e the prev text is the winner
TRVE
((915.244140625, 731.47265625), (989.60546875, 767.89453125))
collision happend with box:731.47265625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((909.173828125, 839.220703125), (995.67578125, 874.125))
text2 i.e the incoming text is the winner
collision happend with box:839.220703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((912.208984375, 924.205078125), (997.193359375, 959.109375))
text2 i.e the incoming text is the winner
collision happend with box:924.205078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((916.76171875, 1013.7421875), (1003.263671875, 1048.646484375))
text2 i.e the incoming text is the winner
collision happend with box:1013.7421875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((919.796875, 1083.55078125), (1000.228515625, 1112.384765625))
text2 i.e the incoming text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Tevf
((919.796875, 1185.228515625), (1000.228515625, 1220.1328125))
text1 i.e the prev text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((857.576171875, 1233.791015625), (893.998046875, 1259.58984375))
text1 i.e the prev text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((927.384765625, 1241.37890625), (1009.333984375, 1271.73046875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 1113, '1': 648, '2': 475, '3': 543, '5': 754, '6': 865, '7': 934, '8': 1044, '10': 1221}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Q2a6ahU.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1574.625, 744.8203125))
collision happend with box:644.5078125 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
collision happend with box:1228.828125 and text:Trwv solving on the basis of percent match boxes
the current box specification are
Tyue
((1424.15625, 1349.203125), (1572.1171875, 1441.9921875))
text2 i.e the incoming text is the winner
collision happend with box:1349.203125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
text2 i.e the incoming text is the winner
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falwe
((1429.171875, 1755.46875), (1584.6562500000002, 1858.2890625))
text2 i.e the incoming text is the winner
Fale
((1416.6328125, 1918.4765625), (1617.2578124999998, 2043.8671875))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 900, '4': 1060, '5': 1218, '6': 1381, '7': 1489, '8': 1650, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YJ8QXIH.jpg
OCR detection done with doctr
left top x of SN: 258.03125
bottom right x of SN: 663.8124999999999
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6702.5
first t/f detection
TRUE
((5599.375000000001, 1761.09375), (6168.343750000001, 1968.8125))
TRUE
((5653.562500000001, 2348.125), (6177.375, 2528.75))
FALSE
((5725.812499999999, 2971.28125), (6249.625000000001, 3188.03125))
TRUE
((5626.468750000001, 3504.125), (6132.218749999999, 3666.6875))
FALSE
((5689.6875, 3982.78125), (6168.343750000001, 4154.375))
TROE
((5707.750000000001, 4633.03125), (6177.375, 4813.65625))
TROE
((5698.718749999999, 5409.71875), (6258.65625, 5608.40625))
TROE
((5734.843750000001, 5879.34375), (6258.65625, 6059.96875))
FALSE
((5734.843750000001, 6430.25), (6285.75, 6647.0))
FALSE
((5725.812499999999, 7044.375), (6231.5625, 7252.09375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1752, '2': 2348, '3': 2953, '4': 3558, '5': 3955, '6': 4569, '7': 5373, '8': 5987, '9': 6394, '10': 7206}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rZQ0RuV.jpg
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 862.5000000000001
left top x of T/F: 5544.21875
bottom right x of T/F: 6738.624999999999
first t/f detection
FALSE
((5653.562500000001, 1914.625), (6285.75, 2122.34375))
TRVE
((5617.437499999999, 2492.625), (6141.250000000001, 2709.375))
TRUE
((5545.187500000001, 3052.5625), (6069.0, 3305.4375))
PALSE
((5617.437499999999, 3576.375), (6294.781249999999, 3793.125))
TRUE
((5644.531249999999, 4018.90625), (6213.499999999999, 4226.625))
FALSE
((5698.718749999999, 4696.25), (6285.75, 4940.09375))
TRUE
((5644.531249999999, 5400.6875), (6195.437500000001, 5617.4375))
FALSE
((5680.656250000001, 5942.5625), (6258.65625, 6150.28125))
TRUE
((5689.6875, 6520.5625), (6276.718750000001, 6764.40625))
FALSE
((5698.718749999999, 7071.46875), (6339.9375, 7333.375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2411, '3': 2998, '4': 3585, '5': 3973, '6': 4578, '7': 5382, '8': 5987, '9': 6394, '10': 7215}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0uMtPz0.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6819.906249999999
left top x of SN: 438.6562500000001
bottom right x of SN: 853.4687499999999
first t/f detection
Trie
((5671.624999999999, 1968.8125), (6050.937499999999, 2140.40625))
False
((5554.21875, 2519.71875), (5933.53125, 2682.28125))
Talse
((5572.281250000001, 3142.875), (5960.625, 3314.46875))
Truil
((5671.624999999999, 3612.5), (6032.875000000001, 3802.15625))
Rue
((5662.59375, 4091.15625), (6059.968750000001, 4271.78125))
Talsl
((5680.656250000001, 4696.25), (6087.062500000001, 4876.875))
the
((5310.375, 5454.875), (5527.125, 5599.375))
collision happend with box:5454.875 and text:the solving on the basis of percent match boxes
the current box specification are
Tnee
((5644.531249999999, 5427.78125), (6032.875000000001, 5644.53125))
text2 i.e the incoming text is the winner
Fale
((5707.750000000001, 5924.5), (6078.031249999999, 6105.125))
the
((5337.46875, 6421.21875), (5554.21875, 6565.71875))
collision happend with box:6421.21875 and text:the solving on the basis of percent match boxes
the current box specification are
Trul
((5752.906249999999, 6421.21875), (6159.312499999999, 6592.8125))
text2 i.e the incoming text is the winner
Tnie
((5698.718749999999, 7161.78125), (6023.843749999999, 7333.375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': False, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['1', '7', '10']
the assigned keys are ['2', '3', '4', '5', '6', '8', '9']
['2', '3', '4', '5', '6', '8', '9', '2', '3', '4', '5', '6', '8', '9']
printing the number dict y_coordinate
{'2': 2700, '3': 3287, '4': 3892, '5': 4253, '6': 4831, '8': 6168, '9': 6583, '1': 2400}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': False, '9': True, '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JR5NBIN.jpg
OCR detection done with doctr
left top x of T/F: 775.4999999999999
bottom right x of T/F: 1153.1953125
left top x of SN: 13.019531250000021
bottom right x of SN: 232.5703125
first t/f detection
for
((758.60546875, 371.77734375), (788.6640625, 400.25390625))
collision happend with box:371.77734375 and text:for solving on the basis of percent match boxes
the current box specification are
F
((845.6171875, 363.8671875), (872.51171875, 398.671875))
text1 i.e the prev text is the winner
collision happend with box:371.77734375 and text:for solving on the basis of percent match boxes
the current box specification are
F
((856.69140625, 444.55078125), (882.00390625, 479.35546875))
text1 i.e the prev text is the winner
collision happend with box:371.77734375 and text:for solving on the basis of percent match boxes
the current box specification are
F
((875.67578125, 525.234375), (907.3164062500001, 560.0390625))
text1 i.e the prev text is the winner
didincmsioal
((682.66796875, 534.7265625), (826.6328125, 591.6796875))
collision happend with box:534.7265625 and text:didincmsioal solving on the basis of percent match boxes
the current box specification are
is
((815.55859375, 642.3046875), (840.8710937499999, 667.6171875))
text1 i.e the prev text is the winner
collision happend with box:534.7265625 and text:didincmsioal solving on the basis of percent match boxes
the current box specification are
T
((885.16796875, 628.06640625), (921.5546875, 666.03515625))
text1 i.e the prev text is the winner
collision happend with box:534.7265625 and text:didincmsioal solving on the basis of percent match boxes
the current box specification are
descent
((741.203125, 642.3046875), (818.72265625, 681.85546875))
text1 i.e the prev text is the winner
Pre-
((809.23046875, 740.390625), (858.2734375, 772.03125))
collision happend with box:740.390625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
between
((731.7109375, 746.71875), (813.9765625000001, 786.26953125))
text2 i.e the incoming text is the winner
collision happend with box:746.71875 and text:between solving on the basis of percent match boxes
the current box specification are
T
((902.5703125, 732.48046875), (932.62890625, 765.703125))
text2 i.e the incoming text is the winner
collision happend with box:732.48046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((923.13671875, 817.91015625), (954.7773437499999, 852.71484375))
text2 i.e the incoming text is the winner
collision happend with box:817.91015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((924.71875, 898.59375), (970.59765625, 931.81640625))
text2 i.e the incoming text is the winner
collision happend with box:898.59375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((950.03125, 982.44140625), (975.34375, 1020.41015625))
text2 i.e the incoming text is the winner
collision happend with box:982.44140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((962.6875, 1064.70703125), (992.7460937499999, 1096.34765625))
text2 i.e the incoming text is the winner
distribution
((752.27734375, 838.4765625), (878.8398437499999, 889.1015625))
collision happend with box:838.4765625 and text:distribution solving on the basis of percent match boxes
the current box specification are
Tree
((744.3671875, 923.90625), (794.9921875000001, 955.546875))
text1 i.e the prev text is the winner
collision happend with box:838.4765625 and text:distribution solving on the basis of percent match boxes
the current box specification are
is
((791.828125, 920.7421875), (813.9765625000001, 946.0546875))
text1 i.e the prev text is the winner
collision happend with box:838.4765625 and text:distribution solving on the basis of percent match boxes
the current box specification are
directly
((810.8125, 906.50390625), (888.3320312500001, 946.0546875))
text1 i.e the prev text is the winner
original
((768.09765625, 1017.24609375), (845.6171875, 1056.796875))
collision happend with box:1017.24609375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((840.8710937499999, 1009.3359375), (907.3164062500001, 1047.3046875))
text1 i.e the prev text is the winner
collision happend with box:1017.24609375 and text:original solving on the basis of percent match boxes
the current box specification are
making
((734.875, 1091.6015625), (810.8125, 1129.5703125))
text1 i.e the prev text is the winner
collision happend with box:1017.24609375 and text:original solving on the basis of percent match boxes
the current box specification are
a
((807.6484375, 1093.18359375), (825.05078125, 1115.33203125))
text1 i.e the prev text is the winner
collision happend with box:1017.24609375 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((818.72265625, 1074.19921875), (923.13671875, 1118.49609375))
text1 i.e the prev text is the winner
collision happend with box:1017.24609375 and text:original solving on the basis of percent match boxes
the current box specification are
F
((978.5078125, 1164.375), (1006.984375, 1192.8515625))
text1 i.e the prev text is the winner
risk
((742.78515625, 1199.1796875), (782.3359375, 1227.65625))
collision happend with box:1199.1796875 and text:risk solving on the basis of percent match boxes
the current box specification are
of
((782.3359375, 1192.8515625), (809.23046875, 1221.328125))
text1 i.e the prev text is the winner
collision happend with box:1199.1796875 and text:risk solving on the basis of percent match boxes
the current box specification are
overfitting
((806.06640625, 1177.03125), (910.48046875, 1221.328125))
text2 i.e the incoming text is the winner
collision happend with box:1177.03125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((907.3164062500001, 1205.5078125), (943.703125, 1233.984375))
text1 i.e the prev text is the winner
collision happend with box:1177.03125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
noise
((739.62109375, 1230.8203125), (793.41015625, 1264.04296875))
text1 i.e the prev text is the winner
collision happend with box:1177.03125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
or
((790.24609375, 1229.23828125), (820.3046875, 1254.55078125))
text1 i.e the prev text is the winner
collision happend with box:1177.03125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((818.72265625, 1215.0), (885.16796875, 1248.22265625))
text2 i.e the incoming text is the winner
collision happend with box:1215.0 and text:details solving on the basis of percent match boxes
the current box specification are
unseen
((717.47265625, 1268.7890625), (790.24609375, 1303.59375))
text1 i.e the prev text is the winner
collision happend with box:1215.0 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((783.91796875, 1257.71484375), (840.8710937499999, 1289.35546875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': False, '3': False, '4': 'NULL', '5': False, '6': False, '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9']
['1', '2', '3', '4', '5', '6', '8', '9', '1', '2', '3', '4', '5', '6', '8', '9']
printing the number dict y_coordinate
{'2': 593, '3': 659, '1': 493, '5': 859, '6': 958, '4': 757, '8': 1124, '9': 1191}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'NULL', '5': False, '6': False, '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAyfJTA.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 330.0693359375
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1842.341796875
first t/f detection
Truc
((1416.1083984375, 630.0478515625), (1520.7109375, 678.7001953125))
collision happend with box:630.0478515625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 758.9765625), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:758.9765625 and text:True solving on the basis of percent match boxes
the current box specification are
Falke
((1425.8388671875, 883.0400390625), (1542.6044921875, 941.4228515625))
text2 i.e the incoming text is the winner
collision happend with box:883.0400390625 and text:Falke solving on the basis of percent match boxes
the current box specification are
falte
((1425.8388671875, 1016.833984375), (1530.44140625, 1080.08203125))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1191.982421875), (1520.7109375, 1243.0673828125))
collision happend with box:1191.982421875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Felse
((1413.67578125, 1320.9111328125), (1525.576171875, 1379.2939453125))
text2 i.e the incoming text is the winner
collision happend with box:1320.9111328125 and text:Felse solving on the basis of percent match boxes
the current box specification are
fatat
((1406.3779296874998, 1457.1376953125), (1540.171875, 1513.087890625))
text2 i.e the incoming text is the winner
collision happend with box:1457.1376953125 and text:fatat solving on the basis of percent match boxes
the current box specification are
Thut
((1425.8388671875, 1588.4990234375), (1528.0087890625, 1639.583984375))
text1 i.e the prev text is the winner
Tuue
((1430.7041015624998, 1707.697265625), (1535.306640625, 1758.7822265625))
fase
((1549.90234375, 1447.4072265625), (1637.4765625, 1510.6552734375))
True
((1403.9453125, 1885.2783203125), (1525.576171875, 1946.09375))
the final dict without editing {'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 605, '2': 758, '3': 863, '4': 1031, '5': 1179, '6': 1335, '7': 1437, '8': 1595, '9': 1702, '10': 1858}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': False, '6': False, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yArHNVc.jpg
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6837.96875
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
FALSE
((5635.5, 1724.96875), (6276.718750000001, 1977.84375))
TRUE
((5554.21875, 2339.09375), (6177.375, 2601.0))
FALSE
((5599.375000000001, 2953.21875), (6150.28125, 3169.96875))
TRUE
((5725.812499999999, 3603.46875), (6412.187500000001, 3856.34375))
FALSE
((5716.78125, 4055.03125), (6547.656250000001, 4335.0))
Eas
((5716.78125, 4642.0625), (6050.937499999999, 4786.5625))
collision happend with box:4642.0625 and text:Eas solving on the basis of percent match boxes
the current box specification are
FALSE
((5671.624999999999, 4786.5625), (6385.093750000001, 5039.4375))
text2 i.e the incoming text is the winner
TRUE
((5644.531249999999, 5364.5625), (6222.531250000001, 5563.25))
TRUE
((5689.6875, 5942.5625), (6222.531250000001, 6150.28125))
the
((5310.375, 6421.21875), (5527.125, 6565.71875))
collision happend with box:6421.21875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5725.812499999999, 6475.40625), (6330.906250000001, 6674.09375))
text2 i.e the incoming text is the winner
RUE
((5798.0625, 6999.21875), (6222.531250000001, 7170.8125))
a
((6132.218749999999, 7170.8125), (6276.718750000001, 7243.0625))
collision happend with box:7170.8125 and text:a solving on the basis of percent match boxes
the current box specification are
A
((6348.968749999999, 7107.59375), (6403.156249999999, 7170.8125))
text2 i.e the incoming text is the winner
collision happend with box:7107.59375 and text:A solving on the basis of percent match boxes
the current box specification are
RfEs
((5888.374999999999, 7243.0625), (6403.156249999999, 7423.6875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2149, '2': 2727, '3': 3296, '4': 3874, '5': 4262, '6': 4840, '7': 5608, '8': 6186, '9': 6574, '10': 7360}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': 'NULL', '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5NGPXWn.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1869.921875
first t/f detection
Tyuw
((1429.171875, 649.5234375), (1564.59375, 744.8203125))
collision happend with box:649.5234375 and text:Tyuw solving on the basis of percent match boxes
the current box specification are
falte
((1416.6328125, 769.8984375), (1569.6093749999998, 870.2109375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:falte solving on the basis of percent match boxes
the current box specification are
Tivl
((1426.6640625, 912.84375), (1559.578125, 1005.6328125))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1035.7265625), (1577.1328125, 1143.5625))
Trw
((1434.1875, 1233.84375), (1572.1171875, 1329.140625))
collision happend with box:1233.84375 and text:Trw solving on the basis of percent match boxes
the current box specification are
Ayou
((1431.6796875, 1351.7109375), (1572.1171875, 1441.9921875))
text2 i.e the incoming text is the winner
collision happend with box:1351.7109375 and text:Ayou solving on the basis of percent match boxes
the current box specification are
Tyue
((1416.6328125, 1507.1953125), (1579.640625, 1607.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1567.1015625, 1705.3125))
text2 i.e the incoming text is the winner
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falue
((1426.6640625, 1752.9609375), (1579.640625, 1855.78125))
true and false collision so given priority to text2 which is the incoming text
Falke
((1416.6328125, 1920.984375), (1592.1796875, 2043.8671875))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 2060
printing the number dict y_coordinate
{'1': 631, '2': 789, '3': 900, '4': 1060, '5': 1221, '6': 1384, '7': 1497, '8': 1647, '9': 1760, '10': 2060}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q084olr.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6738.624999999999
left top x of SN: 375.4374999999999
bottom right x of SN: 799.2812499999999
first t/f detection
FALSE
((5545.187500000001, 1824.3125), (6177.375, 2032.03125))
FALSE
((5563.249999999999, 2465.53125), (6258.65625, 2673.25))
TRUE
((5481.968749999999, 3070.625), (6069.0, 3278.34375))
TRUE
((5518.093750000001, 3603.46875), (6114.156250000001, 3811.1875))
TRGUE
((5527.125, 4000.84375), (6294.781249999999, 4208.5625))
TRUE
((5662.59375, 4217.59375), (6276.718750000001, 4425.3125))
FALSE
((5572.281250000001, 4768.5), (6312.84375, 5021.375))
TRUE
((5518.093750000001, 5409.71875), (6159.312499999999, 5617.4375))
TRUE
((5554.21875, 5987.71875), (6204.46875, 6186.40625))
TRUE
((5536.156249999999, 6502.5), (6168.343750000001, 6764.40625))
TRVE
((5617.437499999999, 7170.8125), (6195.437500000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2420, '3': 3007, '4': 3594, '5': 3973, '6': 4569, '7': 5355, '8': 5951, '9': 6358, '10': 7161}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k0R3DoI.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6332.218749999999
left top x of SN: 718.625
bottom right x of SN: 1124.40625
first t/f detection
FALSE
((5274.250000000001, 1977.84375), (5978.687500000001, 2194.59375))
TRUE
((5274.250000000001, 2537.78125), (5861.281249999999, 2754.53125))
TRUE
((5202.0, 2989.34375), (5807.093749999999, 3251.25))
FALSE
((5256.1875, 3567.34375), (5951.593750000001, 3784.09375))
TRU
((5265.218749999999, 4145.34375), (5725.812499999999, 4353.0625))
+RFALSE
((5283.28125, 4614.96875), (6240.593749999999, 4849.78125))
TRUE
((5283.28125, 5075.5625), (5879.34375, 5283.28125))
TRUE
((5283.28125, 5617.4375), (5807.093749999999, 5752.90625))
FALSE
((5319.406249999999, 5987.71875), (5942.562499999999, 6159.3125))
TRUG
((5274.250000000001, 6610.875), (5807.093749999999, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2366, '2': 2880, '3': 3233, '4': 3766, '5': 4289, '6': 4822, '7': 5165, '8': 5707, '9': 6069, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WjrciTI.jpg
OCR detection done with doctr
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6567.03125
left top x of SN: 14.1875
bottom right x of SN: 465.125
first t/f detection
TRUE
((5346.499999999999, 1562.40625), (5933.53125, 1779.15625))
TRUE
((5247.156250000001, 2212.65625), (5807.093749999999, 2465.53125))
than
((4949.125, 2880.96875), (5274.250000000001, 3061.59375))
collision happend with box:2880.96875 and text:than solving on the basis of percent match boxes
the current box specification are
FALSE
((5400.687499999999, 2835.8125), (5996.749999999999, 3034.5))
text2 i.e the incoming text is the winner
TRUE
((5427.781249999999, 3386.71875), (6032.875000000001, 3648.625))
matrix
((4903.96875, 3892.46875), (5382.625000000001, 4100.1875))
collision happend with box:3892.46875 and text:matrix solving on the basis of percent match boxes
the current box specification are
FALSE
((5536.156249999999, 3910.53125), (6114.156250000001, 4127.28125))
true and false collision so given priority to text2 which is the incoming text
<Othen
((4831.71875, 4497.5625), (5418.75, 4696.25))
0or
((4949.125, 4714.3125), (5436.812500000001, 4876.875))
collision happend with box:4714.3125 and text:0or solving on the basis of percent match boxes
the current box specification are
TRUC
((5617.437499999999, 4714.3125), (6096.09375, 4894.9375))
text2 i.e the incoming text is the winner
the
((5238.124999999999, 5301.34375), (5509.062499999999, 5454.875))
collision happend with box:5301.34375 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5698.718749999999, 5310.375), (6132.218749999999, 5481.96875))
text2 i.e the incoming text is the winner
FALSE
((5734.843750000001, 5807.09375), (6339.9375, 6050.9375))
the
((5346.499999999999, 6303.8125), (5581.3125, 6466.375))
value
((4958.15625, 6520.5625), (5310.375, 6710.21875))
collision happend with box:6520.5625 and text:value solving on the basis of percent match boxes
the current box specification are
ofX
((5301.343750000001, 6493.46875), (5599.375000000001, 6692.15625))
text1 i.e the prev text is the winner
to
((5183.9375, 6358.0), (5346.499999999999, 6475.40625))
collision happend with box:6358.0 and text:to solving on the basis of percent match boxes
the current box specification are
TRUE
((5807.093749999999, 6412.1875), (6339.9375, 6628.9375))
text2 i.e the incoming text is the winner
TRUE
((5870.312500000001, 7026.3125), (6303.812500000001, 7197.90625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['3']
printing the number dict y_coordinate
{'3': 3305}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LNZv5Pn.jpg
OCR detection done with doctr
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6675.40625
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
first t/f detection
TRVE
((5536.156249999999, 1797.21875), (6078.031249999999, 2013.96875))
TRUE
((5536.156249999999, 2357.15625), (6078.031249999999, 2610.03125))
than
((5138.78125, 2989.34375), (5445.84375, 3169.96875))
collision happend with box:2989.34375 and text:than solving on the basis of percent match boxes
the current box specification are
FALSE
((5608.40625, 2971.28125), (6114.156250000001, 3179.0))
text2 i.e the incoming text is the winner
TRVE
((5581.3125, 3477.03125), (6105.124999999999, 3702.8125))
matrix
((5066.53125, 3991.8125), (5509.062499999999, 4154.375))
collision happend with box:3991.8125 and text:matrix solving on the basis of percent match boxes
the current box specification are
XA
((5897.406250000001, 4000.84375), (6177.375, 4145.34375))
text1 i.e the prev text is the winner
TRVE
((5626.468750000001, 4154.375), (6222.531250000001, 4398.21875))
then
((5238.124999999999, 4578.84375), (5536.156249999999, 4723.34375))
collision happend with box:4578.84375 and text:then solving on the basis of percent match boxes
the current box specification are
FALE
((5698.718749999999, 4560.78125), (6258.65625, 4813.65625))
text2 i.e the incoming text is the winner
or
((5391.65625, 4795.59375), (5554.21875, 4913.0))
collision happend with box:4795.59375 and text:or solving on the basis of percent match boxes
the current box specification are
TRVE
((5689.6875, 4849.78125), (6294.781249999999, 5066.53125))
text2 i.e the incoming text is the winner
the
((5364.5625, 5364.5625), (5590.343749999999, 5509.0625))
collision happend with box:5364.5625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5725.812499999999, 5337.46875), (6204.46875, 5554.21875))
text2 i.e the incoming text is the winner
TRVE
((5789.031250000001, 5807.09375), (6294.781249999999, 6059.96875))
the
((5427.781249999999, 6358.0), (5662.59375, 6502.5))
collision happend with box:6358.0 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5852.25, 6385.09375), (6403.156249999999, 6610.875))
text2 i.e the incoming text is the winner
of
((5391.65625, 6565.71875), (5536.156249999999, 6710.21875))
TKUE
((5825.15625, 7017.28125), (6385.093750000001, 7243.0625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2032, '2': 2628, '3': 3215, '4': 3811, '5': 4208, '6': 4804, '7': 5599}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SQ3PfSs.jpg
OCR detection done with doctr
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6865.0625
left top x of SN: 528.96875
bottom right x of SN: 943.7812500000001
first t/f detection
TRUE
((5689.6875, 2366.1875), (6204.46875, 2582.9375))
FALSE
((5743.875, 2953.21875), (6321.874999999999, 3124.8125))
FALSE
((5743.875, 3449.9375), (6339.9375, 3657.65625))
FALSE
((5581.3125, 4082.125), (6114.156250000001, 4244.6875))
FALSE
((5536.156249999999, 4633.03125), (6159.312499999999, 4831.71875))
FALSE
((5671.624999999999, 5247.15625), (6213.499999999999, 5409.71875))
FALSE
((5671.624999999999, 5752.90625), (6231.5625, 5951.59375))
FALSE
((5536.156249999999, 6258.65625), (6159.312499999999, 6457.34375))
TRUE
((5545.187500000001, 6746.34375), (6105.124999999999, 6954.0625))
TRUE
((5563.249999999999, 7369.5), (6087.062500000001, 7541.09375))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2953, '3': 3350, '4': 3955, '5': 4551, '6': 5165, '7': 5563, '8': 6177, '9': 6583, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : B4XCYz9.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6693.468750000001
left top x of SN: 655.4062500000001
bottom right x of SN: 1052.15625
first t/f detection
TRUG
((5509.062499999999, 2284.90625), (6195.437500000001, 2501.65625))
TRUE
((5536.156249999999, 2835.8125), (6078.031249999999, 3043.53125))
FALSE
((5427.781249999999, 3955.6875), (5978.687500000001, 4172.4375))
FALSG
((5481.968749999999, 4542.71875), (6150.28125, 4750.4375))
FALSE
((5481.968749999999, 5454.875), (6114.156250000001, 5671.625))
TRUE
((5491.000000000001, 5951.59375), (6023.843749999999, 6159.3125))
TRUE
((5445.84375, 6421.21875), (5996.749999999999, 6619.90625))
TRUE
((5581.3125, 6963.09375), (6150.28125, 7179.84375))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': 'NULL', '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2402, '2': 2971, '3': 3350, '4': 3919, '5': 4479, '6': 5048, '7': 5418, '8': 5987, '9': 6358, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': 'NULL', '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k3MGv5p.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6458.65625
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
first t/f detection
TRUE
((5301.343750000001, 1887.53125), (5924.500000000001, 2185.5625))
TRUE
((5328.437500000001, 2429.40625), (5996.749999999999, 2673.25))
Fatse
((5743.875, 2745.5), (6258.65625, 2971.28125))
Greee
((5436.812500000001, 2962.25), (5924.500000000001, 3142.875))
Coacs
((5328.437500000001, 3124.8125), (5960.625, 3332.53125))
TRUE
((5364.5625, 3486.0625), (5996.749999999999, 3747.96875))
FALSE
((5373.593749999999, 4082.125), (6005.781250000001, 4325.96875))
TRUE
((5310.375, 4596.90625), (5951.593750000001, 4849.78125))
TRUE
((5445.84375, 5093.625), (6041.90625, 5301.34375))
Cotaias
((5463.906250000001, 5635.5), (6087.062500000001, 5807.09375))
collision happend with box:5635.5 and text:Cotaias solving on the basis of percent match boxes
the current box specification are
HLS
((5635.5, 5780.0), (5933.53125, 5924.5))
text1 i.e the prev text is the winner
Glaco
((5527.125, 6114.15625), (6132.218749999999, 6312.84375))
FALS
((5373.593749999999, 6285.75), (5897.406250000001, 6502.5))
TRUE
((5527.125, 6845.6875), (6096.09375, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2628, '3': 2998, '4': 3567, '5': 4127, '6': 4705, '7': 5093, '8': 5680, '9': 6078, '10': 6683}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AEvXq0w.jpg
OCR detection done with doctr
left top x of T/F: 772.4765625
bottom right x of T/F: 1158.376953125
left top x of SN: 15.525390625000007
bottom right x of SN: 240.66796874999997
first t/f detection
for
((757.5703125, 347.130859375), (790.259765625, 375.150390625))
collision happend with box:347.130859375 and text:for solving on the basis of percent match boxes
the current box specification are
FALSE
((810.49609375, 339.34765625), (902.337890625, 384.490234375))
text2 i.e the incoming text is the winner
collision happend with box:339.34765625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((821.392578125, 420.29296875), (910.12109375, 466.9921875))
text2 i.e the incoming text is the winner
collision happend with box:420.29296875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((830.732421875, 504.3515625), (916.3476562499999, 549.494140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:504.3515625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((685.96484375, 512.134765625), (824.505859375, 563.50390625))
text2 i.e the incoming text is the winner
collision happend with box:512.134765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((854.08203125, 597.75), (935.02734375, 635.109375))
text2 i.e the incoming text is the winner
collision happend with box:597.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
descent
((742.00390625, 617.986328125), (818.2792968749999, 653.7890625))
text1 i.e the prev text is the winner
collision happend with box:597.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
is.
((815.166015625, 614.873046875), (843.185546875, 641.3359375))
text1 i.e the prev text is the winner
collision happend with box:597.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
between-
((729.5507812499999, 719.16796875), (818.2792968749999, 756.52734375))
text1 i.e the prev text is the winner
collision happend with box:597.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Pre-
((808.939453125, 712.94140625), (858.751953125, 744.07421875))
text1 i.e the prev text is the winner
collision happend with box:597.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((869.6484375, 700.48828125), (961.490234375, 745.630859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:700.48828125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.328125, 787.66015625), (969.2734375, 825.01953125))
text1 i.e the prev text is the winner
TRUE
((907.0078125, 865.4921875), (983.2832031249999, 905.96484375))
collision happend with box:865.4921875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((925.6875, 951.107421875), (1017.529296875, 994.693359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:951.107421875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((939.697265625, 1032.052734375), (1023.755859375, 1070.96875))
text2 i.e the incoming text is the winner
distributions
((752.900390625, 812.56640625), (878.98828125, 857.708984375))
collision happend with box:812.56640625 and text:distributions solving on the basis of percent match boxes
the current box specification are
Tree
((745.1171875, 893.51171875), (793.373046875, 926.201171875))
text1 i.e the prev text is the winner
collision happend with box:812.56640625 and text:distributions solving on the basis of percent match boxes
the current box specification are
is
((790.259765625, 891.955078125), (812.052734375, 916.861328125))
text1 i.e the prev text is the winner
collision happend with box:812.56640625 and text:distributions solving on the basis of percent match boxes
the current box specification are
directly
((808.939453125, 877.9453125), (892.998046875, 916.861328125))
text1 i.e the prev text is the winner
original
((765.353515625, 988.466796875), (844.7421875, 1028.939453125))
collision happend with box:988.466796875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((841.62890625, 983.796875), (903.89453125, 1016.486328125))
text1 i.e the prev text is the winner
collision happend with box:988.466796875 and text:original solving on the basis of percent match boxes
the current box specification are
making
((732.6640625, 1064.7421875), (812.052734375, 1103.658203125))
text1 i.e the prev text is the winner
collision happend with box:988.466796875 and text:original solving on the basis of percent match boxes
the current box specification are
a
((802.7128906250001, 1067.85546875), (822.94921875, 1089.6484375))
text1 i.e the prev text is the winner
collision happend with box:988.466796875 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((818.2792968749999, 1046.0625), (922.5742187500001, 1089.6484375))
text1 i.e the prev text is the winner
of
((779.36328125, 1167.48046875), (805.826171875, 1197.056640625))
collision happend with box:1167.48046875 and text:of solving on the basis of percent match boxes
the current box specification are
overfitting
((802.7128906250001, 1151.9140625), (910.12109375, 1195.5))
text2 i.e the incoming text is the winner
collision happend with box:1151.9140625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
FALSE
((961.490234375, 1145.6875), (1048.662109375, 1184.603515625))
text2 i.e the incoming text is the winner
collision happend with box:1145.6875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
risk
((738.890625, 1172.150390625), (782.4765625, 1204.83984375))
text1 i.e the prev text is the winner
collision happend with box:1145.6875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
details
((816.72265625, 1190.830078125), (883.658203125, 1223.51953125))
text2 i.e the incoming text is the winner
collision happend with box:1190.830078125 and text:details solving on the basis of percent match boxes
the current box specification are
the
((907.0078125, 1178.376953125), (947.4804687499999, 1211.06640625))
text1 i.e the prev text is the winner
collision happend with box:1190.830078125 and text:details solving on the basis of percent match boxes
the current box specification are
noise
((737.333984375, 1207.953125), (793.373046875, 1239.0859375))
text1 i.e the prev text is the winner
collision happend with box:1190.830078125 and text:details solving on the basis of percent match boxes
the current box specification are
or
((788.703125, 1204.83984375), (818.2792968749999, 1229.74609375))
text1 i.e the prev text is the winner
collision happend with box:1190.830078125 and text:details solving on the basis of percent match boxes
the current box specification are
unseen
((715.541015625, 1245.3125), (785.58984375, 1276.4453125))
text1 i.e the prev text is the winner
collision happend with box:1190.830078125 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((782.4765625, 1232.859375), (836.958984375, 1265.548828125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': False, '5': 'UNASSIGNED', '6': False, '7': False, '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '9', '10']
the assigned keys are ['1', '2', '3', '4', '6', '7', '8']
['1', '2', '3', '4', '6', '7', '8', '1', '2', '3', '4', '6', '7', '8']
printing the number dict y_coordinate
{'1': 621, '2': 561, '3': 627, '4': 728, '6': 927, '7': 994, '8': 1094}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': False, '5': 'UNASSIGNED', '6': False, '7': False, '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : K4M2DDt.jpg
OCR detection done with doctr
left top x of SN: 537.9999999999999
bottom right x of SN: 943.7812500000001
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6657.343749999999
first t/f detection
palle.
((5653.562500000001, 1851.40625), (6240.593749999999, 2104.28125))
Tue
((5527.125, 2321.03125), (5924.500000000001, 2555.84375))
Ahue
((5509.062499999999, 2899.03125), (5942.562499999999, 3115.78125))
FatRfhue
((5491.000000000001, 3431.875), (6358.000000000001, 3675.71875))
Thul
((5481.968749999999, 3874.40625), (5915.468749999999, 4091.15625))
falle
((5599.375000000001, 4479.5), (6050.937499999999, 4750.4375))
Tkue
((5572.281250000001, 5183.9375), (5969.656249999999, 5418.75))
Thul
((5454.874999999999, 5734.84375), (5987.71875, 6005.78125))
Falbe
((5481.968749999999, 6836.65625), (5897.406250000001, 7062.4375))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': 'NULL', '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1770, '2': 2330, '3': 2890, '4': 3468, '5': 3838, '6': 4407, '7': 5165, '8': 5743, '9': 6123, '10': 6890}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': 'NULL', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FikUEoA.jpg
OCR detection done with doctr
left top x of SN: 258.03125
bottom right x of SN: 663.8124999999999
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6702.5
first t/f detection
TRUE
((5599.375000000001, 1761.09375), (6168.343750000001, 1968.8125))
TRUE
((5653.562500000001, 2348.125), (6177.375, 2528.75))
FALSE
((5725.812499999999, 2971.28125), (6249.625000000001, 3188.03125))
TRUE
((5626.468750000001, 3504.125), (6132.218749999999, 3675.71875))
FALSE
((5689.6875, 3982.78125), (6168.343750000001, 4154.375))
TROE
((5707.750000000001, 4633.03125), (6177.375, 4813.65625))
TROE
((5698.718749999999, 5409.71875), (6258.65625, 5608.40625))
TROE
((5734.843750000001, 5879.34375), (6258.65625, 6050.9375))
FALSE
((5734.843750000001, 6430.25), (6285.75, 6647.0))
FALSE
((5725.812499999999, 7044.375), (6231.5625, 7252.09375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1752, '2': 2348, '3': 2953, '4': 3558, '5': 3955, '6': 4569, '7': 5382, '8': 5987, '9': 6394, '10': 7206}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A2sNCY3.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 862.5000000000001
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6476.718750000001
first t/f detection
T
((5274.250000000001, 2564.875), (5445.84375, 2718.40625))
F
((5364.5625, 3043.53125), (5536.156249999999, 3215.125))
T
((5328.437500000001, 3540.25), (5491.000000000001, 3702.8125))
F
((5337.46875, 3946.65625), (5481.968749999999, 4127.28125))
T
((5364.5625, 4605.9375), (5500.03125, 4732.375))
the
((5075.5625, 5238.125), (5292.312499999999, 5382.625))
collision happend with box:5238.125 and text:the solving on the basis of percent match boxes
the current box specification are
T
((5364.5625, 5274.25), (5545.187500000001, 5445.84375))
text2 i.e the incoming text is the winner
the
((5102.65625, 6177.375), (5319.406249999999, 6321.875))
collision happend with box:6177.375 and text:the solving on the basis of percent match boxes
the current box specification are
A
((5409.718750000001, 6204.46875), (5554.21875, 6385.09375))
text2 i.e the incoming text is the winner
A
((5400.687499999999, 6917.9375), (5554.21875, 7035.34375))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2528, '3': 3088, '4': 3657, '5': 4027, '6': 4587, '7': 5328, '8': 5897, '9': 6276, '10': 7017}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'NULL', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : n5LMW0T.jpg
OCR detection done with doctr
left top x of T/F: 5155.875
bottom right x of T/F: 6214.8125
left top x of SN: 836.0312499999999
bottom right x of SN: 1232.7812499999998
first t/f detection
TRUE
((5156.84375, 2104.28125), (5689.6875, 2312.0))
TRVE
((5147.8125, 2564.875), (5698.718749999999, 2781.625))
TRVE
((5183.9375, 3142.875), (5743.875, 3395.75))
A
((5256.1875, 3702.8125), (5391.65625, 3811.1875))
collision happend with box:3702.8125 and text:A solving on the basis of percent match boxes
the current box specification are
ERE
((5328.437500000001, 3630.5625), (5978.687500000001, 3847.3125))
text2 i.e the incoming text is the winner
FALSE
((5165.875, 4172.4375), (5761.937500000001, 4380.15625))
FALS
((5156.84375, 4624.0), (5662.59375, 4804.625))
FALSE
((5238.124999999999, 4958.15625), (5761.937500000001, 5165.875))
FALSE
((5382.625000000001, 3793.125), (6069.0, 4036.96875))
FALSE
((5256.1875, 5445.84375), (5770.96875, 5626.46875))
CAE
((5256.1875, 5870.3125), (5834.187499999999, 6069.0))
FALSE
((5265.218749999999, 6484.4375), (5861.281249999999, 6692.15625))
TRUE
((5238.124999999999, 6050.9375), (5870.312500000001, 6249.625))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2844, '3': 3179, '4': 3702, '5': 4208, '6': 4732, '7': 5084, '8': 5608, '9': 5960, '10': 6502}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : faXTONV.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1968.8125), (5978.687500000001, 2221.6875))
false
((5427.781249999999, 2564.875), (5906.4375, 2826.78125))
True
((5509.062499999999, 3079.65625), (6005.781250000001, 3305.4375))
fale
((5364.5625, 3648.625), (5779.999999999999, 3874.40625))
Txue
((5400.687499999999, 4253.71875), (5951.593750000001, 4452.40625))
Teue
((5355.531250000001, 4840.75), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6023.84375))
True
((5409.718750000001, 6240.59375), (5915.468749999999, 6502.5))
Teue
((5500.03125, 6800.53125), (5960.625, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3160, '4': 3738, '5': 4325, '6': 4913, '7': 5301, '8': 5897, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BUtmjUM.jpg
OCR detection done with doctr
left top x of SN: 159.986328125
bottom right x of SN: 378.630859375
left top x of T/F: 921.259765625
bottom right x of T/F: 1293.26953125
first t/f detection
handwriting
((809.380859375, 80.26171875), (929.7734375, 123.365234375))
Fake
((925.314453125, 460.76171875), (1004.0898437499999, 496.43359375))
collision happend with box:460.76171875 and text:Fake solving on the basis of percent match boxes
the current box specification are
Treuc
((911.9375, 545.482421875), (989.2265624999999, 584.126953125))
text2 i.e the incoming text is the winner
collision happend with box:545.482421875 and text:Treuc solving on the basis of percent match boxes
the current box specification are
True
((891.12890625, 639.12109375), (978.822265625, 683.7109375))
text2 i.e the incoming text is the winner
collision happend with box:639.12109375 and text:True solving on the basis of percent match boxes
the current box specification are
Tene
((882.2109374999999, 741.677734375), (959.5, 780.322265625))
text1 i.e the prev text is the winner
TAuue
((864.375, 820.453125), (941.6640625000001, 863.556640625))
collision happend with box:820.453125 and text:TAuue solving on the basis of percent match boxes
the current box specification are
True
((859.9160156249999, 906.66015625), (934.2324218750001, 942.33203125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:906.66015625 and text:True solving on the basis of percent match boxes
the current box specification are
Fabe
((849.51171875, 989.89453125), (925.314453125, 1025.56640625))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '5']
['1', '2', '3', '5', '1', '2', '3', '5']
printing the number dict y_coordinate
{'1': 289, '2': 387, '3': 456, '5': 653}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DiAuBgf.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6675.40625
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
first t/f detection
TRUE
((5436.812500000001, 1788.1875), (6078.031249999999, 2004.9375))
FALSE
((5518.093750000001, 2366.1875), (6186.406249999999, 2582.9375))
FALSE
((5500.03125, 2998.375), (6177.375, 3197.0625))
FALSE
((5491.000000000001, 3513.15625), (6204.46875, 3711.84375))
FALSE
((5572.281250000001, 3982.78125), (6231.5625, 4181.46875))
FALSE
((5518.093750000001, 4596.90625), (6186.406249999999, 4795.59375))
TRUE
((5518.093750000001, 5364.5625), (6114.156250000001, 5572.28125))
TRUE
((5518.093750000001, 5897.40625), (6132.218749999999, 6114.15625))
FALSE
((5563.249999999999, 6403.15625), (6204.46875, 6656.03125))
TRVE
((5518.093750000001, 7053.40625), (6177.375, 7261.125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2465, '3': 3061, '4': 3657, '5': 4046, '6': 4651, '7': 5445, '8': 6041, '9': 6448, '10': 7243}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UmqXxrS.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1181.703125
first t/f detection
fole
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
collision happend with box:402.724609375 and text:fole solving on the basis of percent match boxes
the current box specification are
Trosl
((835.2578125, 496.640625), (924.3984375, 544.39453125))
text2 i.e the incoming text is the winner
collision happend with box:496.640625 and text:Trosl solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text1 i.e the prev text is the winner
collision happend with box:496.640625 and text:Trosl solving on the basis of percent match boxes
the current box specification are
Frue
((914.84765625, 590.556640625), (988.0703125, 641.494140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:590.556640625 and text:Frue solving on the basis of percent match boxes
the current box specification are
Trud
((908.4804687499999, 681.2890625), (989.6621093749999, 738.59375))
text2 i.e the incoming text is the winner
collision happend with box:681.2890625 and text:Trud solving on the basis of percent match boxes
the current box specification are
falne
((817.748046875, 776.796875), (921.21484375, 842.060546875))
text2 i.e the incoming text is the winner
collision happend with box:776.796875 and text:falne solving on the basis of percent match boxes
the current box specification are
True
((824.115234375, 850.01953125), (922.8066406250001, 915.283203125))
text2 i.e the incoming text is the winner
collision happend with box:850.01953125 and text:True solving on the basis of percent match boxes
the current box specification are
Tue
((828.8906250000001, 935.9765625), (918.03125, 994.873046875))
text1 i.e the prev text is the winner
Falu
((836.849609375, 1029.892578125), (918.03125, 1079.23828125))
collision happend with box:1029.892578125 and text:Falu solving on the basis of percent match boxes
the current box specification are
Falue
((830.482421875, 1114.2578125), (925.9902343750001, 1173.154296875))
text2 i.e the incoming text is the winner
collision happend with box:1114.2578125 and text:Falue solving on the basis of percent match boxes
the current box specification are
Falx
((830.482421875, 1217.724609375), (933.94921875, 1281.396484375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 561, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GMgHHm1.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 510.9062499999999
bottom right x of SN: 925.71875
first t/f detection
Cug
((5834.187499999999, 1914.625), (6303.812500000001, 2131.375))
Falre
((5391.65625, 2591.96875), (5978.687500000001, 2844.84375))
false
((5617.437499999999, 3043.53125), (6177.375, 3314.46875))
quo
((5563.249999999999, 3757.0), (6014.8125, 4018.90625))
Toue
((5310.375, 4407.25), (5870.312500000001, 4624.0))
Falsa
((5328.437500000001, 4885.90625), (5861.281249999999, 5156.84375))
Tguue
((5328.437500000001, 5355.53125), (5915.468749999999, 5608.40625))
CuQ
((5355.531250000001, 5960.625), (5897.406250000001, 6186.40625))
false
((5427.781249999999, 6303.8125), (5987.71875, 6610.875))
False
((5454.874999999999, 6800.53125), (6069.0, 7116.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2727, '3': 3115, '4': 3702, '5': 4280, '6': 4858, '7': 5238, '8': 5825, '9': 6222, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HIZNGdx.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6711.531249999999
left top x of SN: 185.78124999999986
bottom right x of SN: 600.59375
first t/f detection
Tsue.
((5626.468750000001, 1851.40625), (6285.75, 2023.0))
Tsule
((5500.03125, 2492.625), (6141.250000000001, 2709.375))
Falg.
((5617.437499999999, 3070.625), (6267.687499999999, 3314.46875))
Tsue
((5635.5, 3621.53125), (6339.9375, 3820.21875))
Fele.
((5671.624999999999, 4100.1875), (6457.343749999999, 4380.15625))
Tsule,
((5608.40625, 4831.71875), (6321.874999999999, 5039.4375))
Tsue
((5671.624999999999, 5545.1875), (6258.65625, 5743.875))
Fellse
((5644.531249999999, 6032.875), (6204.46875, 6231.5625))
tsue.
((5653.562500000001, 6665.0625), (6348.968749999999, 6836.65625))
TsUe.
((5635.5, 7306.28125), (6348.968749999999, 7477.875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2564, '3': 3160, '4': 3766, '5': 4163, '6': 4768, '7': 5563, '8': 6168, '9': 6574, '10': 7405}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NDKzZ1k.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 772.1874999999999
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6946.34375
first t/f detection
TRUE
((5789.031250000001, 1977.84375), (6367.03125, 2230.71875))
TRVE
((5897.406250000001, 2790.65625), (6358.000000000001, 2971.28125))
FALSE
((5834.187499999999, 3179.0), (6511.531249999999, 3422.84375))
FALSE
((5897.406250000001, 3693.78125), (6556.6875, 3937.625))
FALSE
((5843.218750000001, 4199.53125), (6475.40625, 4443.375))
FALSE
((5825.15625, 4949.125), (6511.531249999999, 5211.03125))
TRUE
((5906.4375, 5680.65625), (6394.125, 5960.625))
TRUE
((5888.374999999999, 6204.46875), (6493.468750000001, 6466.375))
TRUE
((5915.468749999999, 6773.4375), (6502.5, 7035.34375))
TRVE
((5852.25, 7441.75), (6493.468750000001, 7694.625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['1', '2', '8']
the assigned keys are ['3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'3': 3206, '4': 3820, '5': 4262, '6': 4822, '7': 5653, '9': 6647, '10': 7432}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kaXEAip.jpg
OCR detection done with doctr
left top x of SN: 664.4375
bottom right x of SN: 1079.25
left top x of T/F: 5589.375000000001
bottom right x of T/F: 6801.843750000001
first t/f detection
TRUE
((5644.531249999999, 2302.96875), (6168.343750000001, 2474.5625))
FALSE
((5653.562500000001, 2899.03125), (6231.5625, 3106.75))
TRVE
((5518.093750000001, 3440.90625), (6023.843749999999, 3612.5))
TRUE
((5536.156249999999, 3901.5), (6023.843749999999, 4073.09375))
TRVE
((5518.093750000001, 4524.65625), (6023.843749999999, 4732.375))
TRUE
((5463.906250000001, 5147.8125), (5915.468749999999, 5328.4375))
FALSE
((5445.84375, 5698.71875), (6014.8125, 5906.4375))
FALSE
((5463.906250000001, 6267.6875), (6014.8125, 6475.40625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
the assigned keys are ['6']
printing the number dict y_coordinate
{'6': 4253}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : a72tRvR.jpg
OCR detection done with doctr
left top x of SN: 736.6875000000001
bottom right x of SN: 1151.5
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6783.78125
first t/f detection
TRUE
((5599.375000000001, 2248.78125), (6168.343750000001, 2447.46875))
TRUE
((5590.343749999999, 2772.59375), (6195.437500000001, 2971.28125))
TRUE
((5635.5, 3242.21875), (6231.5625, 3413.8125))
TRUE
((5572.281250000001, 3892.46875), (6159.312499999999, 4109.21875))
TRUE
((5581.3125, 4452.40625), (6087.062500000001, 4633.03125))
False
((5581.3125, 4958.15625), (6032.875000000001, 5138.78125))
Teese
((5662.59375, 5445.84375), (6123.1875, 5626.46875))
TRUE
((5608.40625, 5265.21875), (6240.593749999999, 5472.9375))
TRUE
((5491.000000000001, 5951.59375), (6096.09375, 6150.28125))
Talse
((5617.437499999999, 6484.4375), (6114.156250000001, 6665.0625))
TRUE
((5572.281250000001, 7098.5625), (6168.343750000001, 7315.3125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2664, '3': 3052, '4': 3639, '5': 4235, '6': 4840, '7': 5238, '8': 5843, '9': 6240, '10': 6845}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vblP2gM.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((913.64453125, 496.7578125), (946.8671875000001, 537.890625))
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 580.60546875), (951.61328125, 616.9921875))
text2 i.e the incoming text is the winner
collision happend with box:580.60546875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((915.2265624999999, 688.18359375), (943.703125, 718.2421875))
text2 i.e the incoming text is the winner
collision happend with box:688.18359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 791.015625), (940.5390625, 821.07421875))
text2 i.e the incoming text is the winner
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1224.4921875), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4', '7', '8']
the assigned keys are ['1', '2', '3', '5', '6', '9', '10']
['1', '2', '3', '5', '6', '9', '10', '1', '2', '3', '5', '6', '9', '10']
printing the number dict y_coordinate
{'2': 520, '3': 586, '1': 585, '5': 789, '6': 890, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MvHSRmI.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6711.531249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 745.0937499999999
first t/f detection
FALSE
((5635.5, 2004.9375), (6204.46875, 2131.375))
FALSE
((5635.5, 2573.90625), (6231.5625, 2772.59375))
TRUE
((5572.281250000001, 3215.125), (6069.0, 3377.6875))
TRUE
((5644.531249999999, 3775.0625), (6114.156250000001, 3982.78125))
TRUE
((5689.6875, 4253.71875), (6123.1875, 4425.3125))
TAVE
((5716.78125, 4931.0625), (6267.687499999999, 5129.75))
TRUE
((5653.562500000001, 5635.5), (6078.031249999999, 5816.125))
FALSE
((5599.375000000001, 6213.5), (6059.968750000001, 6348.96875))
FALSE
((5635.5, 6755.375), (6123.1875, 6936.0))
TRUE
((5671.624999999999, 7342.40625), (6132.218749999999, 7514.0))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2700, '3': 3287, '4': 3874, '5': 4262, '6': 4867, '7': 5671, '8': 6276, '9': 6674, '10': 7495}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v4aJrqY.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6648.3125
left top x of SN: 429.6249999999999
bottom right x of SN: 844.4375
first t/f detection
TRUE
((5509.062499999999, 1932.6875), (6195.437500000001, 2194.59375))
TRUE
((5590.343749999999, 2528.75), (6231.5625, 2781.625))
FALSE
((5554.21875, 3115.78125), (6267.687499999999, 3368.65625))
FALSE
((5554.21875, 3711.84375), (6240.593749999999, 3874.40625))
TRUE
((5536.156249999999, 4145.34375), (6159.312499999999, 4362.09375))
TRUE
((5545.187500000001, 4795.59375), (6240.593749999999, 5039.4375))
TRUE
((5545.187500000001, 5491.0), (6267.687499999999, 5707.75))
TRUE
((5572.281250000001, 6023.84375), (6195.437500000001, 6195.4375))
FALSE
((5554.21875, 6538.625), (6348.968749999999, 6782.46875))
TRUE
((5554.21875, 7143.71875), (6114.156250000001, 7351.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2682, '3': 3251, '4': 3829, '5': 4208, '6': 4786, '7': 5545, '8': 6123, '9': 6511, '10': 7288}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7T7pRQW.jpg
OCR detection done with doctr
left top x of T/F: 1127.935546875
bottom right x of T/F: 1600.654296875
left top x of SN: -25.65625000000003
bottom right x of SN: 215.33203125000006
first t/f detection
for
((1086.330078125, 548.89453125), (1137.935546875, 591.1171875))
collision happend with box:548.89453125 and text:for solving on the basis of percent match boxes
the current box specification are
folw
((1194.232421875, 532.474609375), (1349.048828125, 630.994140625))
text2 i.e the incoming text is the winner
collision happend with box:532.474609375 and text:folw solving on the basis of percent match boxes
the current box specification are
falke
((1208.306640625, 645.068359375), (1360.77734375, 741.2421875))
text2 i.e the incoming text is the winner
collision happend with box:645.068359375 and text:falke solving on the basis of percent match boxes
the current box specification are
Tror
((1229.41796875, 774.08203125), (1374.8515625, 886.67578125))
text2 i.e the incoming text is the winner
collision happend with box:774.08203125 and text:Tror solving on the basis of percent match boxes
the current box specification are
d-dimensional
((964.3535156249999, 792.84765625), (1173.12109375, 867.91015625))
text2 i.e the incoming text is the winner
collision happend with box:792.84765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((1037.0703125, 947.6640625), (1154.35546875, 1003.9609375))
text1 i.e the prev text is the winner
collision happend with box:792.84765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1147.318359375, 945.318359375), (1187.1953125, 987.541015625))
text1 i.e the prev text is the winner
collision happend with box:792.84765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Tiol
((1259.912109375, 921.861328125), (1395.962890625, 1022.7265625))
text1 i.e the prev text is the winner
Pre-
((1130.8984375, 1090.751953125), (1203.615234375, 1137.666015625))
collision happend with box:1090.751953125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
between
((1013.61328125, 1100.134765625), (1140.28125, 1156.431640625))
text2 i.e the incoming text is the winner
collision happend with box:1100.134765625 and text:between solving on the basis of percent match boxes
the current box specification are
Tul
((1276.33203125, 1067.294921875), (1414.7285156249998, 1172.8515625))
text2 i.e the incoming text is the winner
collision happend with box:1067.294921875 and text:Tul solving on the basis of percent match boxes
the current box specification are
frul
((1281.0234374999998, 1191.6171875), (1435.83984375, 1292.482421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1191.6171875 and text:frul solving on the basis of percent match boxes
the current box specification are
fsul
((1318.5546875, 1315.939453125), (1454.60546875, 1414.458984375))
text2 i.e the incoming text is the winner
collision happend with box:1315.939453125 and text:fsul solving on the basis of percent match boxes
the current box specification are
frue
((1320.900390625, 1435.5703125), (1463.98828125, 1531.744140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1435.5703125 and text:frue solving on the basis of percent match boxes
the current box specification are
Falye
((1346.703125, 1559.892578125), (1468.6796875, 1649.029296875))
text2 i.e the incoming text is the winner
distribution.
((1039.416015625, 1236.185546875), (1224.7265625, 1301.865234375))
collision happend with box:1236.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((1088.67578125, 1351.125), (1128.552734375, 1393.34765625))
text1 i.e the prev text is the winner
collision happend with box:1236.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1119.169921875, 1337.05078125), (1238.80078125, 1391.001953125))
text1 i.e the prev text is the winner
original
((1044.107421875, 1494.212890625), (1161.392578125, 1552.85546875))
collision happend with box:1494.212890625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((1159.046875, 1491.8671875), (1255.220703125, 1536.435546875))
text1 i.e the prev text is the winner
collision happend with box:1494.212890625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1119.169921875, 1585.6953125), (1271.640625, 1641.9921875))
text1 i.e the prev text is the winner
overfitting
((1083.984375, 1733.474609375), (1248.18359375, 1799.154296875))
collision happend with box:1733.474609375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Falre
((1349.048828125, 1698.2890625), (1501.51953125, 1810.8828125))
text2 i.e the incoming text is the winner
collision happend with box:1698.2890625 and text:Falre solving on the basis of percent match boxes
the current box specification are
details
((1105.095703125, 1792.1171875), (1205.9609375000002, 1839.03125))
text2 i.e the incoming text is the winner
collision happend with box:1792.1171875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1241.146484375, 1780.388671875), (1297.443359375, 1822.611328125))
text1 i.e the prev text is the winner
collision happend with box:1792.1171875 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((1051.14453125, 1848.4140625), (1130.8984375, 1897.673828125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': False, '7': 'NULL', '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 703, '2': 846, '3': 945, '4': 1093, '5': 1245, '6': 1386, '7': 1487, '8': 1632}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': False, '7': 'NULL', '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : leDjQxO.jpg
OCR detection done with doctr
left top x of SN: 610.25
bottom right x of SN: 1016.0312499999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
first t/f detection
Trie
((5274.250000000001, 1752.0625), (5789.031250000001, 1977.84375))
Tue
((5192.96875, 2284.90625), (5689.6875, 2537.78125))
Tyur
((5238.124999999999, 2718.40625), (5969.656249999999, 3016.4375))
False
((5355.531250000001, 3422.84375), (5969.656249999999, 3639.59375))
re
((5391.65625, 3991.8125), (5915.468749999999, 4217.59375))
Tue
((5463.906250000001, 4199.53125), (6041.90625, 4407.25))
Tyue
((5382.625000000001, 4524.65625), (5888.374999999999, 4741.40625))
False
((5283.28125, 4967.1875), (5779.999999999999, 5183.9375))
True
((5355.531250000001, 5400.6875), (5798.0625, 5581.3125))
False
((5292.312499999999, 5852.25), (5825.15625, 6059.96875))
False
((5400.687499999999, 6394.125), (5879.34375, 6574.75))
the
((4967.1875, 6601.84375), (5183.9375, 6737.3125))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6287
printing the number dict y_coordinate
{'1': 2176, '2': 2718, '3': 3088, '4': 3630, '5': 4172, '6': 4723, '7': 5075, '8': 5626, '9': 5987, '10': 6287}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : T04C5Cf.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6729.59375
left top x of SN: 610.25
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5707.750000000001, 1977.84375), (6177.375, 2149.4375))
TRUE
((5716.78125, 2510.6875), (6150.28125, 2673.25))
PALSE
((5698.718749999999, 3043.53125), (6195.437500000001, 3224.15625))
FALSE
((5689.6875, 3621.53125), (6240.593749999999, 3784.09375))
FALSE
((5671.624999999999, 4217.59375), (6204.46875, 4380.15625))
FALSE
((5698.718749999999, 4741.40625), (6186.406249999999, 4903.96875))
TRUE
((5626.468750000001, 5192.96875), (6069.0, 5355.53125))
TRUE
((5626.468750000001, 5761.9375), (6023.843749999999, 5924.5))
TRUE
((5608.40625, 6258.65625), (6050.937499999999, 6430.25))
TRUE
((5644.531249999999, 6981.15625), (6096.09375, 7152.75))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 2998, '4': 3603, '5': 4190, '6': 4795, '7': 5202, '8': 5807, '9': 6213, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Kx9Dpvo.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1235.4609375
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (951.61328125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((899.40625, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (934.2109374999999, 1257.71484375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CrwqCnM.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6350.28125
left top x of SN: 294.1562499999999
bottom right x of SN: 699.9375000000001
first t/f detection
TRVE
((5202.0, 1815.28125), (5825.15625, 2068.15625))
TRUE
((5202.0, 2384.25), (5906.4375, 2646.15625))
TRVE
((5229.09375, 2962.25), (5933.53125, 3251.25))
TRUE
((5310.375, 3522.1875), (5897.406250000001, 3729.90625))
TRUE
((5283.28125, 4009.875), (5942.562499999999, 4253.71875))
then
((4858.8125, 4506.59375), (5147.8125, 4651.09375))
or
((4994.28125, 4723.34375), (5147.8125, 4840.75))
collision happend with box:4723.34375 and text:or solving on the basis of percent match boxes
the current box specification are
TRUR
((5337.46875, 4651.09375), (5951.593750000001, 4858.8125))
text2 i.e the incoming text is the winner
the
((4949.125, 5265.21875), (5174.90625, 5418.75))
collision happend with box:5265.21875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5292.312499999999, 5337.46875), (5843.218750000001, 5554.21875))
text2 i.e the incoming text is the winner
FALSE
((5337.46875, 5807.09375), (6023.843749999999, 6005.78125))
TRUE
((5400.687499999999, 6321.875), (6123.1875, 6574.75))
collision happend with box:6321.875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
the
((4994.28125, 6249.625), (5211.031249999999, 6394.125))
text1 i.e the prev text is the winner
FALSE
((5373.593749999999, 6990.1875), (6041.90625, 7206.9375))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2546, '3': 3088, '4': 3648, '5': 4027, '6': 4587, '7': 5346, '8': 5933, '9': 6312, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZU7kvGx.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 672.8437500000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6874.093749999999
first t/f detection
tRuE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
Tvue
((5779.999999999999, 2438.4375), (6231.5625, 2619.0625))
CAIse
((5707.750000000001, 3142.875), (6231.5625, 3314.46875))
+pue
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5779.999999999999, 4172.4375), (6376.062499999999, 4389.1875))
TYUE
((5608.40625, 4849.78125), (6078.031249999999, 4985.25))
TRUE
((5590.343749999999, 5563.25), (6114.156250000001, 5698.71875))
Rue
((5852.25, 6114.15625), (6466.375000000001, 6276.71875))
Palte
((5734.843750000001, 6647.0), (6231.5625, 6854.71875))
falst
((5779.999999999999, 7161.78125), (6394.125, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2402, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6123, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jqj9QLY.jpg
OCR detection done with doctr
left top x of T/F: 5155.875
bottom right x of T/F: 6259.968750000001
left top x of SN: 736.6875000000001
bottom right x of SN: 1133.4375
first t/f detection
TRUE
((5192.96875, 2086.21875), (5653.562500000001, 2302.96875))
TRUE
((5192.96875, 2582.9375), (5689.6875, 2808.71875))
TRUE
((5220.062500000001, 3016.4375), (5662.59375, 3242.21875))
FALSE
((5192.96875, 3585.40625), (5734.843750000001, 3811.1875))
FALSE
((5265.218749999999, 4172.4375), (5789.031250000001, 4389.1875))
FALSE
((5256.1875, 4651.09375), (5789.031250000001, 4858.8125))
GALSE
((5247.156250000001, 5048.46875), (5761.937500000001, 5274.25))
TRUE
((5265.218749999999, 5608.40625), (5680.656250000001, 5780.0))
TRUE
((5247.156250000001, 6005.78125), (5671.624999999999, 6186.40625))
TRUE
((5292.312499999999, 6556.6875), (5734.843750000001, 6737.3125))
the
((4958.15625, 6746.34375), (5174.90625, 6890.84375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2366, '2': 2899, '3': 3251, '4': 3784, '5': 4316, '6': 4858, '7': 5220, '8': 5761, '9': 6132, '10': 6683}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ef8ACCI.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6585.093750000001
first t/f detection
TRUE
((5391.65625, 2104.28125), (5852.25, 2284.90625))
TRUE
((5373.593749999999, 2628.09375), (5852.25, 2808.71875))
TRYE
((5346.499999999999, 3124.8125), (5816.125000000001, 3332.53125))
FALSE
((5382.625000000001, 3766.03125), (5915.468749999999, 3928.59375))
FALSE
((5355.531250000001, 4371.125), (5870.312500000001, 4533.6875))
FALSE
((5382.625000000001, 4903.96875), (5897.406250000001, 5066.53125))
TRUE
((5337.46875, 5364.5625), (5798.0625, 5572.28125))
FALSE
((5355.531250000001, 5906.4375), (5906.4375, 6069.0))
TRUE
((5346.499999999999, 6358.0), (5816.125000000001, 6565.71875))
TRUE
((5391.65625, 7017.28125), (5861.281249999999, 7188.875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2718, '3': 3115, '4': 3720, '5': 4325, '6': 4931, '7': 5328, '8': 5933, '9': 6330, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : w1cmMVA.jpg
OCR detection done with doctr
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6828.937500000001
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
FALSE
((5617.437499999999, 1941.71875), (6213.499999999999, 2158.46875))
CAISE
((5707.750000000001, 2528.75), (6348.968749999999, 2790.65625))
TRUG
((5734.843750000001, 2763.5625), (6285.75, 2980.3125))
FALSE
((5653.562500000001, 3133.84375), (6330.906250000001, 3377.6875))
TVUE
((5536.156249999999, 3666.6875), (6177.375, 3874.40625))
FALSE
((5563.249999999999, 4127.28125), (6195.437500000001, 4344.03125))
FALSE
((5590.343749999999, 4831.71875), (6231.5625, 5084.59375))
TRUE
((5527.125, 5536.15625), (6123.1875, 5743.875))
FALSE
((5581.3125, 6014.8125), (6240.593749999999, 6258.65625))
FOLSE
((5545.187500000001, 6547.65625), (6159.312499999999, 6791.5))
TROE
((5608.40625, 7152.75), (6240.593749999999, 7369.5))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '10']
the assigned keys are ['1', '2', '3', '6', '7', '8', '9']
['1', '2', '3', '6', '7', '8', '9', '1', '2', '3', '6', '7', '8', '9']
printing the number dict y_coordinate
{'1': 2050, '2': 2619, '3': 3242, '6': 4777, '7': 5563, '8': 6123, '9': 6511}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAy4x2y.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6801.843750000001
left top x of SN: 276.0937500000001
bottom right x of SN: 681.875
first t/f detection
True
((5617.437499999999, 1715.9375), (6168.343750000001, 1977.84375))
Fals
((5635.5, 2348.125), (6177.375, 2610.03125))
False
((5536.156249999999, 2953.21875), (6096.09375, 3215.125))
Falv
((5554.21875, 3558.3125), (6032.875000000001, 3738.9375))
collision happend with box:3558.3125 and text:Falv solving on the basis of percent match boxes
the current box specification are
varianceluon
((4425.3125, 3495.09375), (5500.03125, 3820.21875))
text2 i.e the incoming text is the winner
Falye
((5626.468750000001, 4696.25), (6141.250000000001, 4913.0))
Tru
((5581.3125, 5436.8125), (6059.968750000001, 5599.375))
Fals
((6041.90625, 5933.53125), (6484.437499999999, 6141.25))
collision happend with box:5933.53125 and text:Fals solving on the basis of percent match boxes
the current box specification are
Tae
((5500.03125, 5933.53125), (5978.687500000001, 6159.3125))
text1 i.e the prev text is the winner
True
((5509.062499999999, 6529.59375), (6023.843749999999, 6782.46875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2492, '3': 3088, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6059, '9': 6457, '10': 7234}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Nqj6Ukg.jpg
OCR detection done with doctr
left top x of T/F: 1293.78125
bottom right x of T/F: 1794.6874999999998
left top x of SN: -2.664062499999986
bottom right x of SN: 242.5390625
first t/f detection
Krw
((1348.9218749999998, 584.3203125), (1501.8984375, 689.6484375))
collision happend with box:584.3203125 and text:Krw solving on the basis of percent match boxes
the current box specification are
Gole
((1361.4609375, 702.1875), (1521.9609375, 820.0546875))
text2 i.e the incoming text is the winner
collision happend with box:702.1875 and text:Gole solving on the basis of percent match boxes
the current box specification are
Krov
((1384.03125, 845.1328125), (1524.46875, 952.96875))
text2 i.e the incoming text is the winner
collision happend with box:845.1328125 and text:Krov solving on the basis of percent match boxes
the current box specification are
Trur
((1406.6015625, 975.5390625), (1544.5312499999998, 1088.390625))
text2 i.e the incoming text is the winner
collision happend with box:975.5390625 and text:Trur solving on the basis of percent match boxes
the current box specification are
d-dimensional
((1095.6328125, 857.671875), (1323.84375, 927.890625))
true and false collision so given priority to text2 which is the incoming text
descent
((1175.8828125, 1023.1875), (1301.2734374999998, 1073.34375))
collision happend with box:1023.1875 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((1296.2578125, 1018.171875), (1338.890625, 1063.3125))
text1 i.e the prev text is the winner
collision happend with box:1023.1875 and text:descent solving on the basis of percent match boxes
the current box specification are
Pre-
((1276.1953125, 1178.671875), (1348.9218749999998, 1221.3046875))
text1 i.e the prev text is the winner
collision happend with box:1023.1875 and text:descent solving on the basis of percent match boxes
the current box specification are
Trw
((1411.6171875, 1163.625), (1564.59375, 1273.96875))
text2 i.e the incoming text is the winner
distribution.
((1163.34375, 1331.6484375), (1371.4921875, 1399.359375))
collision happend with box:1331.6484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
True
((1429.171875, 1278.984375), (1579.640625, 1384.3125))
text1 i.e the prev text is the winner
collision happend with box:1331.6484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1248.609375, 1439.484375), (1379.015625, 1497.1640625))
text1 i.e the prev text is the winner
collision happend with box:1331.6484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Kir
((1439.2031250000002, 1431.9609375), (1607.2265625, 1547.3203125))
text1 i.e the prev text is the winner
Falye
((1474.3125, 1552.3359375), (1609.7343750000002, 1645.125))
collision happend with box:1552.3359375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falye
((1476.8203125, 1680.234375), (1637.3203125, 1798.1015625))
text2 i.e the incoming text is the winner
collision happend with box:1680.234375 and text:Falye solving on the basis of percent match boxes
the current box specification are
space.
((1286.2265625, 1605.0), (1391.5546875, 1652.6484375))
text1 i.e the prev text is the winner
collision happend with box:1680.234375 and text:Falye solving on the basis of percent match boxes
the current box specification are
prediction
((1241.0859375, 1707.8203125), (1409.109375, 1765.5))
text1 i.e the prev text is the winner
overfitting
((1203.4687499999998, 1868.3203125), (1371.4921875, 1928.5078125))
collision happend with box:1868.3203125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((1216.0078125, 1928.5078125), (1328.859375, 1978.6640625))
text2 i.e the incoming text is the winner
collision happend with box:1928.5078125 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1371.4921875, 1915.96875), (1431.6796875, 1961.109375))
text1 i.e the prev text is the winner
collision happend with box:1928.5078125 and text:details solving on the basis of percent match boxes
the current box specification are
Faue
((1484.34375, 1840.734375), (1679.953125, 1986.1875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 973, '2': 872, '3': 978, '4': 1138, '5': 1299, '6': 1457, '7': 1564, '8': 1722, '9': 1833, '10': 1991}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jLVlBi4.jpg
OCR detection done with doctr
left top x of SN: 845.0625000000001
bottom right x of SN: 1259.8749999999998
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6756.6875
first t/f detection
TRME
((5500.03125, 2429.40625), (6059.968750000001, 2628.09375))
TRUE
((5382.625000000001, 2908.0625), (6069.0, 3169.96875))
FALSE
((5391.65625, 3386.71875), (5996.749999999999, 3630.5625))
FALSE
((5301.343750000001, 3973.75), (5933.53125, 4190.5))
FALSE
((5238.124999999999, 4569.8125), (5779.999999999999, 4795.59375))
FALSE
((5211.031249999999, 5012.34375), (5789.031250000001, 5274.25))
FALSE
((5084.59375, 5491.0), (5698.718749999999, 5734.84375))
TRHETRUE
((5057.5, 6014.8125), (6059.968750000001, 6303.8125))
FALSE
((4994.28125, 6448.3125), (5590.343749999999, 6701.1875))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2935, '2': 2528, '3': 2908}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tpPFzmO.jpg
OCR detection done with doctr
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6810.875
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5725.812499999999, 1688.84375), (6348.968749999999, 1896.5625))
FALSE
((5752.906249999999, 2248.78125), (6358.000000000001, 2447.46875))
FALSE
((5816.125000000001, 2853.875), (6430.249999999999, 3070.625))
TRUE
((5671.624999999999, 3449.9375), (6195.437500000001, 3657.65625))
TRVE
((5680.656250000001, 3883.4375), (6231.5625, 4100.1875))
F
((5743.875, 4587.875), (5906.4375, 4786.5625))
collision happend with box:4587.875 and text:F solving on the basis of percent match boxes
the current box specification are
ALS
((5897.406250000001, 4596.90625), (6231.5625, 4768.5))
text2 i.e the incoming text is the winner
T
((5698.718749999999, 5229.09375), (5960.625, 5409.71875))
collision happend with box:5229.09375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5933.53125, 5220.0625), (6294.781249999999, 5400.6875))
text2 i.e the incoming text is the winner
TRVE
((5779.999999999999, 5743.875), (6276.718750000001, 5951.59375))
FALSE
((5834.187499999999, 6330.90625), (6448.3125, 6529.59375))
TRUE
((5861.281249999999, 6872.78125), (6385.093750000001, 7053.40625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2411, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5915, '9': 6312, '10': 7116}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gjQ3l7z.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6756.6875
left top x of SN: 212.87499999999986
bottom right x of SN: 627.6875
first t/f detection
TRUE
((5518.093750000001, 1679.8125), (6069.0, 1878.5))
TRUE
((5391.65625, 2330.0625), (5933.53125, 2555.84375))
FALSE
((5509.062499999999, 2962.25), (6087.062500000001, 3124.8125))
TRUE
((5500.03125, 3531.21875), (6096.09375, 3729.90625))
FALSE
((5572.281250000001, 4046.0), (6141.250000000001, 4217.59375))
TRUC
((5608.40625, 4849.78125), (6087.062500000001, 5021.375))
TRUE
((5653.562500000001, 5436.8125), (6087.062500000001, 5599.375))
TALSE
((5662.59375, 5951.59375), (6240.593749999999, 6159.3125))
the
((5247.156250000001, 6412.1875), (5472.9375, 6565.71875))
collision happend with box:6412.1875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5698.718749999999, 6547.65625), (6213.499999999999, 6755.375))
text2 i.e the incoming text is the winner
TRUE
((5734.843750000001, 7170.8125), (6141.250000000001, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1950, '2': 2555, '3': 3142, '4': 3738, '5': 4127, '6': 4732, '7': 5518, '8': 6123, '9': 6529, '10': 7315}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bd3p317.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6747.656250000001
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
first t/f detection
FALSE
((5608.40625, 1896.5625), (6168.343750000001, 2095.25))
FALSE
((5617.437499999999, 2456.5), (6258.65625, 2664.21875))
TTRUE
((5662.59375, 3007.40625), (6276.718750000001, 3206.09375))
TRUE
((5689.6875, 3522.1875), (6285.75, 3720.875))
TRUE
((5698.718749999999, 4009.875), (6276.718750000001, 4181.46875))
FALSE
((5671.624999999999, 4624.0), (6303.812500000001, 4831.71875))
TRUE
((5680.656250000001, 5346.5), (6249.625000000001, 5545.1875))
TRUE
((5779.999999999999, 5834.1875), (6321.874999999999, 6005.78125))
TRUE
((5644.531249999999, 6394.125), (6276.718750000001, 6592.8125))
TRUE
((5662.59375, 6990.1875), (6267.687499999999, 7206.9375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2519, '3': 3079, '4': 3657, '5': 4027, '6': 4614, '7': 5382, '8': 5969, '9': 6367, '10': 7152}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BJMdF88.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6738.624999999999
left top x of SN: 285.125
bottom right x of SN: 699.9375000000001
first t/f detection
TRUE
((5545.187500000001, 1625.625), (6186.406249999999, 1878.5))
TRUE
((5554.21875, 2194.59375), (6195.437500000001, 2483.59375))
FALCE
((5572.281250000001, 2844.84375), (6285.75, 3097.71875))
TRUE
((5590.343749999999, 3422.84375), (6204.46875, 3666.6875))
TRUE
((5563.249999999999, 3901.5), (6168.343750000001, 4172.4375))
FALSE
((5599.375000000001, 4569.8125), (6267.687499999999, 4831.71875))
TRUE
((5536.156249999999, 5256.1875), (6204.46875, 5509.0625))
TRUE
((5590.343749999999, 5879.34375), (6204.46875, 6087.0625))
FALSE
((5653.562500000001, 6339.9375), (6267.687499999999, 6601.84375))
TRUE
((5599.375000000001, 7026.3125), (6240.593749999999, 7279.1875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2393, '3': 2980, '4': 3576, '5': 3973, '6': 4560, '7': 5346, '8': 5933, '9': 6321, '10': 7098}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dDKJWPG.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6485.75
left top x of SN: 718.625
bottom right x of SN: 1115.375
first t/f detection
Toe
((5572.281250000001, 2312.0), (6087.062500000001, 2483.59375))
false
((5509.062499999999, 2727.4375), (5888.374999999999, 2908.0625))
Troue
((5599.375000000001, 3242.21875), (6141.250000000001, 3468.0))
false
((5463.906250000001, 3811.1875), (5897.406250000001, 4036.96875))
Tnve
((5481.968749999999, 4452.40625), (5951.593750000001, 4614.96875))
Fabe
((5454.874999999999, 4903.96875), (5843.218750000001, 5093.625))
False
((5427.781249999999, 5319.40625), (5870.312500000001, 5545.1875))
Fale
((5500.03125, 5780.0), (5960.625, 5987.71875))
Tave
((5454.874999999999, 6240.59375), (5879.34375, 6457.34375))
True
((5400.687499999999, 6863.75), (5852.25, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2871, '3': 3242, '4': 3784, '5': 4335, '6': 4885, '7': 5247, '8': 5807, '9': 6177, '10': 6755}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZiJMj3P.jpg
OCR detection done with doctr
left top x of SN: 112.49023437500003
bottom right x of SN: 332.7734375
left top x of T/F: 967.4902343749999
bottom right x of T/F: 1348.291015625
first t/f detection
True
((980.712890625, 436.669921875), (1064.501953125, 478.564453125))
collision happend with box:436.669921875 and text:True solving on the basis of percent match boxes
the current box specification are
False
((982.3242187500001, 515.625), (1077.392578125, 555.908203125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:515.625 and text:False solving on the basis of percent match boxes
the current box specification are
false
((975.87890625, 594.580078125), (1080.615234375, 639.697265625))
text2 i.e the incoming text is the winner
collision happend with box:594.580078125 and text:false solving on the basis of percent match boxes
the current box specification are
True
((966.2109375, 696.09375), (1058.056640625, 736.376953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:696.09375 and text:True solving on the basis of percent match boxes
the current box specification are
fa
((954.9316406250001, 794.384765625), (1008.10546875, 842.724609375))
text1 i.e the prev text is the winner
collision happend with box:696.09375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1014.5507812499999, 800.830078125), (1095.1171875, 842.724609375))
text1 i.e the prev text is the winner
False
((972.6562500000001, 881.396484375), (1069.3359375, 920.068359375))
collision happend with box:881.396484375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((969.4335937499999, 971.630859375), (1053.22265625, 1011.9140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:971.630859375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((966.2109375, 1058.642578125), (1058.056640625, 1095.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1058.642578125 and text:False solving on the basis of percent match boxes
the current box specification are
False
((966.2109375, 1144.04296875), (1048.388671875, 1184.326171875))
text2 i.e the incoming text is the winner
collision happend with box:1144.04296875 and text:False solving on the basis of percent match boxes
the current box specification are
False.
((979.1015625, 1247.16796875), (1090.283203125, 1292.28515625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 396, '2': 499, '3': 568, '4': 671, '5': 775, '6': 876, '7': 945, '8': 1050, '9': 1119, '10': 1222}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JyjneLe.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6521.874999999999
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5463.906250000001, 2023.0), (5996.749999999999, 2239.75))
TRUE
((5427.781249999999, 2610.03125), (6041.90625, 2826.78125))
TRUE
((5328.437500000001, 3115.78125), (6050.937499999999, 3458.96875))
FALSE
((5373.593749999999, 3820.21875), (6050.937499999999, 4036.96875))
TRUE
((5319.406249999999, 4416.28125), (6050.937499999999, 4660.125))
FALSE
((5283.28125, 4958.15625), (5942.562499999999, 5165.875))
FALSE
((5283.28125, 5409.71875), (6069.0, 5644.53125))
TRUE
((5337.46875, 5924.5), (5987.71875, 6123.1875))
TRUE
((5310.375, 6367.03125), (5897.406250000001, 6574.75))
TRUE
((5310.375, 7062.4375), (5888.374999999999, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2853, '3': 3251, '4': 3838, '5': 4416, '6': 5003, '7': 5391, '8': 5978, '9': 6376, '10': 6963}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gPUwdE9.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1330.56640625
first t/f detection
Falle
((990.3808593750001, 431.8359375), (1079.00390625, 481.787109375))
collision happend with box:431.8359375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Filfe
((991.9921875, 509.1796875), (1083.837890625, 559.130859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Tauus
((1027.44140625, 589.74609375), (1128.955078125, 644.53125))
text2 i.e the incoming text is the winner
collision happend with box:589.74609375 and text:Tauus solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 699.31640625), (1069.3359375, 754.1015625))
text1 i.e the prev text is the winner
Touue
((953.3203125, 794.384765625), (1070.947265625, 847.55859375))
collision happend with box:794.384765625 and text:Touue solving on the basis of percent match boxes
the current box specification are
yull
((961.376953125, 878.173828125), (1080.615234375, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:878.173828125 and text:yull solving on the basis of percent match boxes
the current box specification are
Tyue
((1011.328125, 963.57421875), (1125.732421875, 1015.13671875))
text1 i.e the prev text is the winner
bue
((966.2109375, 1055.419921875), (1058.056640625, 1105.37109375))
collision happend with box:1055.419921875 and text:bue solving on the basis of percent match boxes
the current box specification are
fre
((971.044921875, 1152.099609375), (1053.22265625, 1193.994140625))
text2 i.e the incoming text is the winner
collision happend with box:1152.099609375 and text:fre solving on the basis of percent match boxes
the current box specification are
sue
((969.4335937499999, 1274.560546875), (1051.611328125, 1326.123046875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 512, '3': 580, '4': 683, '5': 784, '6': 886, '7': 953, '8': 1057, '9': 1126, '10': 1229}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sOHz97N.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6521.874999999999
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
TRUE
((5454.874999999999, 1770.125), (5843.218750000001, 1959.78125))
FALSE
((5445.84375, 2330.0625), (5924.500000000001, 2510.6875))
TRUE
((5382.625000000001, 2880.96875), (5870.312500000001, 3097.71875))
TRUE
((5427.781249999999, 4515.625), (5834.187499999999, 4696.25))
PALSE
((5491.000000000001, 3431.875), (5969.656249999999, 3648.625))
TRUE
((5518.093750000001, 3883.4375), (5897.406250000001, 4118.25))
TRUE
((5463.906250000001, 5174.90625), (5879.34375, 5346.5))
FALSE
((5545.187500000001, 5671.625), (5960.625, 5852.25))
TRUE
((5481.968749999999, 6123.1875), (5915.468749999999, 6330.90625))
TRVE
((5527.125, 6782.46875), (5897.406250000001, 6963.09375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2393, '3': 2944, '4': 3513, '5': 3883, '6': 4452, '7': 5211, '8': 5789, '9': 6168, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RFcUFz0.jpg
OCR detection done with doctr
left top x of SN: 77.23632812500001
bottom right x of SN: 293.658203125
left top x of T/F: 788.62890625
bottom right x of T/F: 1142.798828125
first t/f detection
Tyue
((803.181640625, 324.76171875), (882.095703125, 355.11328125))
collision happend with box:324.76171875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tyuc
((806.216796875, 402.158203125), (880.5781250000001, 440.09765625))
text2 i.e the incoming text is the winner
collision happend with box:402.158203125 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
Pale
((813.8046875, 481.072265625), (880.5781250000001, 511.423828125))
text2 i.e the incoming text is the winner
collision happend with box:481.072265625 and text:Pale solving on the basis of percent match boxes
the current box specification are
Faue
((803.181640625, 561.50390625), (877.54296875, 597.92578125))
text2 i.e the incoming text is the winner
collision happend with box:561.50390625 and text:Faue solving on the basis of percent match boxes
the current box specification are
Fale
((804.69921875, 655.59375), (882.095703125, 685.9453125))
text2 i.e the incoming text is the winner
collision happend with box:655.59375 and text:Fale solving on the basis of percent match boxes
the current box specification are
FaMe
((804.69921875, 737.54296875), (880.5781250000001, 767.89453125))
text1 i.e the prev text is the winner
collision happend with box:655.59375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Fabe
((803.181640625, 808.869140625), (876.025390625, 843.7734375))
text1 i.e the prev text is the winner
True
((798.62890625, 892.3359375), (871.47265625, 928.7578125))
Tue
((795.5937499999999, 1068.375), (872.990234375, 1103.279296875))
collision happend with box:1068.375 and text:Tue solving on the basis of percent match boxes
the current box specification are
True
((795.5937499999999, 968.21484375), (868.4375, 1003.119140625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 403, '3': 464, '4': 556, '5': 648, '6': 740, '7': 802, '8': 893, '9': 956, '10': 1050}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IbBere6.jpg
OCR detection done with doctr
left top x of T/F: 4758.5
bottom right x of T/F: 6115.468749999999
left top x of SN: -30.968750000000128
bottom right x of SN: 419.9687499999999
first t/f detection
TRVE
((4985.25, 1399.84375), (5653.562500000001, 1743.03125))
TRUE
((5030.40625, 1950.75), (5671.624999999999, 2302.96875))
for
((4542.71875, 1571.4375), (4786.5625, 1770.125))
Adimemdoal
((4036.96875, 2582.9375), (5039.4375, 3007.40625))
FALSE
((5418.75, 3016.4375), (6087.062500000001, 3368.65625))
descent
((4434.34375, 3278.34375), (4967.1875, 3549.28125))
collision happend with box:3278.34375 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((4958.15625, 3260.28125), (5120.71875, 3431.875))
text1 i.e the prev text is the winner
Pre
((4913.0, 3892.46875), (5247.156250000001, 4091.15625))
collision happend with box:3892.46875 and text:Pre solving on the basis of percent match boxes
the current box specification are
between
((4353.0625, 3946.65625), (4940.09375, 4199.53125))
text2 i.e the incoming text is the winner
distribution.
((4506.59375, 4506.59375), (5391.65625, 4831.71875))
Tree
((4452.40625, 5048.46875), (4786.5625, 5247.15625))
collision happend with box:5048.46875 and text:Tree solving on the basis of percent match boxes
the current box specification are
is
((4759.46875, 5030.40625), (4922.03125, 5202.0))
text1 i.e the prev text is the winner
collision happend with box:5048.46875 and text:Tree solving on the basis of percent match boxes
the current box specification are
directly
((4913.0, 4940.09375), (5472.9375, 5202.0))
text2 i.e the incoming text is the winner
original
((4605.9375, 5662.59375), (5129.75, 5888.375))
collision happend with box:5662.59375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((5129.75, 5617.4375), (5572.281250000001, 5834.1875))
text1 i.e the prev text is the winner
making
((4362.09375, 6123.1875), (4903.96875, 6339.9375))
collision happend with box:6123.1875 and text:making solving on the basis of percent match boxes
the current box specification are
a
((4867.84375, 6141.25), (4985.25, 6276.71875))
text2 i.e the incoming text is the winner
collision happend with box:6141.25 and text:a solving on the basis of percent match boxes
the current box specification are
predietion
((4967.1875, 6032.875), (5689.6875, 6285.75))
text2 i.e the incoming text is the winner
of
((4696.25, 6782.46875), (4885.90625, 6936.0))
collision happend with box:6782.46875 and text:of solving on the basis of percent match boxes
the current box specification are
foverfitting
((4804.625, 6701.1875), (5581.3125, 6945.03125))
text2 i.e the incoming text is the winner
noise
((4398.21875, 7008.25), (4759.46875, 7188.875))
collision happend with box:7008.25 and text:noise solving on the basis of percent match boxes
the current box specification are
or
((4750.4375, 7008.25), (4940.09375, 7152.75))
text2 i.e the incoming text is the winner
collision happend with box:7008.25 and text:or solving on the basis of percent match boxes
the current box specification are
details
((4931.0625, 6917.9375), (5409.718750000001, 7134.6875))
text2 i.e the incoming text is the winner
collision happend with box:6917.9375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5590.343749999999, 6890.84375), (5852.25, 7071.46875))
text1 i.e the prev text is the winner
data.
((4714.3125, 7188.875), (5075.5625, 7369.5))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['2']
['2', '2']
printing the number dict y_coordinate
{'2': 3115, '1': 2815}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JknFlEx.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1183.294921875
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
TTOL
((836.849609375, 499.82421875), (919.6230468750001, 545.986328125))
text2 i.e the incoming text is the winner
collision happend with box:499.82421875 and text:TTOL solving on the basis of percent match boxes
the current box specification are
Fake
((932.3574218750001, 491.865234375), (991.25390625, 539.619140625))
text1 i.e the prev text is the winner
collision happend with box:499.82421875 and text:TTOL solving on the basis of percent match boxes
the current box specification are
True
((913.2558593750001, 590.556640625), (989.6621093749999, 641.494140625))
text2 i.e the incoming text is the winner
collision happend with box:590.556640625 and text:True solving on the basis of percent match boxes
the current box specification are
Trud
((908.4804687499999, 679.697265625), (989.6621093749999, 740.185546875))
text2 i.e the incoming text is the winner
collision happend with box:679.697265625 and text:Trud solving on the basis of percent match boxes
the current box specification are
folne
((816.1562500000001, 776.796875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
True
((822.5234375000001, 851.611328125), (921.21484375, 915.283203125))
collision happend with box:851.611328125 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((828.8906250000001, 935.9765625), (918.03125, 994.873046875))
text2 i.e the incoming text is the winner
collision happend with box:935.9765625 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falw
((835.2578125, 1029.892578125), (919.6230468750001, 1077.646484375))
text2 i.e the incoming text is the winner
collision happend with box:1029.892578125 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falie
((828.8906250000001, 1111.07421875), (927.58203125, 1174.74609375))
text2 i.e the incoming text is the winner
collision happend with box:1111.07421875 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falre
((830.482421875, 1216.1328125), (930.765625, 1281.396484375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 563, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VxY3oie.jpg
OCR detection done with doctr
left top x of SN: 112.65332031250003
bottom right x of SN: 357.7294921875
left top x of T/F: 1394.1181640625
bottom right x of T/F: 1871.931640625
first t/f detection
Tue
((1454.1767578125, 680.796875), (1556.796875, 740.8671875))
collision happend with box:680.796875 and text:Tue solving on the basis of percent match boxes
the current box specification are
True
((1446.6679687500002, 820.9609375), (1554.2939453125, 873.5224609375))
text2 i.e the incoming text is the winner
collision happend with box:820.9609375 and text:True solving on the basis of percent match boxes
the current box specification are
fosa
((1411.626953125, 943.6044921875), (1546.7851562500002, 1016.189453125))
text2 i.e the incoming text is the winner
collision happend with box:943.6044921875 and text:fosa solving on the basis of percent match boxes
the current box specification are
fask
((1551.791015625, 933.5927734375), (1651.908203125, 1003.6748046875))
text2 i.e the incoming text is the winner
Falt
((1436.65625, 1098.7861328125), (1561.802734375, 1156.353515625))
collision happend with box:1098.7861328125 and text:Falt solving on the basis of percent match boxes
the current box specification are
Falk
((1421.6386718749998, 1238.9501953125), (1536.7734375, 1299.0205078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1238.9501953125 and text:Falk solving on the basis of percent match boxes
the current box specification are
Faese
((1416.6328125, 1384.1201171875), (1534.2705078125, 1446.693359375))
text2 i.e the incoming text is the winner
collision happend with box:1384.1201171875 and text:Faese solving on the basis of percent match boxes
the current box specification are
Faln
((1419.1357421875, 1516.775390625), (1539.2763671875, 1576.845703125))
text2 i.e the incoming text is the winner
collision happend with box:1516.775390625 and text:Faln solving on the basis of percent match boxes
the current box specification are
The
((1339.0419921875, 1656.939453125), (1494.2236328125, 1719.5126953125))
text1 i.e the prev text is the winner
Tyue
((1384.0947265625, 1787.091796875), (1501.732421875, 1837.150390625))
Tru
((1381.5917968749998, 1962.296875), (1496.7265625, 2027.373046875))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': 'NULL', '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 580, '2': 740, '3': 848, '4': 1011, '5': 1166, '6': 1326, '7': 1431, '8': 1591, '9': 1699, '10': 1857}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': 'NULL', '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cScH1M6.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6512.84375
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
ul
((5373.593749999999, 2095.25), (6014.8125, 2312.0))
Toue
((5382.625000000001, 2564.875), (5807.093749999999, 2745.5))
AMe
((5418.75, 3133.84375), (5816.125000000001, 3323.5))
Fahe
((5373.593749999999, 3531.21875), (5870.312500000001, 3874.40625))
Pelbe
((5418.75, 4109.21875), (5915.468749999999, 4434.34375))
Fabe
((5391.65625, 4560.78125), (5834.187499999999, 4831.71875))
prediction
((4669.15625, 6050.9375), (5265.218749999999, 6204.46875))
Frue
((5536.156249999999, 5165.875), (5924.500000000001, 5346.5))
Tue
((5572.281250000001, 5644.53125), (5960.625, 5816.125))
Tohe
((5563.249999999999, 6177.375), (5924.500000000001, 6348.96875))
the
((5075.5625, 6818.59375), (5301.343750000001, 6963.09375))
collision happend with box:6818.59375 and text:the solving on the basis of percent match boxes
the current box specification are
Tue.
((5491.000000000001, 6755.375), (5969.656249999999, 6972.125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2149, '2': 2709, '3': 3088, '4': 3648, '5': 4208, '6': 4777, '7': 5156, '8': 5725, '9': 6105, '10': 6683}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lXzz6uS.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6594.125
left top x of SN: 537.9999999999999
bottom right x of SN: 943.7812500000001
first t/f detection
TRVE
((5509.062499999999, 1914.625), (5951.593750000001, 2095.25))
TRUE
((5436.812500000001, 2474.5625), (5933.53125, 2655.1875))
FALSE
((5463.906250000001, 2989.34375), (5924.500000000001, 3160.9375))
FALSE
((5391.65625, 3630.5625), (5852.25, 3766.03125))
FALSE
((5355.531250000001, 4208.5625), (5843.218750000001, 4371.125))
FALSE
((5346.499999999999, 4732.375), (5798.0625, 4894.9375))
FALSE
((5355.531250000001, 5192.96875), (5798.0625, 5355.53125))
TRUE
((5319.406249999999, 5725.8125), (5761.937500000001, 5888.375))
TRVE
((5265.218749999999, 6213.5), (5734.843750000001, 6376.0625))
FALSE
((5337.46875, 6836.65625), (5816.125000000001, 7008.25))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1950, '2': 2528, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5057, '8': 5635, '9': 6032, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OEOMwNz.jpg
rotation started
['I', 'E', 'e', ':', '-', '-', '€', 'E', '2', ':', 's', ':', ':', 'I', '1', 'la', 'E', 'a', 'I', 'iis', 'à', 'I', 'I', 'E', 'e', 'E', 'I', '1', 'I', 'I', 'iis', 'I', 'd', 'I', 'I', 'à', 'I', 'a', 'E', 'e', 'of', 's', ':', 'a', 'is', 'a', 'I', 'iE', 'I', '1', 'I', ':', '1', 'à', 'E', 'd', ':', 'e', 'I', 'I', 'a', 'I', 'I', 'I', 'iE', 'I', 'of', ':', '1', 'I', 'I', 'I', '8', 'is', 'e', 'is', 'o', 'e', 'I', '1', 'e', 'I', '8', 'I', '2', 'i', 'E', 'a', 'I', 'E', 'à', 'a', 'o', 'of', 'a', 'I', 'I', 'o', 'a', '0', 'E', 'I', 'I', 'I', 'E', 'I', 'is', 'e', 'I', 'a', 'e', 's', 'I', 'E', 'E', 'I', 'of', 'I', 'o', 'a', 'H', 'I', 'is', '8', 'I', 'E', 'I', '2', 'I', 'I', 'E', 'le', '8', 'I', 'I', 'à', 'E', 'I', '1', 'a', ':', '5', 'E', 'à', '2', '9', 'I', 'I', ':', '', 'iis', 'I', 'I', 'I', 'of', ':', 'is', 'e', 'à', ':', '2', 'E', ':', 'I', 'e', 'I', '1', 'I', 'E', 'of', 'de', '1', 'à', 'e', '-', '5', 'a', '$', 'I', 'à', 'I', 'a', 'I', 'I', 'le', 'I', 'le', 'bo', 'e', 'f', ':', 'I', 'I', 'I', 'I']
rotation started
['10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'handwriting,', 'Write', 'your', 'roll', 'number', 'here:', 'Statement', 'leployment.', 'TRUE/FALSE', 'ypically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'TRUE', 'INN', 'is', 'a', 'non-linear', 'classifier.', 'EA', 'LSE', '-', 'cosineSimalaritylr,', 'y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', 'ectors', 'I', 'and', 'y.', 'ackpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRUE', 'he', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Falil', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', 'le', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'TRVE', 'e', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'FALSE', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'th', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'ning', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'sed', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'sion', 'and', 'Recall.', 'pportional', 'to', 'the', 'number', 'of', 'nodes.', 'one-vs-one', 'ng', 'ises,', 'as', 'the', 'TRUE', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'TRUE', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the']
rotation done for:  OEOMwNz.jpg
Number of times rotation done: 2
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6431.5625
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:28:33] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : OEOMwNz.jpg
[2024/06/28 14:28:34] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:28:35] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.11632513999938965
[2024/06/28 14:28:37] ppocr DEBUG: rec_res num  : 32, elapsed : 2.142967939376831
OCR detection done
left top x of T/F: 5271.0
bottom right x of T/F: 6266.0
left top y of T/F: 1478.0
bottom right y of T/F: 1922.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
first t/f detection
eployment.
[[1054.0, 2264.0], [1645.0, 2264.0], [1645.0, 2399.0], [1054.0, 2399.0]]
first t/f detection
first t/f detection
ctors x and y.
[[1064.0, 3208.0], [1842.0, 3208.0], [1842.0, 3343.0], [1064.0, 3343.0]]
first t/f detection
first t/f detection
False
[[5297.0, 4049.0], [5894.0, 4024.0], [5905.0, 4274.0], [5308.0, 4299.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[5251.0, 5616.0], [5872.0, 5616.0], [5872.0, 5857.0], [5251.0, 5857.0]]
first t/f detection
first t/f detection
the true list is  [1676, 1946, 2915, 3560, 4634, 5077, 6095, 6686]
the false list is  []
the true list for xdirn [1025, 5281, 5304, 5315, 5261, 5232, 5262, 5360]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fNB1Xh6.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frud
((1276.33203125, 1398.0390625), (1424.111328125, 1491.8671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1398.0390625 and text:frud solving on the basis of percent match boxes
the current box specification are
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
text2 i.e the incoming text is the winner
collision happend with box:1524.70703125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
Falue
((1273.986328125, 1794.462890625), (1426.45703125, 1888.291015625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J4KSh3L.jpg
OCR detection done with doctr
left top x of SN: 366.40625
bottom right x of SN: 781.2187500000001
left top x of T/F: 5381.65625
bottom right x of T/F: 6639.281250000001
first t/f detection
TAUE
((5427.781249999999, 1896.5625), (6132.218749999999, 2185.5625))
LBUE
((5500.03125, 2420.375), (6177.375, 2718.40625))
FALSE
((5409.718750000001, 2953.21875), (6240.593749999999, 3332.53125))
FALSE
((5536.156249999999, 3486.0625), (6394.125, 3784.09375))
TRUE
((5527.125, 4091.15625), (6403.156249999999, 4389.1875))
TAUE
((5500.03125, 4678.1875), (6177.375, 4976.21875))
TRUE
((5481.968749999999, 5373.59375), (6177.375, 5617.4375))
TRUE
((5400.687499999999, 5770.96875), (6087.062500000001, 5978.6875))
TRUE
((5445.84375, 6358.0), (6240.593749999999, 6746.34375))
TRUE
((5536.156249999999, 6917.9375), (6240.593749999999, 7161.78125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2384, '3': 2962, '4': 3540, '5': 3928, '6': 4506, '7': 5265, '8': 5843, '9': 6222, '10': 6990}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 17Eh4M5.jpg
rotation started
['o1', '6', '00', '2', 'o', 'F', '>', 'CT', 'A', '6', '2', 'E', 'I', 'E', 'F', 'F', '2', '7', 'a', 'I', 'I', ':', '2', '8', 'I', 'la', 'e', '€', 'E', 'H', 'E', 'I', 'I', '8', '2', 'E', 'E', 'I', 'a', 'I', 'e', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'E', 'iE', 'I', 'E', 'E', 'of', 'I', 'E', 'a', 'E', 'E', 'I', '8', 'a', 'I', 'I', 'I', '2', 'I', 'I', 'a', '1', '8', '3', 'E', 'E', 'E', 'I', 'E', '1', 'E', 'I', 'I', '€', 'E', 'I', '8', 'E', 'e', 'I', 'I', 'I', 'I', '8', '2', 'of', 'I', '-', 'I', '1', '£', '2', '-', 'I', 'E', 'I', 'I', 'I', 'E', 't', 'po', 'E', '2', 'f', ':', '€', 'E', 'I', 'I', 'E', 'F', '1', '2', 'so', '&', 'E', '-', 'E', '9', 'E', 'LE', 'I', 'I', 'I', 'I', '-', 'I', 'E', 'a', 'I', 'I', 'I', ':', 'E', 'I', ':', '2', 'I', 'I', 'la', 'E', 'I', '1', 'I', 'E', '2', 'iE', 'E', 'I', 'E', '2', 'E', 't', 'E', 'E', 'I', 'a', 'I', 'I', '7', 'n', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'E', 'e', 'I', '1', 'I', 'à', 'I', 'I', 'I', '7', 't', 'I', 'I']
rotation started
['"eep', 'uoosun', "'mou", '01', '1IOM', 'azijesaues', 'jou', 'op', '1841', 'eep', 'Bururez', 'ou', 'ur', 'smtenop', 'JO', 'osjou', 'outoads', 'anades', '07', 'ULIBOT', 'Keur', 'lapotu', 'au1', 'SB', "'sogears", '-Ul', 'Sunayrano', 'Jo', 'YSTI', 'o11', "'WAS", 'uI', 'tonoureded', 'D', 'oy2', 'jo', 'anjeA', '4814', 'e', 'Y3IM', 'OT', "'NAS", '2S0I-SA-auo', 'uBy1', 'JaMOIS', 'SI', 'WAS', 'a00-SA-auo', 'Bursn', 'uoporpaad', 'e', 'Suryeur', "'sossep", 'Jo', 'Jaqumnu', 'a8101', 'e', 'YAIM', 'suarqoud', 'ssepouihu', 'JOE', '6', '"ooeds', '[eursuo', 'aun', 'ur', 'iBott-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunog', 'uorsiap', 'OUL', '8', '"sopou', 'jo', 'Jaquinu', 'aua', '03', 'Teuonodoad', 'Atppamp', 'SI', 'OOIL', 'UOISDOCI', '011', 'ul', 'uororpald', 'B', 'Buryeur', 'IOJ', 'pammbor', 'OUIIL', 'OUL', '2', '"uornquuasip', 'UeIsSIBO', 'B', 'SAeMre', 'SI', 'suorgnquasip', 'uerssnes', 'OMI', 'jo', 'amexiu', 'V', '9', 'Teoay', 'pure', 'UOISD', '-BId', 'ueamgoq', 'nord', '8', 'SI', 'aAmo', '(bu)', 'D19S110900JBUD', 'Surerado', 'laataoey', 'aUL', 'S', 'YIOMaU', '[emou', 'oy2', 'ul', 'squaipe1s', 'au7', 'agnduoo', '03', 'posn', 'SI', 'quaosap', 'quorpe1s', 'TIYM', "'saustom", '241', 'agepdn', '01', 'posn', 'SI', 'tore@odoudypeg', 'F', 'f', 'pue', 'I', 'SIOJDOA', 'Kue', 'JOJ', 'Juugaur', 'Jouensip', 'PITRA', '8', 'SI', '(8=)umpusgaundo', '-', '1', 'E', 'jeuorsuoump-p', 'Jayissepo', 'meatug-uou', 'B', 'SI', 'NNY', '2', 'qlaur.fordap', 'quomambar', '08010qs', 'ati', 'AIBOIdAL', 'I', 'Ja81e1', 'ypnu', 'SI', 'NNY', 'JOJ', 'JOJ', 'INAS', 'uera', 'quotuagess', 'NS', 'isvalanuL', 'paqumu', 'TIO', 'mor', 'O1UM', ':0.0u', '011M', '(sad', 'Or)', "'6", 'ASTVI', '10', 'INAL', 'Teardeo', 'ul', 'meap', 'pure', 'sIanel', 'Burumpuet']
rotation started
['I', 'a', 'E', ':', 'I', '1', 'is', '2', 'à', 'I', 'iA', 'I', 'E', 'I', 'I', 'I', '4', 'a', 'iE', 'I', '1', 'I', '.s', 'I', 'E', 'I', 'a', 'I', 'I', 'e', 'iE', 'E', '1', 'E', 'I', '€', '.s', 'I', 'iE', '9', 'e', 'I', '-', 'e', 'I', 'E', 'a', 'I', 'a', '9', 'i', 'E', ':', 'a', 'I', 'of', 'I', 'o', 'E', 'D', 'E', 'I', 'I', 'I', ':', 'I', 'of', 'is', '7', 'I', '-', 'e', 'à', 'E', 'I', 'a', '5', 'of', 'de', 'E', 'e', 'I', '1', 'o', 'I', 'à', 'a', '1', 'of', 'I', 'e', 'I', 'à', '5', 'a', '$', 'I', 'à', 'I', 'I', 'a', 'I', 'a', 'I', 'e', 'I', 'E', 'I', 'of', 'I', 'I', ':', 'E', '€', 'à', 'a', 'I', 'I', 'a', 'a', 'i', 'à', 'à', 'I', '1', 'of', 'a', 'a', '2', 'I', 'I', ':', 'e', 'I', 'I', 'o', '8', 'I', '1', 'is', ':', 'of', 'E', 'à', 'E', 'e', 'o', ':', '', 'i', '1', 'I', '1', 'is', 'e', 'f', 'I', '2', 'I', 'A', '8', 'I', 'E', '1', '1', '-', 'I', '22', '3', '2', '8', '-', 'I', 'e', 'I', '1', 'I', '6', 'I', 'I', 'd', 'i9', 'I', 'e', 'à', 'A', 'e', '&', ':', 'I', 'E', 'I', 'I', '2', '1', '4', 'i0', '6', 'N', '0o', '', '9']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/PALSE', 'SN', 'Statement', '1', 'Typically,', 'deployment.', 'is', 'much', 'larger', 'than', 'SVM', 'for', '-', 'T', 'the', 'storage', 'requirement', 'for', 'KNN', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-cowineSimalarityle,', 'y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'cision', 'and', 'Recall.', 'the', 'neural', 'F', 'gradients', 'in', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre', 'F', '-T', 'T', 'F', 'T', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space,', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'Dr', 'details', 'in', 'the', 'data', 'that', 'T', 'training', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:29:01] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 17Eh4M5.jpg
[2024/06/28 14:29:01] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:29:02] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.12677669525146484
[2024/06/28 14:29:04] ppocr DEBUG: rec_res num  : 34, elapsed : 1.9889757633209229
OCR detection done
left top x of T/F: 5800.0
bottom right x of T/F: 6712.0
left top y of T/F: 1269.0
bottom right y of T/F: 1862.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[808.0, 1840.0], [1034.0, 1840.0], [1034.0, 1984.0], [808.0, 1984.0]]
first t/f detection
deployment.
[[1143.0, 2418.0], [1852.0, 2418.0], [1852.0, 2582.0], [1143.0, 2582.0]]
first t/f detection
first t/f detection
the true list is  [1824, 3179, 7177]
the false list is  []
the true list for xdirn [1110, 5872, 5823]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': True}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
left top x of SN: 808.0
bottom right x of SN: 1174.0
left top y of SN: 1840.0
bottom right y of SN: 2124.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3pGCYEU.jpg
OCR detection done with doctr
left top x of T/F: 1293.828125
bottom right x of T/F: 1793.28125
left top x of SN: -8.242187499999964
bottom right x of SN: 237.7734375
first t/f detection
True
((1377.4609375, 583.984375), (1499.3359375, 644.921875))
collision happend with box:583.984375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1369.84375, 723.6328125), (1486.640625, 789.6484375))
text2 i.e the incoming text is the winner
collision happend with box:723.6328125 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1415.546875, 845.5078125), (1537.421875, 911.5234375))
text2 i.e the incoming text is the winner
collision happend with box:845.5078125 and text:Falie solving on the basis of percent match boxes
the current box specification are
falk
((1415.546875, 1005.46875), (1534.8828125000002, 1068.9453125))
text2 i.e the incoming text is the winner
collision happend with box:1005.46875 and text:falk solving on the basis of percent match boxes
the current box specification are
Fauc
((1428.2421875, 1165.4296875), (1539.9609375, 1228.90625))
text2 i.e the incoming text is the winner
collision happend with box:1165.4296875 and text:Fauc solving on the basis of percent match boxes
the current box specification are
false
((1435.859375, 1317.7734375), (1565.3515625, 1376.171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1317.7734375 and text:false solving on the basis of percent match boxes
the current box specification are
Falte
((1466.328125, 1442.1875), (1588.203125, 1508.203125))
text2 i.e the incoming text is the winner
collision happend with box:1442.1875 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1494.2578125, 1594.53125), (1603.4374999999998, 1647.8515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1594.53125 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1501.875, 1711.328125), (1603.4374999999998, 1774.8046875))
text2 i.e the incoming text is the winner
d-dimensional
((1095.625, 868.359375), (1324.140625, 939.453125))
descent
((1171.796875, 1033.3984375), (1301.2890625, 1091.796875))
collision happend with box:1033.3984375 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((1298.75, 1035.9375), (1334.296875, 1071.484375))
text1 i.e the prev text is the winner
collision happend with box:1033.3984375 and text:descent solving on the basis of percent match boxes
the current box specification are
Pre-
((1273.359375, 1193.359375), (1349.53125, 1236.5234375))
text1 i.e the prev text is the winner
distribution.
((1166.71875, 1350.78125), (1367.3046875, 1411.71875))
collision happend with box:1350.78125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1253.046875, 1459.9609375), (1377.4609375, 1510.7421875))
text1 i.e the prev text is the winner
space.
((1286.0546875, 1627.5390625), (1392.6953124999998, 1675.78125))
collision happend with box:1627.5390625 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((1237.8125, 1726.5625), (1407.9296875, 1787.5))
text2 i.e the incoming text is the winner
overfitting
((1202.265625, 1894.140625), (1372.3828125, 1952.5390625))
collision happend with box:1894.140625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((1214.9609375, 1952.5390625), (1329.21875, 2003.3203125))
text2 i.e the incoming text is the winner
collision happend with box:1952.5390625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1372.3828125, 1942.3828125), (1430.7812499999998, 1985.546875))
text1 i.e the prev text is the winner
collision happend with box:1952.5390625 and text:details solving on the basis of percent match boxes
the current box specification are
True
((1512.03125, 1909.375), (1611.0546875, 1975.390625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 718, '2': 881, '3': 990, '4': 1152, '5': 1310, '6': 1475, '7': 1584, '8': 1746, '9': 1856, '10': 2016}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RRYfaw8.jpg
OCR detection done with doctr
left top x of T/F: 1340.853515625
bottom right x of T/F: 1828.5703125
left top x of SN: 24.849609375000043
bottom right x of SN: 277.40625
first t/f detection
falx
((1368.3671875, 577.951171875), (1551.009765625, 708.052734375))
collision happend with box:577.951171875 and text:falx solving on the basis of percent match boxes
the current box specification are
Falee
((1398.390625, 715.55859375), (1563.51953125, 813.134765625))
text2 i.e the incoming text is the winner
collision happend with box:715.55859375 and text:Falee solving on the basis of percent match boxes
the current box specification are
Trus
((1395.888671875, 848.162109375), (1568.5234375, 980.765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:848.162109375 and text:Trus solving on the basis of percent match boxes
the current box specification are
Tfur
((1410.9003906249998, 1000.78125), (1563.51953125, 1123.376953125))
text2 i.e the incoming text is the winner
collision happend with box:1000.78125 and text:Tfur solving on the basis of percent match boxes
the current box specification are
d-dimensional
((1118.171875, 860.671875), (1350.853515625, 925.72265625))
true and false collision so given priority to text2 which is the incoming text
is
((1318.328125, 1028.302734375), (1353.35546875, 1063.330078125))
collision happend with box:1028.302734375 and text:is solving on the basis of percent match boxes
the current box specification are
Pre-
((1283.30078125, 1178.419921875), (1360.861328125, 1228.458984375))
text2 i.e the incoming text is the winner
collision happend with box:1178.419921875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
Frul
((1423.41015625, 1158.404296875), (1586.037109375, 1275.99609375))
text2 i.e the incoming text is the winner
collision happend with box:1158.404296875 and text:Frul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1296.01171875), (1581.033203125, 1401.09375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1296.01171875 and text:True solving on the basis of percent match boxes
the current box specification are
falre
((1428.4140624999998, 1441.125), (1606.052734375, 1556.21484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1441.125 and text:falre solving on the basis of percent match boxes
the current box specification are
Falu
((1450.931640625, 1578.732421875), (1616.060546875, 1668.802734375))
text2 i.e the incoming text is the winner
collision happend with box:1578.732421875 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((1458.4375, 1708.833984375), (1613.5585937500002, 1818.919921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1708.833984375 and text:fale solving on the basis of percent match boxes
the current box specification are
Falye
((1460.939453125, 1863.955078125), (1626.068359375, 1979.044921875))
text2 i.e the incoming text is the winner
distribution.
((1165.708984375, 1338.544921875), (1370.869140625, 1393.587890625))
collision happend with box:1338.544921875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1248.2734375, 1446.12890625), (1373.37109375, 1496.16796875))
text1 i.e the prev text is the winner
space.
((1278.296875, 1616.26171875), (1378.375, 1653.791015625))
collision happend with box:1616.26171875 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((1225.755859375, 1716.33984375), (1390.884765625, 1763.876953125))
text2 i.e the incoming text is the winner
overfitting
((1175.716796875, 1876.46484375), (1348.3515625, 1931.5078125))
collision happend with box:1876.46484375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((1343.34765625, 1929.005859375), (1405.896484375, 1971.5390625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 658, '2': 818, '3': 923, '4': 1085, '5': 1243, '6': 1403, '7': 1511, '8': 1671, '9': 1781, '10': 1941}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OasYZ7w.jpg
OCR detection done with doctr
left top x of SN: 38.205078124999986
bottom right x of SN: 263.041015625
left top x of T/F: 948.1103515624999
bottom right x of T/F: 1344.9267578125
first t/f detection
Falye
((959.9785156249999, 468.9091796875), (1087.013671875, 558.5810546875))
collision happend with box:468.9091796875 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falie
((976.7919921874999, 575.39453125), (1087.013671875, 642.6484375))
text2 i.e the incoming text is the winner
collision happend with box:575.39453125 and text:Falie solving on the basis of percent match boxes
the current box specification are
Trul
((971.1874999999999, 685.6162109375), (1083.27734375, 762.2109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:685.6162109375 and text:Trul solving on the basis of percent match boxes
the current box specification are
fu
((982.3964843749999, 797.7060546875), (1077.6728515625, 870.564453125))
text1 i.e the prev text is the winner
Tw
((978.6601562499999, 917.2685546875), (1085.1455078125, 986.390625))
collision happend with box:917.2685546875 and text:Tw solving on the basis of percent match boxes
the current box specification are
l
((984.2646484374999, 1021.8857421875), (1070.2001953125, 1079.798828125))
text2 i.e the incoming text is the winner
collision happend with box:1021.8857421875 and text:l solving on the basis of percent match boxes
the current box specification are
falie
((961.8466796874999, 1120.8984375), (1083.27734375, 1197.4931640625))
text2 i.e the incoming text is the winner
collision happend with box:1120.8984375 and text:falie solving on the basis of percent match boxes
the current box specification are
Falw
((971.1874999999999, 1221.779296875), (1087.013671875, 1283.4287109375))
text2 i.e the incoming text is the winner
collision happend with box:1221.779296875 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falk
((967.4511718749999, 1315.1875), (1077.6728515625, 1391.7822265625))
text2 i.e the incoming text is the winner
collision happend with box:1315.1875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falx
((963.7148437499999, 1431.013671875), (1077.6728515625, 1505.740234375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '10']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 1
the value of y is 297
that question which is editted is 10
the value of y is 1611
printing the number dict y_coordinate
{'2': 597, '3': 676, '4': 803, '5': 915, '6': 1033, '7': 1111, '8': 1231, '9': 1311, '1': 297, '10': 1611}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LCB41h0.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
first t/f detection
Tug
((5834.187499999999, 1914.625), (6303.812500000001, 2140.40625))
Falre
((5391.65625, 2591.96875), (5978.687500000001, 2844.84375))
false
((5617.437499999999, 3043.53125), (6177.375, 3314.46875))
Guo
((5572.281250000001, 3775.0625), (6014.8125, 4009.875))
Toue
((5310.375, 4407.25), (5870.312500000001, 4624.0))
Falso
((5328.437500000001, 4885.90625), (5861.281249999999, 5147.8125))
Tgue
((5328.437500000001, 5346.5), (5915.468749999999, 5608.40625))
Cuug
((5346.499999999999, 5960.625), (5897.406250000001, 6186.40625))
falxe
((5427.781249999999, 6303.8125), (5987.71875, 6601.84375))
False
((5454.874999999999, 6800.53125), (6069.0, 7116.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2727, '3': 3115, '4': 3702, '5': 4280, '6': 4858, '7': 5238, '8': 5825, '9': 6222, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0OdLk7m.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:416.5390625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 588.2421875), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:588.2421875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((865.91796875, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((818.22265625, 769.484375), (865.91796875, 794.921875))
text2 i.e the incoming text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((816.6328125, 925.2890625), (896.125, 957.0859375))
text1 i.e the prev text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 1000.01171875), (897.7148437500001, 1028.62890625))
text1 i.e the prev text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 484, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 836, '8': 931, '9': 996, '10': 1093}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5vQyXpN.jpg
OCR detection done with doctr
left top x of SN: 736.6875000000001
bottom right x of SN: 1160.53125
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6512.84375
first t/f detection
TRUE
((5409.718750000001, 2275.875), (5987.71875, 2474.5625))
FALSE
((5382.625000000001, 2736.46875), (5969.656249999999, 2980.3125))
FALSE
((5391.65625, 3206.09375), (5960.625, 3404.78125))
TRUE
((5382.625000000001, 3793.125), (5996.749999999999, 3964.71875))
FALSE
((5328.437500000001, 4271.78125), (5933.53125, 4488.53125))
TRUE
((5364.5625, 4786.5625), (5915.468749999999, 4985.25))
FALSE
((5382.625000000001, 5220.0625), (5996.749999999999, 5436.8125))
FALSE
((5382.625000000001, 5716.78125), (6014.8125, 5915.46875))
FALSE
((5409.718750000001, 6132.21875), (6032.875000000001, 6376.0625))
TRUE
((5364.5625, 6719.25), (6032.875000000001, 6963.09375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2158, '2': 2709, '3': 3088, '4': 3648, '5': 4208, '6': 4768, '7': 5138, '8': 5707, '9': 6078, '10': 6656}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NUQPQV8.jpg
OCR detection done with doctr
left top x of SN: 102.796875
bottom right x of SN: 319.21875
left top x of T/F: 890.068359375
bottom right x of T/F: 1256.37890625
first t/f detection
Teuf
((913.7265625, 356.630859375), (986.5703125, 386.982421875))
collision happend with box:356.630859375 and text:Teuf solving on the basis of percent match boxes
the current box specification are
FALSE
((921.314453125, 402.158203125), (1007.81640625, 430.9921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:402.158203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((912.208984375, 459.826171875), (1001.74609375, 494.73046875))
text2 i.e the incoming text is the winner
collision happend with box:459.826171875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((909.173828125, 540.2578125), (986.5703125, 575.162109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:540.2578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((915.244140625, 669.251953125), (988.087890625, 699.603515625))
text1 i.e the prev text is the winner
TRVE
((915.244140625, 732.990234375), (994.158203125, 769.412109375))
collision happend with box:732.990234375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((909.173828125, 837.703125), (997.193359375, 874.125))
text2 i.e the incoming text is the winner
collision happend with box:837.703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((912.208984375, 924.205078125), (995.67578125, 959.109375))
text2 i.e the incoming text is the winner
collision happend with box:924.205078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((915.244140625, 1016.77734375), (1000.228515625, 1045.611328125))
text2 i.e the incoming text is the winner
collision happend with box:1016.77734375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((918.279296875, 1080.515625), (1001.74609375, 1115.419921875))
text2 i.e the incoming text is the winner
collision happend with box:1080.515625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRef
((922.83203125, 1186.74609375), (1000.228515625, 1217.09765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1186.74609375 and text:TRef solving on the basis of percent match boxes
the current box specification are
the
((854.541015625, 1230.755859375), (893.998046875, 1262.625))
text1 i.e the prev text is the winner
collision happend with box:1186.74609375 and text:TRef solving on the basis of percent match boxes
the current box specification are
FALSE
((925.8671875, 1242.896484375), (1010.8515625, 1273.248046875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': 'UNASSIGNED', '6': 'NULL', '7': False, '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '2', '3', '5', '8']
the assigned keys are ['4', '6', '7', '9', '10']
printing the number dict y_coordinate
{'4': 651, '6': 865, '7': 933, '9': 1115, '10': 1221}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': 'UNASSIGNED', '6': 'NULL', '7': False, '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8F8YMZl.jpg
OCR detection done with doctr
left top x of SN: 637.34375
bottom right x of SN: 1043.125
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6476.718750000001
first t/f detection
TRUG
((5400.687499999999, 2095.25), (6114.156250000001, 2312.0))
TRUG
((5364.5625, 2646.15625), (6087.062500000001, 2853.875))
FALSE
((5364.5625, 3124.8125), (6096.09375, 3377.6875))
FALSG
((5427.781249999999, 3747.96875), (6105.124999999999, 4009.875))
FA
((5463.906250000001, 4380.15625), (5734.843750000001, 4587.875))
collision happend with box:4380.15625 and text:FA solving on the basis of percent match boxes
the current box specification are
LSE
((5752.906249999999, 4325.96875), (6105.124999999999, 4551.75))
text2 i.e the incoming text is the winner
FALSE
((5500.03125, 4867.84375), (6105.124999999999, 5084.59375))
HRUE
((5463.906250000001, 5301.34375), (6005.781250000001, 5518.09375))
FALSE
((5500.03125, 5509.0625), (6059.968750000001, 5680.65625))
PALSE
((5436.812500000001, 5852.25), (6069.0, 6014.8125))
FALSE
((5445.84375, 6258.65625), (6041.90625, 6430.25))
TRUG
((5509.062499999999, 6827.625), (6105.124999999999, 7044.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2420, '2': 2971, '3': 3341, '4': 3901, '5': 4452, '6': 5012, '7': 5382, '8': 5951, '9': 6321, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xhc4R2G.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6503.812500000001
left top x of SN: 817.9687500000001
bottom right x of SN: 1214.7187500000002
first t/f detection
FALSE
((5409.718750000001, 2077.1875), (6005.781250000001, 2275.875))
TRUE
((5337.46875, 2619.0625), (5807.093749999999, 2826.78125))
TRur
((5319.406249999999, 3106.75), (5816.125000000001, 3278.34375))
TRUE
((5328.437500000001, 3648.625), (5825.15625, 3829.25))
FALSE
((5373.593749999999, 3287.375), (5915.468749999999, 3458.96875))
TRDE
((5328.437500000001, 4226.625), (5933.53125, 4470.46875))
TRUE
((5328.437500000001, 4732.375), (5870.312500000001, 4949.125))
Tcog
((5274.250000000001, 5202.0), (5779.999999999999, 5364.5625))
collision happend with box:5202.0 and text:Tcog solving on the basis of percent match boxes
the current box specification are
FALSE
((5364.5625, 5355.53125), (5960.625, 5554.21875))
text2 i.e the incoming text is the winner
TRUE
((5400.687499999999, 5770.96875), (5915.468749999999, 5942.5625))
TRUE
((5229.09375, 6087.0625), (5752.906249999999, 6258.65625))
RALSS
((5337.46875, 5653.5625), (5906.4375, 5852.25))
TRVE
((5292.312499999999, 6647.0), (5834.187499999999, 6854.71875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2718, '3': 3079, '4': 3621, '5': 4163, '6': 4714, '7': 5075, '8': 5626, '9': 5996, '10': 6565}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GyyJzOi.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 663.8124999999999
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5608.40625, 1761.09375), (6159.312499999999, 1968.8125))
TRUE
((5644.531249999999, 2348.125), (6186.406249999999, 2519.71875))
FALSE
((5716.78125, 2962.25), (6240.593749999999, 3188.03125))
TRUE
((5626.468750000001, 3495.09375), (6114.156250000001, 3675.71875))
FALSE
((5680.656250000001, 3964.71875), (6168.343750000001, 4172.4375))
TROE
((5698.718749999999, 4633.03125), (6195.437500000001, 4813.65625))
TROE
((5707.750000000001, 5400.6875), (6267.687499999999, 5608.40625))
TROE
((5725.812499999999, 5861.28125), (6276.718750000001, 6059.96875))
FALSE
((5734.843750000001, 6439.28125), (6276.718750000001, 6656.03125))
FALSE
((5707.750000000001, 7035.34375), (6240.593749999999, 7243.0625))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': False, '10': False}
the unassigned keys are ['1', '2', '7']
the assigned keys are ['3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6412, '3': 2962, '4': 3585, '5': 3973, '6': 4569, '8': 6014, '10': 7206}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': False, '6': True, '7': 'UNASSIGNED', '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1PPvSt1.jpg
OCR detection done with doctr
left top x of SN: 68.03515625000003
bottom right x of SN: 308.435546875
left top x of T/F: 1322.9550781250002
bottom right x of T/F: 1798.716796875
first t/f detection
Trur
((1393.35546875, 625.748046875), (1509.3242187500002, 683.732421875))
collision happend with box:625.748046875 and text:Trur solving on the basis of percent match boxes
the current box specification are
True
((1388.5234375, 756.212890625), (1509.3242187500002, 811.78125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:756.212890625 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1398.1875, 884.26171875), (1523.8203125, 939.830078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:884.26171875 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Faln
((1400.6035156249998, 1034.0546875), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1034.0546875 and text:Faln solving on the basis of percent match boxes
the current box specification are
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1407.8515625, 1328.80859375), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1328.80859375 and text:Fula solving on the basis of percent match boxes
the current box specification are
False
((1410.267578125, 1449.609375), (1533.484375, 1507.59375))
text2 i.e the incoming text is the winner
collision happend with box:1449.609375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((1381.275390625, 1577.658203125), (1504.4921875, 1625.978515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1577.658203125 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1407.8515625, 1703.291015625), (1511.740234375, 1761.275390625))
text1 i.e the prev text is the winner
Tyue
((1376.443359375, 1882.076171875), (1487.580078125, 1930.396484375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 867, '2': 763, '3': 862, '4': 1017, '5': 1169, '6': 1326, '7': 1427, '8': 1580, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VcAzqW1.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6774.750000000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5581.3125, 1779.15625), (6204.46875, 2077.1875))
FALSE
((5545.187500000001, 2393.28125), (6249.625000000001, 2646.15625))
TRUE
((5481.968749999999, 2862.90625), (6303.812500000001, 3242.21875))
TRUE
((5454.874999999999, 3594.4375), (6159.312499999999, 3838.28125))
FALSE
((5463.906250000001, 4280.8125), (6249.625000000001, 4524.65625))
TRVE
((5436.812500000001, 4885.90625), (6096.09375, 5102.65625))
TRVE
((5472.9375, 5391.65625), (6195.437500000001, 5608.40625))
FALSE
((5491.000000000001, 5924.5), (6177.375, 6168.34375))
TRUE
((5400.687499999999, 6430.25), (6105.124999999999, 6683.125))
FALSE
((5445.84375, 7116.625), (6177.375, 7405.625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2573, '3': 2980, '4': 3603, '5': 4208, '6': 4831, '7': 5238, '8': 5861, '9': 6267, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Itmbytc.jpg
OCR detection done with doctr
left top x of SN: 94.76562500000003
bottom right x of SN: 315.048828125
left top x of T/F: 946.54296875
bottom right x of T/F: 1330.56640625
first t/f detection
F
((1001.66015625, 423.779296875), (1038.720703125, 468.896484375))
collision happend with box:423.779296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((1014.5507812499999, 501.123046875), (1053.22265625, 549.462890625))
text2 i.e the incoming text is the winner
T
((988.76953125, 800.830078125), (1059.66796875, 850.78125))
collision happend with box:800.830078125 and text:T solving on the basis of percent match boxes
the current box specification are
8T
((950.0976562499999, 878.173828125), (1048.388671875, 926.513671875))
text2 i.e the incoming text is the winner
collision happend with box:878.173828125 and text:8T solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 968.408203125), (1024.21875, 1018.359375))
text2 i.e the incoming text is the winner
collision happend with box:968.408203125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((980.712890625, 1052.197265625), (1019.384765625, 1095.703125))
text2 i.e the incoming text is the winner
F
((1037.109375, 1253.61328125), (1069.3359375, 1301.953125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 410, '2': 514, '3': 583, '4': 688, '5': 791, '6': 892, '7': 960, '8': 1063, '9': 1132, '10': 1235}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0lnF9tq.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6476.718750000001
first t/f detection
A
((5364.5625, 3043.53125), (5527.125, 3197.0625))
T
((5328.437500000001, 3531.21875), (5491.000000000001, 3693.78125))
then
((4976.21875, 4497.5625), (5292.312499999999, 4642.0625))
a(X)<0or
((4515.625, 4687.21875), (5301.343750000001, 4849.78125))
the
((5066.53125, 5238.125), (5301.343750000001, 5391.65625))
the
((5093.625, 6177.375), (5319.406249999999, 6321.875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': False, '4': True, '5': 'NULL', '6': 'UNASSIGNED', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '6']
the assigned keys are ['2', '3', '4', '5', '7', '8', '9', '10']
['2', '3', '4', '5', '7', '8', '9', '10', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2555, '3': 3097, '4': 3675, '5': 4027, '7': 5337, '8': 5915, '9': 6276, '10': 7017, '1': 2255}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'NULL', '3': False, '4': True, '5': 'NULL', '6': 'UNASSIGNED', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AZ76rSV.jpg
OCR detection done with doctr
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6919.25
left top x of SN: 547.0312500000001
bottom right x of SN: 961.8437499999999
first t/f detection
TRUE
((5635.5, 2013.96875), (6249.625000000001, 2257.8125))
TRVE
((5617.437499999999, 2610.03125), (6222.531250000001, 2817.75))
TRue
((5599.375000000001, 3179.0), (6231.5625, 3395.75))
FALSE
((5581.3125, 3829.25), (6231.5625, 4027.9375))
FALSE
((5554.21875, 4461.4375), (6231.5625, 4669.15625))
TRUE
((5500.03125, 5021.375), (6096.09375, 5238.125))
FALSE
((5518.093750000001, 5527.125), (6258.65625, 5770.96875))
TRUE
((5554.21875, 6059.96875), (6195.437500000001, 6276.71875))
TRUE
((5572.281250000001, 6556.6875), (6150.28125, 6773.4375))
TRVE
((5518.093750000001, 7252.09375), (6177.375, 7450.78125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2835, '3': 3233, '4': 3829, '5': 4425, '6': 5048, '7': 5454, '8': 6069, '9': 6484, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fW3Q3I0.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5463.906250000001, 2519.71875), (5816.125000000001, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5400.687499999999, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
Trve
((5409.718750000001, 5373.59375), (5825.15625, 5572.28125))
Trve
((5427.781249999999, 5834.1875), (5825.15625, 6114.15625))
Fale
((5436.812500000001, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5816.125000000001, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3630, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NIDRNKM.jpg
rotation started
['11', '2', '00', '2', '', 'F', 'A', 'CT', 'a', 'N', '1', '2', 'P', '&', '1', 'E', '2', '8', 'I', '#', 'a', 'it', 'I', ':', 'I', 'I', 'I', 'E', 'I', 'se', 'E', 'I', 'E', 't', '2', 'I', 'I', 'E', 'I', 'I', '8', 'I', 'E', 'E', 'I', 'I', 'I', 'E', '8', 'I', 'E', 'I', 't', 'a', 'e', 'I', '4', '', '8', 'E', '-', 'a', '2', 'E', 'E', '1', 'I', 'E', 'E', '9', 'P', 'a', 'E', 'e', 'E', 'E', 'I', 'E', ':', '8', 'I', 'of', '2', '9', 'E', 'E', 'tn', 'E', 'f', 'I', 'Q', 'E', 'B', 'I', 'I', 'I', 'a', 'f', 'I', '8', '2', 'a', 'I', 'E', '-', 'I', 'I', 'E', '€', 'I', '8', 'I', 'E', 'I', 'e', 'I', 't', 'f', ':', '2', 'I', '1', 'g', '2', 'I', 'I', 'I', 'I', '2', '€', '9', 'f', 'I', 'E', 'I', 'E', 'F', 'I', 'I', 'I', 'I', '-', 'I', 'E', '9', '8', 'E', 'I', 'E', 'I', 'I', 'I', 'E', 'I', 'tn', 'I', 'p', '€', 'I', '1', 'I', 'E', '2', 'it', '-', 'I', 'E', '2', 'E', 'E', 'E', 'I', '2', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'g', 'a', 'i', '1', 'I', ':', 'I', 'E', 'it', 'I', 'I', 'I', '7', 'I', 't', 'I', '€', 'E', 'I', 'I', 'I', 'E', '€', 'I', 'E', '€', 'I', 'I']
rotation started
['aua', '-Ur', 'Surayaano', '"egep', 'ueosun', "'mou", '01', 'ITOM', 'azireioues', 'zou', 'op', '7e47', 'egep', 'Surureng', 'Jo', 'YSLI', 'eug', "'WAS", 'UI', 'pjeurered', 'D', 'ay7', 'Jo', 'OnTeA', 'y8ry', 'e', 'YIIM', 'OT', 'WAS', '1SAI-SA-BUO', 'ueya', 'JOMOTS', 'SI', 'WAS', 'OUO-SA-auo', 'Sursn', 'OPD', 'UI', 'sTegop', 'JO', 'osIou', 'oytoads', 'amgdes', '01', 'ULIBOT', 'Keu', 'se', "'soseaIo", 'lapou', 'aya', 'Mel', 'uonorpead', 'B', 'Suryeur', "'sessepo", 'Jo', 'pequnu', 'a81eT', 'B', 'YAIM', 'suerqoud', 'ssepprmur', 'JOI', '6', 'J', 'Y', 'eoeds', 'TeurBuo', 'au7', 'uI', 'meQuII-uou', 'aq', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uoisipep', 'AUL', '8', 'sapou', 'Jo', 'pequnu', 'au7', '07', 'Teuorodord', 'DAgJ', 'Atpaup', 'SI', 'BOIL', 'UOISIDOZI', 'ou7', 'UI', 'uomorpard', 'B', 'Suryeur', 'JOJ', 'pammbar', 'OWIL', 'OUL', 'L', 'MCL', '"uorgnqugsip', 'uerssnes', 'B', 'SAeMTe', 'SI', 'suorgnquasip', 'uerssnes', 'OM2', 'Jo', 'aIgXIU', '4', '9', 'Teoay', 'pue', 'LOISIO', 'MoL', '-aId', 'uoamgeq', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'DmSuIeg0eIeUD', 'Sureiado', 'BUBRE', 'BUL', 'C', 'Deyoy', '"YIOMIOU', 'Temeu', 'au7', 'UI', 'squerpels', 'au7', 'agnduoo', '01', 'pasn', 'PAE', 'SI', 'quaosap', 'querpe1s', 'OTIYM', "'S14810M", 'au7', 'agepdn', '01', 'pasn', 'SI', 'uome@odoxdypeg', '#', ':f', 'pue', 'I', 'SIO10OA', 'mo', 'Aue', 'IOJ', 'OLIgauI', 'aouensip', 'PITRA', 'B', 'SI', '@z)guoypusgaursoo', '-', 'I', '&', 'Teuorsueuump-P', 'Jayisselo', 'meOUIT-uou', 'B', 'SI', 'NNY', '2', 'DMOL', 'quaurdordap', 'JOJ', 'quotraumbar', 'a8e1og', 'aua', 'STeoidAL', 'I', 'ueya', '18181', 'yonur', 'SI', 'NNX', 'MmEL', 'JOJ', 'WAS', '"va/anuL', 'quauagess', 'NS', 'paqumnu', 'ITOI', 'mor', '31IM', ':amau', '211M', '(sad', 'OT)', '6', 'ul', 'aSTVI', 'IO', 'INUL', 'SIa11e1', 'Teardeo', 'reapo', 'pue', 'Suruumpureu']
rotation started
['E', 'à', 'E', 'I', 'à', 'N', 'is', 'I', 'I', '3', '2', '3', '3', ':', 'a', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'à', 'I', 'E', 'a', 'E', '/', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'I', 'a', 'I', 'I', 'a', '1', 'e', 'of', '6', ':', 'I', 'iE', '1', 'a', 'e', ':', 'I', 'I', 'I', 'of', 'I', '3', 'E', 'I', '1', 'ia', 'a', 's', 'E', 'à', 'E', 'e', 'o', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', '€', 'I', 'e', 'I', 'I', '', 'I', '8', 'is', 'e', 'e', 'I', 'i', 'iE', 'I', '8', 'I', 'E', 'I', ':', '1', 'I', 'e', 'iE', 'o', 'I', 'E', '1', 'I', '2', 'a', '-', '-', ':', 'a', 'o', 'a', 'of', 'I', 'E', 'E', '0', 'I', 'I', '-', 'of', 'de', 'I', '1', 'o', 'i', '-', 'a', 'e', ':', 's', '$', 'I', 'à', 'I', 'a', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'I', 'I', 'I', '1', 'E', '', 'is', 'I', 'I', '-', 'of', ':', 'is', 'e', 'à', ':', '2', 'I', 'is', 'e', 'S', 'I', 'E', 'e', 'E', 'a', 'A', 'I', 'is', 'o', 'I', 'a', ':', 'I', 'I', '1', 'I', 'E', '1', 'I', 'I', 'a', 'S2', 'I', 'a', 'e', 'E', 'I', 'of', 'I', 'I', 'I', 'I', 'E', '-', 'A', 'E', 'E', '7', '1', '4', '10', '', 'I', '0O', 'o', 'L', '9']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALS', 'Tywd', 'SN', 'Statement', 'than', 'SVM', 'for', 'is', 'much', 'larger', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', 'Tue', 'Su', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'd-dimensional', '3', '1', '-', 'cosineSimalarifyz.g)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'vectors', 'I', 'and', 'J.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TEEL', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Falsl', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyul', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TJul', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'Falad', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'r', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'original', 'space.', 'Tul', 'making', 'a', 'prediction', 'Toul', 'or', 'details', 'in', 'Fall', 'the']
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:30:14] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : NIDRNKM.jpg
[2024/06/28 14:30:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:30:16] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.12234711647033691
[2024/06/28 14:30:17] ppocr DEBUG: rec_res num  : 35, elapsed : 1.3277537822723389
[2024/06/28 14:30:18] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:30:18] ppocr DEBUG: dt_boxes num : 37, elapsed : 0.17838191986083984
[2024/06/28 14:30:20] ppocr DEBUG: rec_res num  : 37, elapsed : 1.2339680194854736
['9', '10', '8', '9', 'SNStatement', '3', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'proportional to the number of nodes.', 'cision and Recall.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'used to compute the gradients in the neural network.', 'vectors x and y', 'KNN is a non-linear classifier.', 'deployment.', 'False', 'Tul', 'Toue', 'Fase', 'Toe', 'Toue', 'TRUE/FALS', 'Toue', 'Falsl', 'Toue']
[2024/06/28 14:30:20] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:30:21] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.12029123306274414
[2024/06/28 14:30:23] ppocr DEBUG: rec_res num  : 36, elapsed : 1.4587469100952148
['10', '6', '8', 'DAYOy', '9', '5', 'DAYoy', 'mry', '2', 'NS']
[2024/06/28 14:30:23] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:30:24] ppocr DEBUG: dt_boxes num : 37, elapsed : 0.1219935417175293
[2024/06/28 14:30:25] ppocr DEBUG: rec_res num  : 37, elapsed : 1.3144118785858154
['DAYoy', 'mry', 'DAOy', 'TuL', 'NS', '2', '3', '5', '6', '7', '8', '6', '10']
[2024/06/28 14:30:26] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:30:27] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.11803102493286133
[2024/06/28 14:30:28] ppocr DEBUG: rec_res num  : 35, elapsed : 1.2324414253234863
['Write your roll number here:', 'TRUE/FALS', 'Statement', 'SN', 'ToWe', 'deployment.', 'Toue', 'KNN is a non-linear classifier', '2', 'hue', '3', 'vectors x and y.', 'Ftttl', '4', 'Falol', 'used to compute the gradients in the neural network.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'Toe', '5', 'cision and Recall.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', '6', 'Toe', 'The Time required for making a prediction in the Decision Tree is directly', 'Fabe', 'proportional to the number of nodes.', '8', 'Toe', '9', 'Tre', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'False']
OCR detection done
left top x of SN: 778.0
bottom right x of SN: 1155.0
left top y of SN: 1676.0
bottom right y of SN: 1961.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/NIDRNKM.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OAg9Tcu.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6494.781249999999
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5165.875, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5165.875, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5897.406250000001, 5102.65625))
FALSE
((5165.875, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5156.84375, 5825.15625), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6502.5))
TRVE
((5211.031249999999, 6999.21875), (5825.15625, 7170.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3233, '4': 3793, '5': 4362, '6': 4931, '7': 5310, '8': 5879, '9': 6267, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5ZXQiqK.jpg
OCR detection done with doctr
left top x of T/F: 909.482421875
bottom right x of T/F: 1303.173828125
left top x of SN: 44.814453125000014
bottom right x of SN: 282.822265625
first t/f detection
for
((875.9765625, 394.775390625), (911.42578125, 422.16796875))
d-dimensional
((780.9082031249999, 562.353515625), (930.76171875, 604.248046875))
collision happend with box:562.353515625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
F
((982.3242187500001, 641.30859375), (1019.384765625, 689.6484375))
text1 i.e the prev text is the winner
collision happend with box:562.353515625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((829.248046875, 668.701171875), (911.42578125, 699.31640625))
text1 i.e the prev text is the winner
collision happend with box:562.353515625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((909.814453125, 668.701171875), (935.595703125, 694.482421875))
text1 i.e the prev text is the winner
T
((991.9921875, 855.615234375), (1033.88671875, 892.67578125))
collision happend with box:855.615234375 and text:T solving on the basis of percent match boxes
the current box specification are
Pre-
((890.4785156250001, 766.9921875), (943.65234375, 797.607421875))
text2 i.e the incoming text is the winner
collision happend with box:766.9921875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
distribution.
((819.580078125, 866.89453125), (953.3203125, 902.34375))
text2 i.e the incoming text is the winner
collision happend with box:866.89453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
dirèctly
((872.7539062500001, 936.181640625), (954.9316406250001, 966.796875))
text1 i.e the prev text is the winner
collision happend with box:866.89453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
6oT
((964.599609375, 934.5703125), (1095.1171875, 981.298828125))
text1 i.e the prev text is the winner
collision happend with box:866.89453125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
F
((1009.7167968750001, 1015.13671875), (1045.166015625, 1057.03125))
text1 i.e the prev text is the winner
space:
((893.701171875, 1039.306640625), (961.376953125, 1069.921875))
collision happend with box:1039.306640625 and text:space: solving on the basis of percent match boxes
the current box specification are
prediction
((861.474609375, 1105.37109375), (972.6562500000001, 1140.8203125))
text2 i.e the incoming text is the winner
collision happend with box:1105.37109375 and text:prediction solving on the basis of percent match boxes
the current box specification are
overfitting
((834.08203125, 1208.49609375), (946.875, 1243.9453125))
text2 i.e the incoming text is the winner
collision happend with box:1208.49609375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((843.75, 1242.333984375), (916.259765625, 1274.560546875))
text2 i.e the incoming text is the winner
collision happend with box:1242.333984375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((943.65234375, 1240.72265625), (983.935546875, 1268.115234375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '7', '9', '10']
the assigned keys are ['2', '3', '5', '6', '8']
['2', '3', '5', '6', '8', '2', '3', '5', '6', '8']
printing the number dict y_coordinate
{'2': 554, '3': 617, '5': 821, '6': 924, '8': 1092, '1': 254}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0CtvlvW.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6377.375
left top x of SN: 321.2499999999999
bottom right x of SN: 727.0312500000001
first t/f detection
TRVE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5292.312499999999, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4876.875))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2510, '3': 3061, '4': 3621, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : I6Y9leA.jpg
OCR detection done with doctr
left top x of T/F: 5481.000000000001
bottom right x of T/F: 6702.5
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
first t/f detection
ToUe
((5536.156249999999, 1806.25), (6132.218749999999, 2059.125))
Falge
((5527.125, 2293.9375), (6213.499999999999, 2591.96875))
false
((5572.281250000001, 2926.125), (6105.124999999999, 3197.0625))
Toue.
((5572.281250000001, 3883.4375), (6376.062499999999, 4163.40625))
TOUe
((5599.375000000001, 4560.78125), (6222.531250000001, 4768.5))
fabe
((5707.750000000001, 5165.875), (6303.812500000001, 5472.9375))
toJe.
((5599.375000000001, 5780.0), (6276.718750000001, 6087.0625))
ToVe.
((5635.5, 6484.4375), (6358.000000000001, 6728.28125))
tove.
((5608.40625, 6963.09375), (6321.874999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2420, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5897, '9': 6294, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gMDq8yp.jpg
OCR detection done with doctr
left top x of SN: 93.357421875
bottom right x of SN: 309.16015625
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
collision happend with box:389.16015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((888.328125, 655.345703125), (961.490234375, 684.921875))
collision happend with box:655.345703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (966.16015625, 790.7734375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
TRUE
((886.7714843750001, 927.7578125), (959.93359375, 957.333984375))
collision happend with box:927.7578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((889.8847656249999, 1016.486328125), (977.056640625, 1046.0625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((891.4414062500001, 1095.875), (941.25390625, 1127.0078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((941.25390625, 1098.98828125), (972.38671875, 1128.564453125))
text1 i.e the prev text is the winner
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((892.998046875, 1212.623046875), (972.38671875, 1240.642578125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 390, '2': 490, '3': 558, '4': 658, '5': 759, '7': 927, '8': 1028, '9': 1098, '10': 1201}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yvobPIk.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Toue
((5445.84375, 1986.875), (5969.656249999999, 2212.65625))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4244.6875), (5960.625, 4443.375))
Tue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5301.34375), (5960.625, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Tue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2763, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Tybelpt.jpg
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6449.625000000001
first t/f detection
TPUE
((5391.65625, 2492.625), (5906.4375, 2673.25))
FALSE
((5346.499999999999, 2980.3125), (5969.656249999999, 3142.875))
TRUE
((5400.687499999999, 3458.96875), (5897.406250000001, 3630.5625))
TRUE
((5301.343750000001, 4009.875), (5789.031250000001, 4181.46875))
FAUSE
((5391.65625, 4596.90625), (5933.53125, 4732.375))
FALSE
((5274.250000000001, 5048.46875), (5870.312500000001, 5220.0625))
FALSE
((5292.312499999999, 5527.125), (5969.656249999999, 5698.71875))
TRUE
((5328.437500000001, 6014.8125), (5798.0625, 6150.28125))
FALSE
((5310.375, 6520.5625), (5924.500000000001, 6674.09375))
TRUE
((5355.531250000001, 7225.0), (5861.281249999999, 7360.46875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2366, '2': 2917, '3': 3287, '4': 3847, '5': 4407, '6': 4985, '7': 5364, '8': 5942, '9': 6321, '10': 6908}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vpI8WEb.jpg
OCR detection done with doctr
left top x of T/F: 5598.40625
bottom right x of T/F: 6828.937500000001
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
FALSE
((5635.5, 1950.75), (6222.531250000001, 2158.46875))
CALSE
((5707.750000000001, 2528.75), (6348.968749999999, 2781.625))
TRUG
((5707.750000000001, 2772.59375), (6267.687499999999, 2980.3125))
FALSE
((5671.624999999999, 3133.84375), (6330.906250000001, 3386.71875))
TYUE
((5545.187500000001, 3675.71875), (6168.343750000001, 3883.4375))
FALSE
((5572.281250000001, 4136.3125), (6186.406249999999, 4344.03125))
FALSE
((5608.40625, 4849.78125), (6195.437500000001, 5066.53125))
TRUE
((5536.156249999999, 5545.1875), (6123.1875, 5743.875))
FALSE
((5590.343749999999, 6032.875), (6231.5625, 6231.5625))
FOLSE
((5572.281250000001, 6574.75), (6150.28125, 6791.5))
TRUE
((5608.40625, 7152.75), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2619, '3': 3197, '4': 3784, '5': 4172, '6': 4759, '7': 5527, '8': 6114, '9': 6511, '10': 7288}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nrdsLDa.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 763.15625
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5527.125, 1941.71875), (5843.218750000001, 2203.625))
Fle
((5445.84375, 2519.71875), (5825.15625, 2745.5))
Trve
((5409.718750000001, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5409.718750000001, 3711.84375), (5752.906249999999, 3946.65625))
False
((5418.75, 4271.78125), (5879.34375, 4506.59375))
Tre
((5364.5625, 4840.75), (5707.750000000001, 5039.4375))
True
((5418.75, 5373.59375), (5834.187499999999, 5572.28125))
Trve
((5427.781249999999, 5843.21875), (5825.15625, 6123.1875))
Fale
((5427.781249999999, 6358.0), (5825.15625, 6583.78125))
Tre
((5373.593749999999, 7080.5), (5798.0625, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2591, '3': 2998, '4': 3630, '5': 4244, '6': 4858, '7': 5256, '8': 5879, '9': 6285, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k2F7UH9.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 308.5078125
left top x of T/F: 870.421875
bottom right x of T/F: 1235.4609375
first t/f detection
F
((921.5546875, 414.4921875), (946.8671875000001, 452.4609375))
collision happend with box:414.4921875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 534.7265625))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((900.98828125, 958.7109375), (946.8671875000001, 990.3515625))
T
((912.0625, 685.01953125), (948.44921875, 722.98828125))
collision happend with box:685.01953125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (942.12109375, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (948.44921875, 912.83203125))
text2 i.e the incoming text is the winner
F
((910.48046875, 1042.55859375), (937.375, 1083.69140625))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1126.40625), (938.95703125, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1126.40625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 586, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1226}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wCaaOdq.jpg
OCR detection done with doctr
left top x of T/F: 4830.75
bottom right x of T/F: 6160.625
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
for
((4642.0625, 1968.8125), (4831.71875, 2131.375))
collision happend with box:1968.8125 and text:for solving on the basis of percent match boxes
the current box specification are
FALSE
((4922.03125, 1896.5625), (5563.249999999999, 2158.46875))
text2 i.e the incoming text is the winner
L
((4958.15625, 2465.53125), (5165.875, 2628.09375))
collision happend with box:2465.53125 and text:L solving on the basis of percent match boxes
the current box specification are
RUE
((5165.875, 2411.34375), (5635.5, 2619.0625))
text2 i.e the incoming text is the winner
d-dimensional
((4100.1875, 2890.0), (4958.15625, 3169.96875))
collision happend with box:2890.0 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((4976.21875, 2908.0625), (5536.156249999999, 3124.8125))
text2 i.e the incoming text is the winner
descent
((4389.1875, 3486.0625), (4867.84375, 3693.78125))
collision happend with box:3486.0625 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((4858.8125, 3495.09375), (5003.3125, 3639.59375))
text1 i.e the prev text is the winner
collision happend with box:3486.0625 and text:descent solving on the basis of percent match boxes
the current box specification are
FALSE
((5066.53125, 3440.90625), (5798.0625, 3693.78125))
text2 i.e the incoming text is the winner
Pre
((4768.5, 4036.96875), (5030.40625, 4190.5))
collision happend with box:4036.96875 and text:Pre solving on the basis of percent match boxes
the current box specification are
TRUE
((5156.84375, 4000.84375), (5807.093749999999, 4253.71875))
text2 i.e the incoming text is the winner
distribution
((4380.15625, 4578.84375), (5075.5625, 4795.59375))
collision happend with box:4578.84375 and text:distribution solving on the basis of percent match boxes
the current box specification are
FALSE
((5192.96875, 4488.53125), (5879.34375, 4732.375))
text1 i.e the prev text is the winner
directly
((4678.1875, 4958.15625), (5138.78125, 5138.78125))
collision happend with box:4958.15625 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5265.218749999999, 4940.09375), (5933.53125, 5156.84375))
true and false collision so given priority to text2 which is the incoming text
space.
((4813.65625, 5527.125), (5202.0, 5698.71875))
collision happend with box:5527.125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5319.406249999999, 5418.75), (5933.53125, 5635.5))
text2 i.e the incoming text is the winner
collision happend with box:5418.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
original
((4353.0625, 5527.125), (4831.71875, 5734.84375))
text2 i.e the incoming text is the winner
prediction
((4642.0625, 5888.375), (5265.218749999999, 6087.0625))
collision happend with box:5888.375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5337.46875, 5852.25), (5960.625, 6105.125))
text2 i.e the incoming text is the winner
overfitting
((4497.5625, 6457.34375), (5129.75, 6656.03125))
detals
((4560.78125, 6647.0), (4967.1875, 6827.625))
collision happend with box:6647.0 and text:detals solving on the basis of percent match boxes
the current box specification are
the
((5120.71875, 6619.90625), (5337.46875, 6782.46875))
text1 i.e the prev text is the winner
collision happend with box:6647.0 and text:detals solving on the basis of percent match boxes
the current box specification are
FALSE
((5391.65625, 6511.53125), (6096.09375, 6728.28125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are []
printing the number dict y_coordinate
{}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2xCuXpB.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6548.968749999999
left top x of SN: 420.59375
bottom right x of SN: 826.3749999999999
first t/f detection
TRUE
((5427.781249999999, 1842.375), (5816.125000000001, 2013.96875))
FALSE
((5427.781249999999, 2384.25), (5879.34375, 2546.8125))
FALSE
((5445.84375, 2962.25), (5915.468749999999, 3133.84375))
TRUE
((5427.781249999999, 3495.09375), (5807.093749999999, 3630.5625))
FALSE
((5491.000000000001, 3883.4375), (5951.593750000001, 4064.0625))
FALSE
((5463.906250000001, 4569.8125), (5933.53125, 4750.4375))
TRUE
((5445.84375, 5283.28125), (5834.187499999999, 5445.84375))
TRUE
((5472.9375, 5761.9375), (5852.25, 5924.5))
TRUE
((5518.093750000001, 6285.75), (5915.468749999999, 6448.3125))
TRUE
((5536.156249999999, 6872.78125), (5942.562499999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2465, '3': 3025, '4': 3594, '5': 3973, '6': 4542, '7': 5292, '8': 5870, '9': 6249, '10': 7008}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Bk5vzlP.jpg
OCR detection done with doctr
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRME
((5202.0, 2176.53125), (5761.937500000001, 2402.3125))
TRUE
((5138.78125, 2700.34375), (5798.0625, 2917.09375))
FALSE
((5238.124999999999, 3169.96875), (5816.125000000001, 3386.71875))
FALSE
((5211.031249999999, 3757.0), (5834.187499999999, 3973.75))
FALSE
((5220.062500000001, 4362.09375), (5761.937500000001, 4578.84375))
FALSE
((5256.1875, 4795.59375), (5852.25, 5057.5))
FALSE
((5211.031249999999, 5292.3125), (5816.125000000001, 5509.0625))
TRUETKUE
((5247.156250000001, 5816.125), (6249.625000000001, 6023.84375))
FALSE
((5247.156250000001, 6249.625), (5825.15625, 6511.53125))
RUE
((5391.65625, 6836.65625), (5816.125000000001, 7053.40625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2517
printing the number dict y_coordinate
{'2': 2817, '3': 3215, '4': 3784, '5': 4353, '6': 4940, '7': 5328, '8': 5906, '9': 6312, '10': 6872, '1': 2517}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bFD9eUD.jpg
rotation started
['of', '6', '00', '', 'o', 'CT', '4', 'a', 'N', 'LH', 'I', '2', '8', 'I', 'iE', ':', '8', 'a', 'I', 'I', 'I', 'I', 'E', 'I', 'ee', 'E', 'I', '3', 'it', 'I', 'I', 'E', 'a', 'I', '8', 'I', 'I', 'E', 'E', '1', 'I', 'E', 'I', '8', 'I', 'E', 'I', 'it', 'a', '€', 'E', 'I', 'I', '11', '2', 's', 'E', 'E', '-', 'E', '2', 'E', 'E', 'I', 'E', 'I', 'E', 'F', 'B', 'I', 'I', 'e', 'E', 'I', 'I', '€', 'I', 'E', 'I', 'E', 'E', '8', 'I', 'of', '2', 'I', 'I', 'E', 'E', 'E', 'E', '-', 'lE', 'of', 'I', 'I', 'Q', 'E', 'E', 'P', 'of', 'I', 'I', 'I', 'p', 'I', 'I', 'F', '>', 'I', 'F', 'a', 'F', 'I', 'E', 'f', '8', 'E', 'I', 'a', 'I', 'E', 'I', 'it', 'I', 'a', '€', 'I', '1', '1', '8', 'I', 'E', 'E', '2', 'I', 'E', 'E', 'lE', 'I', '-', 'E', '2', 'E', 'I', 'E', '€', 'E', 'g', '8', 'I', 'I', '2', 'I', 'f', 'i', 'DB', '1', 'E', 'I', 'I', 'I', 'I', '2', '2', '€', '2', 'of', 'I', 'E', 'I', 'E', 'F', 'it', 'E', 'E', 'I', 'a', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'E', 'E', 'I', 'E', '8e', 'I', 'I', '1', ':', 'it', 'I', 'I', 'I', 'I', 'F', 't', 'I', '-', 'i', 'i', '-', 'A', '-', '-', 'E', ':', '-', 'I', 'a', '-', 'O', '141']
rotation started
['eep', 'uoosun', "'Mou", '01', 'TTOM', 'azire.oues', 'jou', 'op', 'gey1', 'ejep', 'Surureng', 'oul', 'ul', 'sipezop', 'JO', 'osTou', 'oypeds', 'emgdeo', '01', 'UIeOT', 'Keur', 'popour', 'au1', 'se', "'soseaId", '-UIT', 'Sumayiono', 'Jo', 'YSII', 'ou1', "'IAS", 'uI', 'popourered', 'D', 'auy', 'jo', 'onTeA', '4814', 'e', 'YAIM', 'OI', 'Dul,', 'w', 'INAS', '980.I-SA-OUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Ouo-SA-OtO', 'Bursn', 'PMAL', 'PAL', 'aof', 'uonorpad', 'B', 'Suryeur', "'sossepp", 'Jo', 'poqunu', '081e1', 'B', 'YAIM', 'sularqoad', 'ssepprmu', 'JOI', '6', 'eoeds', 'TeurSTo', 'ou4', 'uT', 'JeOUII-uou', '0q', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoop', 'OUL', '8', '"sopou', 'Jo', 'roqunu', 'au7', '01', 'reuorodoud', 'Appaup', 'SI', 'OOIL', 'LOISIDOC', 'ou4', 'ul', 'uororpard', 'B', 'Suryeur', 'JOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '"uornquasip', 'uerssneD', 'B', 'SRenre', 'SI', 'suorgnquasip', 'uerssnes', 'OMI', 'Jo', 'amgXI', 'V', '9', '2L', '2MAL', 'TreDOH', 'pue', 'UOISIO', '-ld', 'udamgoq', 'gord', 'B', 'SI', 'OAINO', '(Do4)', 'onstutagpereud', 'Surgerado', 'IOAIODOH', 'OUL', 'S', 'YIOMIOU', '[emou', 'ou7', 'uI', 'squerpe1s', 'au4', 'agnduoo', '01', 'posn', 'DMGL', 'SI', 'quaosap', 'querpe.8', 'OTIYM', "'sq81OM", 'oU9', 'agepdn', '01', 'posn', 'SI', 'uoneBodoxdypeg', '#', ':f', 'pue', 'I', 'SIO1DOA', 'R7I', 'Kue', 'JOJ', 'ouIgour', 'oouensip', 'PITBA', 'B', 'SI', '(Az/Aquopuagausoy', '-', 'I', '&', 'Teuorsuauump-P', 'Jayissep', 'JeOUII-uou', 'e', 'SI', 'NNY', '2', 'muL', 'DYML', 'quaurdordap', 'quouaumbar', 'a8e1oqs', 'aul', 'STeoidAL', 'I', 'ueys', '108101', 'yponur', 'SI', 'NNX', 'JOJ', 'JOJ', 'WAS', 'quauagess', 'NS', 'MIVA/AnaL', 'Joqunu', 'ITO.I', 'mor', 'O9LIM', ':0.OU', 'OO1M', '(sad', 'OT)', '6', 'Ul', 'ASTVA', 'IO', 'ANUL', 'S.I09101', 'Tuarduo', 'Surguumpurey', '1BOpD', 'pure']
rotation started
['%', '-', 'CR', 'MIy', 'I', '2', 'à', 'à', '2', 'à', '2', '2', 'I', 'I', '2', 's', 'E', 'a', '-', 'i', 'is', '2', 'a', 'I', 'is', 'I', 'E', 'I', 'E', 'e', 'E', 'I', '1', 'I', 'i', 'I', 'E', 'I', 'I', 'I', 'I', 'd', 'I', 'e', 'of', 'a', '-', 'I', '1', 'E', ':', '8', ':', 'e', 'I', 'e', 'I', 'a', 'I', 'E', 'I', 'of', ':', '1', 'I', 'iis', 'e', 'I', 'a', 'o', 'I', 'I', '-', 'I', 'E', ':', 'o', 'a', '-', '-', 'E', 'a', 'I', 'of', 'I', 'E', 'I', 'I', 'I', 'I', 'of', 'E', 'is', '4', 'a', '-', ':', 'I', 'a', 'I', 'I', 'I', 'à', 'a', '1', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', 'I', '8', 'e', 'e', 'a', 'i', 'o', 'I', 'I', 'I', 'of', 'de', '2', 'I', 'is', 'e', 'de', '-', 'I', '5', 'I', 'I', 'E', '8', 'I', 'à', ':', 'E', 'e', 'E', 'of', 'I', 'e', '', 'I', '#', 'E', ':', 's', '5', 'is', 'a', 'I', '9', 'I', 'à', 'I', 'I', 'I', ':', 'I', '1', '-', '1', 'I', 'I', 'I', 'I', 'T', 'à', '.', '<', 'I', 'e', 'a', 'E', '€', 'I', '1', 'E', '-', 'e', 'E', '-', 'E', 'e', 'o', ':', '8', 'is', 'i', 'I', 'i', 'I', 'I', 'I', 'à', 'à', 'I', '€', 'I', 'I', '7', '1', '2', 'S', '4', '12', '6', '-', '00', '', '09']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', '1', 'roll', 'number', 'here:', '', 'HA', 'Write', 'your', 'TRUE/FAISI', 'Twl', 'True', 'SN', 'Statement', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'metric', 'for', 'd-dimensional', '3', '1', '-', 'cosine-Simalaritylr.u)', 'is', 'a', 'valid', 'distance', 'any', 'Falye', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'Tque', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyue', 'True', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'Falxe', 'True', 'Tyue', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'M', 'Ca', 'AA', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'Truee']
OCR detection done with doctr
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:31:39] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : bFD9eUD.jpg
[2024/06/28 14:31:40] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:31:40] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.1474440097808838
[2024/06/28 14:31:43] ppocr DEBUG: rec_res num  : 41, elapsed : 2.139369010925293
[2024/06/28 14:31:43] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:31:44] ppocr DEBUG: dt_boxes num : 42, elapsed : 0.14652466773986816
[2024/06/28 14:31:46] ppocr DEBUG: rec_res num  : 42, elapsed : 1.716679334640503
['SN', '1', '10', '9', '6', '8', '2', '3', 'KNN is a non-linear classifier.', 'Statement', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', 'deployment.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'Backpropogation is used to update the weights, while gradient descent is', 'With a high value of the C parameter in SVM, the risk of overfitting in-', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'proportional to the number of nodes.', 'cision and Recall.', 'used to compute the gradients in the neural network.', 'vectors x and y', 'training data that do not generalize well to new, unseen data.', 'creases, as the model may learn to capture specific noise or details in the', 'Write your roll number here:', 'True', 'True', 'TRUE/FALS', 'Fale', 'The', 'Trhe', 'The', 'True', 'Tne', 'Taue', 'False']
[2024/06/28 14:31:47] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:31:47] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.11723995208740234
[2024/06/28 14:31:49] ppocr DEBUG: rec_res num  : 41, elapsed : 1.998462200164795
['onu,', '10', 'Tre', '6', 'Te', '8', 'Te', 'Tne', 'C', 'Tue', 'Te', 'Te', 'NS']
[2024/06/28 14:31:50] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:31:51] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.1177835464477539
[2024/06/28 14:31:53] ppocr DEBUG: rec_res num  : 41, elapsed : 1.6216435432434082
['Tne', 'Te', 'Te', 'Te', 'Tre', 'NS', '10', '2', '3', '5', '6', '8', '7', '9', '1']
[2024/06/28 14:31:53] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:31:54] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.11618685722351074
[2024/06/28 14:31:56] ppocr DEBUG: rec_res num  : 41, elapsed : 2.0414116382598877
['9.(10 pts) Write TRUE or FALSE in capital letters and clear handwriting', 'Write your roll number here:', 'TRUE/FALS?', 'NAME', 'Statement', 'SN', 'Tne', 'Typically, the storage requirement for KNN is much larger than SVM for', 'deployment.', 'True', 'KNN is a non-linear classifier.', '2', 'Fale', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', '3', 'vectors x and y', 'Taue', 'Backpropogation is used to update the weights, while gradient descent is', 'used to compute the gradients in the neural network', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', '5', 'The', 'cision and Recall.', 'Tme', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', '6', 'The Time required for making a prediction in the Decision Tree is directly', '7', 'Fale', 'proportional to the number of nodes.', 'Tre', 'The decision boundary of an SVM can be non-linear in the original space.', '8', 'True', '9', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'With a high value of the C parameter in SVM, the risk of overfitting in-', 'The', '10', 'creases, as the model may learn to capture specific noise or details in the', 'training data that do not generalize well to new, unseen data.']
OCR detection done
left top x of SN: 330.0
bottom right x of SN: 736.0
left top y of SN: 1748.0
bottom right y of SN: 2024.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/bFD9eUD.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WbvDqtc.jpg
OCR detection done with doctr
left top x of T/F: 5571.3125
bottom right x of T/F: 6828.937500000001
left top x of SN: 285.125
bottom right x of SN: 708.96875
first t/f detection
Trul
((5707.750000000001, 1661.75), (6078.031249999999, 1887.53125))
False
((5590.343749999999, 2221.6875), (6041.90625, 2438.4375))
False
((5653.562500000001, 2890.0), (6014.8125, 3079.65625))
Thue
((5653.562500000001, 3440.90625), (6032.875000000001, 3657.65625))
Tauue
((5662.59375, 3901.5), (5987.71875, 4100.1875))
Falac
((5662.59375, 4542.71875), (6078.031249999999, 4768.5))
Taue
((5698.718749999999, 5310.375), (6059.968750000001, 5500.03125))
Falee
((5779.999999999999, 5897.40625), (6150.28125, 6078.03125))
Taue
((5743.875, 6358.0), (6195.437500000001, 6619.90625))
collision happend with box:6358.0 and text:Taue solving on the basis of percent match boxes
the current box specification are
the
((5364.5625, 6330.90625), (5590.343749999999, 6475.40625))
text1 i.e the prev text is the winner
Thu
((5789.031250000001, 7044.375), (6132.218749999999, 7297.25))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6865
printing the number dict y_coordinate
{'6': 4759, '1': 2004, '2': 2582, '3': 3169, '4': 3775, '5': 4163, '7': 5563, '8': 6159, '9': 6565, '10': 6865}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9ho2npk.jpg
OCR detection done with doctr
left top x of SN: 68.03515625000003
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
collision happend with box:625.748046875 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1386.107421875, 753.796875), (1509.3242187500002, 809.365234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:753.796875 and text:True solving on the basis of percent match boxes
the current box specification are
Falte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:886.677734375 and text:Falte solving on the basis of percent match boxes
the current box specification are
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1036.470703125 and text:Falh solving on the basis of percent match boxes
the current box specification are
Felte
((1374.02734375, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1405.435546875, 1326.392578125), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1326.392578125 and text:Fula solving on the basis of percent match boxes
the current box specification are
False
((1410.267578125, 1449.609375), (1535.900390625, 1507.59375))
text2 i.e the incoming text is the winner
collision happend with box:1449.609375 and text:False solving on the basis of percent match boxes
the current box specification are
Trut
((1381.275390625, 1577.658203125), (1506.908203125, 1625.978515625))
text2 i.e the incoming text is the winner
collision happend with box:1577.658203125 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1407.8515625, 1703.291015625), (1511.740234375, 1761.275390625))
true and false collision so given priority to text2 which is the incoming text
Trut
((1374.02734375, 1879.66015625), (1489.99609375, 1935.228515625))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 864, '2': 761, '3': 862, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1688, '10': 1841}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : o6iFate.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6539.9375
left top x of SN: 610.25
bottom right x of SN: 1016.0312499999999
first t/f detection
TRUE
((5409.718750000001, 2059.125), (5879.34375, 2275.875))
TTRU
((5445.84375, 2628.09375), (5960.625, 2808.71875))
TRUE
((5436.812500000001, 3115.78125), (5951.593750000001, 3377.6875))
TRUE
((5463.906250000001, 3802.15625), (5933.53125, 4018.90625))
TRUE
((5436.812500000001, 4425.3125), (5897.406250000001, 4633.03125))
TRUE
((5463.906250000001, 4967.1875), (5906.4375, 5147.8125))
FALSE
((5481.968749999999, 5400.6875), (5960.625, 5617.4375))
TRUE
((5373.593749999999, 5951.59375), (5843.218750000001, 6123.1875))
TRVE
((5436.812500000001, 6439.28125), (5960.625, 6601.84375))
TRUE
((5400.687499999999, 7053.40625), (5870.312500000001, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2908, '3': 3287, '4': 3856, '5': 4416, '6': 4985, '7': 5355, '8': 5933, '9': 6321, '10': 6908}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y2z8DRH.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6539.9375
left top x of SN: 267.0624999999999
bottom right x of SN: 717.9999999999999
first t/f detection
TRUE
((5427.781249999999, 2004.9375), (5951.593750000001, 2212.65625))
TRUE
((5418.75, 2573.90625), (5915.468749999999, 2745.5))
FALSE
((5418.75, 3079.65625), (6132.218749999999, 3296.40625))
TRUE
((5409.718750000001, 3675.71875), (5969.656249999999, 3874.40625))
FALSE
((5481.968749999999, 4307.90625), (6078.031249999999, 4479.5))
FALSE
((5454.874999999999, 4840.75), (5969.656249999999, 5003.3125))
FALSE
((5418.75, 5283.28125), (6023.843749999999, 5481.96875))
chases,mahingaprediction
((3594.4374999999995, 6222.53125), (5238.124999999999, 6466.375))
TRVE
((5454.874999999999, 5798.0625), (5969.656249999999, 5969.65625))
TRUE
((5500.03125, 6267.6875), (6050.937499999999, 6466.375))
the
((5030.40625, 6990.1875), (5256.1875, 7152.75))
collision happend with box:6990.1875 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5491.000000000001, 6926.96875), (6069.0, 7125.65625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '10']
the assigned keys are ['2', '3', '5', '6', '7', '8', '9']
['2', '3', '5', '6', '7', '8', '9', '2', '3', '5', '6', '7', '8', '9']
printing the number dict y_coordinate
{'2': 2880, '3': 3242, '5': 4452, '6': 5048, '7': 5454, '8': 6050, '9': 6448, '1': 2580}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RZH24s7.jpg
OCR detection done with doctr
left top x of SN: 565.0937499999999
bottom right x of SN: 979.90625
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6449.625000000001
first t/f detection
Halse
((5229.09375, 2429.40625), (5770.96875, 2700.34375))
Halse
((5265.218749999999, 2917.09375), (5716.78125, 3142.875))
ttue
((5220.062500000001, 3395.75), (5680.656250000001, 3621.53125))
toue
((5283.28125, 3973.75), (5852.25, 4226.625))
False
((5310.375, 4515.625), (5734.843750000001, 4696.25))
Taue
((5220.062500000001, 5003.3125), (5689.6875, 5211.03125))
Truc
((5238.124999999999, 5481.96875), (5725.812499999999, 5698.71875))
True
((5202.0, 5987.71875), (5707.750000000001, 6159.3125))
Tbe
((5256.1875, 6502.5), (5716.78125, 6674.09375))
collision happend with box:6502.5 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((5752.906249999999, 6475.40625), (6150.28125, 6665.0625))
text2 i.e the incoming text is the winner
Tue
((5301.343750000001, 7008.25), (5825.15625, 7215.96875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3034, '3': 3413, '4': 3991, '5': 4551, '6': 5120, '7': 5491, '8': 6059, '9': 6430, '10': 7008}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : feQ7tcB.jpg
OCR detection done with doctr
left top x of SN: 1016.65625
bottom right x of SN: 1413.40625
left top x of T/F: 5327.46875
bottom right x of T/F: 6494.781249999999
first t/f detection
TRVE
((5391.65625, 2212.65625), (5870.312500000001, 2384.25))
TRVE
((5355.531250000001, 2700.34375), (5843.218750000001, 2871.9375))
FALSE
((5337.46875, 3179.0), (5789.031250000001, 3341.5625))
FALSE
((5337.46875, 3702.8125), (5807.093749999999, 3874.40625))
FALJE
((5283.28125, 4289.84375), (5779.999999999999, 4452.40625))
FALSE
((5265.218749999999, 4795.59375), (5761.937500000001, 4967.1875))
FALSE
((5220.062500000001, 5211.03125), (5698.718749999999, 5427.78125))
TRUE
((5165.875, 5698.71875), (5608.40625, 5906.4375))
TRVE
((5211.031249999999, 6150.28125), (5689.6875, 6330.90625))
TRVE
((5129.75, 6719.25), (5563.249999999999, 6936.0))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 2185, '2': 2682, '3': 3025, '4': 3567, '5': 4046}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Zfq18VD.jpg
OCR detection done with doctr
left top x of T/F: 5625.5
bottom right x of T/F: 6955.374999999999
left top x of SN: 808.9374999999999
bottom right x of SN: 1232.7812499999998
first t/f detection
TRUE
((5707.750000000001, 2158.46875), (6213.499999999999, 2375.21875))
TRUE
((5680.656250000001, 2790.65625), (6204.46875, 2971.28125))
TRUE
((5707.750000000001, 3242.21875), (6195.437500000001, 3422.84375))
FALSE
((5680.656250000001, 3883.4375), (6231.5625, 4091.15625))
FALSE
((5761.937500000001, 4524.65625), (6267.687499999999, 4696.25))
TRUE
((5743.875, 5057.5), (6231.5625, 5229.09375))
Teue
((5680.656250000001, 5536.15625), (6141.250000000001, 5716.78125))
TRUE
((5770.96875, 6087.0625), (6177.375, 6222.53125))
PRU
((5725.812499999999, 6601.84375), (6123.1875, 6764.40625))
collision happend with box:6601.84375 and text:PRU solving on the basis of percent match boxes
the current box specification are
FALSE
((6159.312499999999, 6610.875), (6665.0625, 6746.34375))
text2 i.e the incoming text is the winner
TRUE.
((5789.031250000001, 7161.78125), (6358.000000000001, 7324.34375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2447, '2': 3007, '3': 3386, '4': 3973, '5': 4551, '6': 5138, '7': 5536, '8': 6150, '9': 6547, '10': 7161}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : j6uC3Xk.jpg
OCR detection done with doctr
left top x of T/F: 5490.03125
bottom right x of T/F: 6792.812499999999
left top x of SN: 303.1875000000001
bottom right x of SN: 717.9999999999999
first t/f detection
True
((5689.6875, 2212.65625), (6430.249999999999, 2564.875))
True
((5734.843750000001, 2899.03125), (6520.562500000001, 3197.0625))
Tu
((5509.062499999999, 3449.9375), (6439.281250000001, 3784.09375))
Falu
((5509.062499999999, 4018.90625), (6358.000000000001, 4398.21875))
Falu
((5581.3125, 4614.96875), (6394.125, 4994.28125))
TrRLl
((5481.968749999999, 5220.0625), (6303.812500000001, 5518.09375))
Falle
((5463.906250000001, 5743.875), (6358.000000000001, 6078.03125))
Tyuu
((5409.718750000001, 6240.59375), (6186.406249999999, 6547.65625))
Tuu
((5481.968749999999, 6683.125), (6249.625000000001, 7026.3125))
Trul
((5400.687499999999, 7378.53125), (6231.5625, 7721.71875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2944, '3': 3359, '4': 3973, '5': 4587, '6': 5202, '7': 5599, '8': 6213, '9': 6619, '10': 7225}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uGqNWz5.jpg
OCR detection done with doctr
left top x of SN: 754.7499999999999
bottom right x of SN: 1169.5625
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6639.281250000001
first t/f detection
Halsc
((5373.593749999999, 2546.8125), (5933.53125, 2844.84375))
dalse
((5364.5625, 3034.5), (5843.218750000001, 3296.40625))
ttue
((5292.312499999999, 3522.1875), (5752.906249999999, 3747.96875))
toue
((5319.406249999999, 4118.25), (5870.312500000001, 4344.03125))
False
((5292.312499999999, 4624.0), (5743.875, 4849.78125))
Tauc
((5165.875, 5120.71875), (5635.5, 5355.53125))
Truc
((5156.84375, 5599.375), (5644.531249999999, 5825.15625))
Truc
((5075.5625, 6087.0625), (5581.3125, 6303.8125))
To
((5093.625, 6601.84375), (5554.21875, 6818.59375))
collision happend with box:6601.84375 and text:To solving on the basis of percent match boxes
the current box specification are
False
((5590.343749999999, 6610.875), (5996.749999999999, 6836.65625))
text2 i.e the incoming text is the winner
Tue
((5102.65625, 7116.625), (5635.5, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 2284, '2': 2862, '3': 3242, '4': 3811, '5': 4371}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uKXbpyN.jpg
OCR detection done with doctr
left top x of SN: 122.763671875
bottom right x of SN: 339.185546875
left top x of T/F: 831.1210937499999
bottom right x of T/F: 1189.84375
first t/f detection
lnndwriting
((716.6796875, 84.984375), (833.5332031250001, 127.4765625))
Tue
((841.1210937499999, 352.078125), (923.0703125, 386.982421875))
collision happend with box:352.078125 and text:Tue solving on the basis of percent match boxes
the current box specification are
True
((838.0859375, 429.474609375), (912.4472656249999, 467.4140625))
text2 i.e the incoming text is the winner
collision happend with box:429.474609375 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((833.5332031250001, 505.353515625), (906.376953125, 543.29296875))
text2 i.e the incoming text is the winner
collision happend with box:505.353515625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Faye
((819.8749999999999, 591.85546875), (892.71875, 622.20703125))
text1 i.e the prev text is the winner
Fauc
((812.287109375, 682.91015625), (891.201171875, 717.814453125))
collision happend with box:682.91015625 and text:Fauc solving on the basis of percent match boxes
the current box specification are
FaMe
((803.181640625, 761.82421875), (879.0605468750001, 798.24609375))
text1 i.e the prev text is the winner
collision happend with box:682.91015625 and text:Fauc solving on the basis of percent match boxes
the current box specification are
Fase
((797.1113281249999, 834.66796875), (869.955078125, 869.572265625))
text2 i.e the incoming text is the winner
collision happend with box:834.66796875 and text:Fase solving on the basis of percent match boxes
the current box specification are
True
((788.005859375, 916.6171875), (857.8144531250001, 956.07421875))
text2 i.e the incoming text is the winner
collision happend with box:916.6171875 and text:True solving on the basis of percent match boxes
the current box specification are
Tre
((777.3828125, 992.49609375), (848.708984375, 1030.435546875))
text1 i.e the prev text is the winner
True
((765.2421875, 1088.103515625), (848.708984375, 1130.595703125))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'NULL', '5': 'UNASSIGNED', '6': True, '7': True, '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '5', '8', '10']
the assigned keys are ['2', '3', '4', '6', '7', '9']
['2', '3', '4', '6', '7', '9', '2', '3', '4', '6', '7', '9']
printing the number dict y_coordinate
{'2': 475, '3': 430, '4': 528, '6': 705, '7': 770, '9': 921, '1': 175}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'NULL', '5': 'UNASSIGNED', '6': True, '7': True, '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qlwikIg.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6675.40625
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
first t/f detection
Taue
((5472.9375, 2050.09375), (5933.53125, 2275.875))
Thue
((5346.499999999999, 2601.0), (5834.187499999999, 2826.78125))
Taue
((5463.906250000001, 3061.59375), (5852.25, 3278.34375))
Tue
((5310.375, 3747.96875), (5725.812499999999, 3973.75))
Tue
((5364.5625, 4389.1875), (5807.093749999999, 4605.9375))
Fale
((5355.531250000001, 4858.8125), (5798.0625, 5075.5625))
Tyue
((5391.65625, 5400.6875), (5852.25, 5635.5))
Tue
((5409.718750000001, 5888.375), (5879.34375, 6105.125))
Toue
((5427.781249999999, 6367.03125), (5870.312500000001, 6583.78125))
fabe
((5391.65625, 7044.375), (5779.999999999999, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2754, '3': 3151, '4': 3747, '5': 4325, '6': 4922, '7': 5310, '8': 5906, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xPcfWPI.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6521.874999999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1016.0312499999999
first t/f detection
TRUE
((5409.718750000001, 2050.09375), (6078.031249999999, 2312.0))
TRUE
((5445.84375, 2646.15625), (6132.218749999999, 2908.0625))
FALSE
((5463.906250000001, 3088.6875), (6186.406249999999, 3341.5625))
TRUE
((5445.84375, 3802.15625), (6078.031249999999, 4009.875))
FALSE
((5427.781249999999, 4362.09375), (6141.250000000001, 4569.8125))
FALSE
((5472.9375, 4840.75), (6105.124999999999, 5048.46875))
FALSE
((5481.968749999999, 5337.46875), (6141.250000000001, 5545.1875))
TRUE
((5445.84375, 5861.28125), (6087.062500000001, 6032.875))
TRUE
((5491.000000000001, 6321.875), (6159.312499999999, 6529.59375))
TRUE
((5427.781249999999, 6872.78125), (6132.218749999999, 7125.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2339, '2': 2899, '3': 3287, '4': 3856, '5': 4425, '6': 5003, '7': 5382, '8': 5951, '9': 6348, '10': 6917}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bUvk9iA.jpg
OCR detection done with doctr
left top x of T/F: 5589.375000000001
bottom right x of T/F: 6756.6875
left top x of SN: 1170.1875000000002
bottom right x of SN: 1566.9375000000002
first t/f detection
True
((5716.78125, 2266.84375), (6177.375, 2492.625))
Trus
((5779.999999999999, 2745.5), (6150.28125, 2998.375))
True
((5698.718749999999, 3215.125), (6141.250000000001, 3431.875))
True
((5644.531249999999, 6683.125), (6078.031249999999, 6917.9375))
Jalso
((5653.562500000001, 3784.09375), (6258.65625, 4027.9375))
Jalse
((5635.5, 4325.96875), (6159.312499999999, 4542.71875))
Srue
((5662.59375, 4768.5), (6132.218749999999, 5039.4375))
Jrueb
((5689.6875, 5211.03125), (6123.1875, 5445.84375))
True
((5671.624999999999, 5698.71875), (6105.124999999999, 5924.5))
True
((5635.5, 6150.28125), (6114.156250000001, 6376.0625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2844, '3': 3197, '4': 3729, '5': 4253, '6': 4786, '7': 5147, '8': 5689, '9': 6050, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SpbJje9.jpg
OCR detection done with doctr
left top x of T/F: 5490.03125
bottom right x of T/F: 6747.656250000001
left top x of SN: 285.125
bottom right x of SN: 699.9375000000001
first t/f detection
Lp2ue
((6412.187500000001, 216.75), (6701.187499999999, 343.1875))
FALSE
((5563.249999999999, 1896.5625), (6412.187500000001, 2140.40625))
TRUE
((5572.281250000001, 2465.53125), (6403.156249999999, 2745.5))
FALSE
((5527.125, 3142.875), (6348.968749999999, 3468.0))
TRVE
((5572.281250000001, 3702.8125), (6159.312499999999, 3955.6875))
FALSE
((5617.437499999999, 4163.40625), (6339.9375, 4380.15625))
FALSE
((5509.062499999999, 4858.8125), (6385.093750000001, 5093.625))
eRgs
((5590.343749999999, 5581.3125), (6321.874999999999, 5834.1875))
TRUE
((5635.5, 5816.125), (6330.906250000001, 6023.84375))
TRVE
((5635.5, 6087.0625), (6285.75, 6303.8125))
FALSE
((5626.468750000001, 6656.03125), (6484.437499999999, 6908.90625))
PTRVE
((5536.156249999999, 7261.125), (6421.21875, 7514.0))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2709, '3': 3296, '4': 3892, '5': 4280, '6': 4876, '7': 5671, '8': 6258, '9': 6656, '10': 7450}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FVofCFc.jpg
OCR detection done with doctr
left top x of T/F: 1230.9599609375
bottom right x of T/F: 1728.0087890625
left top x of SN: -27.511718750000046
bottom right x of SN: 220.6015625
first t/f detection
Tyut
((1311.505859375, 537.6083984375), (1416.1083984375, 603.2890625))
collision happend with box:537.6083984375 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1335.83203125, 671.40234375), (1447.732421875, 732.2177734375))
text2 i.e the incoming text is the winner
collision happend with box:671.40234375 and text:True solving on the basis of percent match boxes
the current box specification are
Falk
((1365.0234375, 795.4658203125), (1481.7890625000002, 856.28125))
text2 i.e the incoming text is the winner
collision happend with box:795.4658203125 and text:Falk solving on the basis of percent match boxes
the current box specification are
fatke
((1386.9169921875, 931.6923828125), (1491.51953125, 994.9404296875))
text2 i.e the incoming text is the winner
for
((1192.3076171875, 559.501953125), (1243.392578125, 600.8564453125))
d-dimensional
((1060.9462890625, 807.62890625), (1287.1796875, 887.9052734375))
is
((1270.1513671875, 970.6142578125), (1304.2080078125, 1007.103515625))
collision happend with box:970.6142578125 and text:is solving on the basis of percent match boxes
the current box specification are
descent
((1146.087890625, 970.6142578125), (1270.1513671875, 1028.9970703125))
text2 i.e the incoming text is the winner
collision happend with box:970.6142578125 and text:descent solving on the basis of percent match boxes
the current box specification are
between
((1119.3291015625, 1128.734375), (1257.98828125, 1187.1171875))
text1 i.e the prev text is the winner
collision happend with box:970.6142578125 and text:descent solving on the basis of percent match boxes
the current box specification are
Pre-
((1253.123046875, 1121.4365234375), (1326.1015625, 1162.791015625))
text1 i.e the prev text is the winner
collision happend with box:970.6142578125 and text:descent solving on the basis of percent match boxes
the current box specification are
Falk
((1399.080078125, 1101.9755859375), (1508.5478515625, 1162.791015625))
text2 i.e the incoming text is the winner
collision happend with box:1101.9755859375 and text:Falk solving on the basis of percent match boxes
the current box specification are
false
((1423.40625, 1230.904296875), (1535.306640625, 1294.15234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1230.904296875 and text:false solving on the basis of percent match boxes
the current box specification are
fada
((1440.4345703125, 1352.53515625), (1571.7958984375, 1427.9462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1352.53515625 and text:fada solving on the basis of percent match boxes
the current box specification are
True
((1472.05859375, 1486.3291015625), (1581.5263671875, 1547.14453125))
text2 i.e the incoming text is the winner
collision happend with box:1486.3291015625 and text:True solving on the basis of percent match boxes
the current box specification are
Tue
((1498.8173828125, 1605.52734375), (1610.7177734375, 1666.3427734375))
text1 i.e the prev text is the winner
distribution.
((1150.953125, 1269.826171875), (1355.29296875, 1337.939453125))
collision happend with box:1269.826171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((1209.3359375, 1391.45703125), (1243.392578125, 1430.37890625))
text1 i.e the prev text is the winner
collision happend with box:1269.826171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1240.9599609375, 1371.99609375), (1367.4560546875, 1432.8115234375))
text1 i.e the prev text is the winner
collision happend with box:1269.826171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
fah
((1574.228515625, 1337.939453125), (1669.1005859374998, 1401.1875))
text1 i.e the prev text is the winner
original
((1160.68359375, 1539.8466796875), (1287.1796875, 1598.2294921875))
collision happend with box:1539.8466796875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((1287.1796875, 1534.9814453125), (1384.484375, 1583.6337890625))
text1 i.e the prev text is the winner
collision happend with box:1539.8466796875 and text:original solving on the basis of percent match boxes
the current box specification are
a
((1221.4990234375, 1659.044921875), (1253.123046875, 1693.1015625))
text1 i.e the prev text is the winner
collision happend with box:1539.8466796875 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1243.392578125, 1629.853515625), (1411.2431640625, 1695.5341796875))
text1 i.e the prev text is the winner
overfitting
((1211.7685546875, 1790.40625), (1384.484375, 1856.0869140625))
collision happend with box:1790.40625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Trut
((1506.1152343750002, 1787.9736328125), (1622.880859375, 1851.2216796875))
text2 i.e the incoming text is the winner
collision happend with box:1787.9736328125 and text:Trut solving on the basis of percent match boxes
the current box specification are
details
((1231.2294921875, 1851.2216796875), (1340.697265625, 1899.8740234375))
text2 i.e the incoming text is the winner
collision happend with box:1851.2216796875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1379.619140625, 1836.6259765625), (1440.4345703125, 1880.4130859375))
text1 i.e the prev text is the winner
collision happend with box:1851.2216796875 and text:details solving on the basis of percent match boxes
the current box specification are
or
((1187.4423828125, 1870.6826171875), (1233.662109375, 1909.6044921875))
text1 i.e the prev text is the winner
collision happend with box:1851.2216796875 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((1175.279296875, 1916.90234375), (1262.853515625, 1963.1220703125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 968, '2': 873, '3': 977, '4': 1131, '5': 1286, '6': 1440, '7': 1544}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hr0SaFm.jpg
rotation started
['à', '€', 'à', 'à', ':', ':', ':', '-', '8', 'à', 'à', 'e', 'is', 'à', 'I', 'iE', 'I', 'I', 'I', 'I', 'is', '1', 'a', 'I', '1', 'I', 'I', 'E', 'of', 's', 'a', 'a', 'e', 'I', '1', 'a', 'E', '1', 'a', 'I', 'E', 'is', 's', 'I', 'E', 'e', 'I', 'à', 'E', 'd', 'e', 'I', '1', 'I', '1', '1', 'I', 'ia', 'I', 'o', 'E', '8', 'I', '8', 'i', 'e', 'E', 'E', 'i', 'I', 'I', 'I', 'e', '1', 'I', 'E', 'à', '8', 'e', 'a', '1', 'E', 'à', 'a', 'I', '-', 'E', 'E', 'd', 'of', 'O', '1', '1', 'I', 'a', 'I', 'iA', '9', 'of', '€', 'is', 'i', 'I', 'I', 'e', 'a', 'i', 'E', 'I', 'a', 'i', 'E', 'o', 'de', 'I', '1', 'is', 'de', 'de', 'I', 'I', 'à', 'a', '8', 'I', 'E', 'I', 's', '5', 'de', 'a', 'S', 'E', 'e', 'I', 'd', 'I', 'a', 'd', 'H', '9', 'E', 'à', 'I', 'I', 'is', 'I', 'I', 'E', 'I', 'à', 'à', 'I', 'E', 'I', 'I', ':', 'I', 'T', 'E', '.', 'A', 'I', 'I', '1', 'E', '11', 'I', 'I', 'a', 'e', 'I', 'a', '2', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'I', 'a', 'E', 'I', '1', 'a', ':', '8', 'E', 'à', 'E', 'e', 'di', 'I', 'I', 'E', '1', 'of', '1', 'I', 'I', '11', '7', '4', '1', '8', 'I', '0o', '', '00']
rotation started
['letters', 'and', 'clear', 'handwriting.', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', '1', 'Typically,', 'the', 'storage', 'deployment.', 'than', 'SVM', 'for', 'FALSE', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'FALSE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalaritvz.)', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'is', 'a', 'valid', 'while', 'gradient', 'descent', 'is', 'TRUE', 'is', 'used', 'to', 'update', 'the', 'weights,', 'in', 'the', 'neural', 'network.', 'used', 'to', 'compute', 'the', 'gradients', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'TRUE', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'TRUE', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'to', 'the', 'number', 'of', 'nodes.', '7', 'The', 'proportional', 'TRUE', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'The', 'decision', 'boundary', 'of', 'an', 'multiclass', 'problems', 'with', 'a', 'large', '8', '9', 'For', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'TRUC', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'using', 'one-vs-one', '10', 'With', 'a', 'high', 'training', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'TRUE.', 'value', 'of', 'the', 'C', 'parameter', 'data', 'that', 'do', 'not', 'generalize', 'or', 'details', 'in', 'the', 'learn', 'to', 'capture', 'specific', 'noise', 'creases,', 'as', 'the', 'model', 'may', 'well', 'to', 'new,', 'unseen', 'data.']
rotation done for:  hr0SaFm.jpg
Number of times rotation done: 2
OCR detection done with doctr
left top x of T/F: 5074.59375
bottom right x of T/F: 6305.124999999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
FALSE
((5147.8125, 2194.59375), (5635.5, 2411.34375))
FALSE
((5220.062500000001, 2754.53125), (5653.562500000001, 2935.15625))
d-dimensional
((4307.90625, 3151.90625), (5129.75, 3386.71875))
collision happend with box:3151.90625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5292.312499999999, 3169.96875), (5743.875, 3386.71875))
true and false collision so given priority to text2 which is the incoming text
is
((5030.40625, 3729.90625), (5156.84375, 3856.34375))
collision happend with box:3729.90625 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5301.343750000001, 3684.75), (5698.718749999999, 3874.40625))
text2 i.e the incoming text is the winner
Pre-
((4940.09375, 4280.8125), (5192.96875, 4425.3125))
collision happend with box:4280.8125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5310.375, 4253.71875), (5770.96875, 4461.4375))
text2 i.e the incoming text is the winner
TRUE
((5337.46875, 4768.5), (5789.031250000001, 4985.25))
collision happend with box:4768.5 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((4524.65625, 4831.71875), (5256.1875, 5030.40625))
text2 i.e the incoming text is the winner
directly
((4822.6875, 5211.03125), (5274.250000000001, 5382.625))
collision happend with box:5211.03125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRUE
((5418.75, 5211.03125), (5834.187499999999, 5409.71875))
text2 i.e the incoming text is the winner
TRUE
((5472.9375, 5707.75), (5915.468749999999, 5915.46875))
collision happend with box:5707.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
space.
((4940.09375, 5798.0625), (5319.406249999999, 5960.625))
text1 i.e the prev text is the winner
prediction
((4768.5, 6168.34375), (5355.531250000001, 6339.9375))
collision happend with box:6168.34375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUC
((5527.125, 6150.28125), (5987.71875, 6367.03125))
text2 i.e the incoming text is the winner
overfitting
((4596.90625, 6737.3125), (5220.062500000001, 6936.0))
collision happend with box:6737.3125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUE.
((5617.437499999999, 6827.625), (6114.156250000001, 6999.21875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:6827.625 and text:TRUE. solving on the basis of percent match boxes
the current box specification are
the
((5211.031249999999, 6917.9375), (5427.781249999999, 7071.46875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2564, '2': 3115, '3': 3486, '4': 4046, '5': 4596, '6': 5156, '7': 5545}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 89Qr0VM.jpg
OCR detection done with doctr
left top x of T/F: 4659.15625
bottom right x of T/F: 5961.937500000001
left top x of SN: 113.53125000000014
bottom right x of SN: 528.3437499999999
first t/f detection
TRUE
((4922.03125, 1905.59375), (5572.281250000001, 2248.78125))
collision happend with box:1905.59375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
for
((4488.53125, 2023.0), (4678.1875, 2185.5625))
text1 i.e the prev text is the winner
TRUE
((5030.40625, 2772.59375), (5752.906249999999, 3124.8125))
d-dimensional
((3991.8125000000005, 2935.15625), (4858.8125, 3260.28125))
is
((4768.5, 3540.25), (4913.0, 3684.75))
collision happend with box:3540.25 and text:is solving on the basis of percent match boxes
the current box specification are
descent
((4307.90625, 3549.28125), (4786.5625, 3766.03125))
text2 i.e the incoming text is the winner
between
((4217.59375, 4127.28125), (4732.375, 4335.0))
collision happend with box:4127.28125 and text:between solving on the basis of percent match boxes
the current box specification are
Pre
((4705.28125, 4082.125), (4994.28125, 4262.75))
text2 i.e the incoming text is the winner
distribution.
((4335.0, 4614.96875), (5102.65625, 4894.9375))
is
((4560.78125, 5075.5625), (4687.21875, 5211.03125))
collision happend with box:5075.5625 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4669.15625, 5003.3125), (5147.8125, 5220.0625))
text2 i.e the incoming text is the winner
original
((4398.21875, 5608.40625), (4858.8125, 5834.1875))
collision happend with box:5608.40625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4849.78125, 5590.34375), (5220.062500000001, 5761.9375))
text1 i.e the prev text is the winner
a
((4614.96875, 6041.90625), (4723.34375, 6159.3125))
collision happend with box:6041.90625 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4696.25, 5933.53125), (5319.406249999999, 6186.40625))
text2 i.e the incoming text is the winner
overftting
((4587.875, 6511.53125), (5220.062500000001, 6764.40625))
details
((4651.09375, 6719.25), (5066.53125, 6936.0))
data.
((4452.40625, 6972.125), (4777.53125, 7143.71875))
the
((5202.0, 6674.09375), (5427.781249999999, 6836.65625))
the final dict without editing {'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2628, '2': 3188}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eW2yoSH.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6774.750000000001
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
FALSE
((5581.3125, 2095.25), (6123.1875, 2312.0))
TRUE
((5572.281250000001, 2700.34375), (6041.90625, 2880.96875))
FALSE
((5581.3125, 3251.25), (6168.343750000001, 3495.09375))
TRUE
((5608.40625, 3829.25), (6105.124999999999, 4009.875))
FALSE
((5617.437499999999, 4262.75), (6159.312499999999, 4470.46875))
TRUE
((5635.5, 4949.125), (6087.062500000001, 5156.84375))
TRUE
((5617.437499999999, 5689.6875), (6059.968750000001, 5861.28125))
TRVE
((5626.468750000001, 6186.40625), (6114.156250000001, 6367.03125))
TRVE
((5635.5, 6773.4375), (6132.218749999999, 6945.03125))
FALSE
((5689.6875, 7396.59375), (6231.5625, 7559.15625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2203, '2': 2790, '3': 3368, '4': 3955, '5': 4335, '6': 4931, '7': 5707, '8': 6294, '9': 6683, '10': 7477}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9X9qVWN.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1882.53125
first t/f detection
falte
((1441.3203125, 627.1484375), (1624.1328124999998, 741.40625))
collision happend with box:627.1484375 and text:falte solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Rul
((1446.3984374999998, 1079.1015625), (1613.9765625, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
Tru
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
collision happend with box:1246.6796875 and text:Tru solving on the basis of percent match boxes
the current box specification are
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
text2 i.e the incoming text is the winner
collision happend with box:1388.8671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
text2 i.e the incoming text is the winner
collision happend with box:1523.4375 and text:True solving on the basis of percent match boxes
the current box specification are
fale
((1423.546875, 1645.3125), (1573.3515624999998, 1734.1796875))
text2 i.e the incoming text is the winner
collision happend with box:1645.3125 and text:fale solving on the basis of percent match boxes
the current box specification are
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
true and false collision so given priority to text2 which is the incoming text
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 627, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Onp7BQB.jpg
OCR detection done with doctr
left top x of SN: 99.76171875
bottom right x of SN: 319.21875
left top x of T/F: 891.5859375
bottom right x of T/F: 1256.37890625
first t/f detection
Itve
((912.208984375, 358.1484375), (988.087890625, 386.982421875))
collision happend with box:358.1484375 and text:Itve solving on the basis of percent match boxes
the current box specification are
FALSE
((921.314453125, 400.640625), (1006.298828125, 430.9921875))
text2 i.e the incoming text is the winner
collision happend with box:400.640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((912.208984375, 462.861328125), (968.359375, 496.248046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:462.861328125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((968.359375, 462.861328125), (1001.74609375, 488.66015625))
text1 i.e the prev text is the winner
collision happend with box:462.861328125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRUE
((907.65625, 541.775390625), (985.052734375, 572.126953125))
text2 i.e the incoming text is the winner
collision happend with box:541.775390625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((913.7265625, 669.251953125), (985.052734375, 699.603515625))
text2 i.e the incoming text is the winner
collision happend with box:669.251953125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((918.279296875, 736.025390625), (989.60546875, 766.376953125))
text1 i.e the prev text is the winner
FALSE
((910.69140625, 839.220703125), (995.67578125, 874.125))
collision happend with box:839.220703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((913.7265625, 927.240234375), (995.67578125, 957.591796875))
text2 i.e the incoming text is the winner
collision happend with box:927.240234375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
space.
((825.70703125, 1025.8828125), (892.48046875, 1053.19921875))
text1 i.e the prev text is the winner
collision happend with box:927.240234375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((918.279296875, 1015.259765625), (1001.74609375, 1045.611328125))
text2 i.e the incoming text is the winner
collision happend with box:1015.259765625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((919.796875, 1083.55078125), (998.7109375, 1112.384765625))
text2 i.e the incoming text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRrf
((922.83203125, 1186.74609375), (998.7109375, 1217.09765625))
text2 i.e the incoming text is the winner
collision happend with box:1186.74609375 and text:TRrf solving on the basis of percent match boxes
the current box specification are
the
((856.05859375, 1232.2734375), (892.48046875, 1259.58984375))
text1 i.e the prev text is the winner
collision happend with box:1186.74609375 and text:TRrf solving on the basis of percent match boxes
the current box specification are
FAISE
((927.384765625, 1242.896484375), (1012.369140625, 1271.73046875))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'UNASSIGNED', '10': 'NULL'}
the unassigned keys are ['3', '4', '6', '7', '9']
the assigned keys are ['1', '2', '5', '8', '10']
['1', '2', '5', '8', '10', '1', '2', '5', '8', '10']
printing the number dict y_coordinate
{'1': 368, '2': 471, '5': 755, '8': 1045, '10': 1220}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uSpnyHB.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6323.1875
left top x of SN: 781.8437499999999
bottom right x of SN: 1187.6250000000002
first t/f detection
TRUE
((5238.124999999999, 2113.3125), (5707.750000000001, 2330.0625))
TRUE
((5238.124999999999, 2619.0625), (5716.78125, 2835.8125))
TRUE
((5247.156250000001, 3043.53125), (5689.6875, 3269.3125))
FALSE
((5202.0, 3621.53125), (5743.875, 3829.25))
FALSE
((5265.218749999999, 4199.53125), (5798.0625, 4416.28125))
FALSE
((5256.1875, 4678.1875), (5789.031250000001, 4885.90625))
GALSE
((5238.124999999999, 5093.625), (5743.875, 5301.34375))
TRUE
((5247.156250000001, 5644.53125), (5653.562500000001, 5816.125))
TRUE
((5211.031249999999, 6023.84375), (5653.562500000001, 6231.5625))
TRUE
((5247.156250000001, 6574.75), (5707.750000000001, 6782.46875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2862, '3': 3206, '4': 3747, '5': 4280, '6': 4822, '7': 5165, '8': 5725, '9': 6087, '10': 6647}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KGv7TpN.jpg
OCR detection done with doctr
left top x of SN: 94.32812499999997
bottom right x of SN: 310.94921875
left top x of T/F: 877.2578125
bottom right x of T/F: 1243.99609375
first t/f detection
Loe
((893.1171875, 278.3203125), (991.26171875, 317.87109375))
collision happend with box:278.3203125 and text:Loe solving on the basis of percent match boxes
the current box specification are
True
((915.08984375, 336.9140625), (988.33203125, 372.0703125))
text2 i.e the incoming text is the winner
collision happend with box:336.9140625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((904.8359375, 404.296875), (986.8671875, 433.59375))
text2 i.e the incoming text is the winner
collision happend with box:404.296875 and text:True solving on the basis of percent match boxes
the current box specification are
Fabe
((910.6953125000001, 477.5390625), (981.0078125000001, 505.37109375))
text1 i.e the prev text is the winner
collision happend with box:404.296875 and text:True solving on the basis of percent match boxes
the current box specification are
FALSE
((897.5117187499999, 559.5703125), (982.47265625, 600.5859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:559.5703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((891.65234375, 670.8984375), (985.40234375, 704.58984375))
text2 i.e the incoming text is the winner
collision happend with box:670.8984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((900.4414062499999, 763.18359375), (985.40234375, 792.48046875))
text2 i.e the incoming text is the winner
collision happend with box:763.18359375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Falye
((898.9765624999999, 849.609375), (976.6132812500001, 878.90625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:849.609375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Lr
((891.65234375, 919.921875), (969.2890625, 941.89453125))
text1 i.e the prev text is the winner
collision happend with box:849.609375 and text:Falye solving on the basis of percent match boxes
the current box specification are
TRUE
((898.9765624999999, 952.1484375), (983.9375, 985.83984375))
text2 i.e the incoming text is the winner
collision happend with box:952.1484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
True
((906.30078125, 1016.6015625), (982.47265625, 1053.22265625))
text2 i.e the incoming text is the winner
collision happend with box:1016.6015625 and text:True solving on the basis of percent match boxes
the current box specification are
TRVE
((915.08984375, 1117.67578125), (994.19140625, 1145.5078125))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 457, '2': 391, '3': 458, '4': 559, '5': 660, '6': 761, '7': 832, '8': 931, '9': 1000, '10': 1103}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tYiDdZY.jpg
OCR detection done with doctr
left top x of T/F: 5038.46875
bottom right x of T/F: 6332.218749999999
left top x of SN: -40.0
bottom right x of SN: 338.6874999999999
first t/f detection
TRUE
((5165.875, 1363.71875), (5825.15625, 1679.8125))
collision happend with box:1363.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distance
((4479.5, 1490.15625), (5048.46875, 1743.03125))
text2 i.e the incoming text is the winner
PCA
((4768.5, 2104.28125), (5102.65625, 2293.9375))
TRUE
((5247.156250000001, 1923.65625), (5906.4375, 2275.875))
than
((4858.8125, 2709.375), (5192.96875, 2899.03125))
collision happend with box:2709.375 and text:than solving on the basis of percent match boxes
the current box specification are
FALCE
((5346.499999999999, 2573.90625), (6069.0, 2880.96875))
text2 i.e the incoming text is the winner
TRUE
((5427.781249999999, 3151.90625), (6050.937499999999, 3449.9375))
TRUE
((5454.874999999999, 3621.53125), (6096.09375, 3973.75))
variance(w).
((4289.84375, 3323.5), (5102.65625, 3603.46875))
matrix
((4867.84375, 3711.84375), (5337.46875, 3919.5625))
then
((5084.59375, 4316.9375), (5409.718750000001, 4497.5625))
collision happend with box:4316.9375 and text:then solving on the basis of percent match boxes
the current box specification are
FALEE
((5572.281250000001, 4271.78125), (6258.65625, 4624.0))
text2 i.e the incoming text is the winner
<Oor
((4958.15625, 4524.65625), (5445.84375, 4705.28125))
the
((5274.250000000001, 5111.6875), (5509.062499999999, 5274.25))
collision happend with box:5111.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5590.343749999999, 4958.15625), (6303.812500000001, 5292.3125))
text2 i.e the incoming text is the winner
proportional
((4461.4375, 6132.21875), (5256.1875, 6376.0625))
collision happend with box:6132.21875 and text:proportional solving on the basis of percent match boxes
the current box specification are
to
((5247.156250000001, 6141.25), (5418.75, 6285.75))
text1 i.e the prev text is the winner
collision happend with box:6132.21875 and text:proportional solving on the basis of percent match boxes
the current box specification are
the
((5409.718750000001, 6105.125), (5644.531249999999, 6267.6875))
text1 i.e the prev text is the winner
value
((5021.375, 6330.90625), (5373.593749999999, 6502.5))
collision happend with box:6330.90625 and text:value solving on the basis of percent match boxes
the current box specification are
of
((5373.593749999999, 6312.84375), (5536.156249999999, 6466.375))
text1 i.e the prev text is the winner
collision happend with box:6330.90625 and text:value solving on the basis of percent match boxes
the current box specification are
expected
((4461.4375, 6358.0), (5039.4375, 6565.71875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2122, '2': 2709}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xsXKhSL.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6458.65625
left top x of SN: 845.0625000000001
bottom right x of SN: 1250.84375
first t/f detection
TRUE
((5319.406249999999, 1986.875), (5906.4375, 2194.59375))
TRUE
((5355.531250000001, 2474.5625), (5915.468749999999, 2691.3125))
FALSE
((5418.75, 2908.0625), (5978.687500000001, 3115.78125))
FALSE
((5436.812500000001, 3504.125), (6014.8125, 3720.875))
Pre-
((5066.53125, 4046.0), (5337.46875, 4190.5))
collision happend with box:4046.0 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5491.000000000001, 4036.96875), (6050.937499999999, 4244.6875))
text2 i.e the incoming text is the winner
distribution.
((4642.0625, 4596.90625), (5355.531250000001, 4768.5))
collision happend with box:4596.90625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((5463.906250000001, 4533.6875), (6078.031249999999, 4750.4375))
text1 i.e the prev text is the winner
directly
((4922.03125, 4967.1875), (5373.593749999999, 5138.78125))
collision happend with box:4967.1875 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5500.03125, 4985.25), (6087.062500000001, 5192.96875))
true and false collision so given priority to text2 which is the incoming text
space.
((5012.34375, 5563.25), (5373.593749999999, 5698.71875))
collision happend with box:5563.25 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5463.906250000001, 5491.0), (5960.625, 5698.71875))
text2 i.e the incoming text is the winner
prediction
((4831.71875, 5906.4375), (5409.718750000001, 6078.03125))
collision happend with box:5906.4375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5536.156249999999, 5888.375), (6096.09375, 6096.09375))
text2 i.e the incoming text is the winner
the
((5247.156250000001, 6647.0), (5454.874999999999, 6800.53125))
collision happend with box:6647.0 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5626.468750000001, 6538.625), (6213.499999999999, 6746.34375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2736, '3': 3097, '4': 3657, '5': 4199, '6': 4759, '7': 5129, '8': 5680, '9': 6059, '10': 6637}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WxtTFL6.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1032.275390625, 417.333984375), (1083.837890625, 462.451171875))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 505.95703125), (1035.498046875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:505.95703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 588.134765625), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:588.134765625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((998.4375, 670.3125), (1033.88671875, 723.486328125))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 884.619140625), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
f
((951.708984375, 966.796875), (995.21484375, 1005.46875))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:f solving on the basis of percent match boxes
the current box specification are
or
((1001.66015625, 970.01953125), (1083.837890625, 1011.9140625))
text2 i.e the incoming text is the winner
collision happend with box:970.01953125 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1020.99609375, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 578, '4': 679, '5': 781, '6': 883, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : g2XWJ8f.jpg
OCR detection done with doctr
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6702.5
left top x of SN: 167.71875000000014
bottom right x of SN: 582.5312499999999
first t/f detection
Folse
((5436.812500000001, 1797.21875), (5933.53125, 2023.0))
True
((5653.562500000001, 2393.28125), (6132.218749999999, 2601.0))
False
((5581.3125, 3169.96875), (6014.8125, 3350.59375))
True
((5590.343749999999, 3621.53125), (6177.375, 3865.375))
False
((5608.40625, 4118.25), (6105.124999999999, 4380.15625))
Falye
((5743.875, 4813.65625), (6231.5625, 5021.375))
Tyue
((5635.5, 5536.15625), (6132.218749999999, 5716.78125))
True
((5644.531249999999, 6041.90625), (6105.124999999999, 6249.625))
the
((5229.09375, 6493.46875), (5454.874999999999, 6637.96875))
collision happend with box:6493.46875 and text:the solving on the basis of percent match boxes
the current box specification are
Trul
((5653.562500000001, 6592.8125), (6168.343750000001, 6809.5625))
text2 i.e the incoming text is the winner
Frul
((5707.750000000001, 7225.0), (6105.124999999999, 7468.84375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6937
printing the number dict y_coordinate
{'1': 2059, '2': 2655, '3': 3251, '4': 3856, '5': 4253, '6': 4858, '7': 5644, '8': 6240, '9': 6637, '10': 6937}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eGngzyy.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6512.84375
left top x of SN: 655.4062500000001
bottom right x of SN: 1070.21875
first t/f detection
TRUE
((5391.65625, 1896.5625), (6014.8125, 2140.40625))
TRUE
((5491.000000000001, 2447.46875), (5978.687500000001, 2664.21875))
TRUE
((5436.812500000001, 2917.09375), (6005.781250000001, 3169.96875))
FALSE
((5491.000000000001, 3495.09375), (6050.937499999999, 3757.0))
Pre-
((5030.40625, 4127.28125), (5301.343750000001, 4280.8125))
collision happend with box:4127.28125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5454.874999999999, 4109.21875), (6059.968750000001, 4353.0625))
text2 i.e the incoming text is the winner
FALSE
((5563.249999999999, 4614.96875), (6150.28125, 4831.71875))
FALSE
((5572.281250000001, 5093.625), (6177.375, 5346.5))
TRUE
((5572.281250000001, 5626.46875), (6069.0, 5807.09375))
TRUE
((5635.5, 6096.09375), (6114.156250000001, 6312.84375))
distribution:
((4569.8125, 4714.3125), (5319.406249999999, 4885.90625))
directly
((4867.84375, 5102.65625), (5346.499999999999, 5274.25))
space.
((4976.21875, 5734.84375), (5346.499999999999, 5870.3125))
prediction
((4768.5, 6105.125), (5382.625000000001, 6258.65625))
TRUE.
((5590.343749999999, 6737.3125), (6204.46875, 6936.0))
collision happend with box:6737.3125 and text:TRUE. solving on the basis of percent match boxes
the current box specification are
the
((5192.96875, 6872.78125), (5409.718750000001, 7017.28125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2257, '2': 2817, '3': 3197, '4': 3757, '5': 4316, '6': 4885, '7': 5256, '8': 5816, '9': 6195, '10': 6755}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eMa8BlA.jpg
OCR detection done with doctr
left top x of T/F: 5192.0
bottom right x of T/F: 6386.406249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2086.21875))
TRUE
((5220.062500000001, 2411.34375), (5933.53125, 2655.1875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5310.375, 3540.25), (5897.406250000001, 3738.9375))
TRUE
((5292.312499999999, 4046.0), (5924.500000000001, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4876.875))
TRVE
((5283.28125, 5346.5), (5834.187499999999, 5572.28125))
FALSE
((5328.437500000001, 5825.15625), (6014.8125, 6032.875))
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
collision happend with box:6348.96875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
the
((4976.21875, 6276.71875), (5192.96875, 6412.1875))
text1 i.e the prev text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2501, '3': 3061, '4': 3630, '5': 4000, '6': 4560, '7': 5319, '8': 5906, '9': 6285, '10': 7062}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XiPBY60.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6810.875
left top x of SN: 77.40624999999987
bottom right x of SN: 537.3750000000001
first t/f detection
Feye
((5825.15625, 1806.25), (6358.000000000001, 2068.15625))
True
((5770.96875, 2429.40625), (6294.781249999999, 2646.15625))
Fabse
((5816.125000000001, 3034.5), (6321.874999999999, 3287.375))
Tyue
((5752.906249999999, 3630.5625), (6204.46875, 3838.28125))
Tyve
((5852.25, 4118.25), (6348.968749999999, 4325.96875))
collision happend with box:4118.25 and text:Tyve solving on the basis of percent match boxes
the current box specification are
matrix
((5093.625, 4091.15625), (5554.21875, 4253.71875))
text2 i.e the incoming text is the winner
<Othen
((4976.21875, 4696.25), (5581.3125, 4894.9375))
<Oor
((5102.65625, 4922.03125), (5608.40625, 5084.59375))
collision happend with box:4922.03125 and text:<Oor solving on the basis of percent match boxes
the current box specification are
Fose
((5915.468749999999, 4786.5625), (6430.249999999999, 5057.5))
text2 i.e the incoming text is the winner
the
((5400.687499999999, 5536.15625), (5626.468750000001, 5689.6875))
collision happend with box:5536.15625 and text:the solving on the basis of percent match boxes
the current box specification are
Toue
((5870.312500000001, 5599.375), (6339.9375, 5825.15625))
text2 i.e the incoming text is the winner
Fale
((6078.031249999999, 6087.0625), (6520.562500000001, 6348.96875))
Fabe
((6032.875000000001, 6683.125), (6511.531249999999, 6890.84375))
collision happend with box:6683.125 and text:Fabe solving on the basis of percent match boxes
the current box specification are
the
((5454.874999999999, 6583.78125), (5689.6875, 6737.3125))
text1 i.e the prev text is the winner
collision happend with box:6683.125 and text:Fabe solving on the basis of percent match boxes
the current box specification are
ofX
((5382.625000000001, 6773.4375), (5707.750000000001, 6963.09375))
text1 i.e the prev text is the winner
Taue
((6005.781250000001, 7351.4375), (6448.3125, 7559.15625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '8', '9', '10']
the assigned keys are ['2', '3', '5', '6', '7']
['2', '3', '5', '6', '7', '2', '3', '5', '6', '7']
printing the number dict y_coordinate
{'2': 2637, '3': 3269, '5': 4316, '6': 4940, '7': 5761, '1': 2337}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SevT653.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6856.031250000001
first t/f detection
FALSE
((5752.906249999999, 1824.3125), (6448.3125, 2041.0625))
TRUE
((5743.875, 2420.375), (6367.03125, 2637.125))
FALSE
((5770.96875, 3034.5), (6421.21875, 3251.25))
TRUE
((5716.78125, 3576.375), (6303.812500000001, 3784.09375))
TRUE
((5752.906249999999, 4082.125), (6412.187500000001, 4298.875))
FALSE
((5734.843750000001, 4714.3125), (6385.093750000001, 4922.03125))
TRUE
((5798.0625, 5454.875), (6385.093750000001, 5662.59375))
TRUE
((5816.125000000001, 5969.65625), (6421.21875, 6213.5))
FALSE
((5716.78125, 6601.84375), (6367.03125, 6818.59375))
FALSE
((5770.96875, 7197.90625), (6403.156249999999, 7405.625))
the final dict without editing {'1': False, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['3', '7', '8', '9']
the assigned keys are ['1', '2', '4', '5', '6', '10']
['1', '2', '4', '5', '6', '10', '1', '2', '4', '5', '6', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2447, '4': 3648, '5': 4055, '6': 4651, '10': 7306}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'UNASSIGNED', '4': True, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hJTSb28.jpg
OCR detection done with doctr
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
left top x of T/F: 5625.5
bottom right x of T/F: 6874.093749999999
first t/f detection
FALSE
((5680.656250000001, 1878.5), (6123.1875, 2095.25))
TRUE
((5536.156249999999, 2411.34375), (5960.625, 2637.125))
TRUE
((5572.281250000001, 4696.25), (6014.8125, 4913.0))
FALSE
((5626.468750000001, 3079.65625), (6123.1875, 3287.375))
TRJ6
((5554.21875, 3558.3125), (5951.593750000001, 3738.9375))
TRIE
((5608.40625, 4036.96875), (6123.1875, 4262.75))
TROE
((5554.21875, 5373.59375), (5942.562499999999, 5554.21875))
TRUE
((5554.21875, 5915.46875), (5951.593750000001, 6105.125))
TRUE
((5572.281250000001, 6475.40625), (5996.749999999999, 6656.03125))
TROE
((5563.249999999999, 7107.59375), (5924.500000000001, 7279.1875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2375, '3': 2962, '4': 3558, '5': 3937, '6': 4533, '7': 5310, '8': 5897, '9': 6285, '10': 7053}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ROdYDt2.jpg
OCR detection done with doctr
left top x of SN: 745.71875
bottom right x of SN: 1169.5625
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6837.96875
first t/f detection
drue
((5725.812499999999, 1941.71875), (6177.375, 2212.65625))
dauhe
((5635.5, 2483.59375), (6032.875000000001, 2772.59375))
Jalad
((5563.249999999999, 3070.625), (5942.562499999999, 3314.46875))
drue
((5617.437499999999, 3558.3125), (5960.625, 3811.1875))
ras
((5545.187500000001, 4009.875), (5960.625, 4226.625))
collision happend with box:4009.875 and text:ras solving on the basis of percent match boxes
the current box specification are
Jole
((5933.53125, 4009.875), (6403.156249999999, 4271.78125))
text1 i.e the prev text is the winner
drwe
((5491.000000000001, 4551.75), (5933.53125, 4831.71875))
dovue
((5472.9375, 5292.3125), (5906.4375, 5581.3125))
doue
((5518.093750000001, 5915.46875), (5942.562499999999, 6132.21875))
ouud
((5409.718750000001, 6412.1875), (5816.125000000001, 6656.03125))
rue
((5409.718750000001, 7044.375), (5825.15625, 7261.125))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 6872, '2': 2203, '3': 2763}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vHWNFJ2.jpg
OCR detection done with doctr
left top x of T/F: 5670.656250000001
bottom right x of T/F: 6937.312500000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5798.0625, 1986.875), (6358.000000000001, 2212.65625))
FALSE
((5870.312500000001, 2591.96875), (6466.375000000001, 2790.65625))
TRVE
((5897.406250000001, 2790.65625), (6348.968749999999, 2971.28125))
FALSE
((5861.281249999999, 3188.03125), (6403.156249999999, 3413.8125))
FALSE
((5906.4375, 3711.84375), (6457.343749999999, 3919.5625))
FALSE
((5852.25, 4199.53125), (6457.343749999999, 4443.375))
FALSE
((5834.187499999999, 4949.125), (6502.5, 5202.0))
TRUE
((5897.406250000001, 5680.65625), (6394.125, 5951.59375))
TRUE
((5888.374999999999, 6213.5), (6484.437499999999, 6466.375))
TRVE
((5924.500000000001, 6791.5), (6439.281250000001, 7017.28125))
TRUE
((5879.34375, 7450.78125), (6439.281250000001, 7676.5625))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2610, '3': 3188, '4': 3811, '5': 4217, '6': 4831, '7': 5635, '8': 6240, '9': 6637, '10': 7441}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OsPw2qc.jpg
OCR detection done with doctr
left top x of T/F: 5182.96875
bottom right x of T/F: 6386.406249999999
left top x of SN: 330.2812500000001
bottom right x of SN: 736.0625
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6005.781250000001, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2510, '3': 3061, '4': 3630, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jzWkUcH.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6747.656250000001
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fale
((5463.906250000001, 2519.71875), (5816.125000000001, 2745.5))
Trve
((5418.75, 3097.71875), (5843.218750000001, 3332.53125))
Trie
((5400.687499999999, 3693.78125), (5743.875, 3946.65625))
Fabe
((5436.812500000001, 4271.78125), (5870.312500000001, 4506.59375))
Tre
((5355.531250000001, 4840.75), (5707.750000000001, 5030.40625))
True
((5418.75, 5373.59375), (5816.125000000001, 5563.25))
Trve
((5436.812500000001, 5852.25), (5816.125000000001, 6105.125))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
Tre
((5373.593749999999, 7062.4375), (5816.125000000001, 7324.34375))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3621, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DyEbp6j.jpg
OCR detection done with doctr
left top x of SN: 72.40527343749997
bottom right x of SN: 306.580078125
left top x of T/F: 1166.3984375
bottom right x of T/F: 1601.765625
first t/f detection
falt
((1200.2353515625, 546.08203125), (1358.42578125, 641.4296875))
collision happend with box:546.08203125 and text:falt solving on the basis of percent match boxes
the current box specification are
falie
((1195.9013671875, 676.1015625), (1310.751953125, 751.9462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:676.1015625 and text:falie solving on the basis of percent match boxes
the current box specification are
TuV
((1187.2333984375, 803.9541015625), (1319.419921875, 890.6337890625))
text1 i.e the prev text is the winner
Riul
((1195.9013671875, 927.47265625), (1334.5888671875, 1016.3193359375))
collision happend with box:927.47265625 and text:Riul solving on the basis of percent match boxes
the current box specification are
Trwr
((1182.8994140625, 1070.494140625), (1323.75390625, 1159.3408203125))
text2 i.e the incoming text is the winner
collision happend with box:1070.494140625 and text:Trwr solving on the basis of percent match boxes
the current box specification are
Tiul
((1161.2294921875, 1189.6787109375), (1302.083984375, 1261.189453125))
text2 i.e the incoming text is the winner
collision happend with box:1189.6787109375 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tyue
((1148.2275390625, 1300.1953125), (1293.416015625, 1389.0419921875))
text1 i.e the prev text is the winner
folke
((1165.5634765624998, 1410.7119140625), (1291.2490234375, 1486.556640625))
collision happend with box:1410.7119140625 and text:folke solving on the basis of percent match boxes
the current box specification are
Falue
((1159.0625, 1527.7294921875), (1284.748046875, 1603.57421875))
text2 i.e the incoming text is the winner
True
((1143.8935546875, 1707.58984375), (1291.2490234375, 1796.4365234375))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 526, '2': 663, '3': 754, '4': 892, '5': 1027, '6': 1168, '7': 1256, '8': 1395, '9': 1488, '10': 1625}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VrcsNov.jpg
OCR detection done with doctr
left top x of SN: 565.0937499999999
bottom right x of SN: 979.90625
left top x of T/F: 5435.84375
bottom right x of T/F: 6612.187500000001
first t/f detection
FALSE
((5572.281250000001, 1806.25), (6096.09375, 1986.875))
TRUE
((5554.21875, 2348.125), (6041.90625, 2573.90625))
FALCE
((5644.531249999999, 2880.96875), (6240.593749999999, 3124.8125))
TRUE
((5644.531249999999, 3395.75), (6123.1875, 3612.5))
TRU
((5527.125, 3847.3125), (5843.218750000001, 4027.9375))
FALSE
((5590.343749999999, 4488.53125), (6050.937499999999, 4696.25))
TRUE
((5644.531249999999, 5129.75), (6141.250000000001, 5310.375))
TRUG
((5545.187500000001, 5653.5625), (6050.937499999999, 5825.15625))
TRUL
((5608.40625, 6078.03125), (6069.0, 6285.75))
TRUE
((5698.718749999999, 6737.3125), (6168.343750000001, 6899.875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2402, '3': 2962, '4': 3531, '5': 3901, '6': 4470, '7': 5202, '8': 5761, '9': 6132, '10': 6872}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6jHuOGj.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6341.250000000001
left top x of SN: 628.3125000000001
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5319.406249999999, 2167.5), (5807.093749999999, 2339.09375))
TRUE
((5292.312499999999, 2655.1875), (5761.937500000001, 2835.8125))
TRUE
((5229.09375, 3169.96875), (5861.281249999999, 3413.8125))
TRUE
((5247.156250000001, 3738.9375), (5716.78125, 3901.5))
TRUG
((5247.156250000001, 4325.96875), (5734.843750000001, 4461.4375))
FALSE
((5256.1875, 4867.84375), (5825.15625, 5075.5625))
TRUE
((5202.0, 5247.15625), (5779.999999999999, 5409.71875))
FALSE
((5165.875, 5725.8125), (5644.531249999999, 5906.4375))
SALSE
((5183.9375, 6168.34375), (5942.562499999999, 6412.1875))
TRUE
((5265.218749999999, 6827.625), (5789.031250000001, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2312, '2': 2862, '3': 3233, '4': 3784, '5': 4325, '6': 4876, '7': 5256, '8': 5825, '9': 6213, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nWCK5mU.jpg
OCR detection done with doctr
left top x of T/F: 5228.124999999999
bottom right x of T/F: 6539.9375
left top x of SN: 285.125
bottom right x of SN: 708.96875
first t/f detection
TRUE
((5436.812500000001, 2013.96875), (5942.562499999999, 2194.59375))
TRUE
((5436.812500000001, 2573.90625), (5906.4375, 2745.5))
FALSE
((5427.781249999999, 3088.6875), (6114.156250000001, 3296.40625))
TRUE
((5445.84375, 3684.75), (5951.593750000001, 3865.375))
FALSE
((5481.968749999999, 4316.9375), (6069.0, 4479.5))
FALSE
((5445.84375, 4831.71875), (5978.687500000001, 5003.3125))
FALSE
((5436.812500000001, 5310.375), (5942.562499999999, 5472.9375))
TRVE
((5445.84375, 5798.0625), (5969.656249999999, 5969.65625))
TRUE
((5509.062499999999, 6267.6875), (6014.8125, 6475.40625))
the
((5039.4375, 7008.25), (5265.218749999999, 7161.78125))
collision happend with box:7008.25 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5500.03125, 6936.0), (6069.0, 7107.59375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6748
printing the number dict y_coordinate
{'1': 2248, '2': 2853, '3': 3251, '4': 3847, '5': 4443, '6': 5048, '7': 5445, '8': 6041, '9': 6448, '10': 6748}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hSIB9dp.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6585.093750000001
left top x of SN: 456.7187499999999
bottom right x of SN: 862.5000000000001
first t/f detection
TBNE
((5427.781249999999, 1697.875), (6050.937499999999, 1905.59375))
FALSE
((5445.84375, 2248.78125), (6032.875000000001, 2456.5))
FALS
((5500.03125, 1914.625), (6014.8125, 2086.21875))
FALSE
((5509.062499999999, 2808.71875), (6213.499999999999, 3016.4375))
TRUE
((5436.812500000001, 3350.59375), (6105.124999999999, 3549.28125))
TRUE
((5463.906250000001, 5220.0625), (6050.937499999999, 5391.65625))
TRU
((5491.000000000001, 5716.78125), (5987.71875, 5888.375))
TRUE
((5491.000000000001, 6258.65625), (6204.46875, 6475.40625))
FALSE
((5554.21875, 6917.9375), (6258.65625, 7116.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2339, '3': 2890, '4': 3449, '5': 3811, '6': 4389, '7': 5147, '8': 5734, '9': 6132, '10': 6908}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AUFftAQ.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6738.624999999999
left top x of SN: 285.125
bottom right x of SN: 699.9375000000001
first t/f detection
TRUE
((5545.187500000001, 1625.625), (6186.406249999999, 1878.5))
TRUE
((5554.21875, 2185.5625), (6195.437500000001, 2483.59375))
FALCE
((5572.281250000001, 2844.84375), (6285.75, 3097.71875))
TRUE
((5590.343749999999, 3422.84375), (6195.437500000001, 3666.6875))
TRUE
((5554.21875, 3901.5), (6168.343750000001, 4172.4375))
FALSE
((5599.375000000001, 4569.8125), (6267.687499999999, 4831.71875))
TRUE
((5536.156249999999, 5256.1875), (6204.46875, 5509.0625))
TRUE
((5590.343749999999, 5879.34375), (6204.46875, 6078.03125))
FALSE
((5644.531249999999, 6339.9375), (6267.687499999999, 6601.84375))
TRUE
((5599.375000000001, 7026.3125), (6240.593749999999, 7279.1875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2393, '3': 2980, '4': 3567, '5': 3973, '6': 4560, '7': 5346, '8': 5924, '9': 6312, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : U1tXBng.jpg
OCR detection done with doctr
left top x of SN: 189.298828125
bottom right x of SN: 407.23828125
left top x of T/F: 964.4296875
bottom right x of T/F: 1336.810546875
first t/f detection
handariting
((857.576171875, 118.37109375), (978.982421875, 160.86328125))
Feue
((977.46484375, 408.228515625), (1053.34375, 446.16796875))
collision happend with box:408.228515625 and text:Feue solving on the basis of percent match boxes
the current box specification are
FALSE
((972.912109375, 450.720703125), (1067.001953125, 493.212890625))
text2 i.e the incoming text is the winner
collision happend with box:450.720703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((960.771484375, 514.458984375), (1015.404296875, 546.328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:514.458984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((1016.921875, 519.01171875), (1050.30859375, 549.36328125))
text1 i.e the prev text is the winner
collision happend with box:514.458984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((942.560546875, 590.337890625), (1021.474609375, 628.27734375))
text1 i.e the prev text is the winner
TRVE
((924.349609375, 717.814453125), (998.7109375, 755.75390625))
collision happend with box:717.814453125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((915.244140625, 784.587890625), (989.60546875, 819.4921875))
text2 i.e the incoming text is the winner
collision happend with box:784.587890625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
SE
((945.595703125, 893.853515625), (978.982421875, 927.240234375))
text1 i.e the prev text is the winner
FALSE
((875.787109375, 968.21484375), (966.841796875, 1010.70703125))
the final dict without editing {'1': True, '2': False, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'2': 418, '3': 485, '1': 493, '4': 590}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zQshA2F.jpg
OCR detection done with doctr
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6738.624999999999
first t/f detection
TRUE
((5680.656250000001, 1986.875), (6177.375, 2167.5))
TRUE
((5590.343749999999, 2483.59375), (6105.124999999999, 2664.21875))
TRUE
((5608.40625, 3079.65625), (6204.46875, 3278.34375))
FALSE
((5608.40625, 3657.65625), (6114.156250000001, 3829.25))
FALSE
((5572.281250000001, 4036.96875), (6195.437500000001, 4289.84375))
FALS
((5599.375000000001, 4741.40625), (6041.90625, 4949.125))
TRUE
((5554.21875, 5400.6875), (6123.1875, 5608.40625))
TRUE
((5581.3125, 5969.65625), (6096.09375, 6177.375))
TRUE
((5626.468750000001, 6484.4375), (6222.531250000001, 6701.1875))
FALS
((5671.624999999999, 6737.3125), (6050.937499999999, 6908.90625))
FALSE
((5644.531249999999, 7098.5625), (6186.406249999999, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 3188, '4': 3775, '5': 4163, '6': 4759, '7': 5536, '8': 6132, '9': 6529, '10': 7306}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R4Lqvlx.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:753.087890625 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1418.40625, 895.69921875), (1591.041015625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:895.69921875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tiul
((1420.9082031250002, 1040.8125), (1581.033203125, 1158.404296875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1040.8125 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tul
((1433.41796875, 1198.435546875), (1591.041015625, 1306.01953125))
text2 i.e the incoming text is the winner
collision happend with box:1198.435546875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
text2 i.e the incoming text is the winner
collision happend with box:1336.04296875 and text:True solving on the basis of percent match boxes
the current box specification are
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
text2 i.e the incoming text is the winner
collision happend with box:1481.15625 and text:falke solving on the basis of percent match boxes
the current box specification are
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1616.26171875 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1746.36328125 and text:fale solving on the basis of percent match boxes
the current box specification are
Falye
((1420.9082031250002, 1903.986328125), (1588.5390625, 2009.068359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1468, '8': 1631, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fWen73r.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6548.968749999999
left top x of SN: 583.15625
bottom right x of SN: 988.9374999999999
first t/f detection
FALSE
((5319.406249999999, 1860.4375), (5888.374999999999, 2113.3125))
TRUE
((5364.5625, 2447.46875), (5861.281249999999, 2664.21875))
FALSE
((5400.687499999999, 2962.25), (6005.781250000001, 3206.09375))
FALSE
((5382.625000000001, 3540.25), (6032.875000000001, 3784.09375))
TRUE
((5391.65625, 4136.3125), (5942.562499999999, 4335.0))
TRUE
((5400.687499999999, 4660.125), (5951.593750000001, 4876.875))
FALSE
((5445.84375, 5102.65625), (6005.781250000001, 5310.375))
TRUE
((5481.968749999999, 5644.53125), (5987.71875, 5816.125))
FALSE
((5463.906250000001, 6069.0), (6032.875000000001, 6267.6875))
the
((5129.75, 6818.59375), (5355.531250000001, 6963.09375))
collision happend with box:6818.59375 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5509.062499999999, 6764.40625), (5978.687500000001, 6981.15625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2158, '2': 2736, '3': 3115, '4': 3693, '5': 4262, '6': 4831, '7': 5211, '8': 5789, '9': 6168, '10': 6737}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jiooheu.jpg
OCR detection done with doctr
left top x of SN: 99.599609375
bottom right x of SN: 323.10546875
left top x of T/F: 956.2109375
bottom right x of T/F: 1338.623046875
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((972.6562500000001, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((966.2109375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1014.5507812499999, 791.162109375), (1096.728515625, 837.890625))
text1 i.e the prev text is the winner
False
((972.6562500000001, 873.33984375), (1070.947265625, 912.01171875))
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
Trve
((972.6562500000001, 965.185546875), (1056.4453125, 1005.46875))
text1 i.e the prev text is the winner
False
((972.6562500000001, 1050.5859375), (1062.890625, 1089.2578125))
collision happend with box:1050.5859375 and text:False solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 1135.986328125), (1058.056640625, 1176.26953125))
text2 i.e the incoming text is the winner
collision happend with box:1135.986328125 and text:False solving on the basis of percent match boxes
the current box specification are
False
((990.3808593750001, 1239.111328125), (1093.505859375, 1284.228515625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 584, '2': 509, '3': 578, '4': 681, '5': 784, '6': 889, '8': 1061, '9': 1129, '10': 1232}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': False, '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kc3HJAc.jpg
OCR detection done with doctr
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6810.875
left top x of SN: 556.0625
bottom right x of SN: 961.8437499999999
first t/f detection
TRbE
((5779.999999999999, 1869.46875), (6348.968749999999, 2077.1875))
TROE
((5743.875, 2456.5), (6321.874999999999, 2673.25))
FALSE
((5798.0625, 2655.1875), (6339.9375, 2880.96875))
FALSE
((5716.78125, 3070.625), (6385.093750000001, 3278.34375))
TROE
((5662.59375, 3657.65625), (6294.781249999999, 3901.5))
FALSE
((5743.875, 4118.25), (6358.000000000001, 4325.96875))
TROE
((5698.718749999999, 4696.25), (6258.65625, 4894.9375))
TROE
((5779.999999999999, 5391.65625), (6303.812500000001, 5608.40625))
TRUE
((5770.96875, 5942.5625), (6285.75, 6123.1875))
FALSE
((5861.281249999999, 6385.09375), (6475.40625, 6601.84375))
TROE
((5825.15625, 7098.5625), (6358.000000000001, 7306.28125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2745, '3': 3305, '4': 3883, '5': 4262, '6': 4840, '7': 5617, '8': 6195, '9': 6592, '10': 7378}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OKJ3j3G.jpg
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
left top x of T/F: 5517.125
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5527.125, 2104.28125), (6041.90625, 2321.03125))
TRUE
((5536.156249999999, 2646.15625), (6078.031249999999, 2862.90625))
FALSE
((5581.3125, 3233.1875), (6195.437500000001, 3449.9375))
TRUE
((5545.187500000001, 3729.90625), (6114.156250000001, 3937.625))
TRUE
((5572.281250000001, 4208.5625), (6150.28125, 4425.3125))
FALSE
((5572.281250000001, 4876.875), (6213.499999999999, 5084.59375))
TRUE
((5545.187500000001, 5599.375), (6105.124999999999, 5816.125))
TRUE
((5563.249999999999, 6050.9375), (6141.250000000001, 6258.65625))
FALSE
((5572.281250000001, 6610.875), (6123.1875, 6818.59375))
TRUE
((5563.249999999999, 7206.9375), (6096.09375, 7414.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2591, '3': 3169, '4': 3747, '5': 4127, '6': 4705, '7': 5472, '8': 6041, '9': 6430, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 89atndp.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 663.8124999999999
left top x of T/F: 5679.6875
bottom right x of T/F: 6955.374999999999
first t/f detection
Faye
((5942.562499999999, 1905.59375), (6439.281250000001, 2167.5))
True
((5852.25, 2528.75), (6394.125, 2754.53125))
False
((5897.406250000001, 3160.9375), (6376.062499999999, 3377.6875))
True
((5807.093749999999, 3738.9375), (6231.5625, 3919.5625))
Tave
((5879.34375, 4217.59375), (6367.03125, 4425.3125))
Fose
((5915.468749999999, 4913.0), (6403.156249999999, 5138.78125))
Toue
((5825.15625, 5716.78125), (6276.718750000001, 5897.40625))
False.
((6014.8125, 6213.5), (6475.40625, 6439.28125))
Falye
((5942.562499999999, 6818.59375), (6394.125, 6990.1875))
Tove
((5888.374999999999, 7468.84375), (6303.812500000001, 7649.46875))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1887, '2': 2510, '3': 3133, '4': 3766, '5': 4181, '6': 4804, '7': 5644, '8': 6276, '9': 6701, '10': 7532}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8e9QLg4.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
collision happend with box:1003.734375 and text:Tisr solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
text1 i.e the prev text is the winner
Tue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
collision happend with box:1232.328125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Fale
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
collision happend with box:1332.078125 and text:Fale solving on the basis of percent match boxes
the current box specification are
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1438.0625 and text:false solving on the basis of percent match boxes
the current box specification are
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cODChJY.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6756.6875
first t/f detection
Fale
((5536.156249999999, 1950.75), (5843.218750000001, 2203.625))
Fle
((5472.9375, 2528.75), (5816.125000000001, 2727.4375))
Trve
((5418.75, 3088.6875), (5834.187499999999, 3332.53125))
Tre
((5391.65625, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5346.499999999999, 4822.6875), (5716.78125, 5039.4375))
Trve
((5400.687499999999, 5355.53125), (5825.15625, 5572.28125))
Trve
((5418.75, 5843.21875), (5825.15625, 6114.15625))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
Tre
((5382.625000000001, 7080.5), (5807.093749999999, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2591, '3': 2998, '4': 3621, '5': 4235, '6': 4858, '7': 5265, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : d698jqy.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
F
((998.4375, 670.3125), (1033.88671875, 725.09765625))
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1019.384765625, 783.10546875), (1059.66796875, 820.166015625))
text2 i.e the incoming text is the winner
collision happend with box:783.10546875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 886.23046875), (1027.44140625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:886.23046875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1024.21875, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['3', '7']
the assigned keys are ['1', '2', '4', '5', '6', '8', '9', '10']
['1', '2', '4', '5', '6', '8', '9', '10', '1', '2', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 407, '2': 509, '4': 681, '5': 783, '6': 881, '8': 1057, '9': 1131, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : seedZky.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6458.65625
left top x of SN: 583.15625
bottom right x of SN: 988.9374999999999
first t/f detection
TRVE
((5418.75, 1923.65625), (5870.312500000001, 2104.28125))
TRUE
((5418.75, 2564.875), (5816.125000000001, 2700.34375))
FALSE
((5454.874999999999, 2962.25), (5987.71875, 3188.03125))
FALSE
((5445.84375, 3585.40625), (5897.406250000001, 3757.0))
FALS
((5472.9375, 4208.5625), (5834.187499999999, 4380.15625))
TRUE
((5409.718750000001, 4768.5), (5861.281249999999, 4931.0625))
FALSE
((5400.687499999999, 5247.15625), (5897.406250000001, 5409.71875))
FALSE
((5536.156249999999, 5734.84375), (5996.749999999999, 5915.46875))
TRUG
((5400.687499999999, 6168.34375), (5852.25, 6339.9375))
TRUE
((5463.906250000001, 6863.75), (5897.406250000001, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2122, '2': 2691, '3': 3061, '4': 3630, '5': 4190, '6': 4759, '7': 5129, '8': 5689, '9': 6069, '10': 6647}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DrHXuVC.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6819.906249999999
left top x of SN: 619.2812499999999
bottom right x of SN: 1025.0625
first t/f detection
TRVE
((5563.249999999999, 2203.625), (6005.781250000001, 2465.53125))
TRU6
((5536.156249999999, 2790.65625), (5879.34375, 2989.34375))
TRUE
((5518.093750000001, 3269.3125), (5969.656249999999, 3504.125))
FALSE
((5536.156249999999, 3702.8125), (6014.8125, 3910.53125))
FBE
((5554.21875, 3910.53125), (5951.593750000001, 4091.15625))
FALSE
((5608.40625, 4316.9375), (6132.218749999999, 4533.6875))
Fe
((5536.156249999999, 4515.625), (6123.1875, 4714.3125))
FALSE
((5581.3125, 5039.4375), (6087.062500000001, 5256.1875))
TRUC
((5662.59375, 5518.09375), (6123.1875, 5734.84375))
TROE
((5644.531249999999, 6087.0625), (6087.062500000001, 6258.65625))
TROE
((5644.531249999999, 6565.71875), (6114.156250000001, 6791.5))
TRUE
((5626.468750000001, 7197.90625), (6105.124999999999, 7477.875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2880, '3': 3278, '4': 3865, '5': 4461, '6': 5057, '7': 5454, '8': 6069, '9': 6484, '10': 7098}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jVAcbJd.jpg
OCR detection done with doctr
left top x of SN: 69.88476562500001
bottom right x of SN: 319.939453125
left top x of T/F: 1390.892578125
bottom right x of T/F: 1873.60546875
first t/f detection
Faly
((1405.896484375, 610.4765625), (1591.041015625, 738.076171875))
collision happend with box:610.4765625 and text:Faly solving on the basis of percent match boxes
the current box specification are
falee
((1428.4140624999998, 748.083984375), (1593.54296875, 845.66015625))
text2 i.e the incoming text is the winner
collision happend with box:748.083984375 and text:falee solving on the basis of percent match boxes
the current box specification are
Trud
((1423.41015625, 903.205078125), (1583.53515625, 1008.287109375))
text2 i.e the incoming text is the winner
collision happend with box:903.205078125 and text:Trud solving on the basis of percent match boxes
the current box specification are
Tiur
((1418.40625, 1043.314453125), (1581.033203125, 1158.404296875))
text2 i.e the incoming text is the winner
collision happend with box:1043.314453125 and text:Tiur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1198.435546875 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1336.04296875 and text:True solving on the basis of percent match boxes
the current box specification are
Falre
((1415.904296875, 1478.654296875), (1588.5390625, 1583.736328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1478.654296875 and text:Falre solving on the basis of percent match boxes
the current box specification are
Falw
((1430.916015625, 1613.759765625), (1591.041015625, 1698.826171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1613.759765625 and text:Falw solving on the basis of percent match boxes
the current box specification are
False
((1423.41015625, 1743.861328125), (1583.53515625, 1848.943359375))
true and false collision so given priority to text2 which is the incoming text
Falye
((1418.40625, 1903.986328125), (1583.53515625, 2011.5703125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 893, '2': 775, '3': 878, '4': 1050, '5': 1200, '6': 1368, '7': 1468, '8': 1628, '9': 1738, '10': 1898}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gWKDGZp.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1330.56640625
first t/f detection
Falle
((990.3808593750001, 433.447265625), (1077.392578125, 483.3984375))
collision happend with box:433.447265625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Filke
((991.9921875, 509.1796875), (1083.837890625, 559.130859375))
text1 i.e the prev text is the winner
collision happend with box:433.447265625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Tuue
((1025.830078125, 589.74609375), (1128.955078125, 642.919921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.74609375 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 700.927734375), (1069.3359375, 754.1015625))
text1 i.e the prev text is the winner
louue
((954.9316406250001, 795.99609375), (1070.947265625, 849.169921875))
collision happend with box:795.99609375 and text:louue solving on the basis of percent match boxes
the current box specification are
pul
((961.376953125, 878.173828125), (1080.615234375, 923.291015625))
text1 i.e the prev text is the winner
Tque
((1011.328125, 961.962890625), (1127.34375, 1015.13671875))
collision happend with box:961.962890625 and text:Tque solving on the basis of percent match boxes
the current box specification are
bue
((964.599609375, 1052.197265625), (1059.66796875, 1106.982421875))
text1 i.e the prev text is the winner
fre
((971.044921875, 1152.099609375), (1053.22265625, 1193.994140625))
collision happend with box:1152.099609375 and text:fre solving on the basis of percent match boxes
the current box specification are
Jue
((969.4335937499999, 1274.560546875), (1050.0, 1326.123046875))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 409, '2': 512, '3': 580, '4': 683, '5': 784, '6': 886, '7': 953, '8': 1057, '9': 1126, '10': 1229}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gaFls3o.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6485.75
left top x of SN: 718.625
bottom right x of SN: 1115.375
first t/f detection
Toe
((5572.281250000001, 2312.0), (6087.062500000001, 2483.59375))
false
((5509.062499999999, 2727.4375), (5888.374999999999, 2908.0625))
True
((5599.375000000001, 3242.21875), (6141.250000000001, 3468.0))
false
((5463.906250000001, 3811.1875), (5897.406250000001, 4036.96875))
Tnve
((5481.968749999999, 4452.40625), (5951.593750000001, 4614.96875))
Fabe
((5454.874999999999, 4903.96875), (5843.218750000001, 5093.625))
False
((5427.781249999999, 5319.40625), (5870.312500000001, 5545.1875))
Fale
((5500.03125, 5780.0), (5960.625, 5987.71875))
Tave
((5454.874999999999, 6240.59375), (5879.34375, 6457.34375))
True
((5400.687499999999, 6863.75), (5852.25, 7035.34375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2871, '3': 3242, '4': 3784, '5': 4335, '6': 4885, '7': 5247, '8': 5807, '9': 6177, '10': 6755}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HS8kvmW.jpg
OCR detection done with doctr
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6386.406249999999
left top x of SN: 926.3437500000001
bottom right x of SN: 1323.0937500000002
first t/f detection
TRVE
((5310.375, 2149.4375), (5789.031250000001, 2330.0625))
TRVE
((5292.312499999999, 2637.125), (5770.96875, 2808.71875))
FALJE
((5283.28125, 3115.78125), (5734.843750000001, 3278.34375))
FALSE
((5301.343750000001, 3648.625), (5779.999999999999, 3820.21875))
FALJE
((5265.218749999999, 4226.625), (5770.96875, 4398.21875))
FALIE
((5274.250000000001, 4741.40625), (5770.96875, 4903.96875))
FALSE
((5247.156250000001, 5165.875), (5725.812499999999, 5373.59375))
TRVE
((5202.0, 5653.5625), (5644.531249999999, 5861.28125))
TRVE
((5265.218749999999, 6096.09375), (5743.875, 6267.6875))
TRVE
((5202.0, 6674.09375), (5635.5, 6881.8125))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 3097, '2': 2763, '3': 3097, '4': 3612, '5': 4127, '6': 4651, '7': 5003, '8': 5518, '9': 5870, '10': 6421}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GgtAhBF.jpg
OCR detection done with doctr
left top x of SN: 107.65624999999997
bottom right x of SN: 329.55078125
left top x of T/F: 965.87890625
bottom right x of T/F: 1343.45703125
first t/f detection
T
((1038.720703125, 420.556640625), (1080.615234375, 464.0625))
collision happend with box:420.556640625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 504.345703125), (1035.498046875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:504.345703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((980.712890625, 584.912109375), (1029.052734375, 631.640625))
text2 i.e the incoming text is the winner
collision happend with box:584.912109375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1033.88671875, 723.486328125))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1017.7734375000001, 781.494140625), (1062.890625, 821.77734375))
text2 i.e the incoming text is the winner
collision happend with box:781.494140625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 883.0078125), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:883.0078125 and text:T solving on the basis of percent match boxes
the current box specification are
pr
((1000.0488281250001, 966.796875), (1085.44921875, 1013.525390625))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:pr solving on the basis of percent match boxes
the current box specification are
F
((983.935546875, 1045.751953125), (1019.384765625, 1087.646484375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 576, '4': 678, '5': 783, '6': 883, '7': 952, '8': 1055, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mCkySBG.jpg
OCR detection done with doctr
left top x of T/F: 5381.65625
bottom right x of T/F: 6567.03125
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
Tyul
((5635.5, 1950.75), (6105.124999999999, 2122.34375))
Tyue
((5445.84375, 2393.28125), (5897.406250000001, 2628.09375))
Telse
((5536.156249999999, 3016.4375), (5960.625, 3233.1875))
foly
((5427.781249999999, 3458.96875), (5816.125000000001, 3639.59375))
Tyue
((5418.75, 3991.8125), (5852.25, 4154.375))
Taln
((5500.03125, 4768.5), (5915.468749999999, 4967.1875))
fobee
((5427.781249999999, 5274.25), (5834.187499999999, 5454.875))
Tyu
((5445.84375, 5445.84375), (5888.374999999999, 5626.46875))
Talu
((5427.781249999999, 5770.96875), (5798.0625, 5942.5625))
True
((5400.687499999999, 6249.625), (5879.34375, 6457.34375))
Tue
((5481.968749999999, 6936.0), (5816.125000000001, 7080.5))
F
((6195.437500000001, 7468.84375), (6367.03125, 7577.21875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2438, '3': 2998, '4': 3576, '5': 3955, '6': 4533, '7': 5292, '8': 5870, '9': 6258, '10': 7035}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : E0RhGxf.jpg
OCR detection done with doctr
left top x of SN: 375.4374999999999
bottom right x of SN: 790.25
left top x of T/F: 5688.718749999999
bottom right x of T/F: 6937.312500000001
first t/f detection
TRUE
((5743.875, 1905.59375), (6330.906250000001, 2113.3125))
TRUE
((5798.0625, 2546.8125), (6367.03125, 2718.40625))
FALSE
((5770.96875, 3188.03125), (6385.093750000001, 3350.59375))
TKUE
((5680.656250000001, 3720.875), (6240.593749999999, 3883.4375))
FALSE
((5834.187499999999, 4190.5), (6403.156249999999, 4362.09375))
FALSE
((5698.718749999999, 4894.9375), (6358.000000000001, 5066.53125))
TRVE
((5752.906249999999, 5536.15625), (6321.874999999999, 5734.84375))
CRUE
((5716.78125, 6132.21875), (6267.687499999999, 6294.78125))
TRUE
((5743.875, 6701.1875), (6348.968749999999, 6872.78125))
TRUE
((5644.531249999999, 7342.40625), (6186.406249999999, 7504.96875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2546, '3': 3142, '4': 3757, '5': 4154, '6': 4768, '7': 5563, '8': 6168, '9': 6574, '10': 7369}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DFGByuP.jpg
OCR detection done with doctr
left top x of SN: 68.07128906249996
bottom right x of SN: 304.4130859375
left top x of T/F: 1162.064453125
bottom right x of T/F: 1597.431640625
first t/f detection
falu
((1195.9013671875, 541.748046875), (1347.5908203125, 639.2626953125))
collision happend with box:541.748046875 and text:falu solving on the basis of percent match boxes
the current box specification are
falre
((1193.734375, 671.767578125), (1308.5849609375, 747.6123046875))
text2 i.e the incoming text is the winner
collision happend with box:671.767578125 and text:falre solving on the basis of percent match boxes
the current box specification are
Truu
((1182.8994140625, 795.2861328125), (1317.2529296875, 886.2998046875))
text2 i.e the incoming text is the winner
collision happend with box:795.2861328125 and text:Truu solving on the basis of percent match boxes
the current box specification are
Rul
((1198.068359375, 927.47265625), (1332.4218749999998, 1007.6513671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:927.47265625 and text:Rul solving on the basis of percent match boxes
the current box specification are
Trur
((1182.8994140625, 1066.16015625), (1323.75390625, 1157.173828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1066.16015625 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tyul
((1165.5634765624998, 1189.6787109375), (1302.083984375, 1254.6884765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1189.6787109375 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trie
((1150.39453125, 1300.1953125), (1295.5830078125, 1384.7080078125))
text1 i.e the prev text is the winner
Foliue
((1167.73046875, 1408.544921875), (1291.2490234375, 1482.22265625))
collision happend with box:1408.544921875 and text:Foliue solving on the basis of percent match boxes
the current box specification are
Falu
((1161.2294921875, 1525.5625), (1289.08203125, 1601.4072265625))
true and false collision so given priority to text2 which is the incoming text
True
((1146.060546875, 1703.255859375), (1295.5830078125, 1794.26953125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 528, '2': 667, '3': 758, '4': 897, '5': 1033, '6': 1170, '7': 1261, '8': 1399, '9': 1493, '10': 1629}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u9Wer6S.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6449.625000000001
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
True
((5274.250000000001, 1743.03125), (5716.78125, 2013.96875))
Tue
((5292.312499999999, 2275.875), (5752.906249999999, 2546.8125))
false
((5328.437500000001, 2709.375), (5807.093749999999, 3043.53125))
False
((5310.375, 3305.4375), (5789.031250000001, 3639.59375))
Tue
((5310.375, 3973.75), (5779.999999999999, 4253.71875))
False
((5319.406249999999, 4443.375), (5807.093749999999, 4759.46875))
Folse
((5301.343750000001, 4940.09375), (5725.812499999999, 5229.09375))
Tue
((5319.406249999999, 5518.09375), (5734.843750000001, 5743.875))
Tue
((5301.343750000001, 5987.71875), (5752.906249999999, 6258.65625))
Thue
((5328.437500000001, 6565.71875), (5825.15625, 6827.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2555, '3': 2926, '4': 3513, '5': 4073, '6': 4660, '7': 5048, '8': 5635, '9': 6023, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : k3fXpaB.jpg
OCR detection done with doctr
left top x of T/F: 5083.625
bottom right x of T/F: 6386.406249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
FALSE
((5111.6875, 2023.0), (5743.875, 2266.84375))
TRUE
((5111.6875, 2546.8125), (5798.0625, 2754.53125))
T
((5129.75, 3052.5625), (5319.406249999999, 3224.15625))
collision happend with box:3052.5625 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5265.218749999999, 3043.53125), (5644.531249999999, 3224.15625))
text2 i.e the incoming text is the winner
FALSE
((5147.8125, 3594.4375), (5861.281249999999, 3802.15625))
TRUE
((5211.031249999999, 4163.40625), (5825.15625, 4362.09375))
distribution.
((4371.125, 4687.21875), (5084.59375, 4849.78125))
collision happend with box:4687.21875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((5211.031249999999, 4642.0625), (5879.34375, 4840.75))
text1 i.e the prev text is the winner
directly
((4642.0625, 5057.5), (5111.6875, 5220.0625))
collision happend with box:5057.5 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5238.124999999999, 5075.5625), (5897.406250000001, 5292.3125))
true and false collision so given priority to text2 which is the incoming text
space.
((4741.40625, 5644.53125), (5102.65625, 5780.0))
collision happend with box:5644.53125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5229.09375, 5554.21875), (5834.187499999999, 5752.90625))
text2 i.e the incoming text is the winner
prediction
((4560.78125, 6005.78125), (5138.78125, 6150.28125))
collision happend with box:6005.78125 and text:prediction solving on the basis of percent match boxes
the current box specification are
T
((5247.156250000001, 6032.875), (5454.874999999999, 6204.46875))
text1 i.e the prev text is the winner
collision happend with box:6005.78125 and text:prediction solving on the basis of percent match boxes
the current box specification are
RUE
((5427.781249999999, 6014.8125), (5843.218750000001, 6195.4375))
text2 i.e the incoming text is the winner
the
((4958.15625, 6737.3125), (5174.90625, 6881.8125))
collision happend with box:6737.3125 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5247.156250000001, 6656.03125), (5924.500000000001, 6863.75))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2808, '3': 3169, '4': 3720, '5': 4262, '6': 4822, '7': 5183, '9': 6114, '8': 5743, '10': 6683}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9jJTcYP.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6747.656250000001
left top x of SN: 303.1875000000001
bottom right x of SN: 717.9999999999999
first t/f detection
FALSE
((5590.343749999999, 1950.75), (6285.75, 2203.625))
EROE
((5617.437499999999, 2492.625), (6312.84375, 2790.65625))
FALSE
((5599.375000000001, 2727.4375), (6312.84375, 3034.5))
FALSE
((5563.249999999999, 3215.125), (6303.812500000001, 3513.15625))
TRUE
((5554.21875, 3775.0625), (6177.375, 3982.78125))
FALSE
((5581.3125, 4199.53125), (6367.03125, 4497.5625))
FAESE
((5590.343749999999, 4876.875), (6294.781249999999, 5165.875))
TRUE
((5626.468750000001, 5129.75), (6267.687499999999, 5382.625))
TRUC
((5608.40625, 5599.375), (6294.781249999999, 5852.25))
TRUE
((5590.343749999999, 6141.25), (6204.46875, 6348.96875))
FALSE
((5617.437499999999, 6674.09375), (6312.84375, 6926.96875))
TRUE
((5617.437499999999, 7297.25), (6231.5625, 7541.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2682, '3': 3269, '4': 3865, '5': 4262, '6': 4867, '7': 5662, '8': 6267, '9': 6674, '10': 7486}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QboFh7Q.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6702.5
left top x of SN: 501.875
bottom right x of SN: 907.6562499999999
first t/f detection
FALSE
((5635.5, 1860.4375), (6087.062500000001, 2068.15625))
TRUE
((5617.437499999999, 2411.34375), (6050.937499999999, 2573.90625))
TRUE
((5599.375000000001, 3025.46875), (6069.0, 3233.1875))
TRUE
((5590.343749999999, 3612.5), (6050.937499999999, 3784.09375))
FALSE
((5644.531249999999, 4009.875), (6096.09375, 4190.5))
FALSE
((5734.843750000001, 4777.53125), (6240.593749999999, 4903.96875))
TRUE
((5662.59375, 5427.78125), (6114.156250000001, 5590.34375))
TRUE
((5671.624999999999, 5960.625), (6177.375, 6096.09375))
the
((5328.437500000001, 6348.96875), (5545.187500000001, 6502.5))
collision happend with box:6348.96875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5707.750000000001, 6502.5), (6159.312499999999, 6674.09375))
text2 i.e the incoming text is the winner
TRUE
((5716.78125, 7125.65625), (6141.250000000001, 7297.25))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2601, '3': 3169, '4': 3738, '5': 4118, '6': 4705, '7': 5472, '8': 6059, '9': 6457, '10': 7252}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rxCG3WE.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
TRUE
((5382.625000000001, 1968.8125), (6186.406249999999, 2248.78125))
TRUE
((5364.5625, 2429.40625), (6385.093750000001, 2754.53125))
FE
((5310.375, 2727.4375), (5978.687500000001, 2944.1875))
TRVE
((5355.531250000001, 2926.125), (6249.625000000001, 3179.0))
EfE
((5337.46875, 3233.1875), (5825.15625, 3440.90625))
FALSÉ
((5382.625000000001, 3621.53125), (6159.312499999999, 3973.75))
FALSE
((5301.343750000001, 4380.15625), (6050.937499999999, 4551.75))
TRUE
((5283.28125, 4885.90625), (5960.625, 5048.46875))
FALSE
((5283.28125, 5310.375), (6168.343750000001, 5554.21875))
TRUE
((5310.375, 5888.375), (5969.656249999999, 6059.96875))
TRUE
((5310.375, 6439.28125), (5870.312500000001, 6610.875))
TRUE
((5310.375, 7008.25), (5960.625, 7170.8125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2167, '2': 2745, '3': 3133, '4': 3729, '5': 4298, '6': 4894, '7': 5283, '8': 5879, '9': 6267, '10': 6863}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bztNZnR.jpg
OCR detection done with doctr
left top x of SN: 72.68359375000003
bottom right x of SN: 287.587890625
left top x of T/F: 785.5937499999999
bottom right x of T/F: 1138.24609375
first t/f detection
Tyue
((800.146484375, 321.7265625), (879.0605468750001, 352.078125))
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((803.181640625, 399.123046875), (879.0605468750001, 435.544921875))
text1 i.e the prev text is the winner
collision happend with box:321.7265625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fole
((810.7695312500001, 478.037109375), (877.54296875, 509.90625))
text2 i.e the incoming text is the winner
collision happend with box:478.037109375 and text:Fole solving on the basis of percent match boxes
the current box specification are
Fabe
((801.6640625, 559.986328125), (876.025390625, 594.890625))
text2 i.e the incoming text is the winner
collision happend with box:559.986328125 and text:Fabe solving on the basis of percent match boxes
the current box specification are
Fahe
((804.69921875, 651.041015625), (882.095703125, 687.462890625))
text2 i.e the incoming text is the winner
collision happend with box:651.041015625 and text:Fahe solving on the basis of percent match boxes
the current box specification are
FaMe
((804.69921875, 736.025390625), (882.095703125, 766.376953125))
text2 i.e the incoming text is the winner
collision happend with box:736.025390625 and text:FaMe solving on the basis of percent match boxes
the current box specification are
Fabe
((806.216796875, 807.3515625), (872.990234375, 839.220703125))
text2 i.e the incoming text is the winner
collision happend with box:807.3515625 and text:Fabe solving on the basis of percent match boxes
the current box specification are
True
((803.181640625, 892.3359375), (868.4375, 924.205078125))
text2 i.e the incoming text is the winner
Trwe
((797.1113281249999, 1066.857421875), (876.025390625, 1103.279296875))
collision happend with box:1066.857421875 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Tywe
((798.62890625, 969.732421875), (868.4375, 1000.083984375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 314, '2': 405, '3': 467, '4': 559, '5': 651, '6': 745, '7': 805, '8': 898, '9': 959, '10': 1053}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lyr0YBB.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6639.281250000001
left top x of SN: 637.34375
bottom right x of SN: 1043.125
first t/f detection
TRUE
((5463.906250000001, 2068.15625), (6050.937499999999, 2275.875))
FALSE
((5436.812500000001, 2582.9375), (6141.250000000001, 2754.53125))
TRUE
((5445.84375, 3061.59375), (6059.968750000001, 3260.28125))
TRUE
((5427.781249999999, 3675.71875), (6059.968750000001, 3874.40625))
FALSE
((5454.874999999999, 4271.78125), (6213.499999999999, 4470.46875))
TRUE
((5391.65625, 4714.3125), (5924.500000000001, 4931.0625))
FALSE
((5445.84375, 5247.15625), (6050.937499999999, 5418.75))
TRUE
((5382.625000000001, 5698.71875), (5924.500000000001, 5906.4375))
FALSE
((5445.84375, 6240.59375), (6141.250000000001, 6439.28125))
FALSE
((5427.781249999999, 6881.8125), (6069.0, 7053.40625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2095, '2': 2673, '3': 3061, '4': 3648, '5': 4217, '6': 4795, '7': 5165, '8': 5743, '9': 6132, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6EoSuEJ.jpg
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6458.65625
left top x of SN: 366.40625
bottom right x of SN: 781.2187500000001
first t/f detection
STRUE
((5400.687499999999, 1688.84375), (6041.90625, 1887.53125))
FALSE
((5391.65625, 2284.90625), (6096.09375, 2492.625))
TRU
((5283.28125, 2790.65625), (5761.937500000001, 3007.40625))
TRUE
((5319.406249999999, 3395.75), (6023.843749999999, 3639.59375))
FALSE
((5500.03125, 4027.9375), (6195.437500000001, 4244.6875))
TTRVE
((5409.718750000001, 4614.96875), (6096.09375, 4813.65625))
FALSE
((5472.9375, 5075.5625), (6114.156250000001, 5283.28125))
FALSE
((5436.812500000001, 5617.4375), (6078.031249999999, 5825.15625))
TRU
((5491.000000000001, 6132.21875), (5879.34375, 6312.84375))
the
((5039.4375, 6908.90625), (5265.218749999999, 7062.4375))
FALSE
((5590.343749999999, 6746.34375), (6231.5625, 6945.03125))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2637, '3': 3016, '4': 3603, '5': 4190, '6': 4795, '7': 5183, '8': 5789, '9': 6195, '10': 6791}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : r53EbYv.jpg
OCR detection done with doctr
left top x of SN: 93.357421875
bottom right x of SN: 309.16015625
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1234.65234375
first t/f detection
FALSE
((885.2148437499999, 389.16015625), (972.38671875, 428.076171875))
collision happend with box:389.16015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 473.21875), (966.16015625, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 557.27734375), (958.3769531250001, 594.63671875))
text1 i.e the prev text is the winner
TRUE
((888.328125, 655.345703125), (961.490234375, 684.921875))
collision happend with box:655.345703125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((883.658203125, 761.197265625), (966.16015625, 792.330078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:761.197265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((885.2148437499999, 846.8125), (956.8203125, 876.388671875))
text1 i.e the prev text is the winner
TRUE
((886.7714843750001, 927.7578125), (959.93359375, 957.333984375))
collision happend with box:927.7578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((889.8847656249999, 1016.486328125), (977.056640625, 1046.0625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((891.4414062500001, 1095.875), (941.25390625, 1127.0078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((941.25390625, 1098.98828125), (972.38671875, 1128.564453125))
text1 i.e the prev text is the winner
collision happend with box:1095.875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((892.998046875, 1212.623046875), (972.38671875, 1240.642578125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1293, '2': 490, '3': 558, '4': 658, '5': 758, '7': 927, '8': 1028, '9': 1098, '10': 1201}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : keUAEPk.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6359.312499999999
left top x of SN: 402.5312499999999
bottom right x of SN: 817.34375
first t/f detection
Tsue
((5229.09375, 2149.4375), (5725.812499999999, 2402.3125))
Feue
((5165.875, 2745.5), (5626.468750000001, 2926.125))
Colae
((5247.156250000001, 3179.0), (5834.187499999999, 3440.90625))
Toue
((5229.09375, 3729.90625), (5761.937500000001, 3955.6875))
Folbe
((5211.031249999999, 4190.5), (5761.937500000001, 4389.1875))
TAR
((5202.0, 4587.875), (5599.375000000001, 4777.53125))
collision happend with box:4587.875 and text:TAR solving on the basis of percent match boxes
the current box specification are
RFRR
((5653.562500000001, 4533.6875), (6159.312499999999, 4741.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:4533.6875 and text:RFRR solving on the basis of percent match boxes
the current box specification are
batwer
((5418.75, 4389.1875), (5987.71875, 4560.78125))
true and false collision so given priority to text2 which is the incoming text
Tme
((5256.1875, 4849.78125), (5761.937500000001, 5057.5))
Tru
((5238.124999999999, 5202.0), (5825.15625, 5409.71875))
Folbe
((5301.343750000001, 5707.75), (5734.843750000001, 5879.34375))
prediction
((4596.90625, 6240.59375), (5192.96875, 6439.28125))
collision happend with box:6240.59375 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tau
((5373.593749999999, 6213.5), (5870.312500000001, 6421.21875))
text2 i.e the incoming text is the winner
Tme
((5427.781249999999, 6710.21875), (5888.374999999999, 6917.9375))
the
((5012.34375, 6981.15625), (5229.09375, 7134.6875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6838
printing the number dict y_coordinate
{'1': 2501, '2': 3070, '3': 3449, '4': 4027, '5': 4596, '6': 5183, '7': 5563, '8': 6150, '9': 6538, '10': 6838}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UmIo7nf.jpg
OCR detection done with doctr
left top x of SN: 91.79296874999997
bottom right x of SN: 309.76171875
left top x of T/F: 874.83984375
bottom right x of T/F: 1241.4609375
first t/f detection
FALSE
((894.33203125, 430.3125), (976.59765625, 461.953125))
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 509.4140625), (967.10546875, 545.80078125))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
collision happend with box:596.42578125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:691.34765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVUE
((889.5859375, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVUE solving on the basis of percent match boxes
the current box specification are
TRVE
((883.2578125, 882.7734375), (960.77734375, 912.83203125))
text1 i.e the prev text is the winner
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
collision happend with box:968.203125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((891.16796875, 1058.37890625), (967.10546875, 1090.01953125))
text2 i.e the incoming text is the winner
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((897.49609375, 1140.64453125), (979.7617187500001, 1170.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1140.64453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((899.078125, 1235.56640625), (952.8671875, 1267.20703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1235.56640625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((956.03125, 1237.1484375), (987.671875, 1268.7890625))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '3', '4', '6', '7']
the assigned keys are ['2', '5', '8', '9', '10']
['2', '5', '8', '9', '10', '2', '5', '8', '9', '10']
printing the number dict y_coordinate
{'2': 525, '5': 795, '8': 1067, '9': 1137, '10': 1238, '1': 225}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WqsQ2oM.jpg
rotation started
['T', '1n', '2', '00', '2', '', 'E', 'A', 'CT', 'a', 'N', '1', '2', 'P', '&', '7', ':', 'I', '2', '8', '8', 'it', 'a', 'I', ':', 'I', 'I', 'I', 'E', 'I', 'se', 'E', 'I', 'E', 't', 'I', '2', 'I', 'E', 'I', 'I', '8', 'I', 'E', 'E', '1', 'I', 'I', 'E', '8', 'I', 'E', 'I', 'tn', 'a', 'E', 'I', '4', '', '8', 'E', '-', 'a', '9', 'E', 'E', '1', 'I', 'E', 'E', '9', 'E', 'a', 'E', 'e', 'E', 'E', 'I', 'E', ':', 'I', 'I', 'I', 'I', '-', 'I', 'E', '%', '8', 'E', 'I', 'I', 'E', 'I', '8', 'I', 'of', '2', 'I', 'I', 'E', 'e', 'E', 'E', 'tn', 'E', 'Q', 'E', 'f', 'I', 'B', 'I', 'I', 'a', '%', 'I', '8', '2', 'a', 'I', 'E', '-', 'I', 'I', 'E', '€', 'I', '8', 'I', 'E', 'I', 'e', 'I', 't', '%', ':', '2', 'I', '1', 'g', '2', 'I', 'I', 'I', 'I', '2', '€', '9', 'f', 'I', 'E', 'I', 'E', 'F', 'I', 'tn', 'I', 'p', '€', 'I', '1', 'I', 'E', '2', 'it', '-', '-', 'E', '2', 'D', 'E', 'E', 'I', '2', 'I', 'I', 'I', 'E', 'E', 'I', 'a', 'E', 'E', 'I', 'g', 'a', 'i', '1', 'I', ':', 'I', 'E', 't', 'I', 'I', 'I', '7', 'I', 'it', 'I', '€', 'E', 'I', 'I', 'I', 'E', '€', 'I', '€', '€', 'I', '']
rotation started
['aua', '-Ur', 'Surayaano', '"egep', 'ueosun', "'mou", '01', 'ITOM', 'azireieues', 'zou', 'op', '7e47', 'egep', 'Surureng', 'Jo', 'YSLI', 'eug', "'WAS", 'UI', 'pjeurered', 'D', 'ay7', 'Jo', 'anTeA', 'y8ry', 'B', 'YAIM', 'OI', 'WAS', '9SAI-SA-BUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUo', 'Sursn', '0PD', 'UI', 'sTregop', 'JO', 'estou', 'oytoads', 'amgdes', '01', 'ULIBOT', 'Keu', 'se', "'soseaIo", 'lapou', 'aya', 'Mel', 'uonorpead', 'B', 'Suryeur', "'sessepo", 'Jo', 'Jequnu', 'a81eT', 'B', 'YAIM', 'suerqoid', 'ssepprmur', 'JOI', '6', 'J', 'Mm', '"eoeds', '[eurBuo', 'au7', 'ur', 'meQuII-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsipep', 'BUL', '8', '"sapou', 'Jo', 'pequnu', 'au7', '07', 'Teuorodord', 'DAgJ', 'Atgoaup', 'SI', 'BOIL', 'UOISIDOZI', 'o47', 'uI', 'uonorpard', 'B', 'Buryeur', 'JOJ', 'pammbar', 'BWIL', 'BUL', 'L', '1', 'MCL', '"uorgnqugsip', 'uerssnes', 'B', 'SieMTe', 'SI', 'suorgnquasip', 'uerssnes', 'OM7', 'Jo', 'BIgXIU', 'V', '9', 'Tredey', 'pue', 'UOISIO', 'MoL', '-Id', 'uoamneq', 'nord', 'B', 'SI', 'OAINO', '(D04)', 'orsuIeg0e.eU)', 'Sureiado', 'IOATODOY', 'BUL', 'C', 'oeyoy', '"YIOMIOU', 'Temau', 'a47', 'UI', 'squerpels', 'au7', 'agnduoo', '07', 'pasn', 'PAT', 'SI', 'quaosap', 'querpe1s', 'OTIYM', "'SQU8IOM", 'au7', 'agepdn', '07', 'pasn', 'SI', 'uome@odoxdypeg', '#', ':f', 'pue', 'I', 'SIO100A', 'moy', 'Aue', 'IOJ', 'ouIgauI', 'aouensip', 'PITRA', 'B', 'SI', '@z)guopusgauzsoo', '-', 'I', '4', 'Teuorsueuup-P', 'JayIssep', 'meQUIT-uou', 'B', 'SI', 'NNY', '7', 'DMOL', 'quaurdordap', 'JOJ', 'quetraumbar', 'a8e1ogs', 'aua', 'STeoidAL', 'I', 'ueya', '181e1', 'yonur', 'SI', 'NNX', 'MMEL', 'JOJ', 'WAS', '"va/anul', 'quauagess', 'NS', 'paqumnu', 'ITOI', 'mor', 'AHAL', ':aau', '211M', '(sad', 'OT)', '6', 'ul', 'aSTVI', 'IO', 'INUL', 'SI211e1', 'Teardeo', 'reapo', 'pue', 'Surgtumpurey']
rotation started
['I', 'E', 'à', '3', 'I', ':', '3', '2', '3', '3', ':', '2', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'a', 'E', '/', '1', 'I', 'I', 'I', 'I', 'is', 'E', 'I', 'a', 'I', 'I', '8a', '1', 'e', 'of', '6', ':', 'I', 'iE', '1', 'a', 'e', ':', 'I', 'I', 'I', 'of', 'I', '3', 'E', 'I', '1', 'a', 'a', 's', 'E', 'à', '2', 'e', 'o', 'à', 'a', '1', 'I', 'a', 'a', 'i', 'à', '€', 'I', 'e', 'I', 'I', 'E', 'I', '8', 'is', 'e', 'e', 'I', 'i', 'iE', 'I', 'o', 'I', 'E', 'I', ':', '1', 'I', 'e', 'iE', 'o', 'I', 'E', '1', 'I', '2', 'a', '-', '-', ':', 'a', '8', 'a', 'of', 'I', 'E', 'E', 'O', 'I', 'I', '-', 'of', 'de', 'I', '1', '-', 'a', 'e', ':', 's', '$', 'I', 'à', 'I', 'a', 'I', 'I', 'I', 'I', 'I', '1', ':', '', 'is', 'I', 'I', '1', 'of', ':', 'is', 'e', 'à', ':', '2', 'I', 'is', 'e', 'S', 'I', 'E', 'e', 'E', 'a', '8', 'I', 'is', '0', 'I', 'a', ':', 'I', 'I', '1', 'I', 'E', '1', 'I', 'I', '2', 'S2', 'I', 'a', 'e', 'E', 'I', 'of', 'I', 'o', 'i', 'I', 'I', 'I', 'E', 'I', '', 'E', '2', 'E', '-', 'E', 'I', 'I', '7', '11', '4', '12', '', 'I', '0O', 'o', 'L', '9']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALS', 'Tywd', 'SN', 'Statement', 'than', 'SVM', 'for', 'is', 'much', 'larger', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', 'Torue', 'Su', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'd-dimensional', '3', '1', '-', 'cosineSimalaritylz.p)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TEEL', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Falsl', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Tyul', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TJul', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'Falad', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'A', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'original', 'space.', 'Tul', 'making', 'a', 'prediction', 'Toul', 'or', 'details', 'in', 'Falal', 'the']
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:36:48] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : WqsQ2oM.jpg
[2024/06/28 14:36:49] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:36:50] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.14703154563903809
[2024/06/28 14:36:52] ppocr DEBUG: rec_res num  : 35, elapsed : 1.4423394203186035
[2024/06/28 14:36:52] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:36:53] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.19184422492980957
[2024/06/28 14:36:54] ppocr DEBUG: rec_res num  : 35, elapsed : 1.2435035705566406
['#9', '10', '8', 'V', '9', 'SNStatement', '3', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'proportional to the number of nodes.', 'used to compute the gradients in the neural network..', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'cision and Recall.', 'vectors x and y.', 'KNN is a non-linear classifier.', 'deployment.', 'False', 'Tul', 'Toe', 'Toe', 'Fase', 'Toue', 'TRUE/FALS', 'Toue', 'Falsl', 'Toue']
[2024/06/28 14:36:55] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:36:56] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.11952447891235352
[2024/06/28 14:36:57] ppocr DEBUG: rec_res num  : 36, elapsed : 1.4682238101959229
['10', '-', '6', 'TmL', '8', 'DAOy', '5', 'DAYoy', 'omry', '2', 'NS']
[2024/06/28 14:36:58] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:36:59] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.12421345710754395
[2024/06/28 14:37:00] ppocr DEBUG: rec_res num  : 35, elapsed : 1.1890652179718018
['DAYOy', 'Tm', 'DA0y', 'NS', '2', '1', '3', '5', '6', '7', '8', '6', '10']
[2024/06/28 14:37:01] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:37:02] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.12015199661254883
[2024/06/28 14:37:03] ppocr DEBUG: rec_res num  : 35, elapsed : 1.394942283630371
['Write your roll number here:', 'TRUE/FALS', 'Statement', 'SN', 'ToWl', 'deployment.', 'Toue', 'KNN is a non-linear classifier', '2', 'hue', '3', 'vectors x and y.', 'Backpropogation is used to update the weights while gradient descent is', '4', 'Falol', 'used to compute the gradients in the neural network.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'Toe', '5', 'cision and Recall.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'Toue', 'The Time required for making a prediction in the Decision Tree is directly', 'Fabe', 'proportional to the number of nodes.', 'Toe', '9', 'Tue', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'False', 'training data that do not generalize well to new, unseen data.']
OCR detection done
left top x of SN: 778.0
bottom right x of SN: 1165.0
left top y of SN: 1676.0
bottom right y of SN: 1961.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/WqsQ2oM.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RZzR3WP.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
collision happend with box:766.1865234375 and text:Falke solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
collision happend with box:1307.5927734375 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
text2 i.e the incoming text is the winner
collision happend with box:1440.52734375 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
text2 i.e the incoming text is the winner
collision happend with box:1580.712890625 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1706.396484375 and text:Falue solving on the basis of percent match boxes
the current box specification are
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0c7xEno.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text1 i.e the prev text is the winner
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
collision happend with box:1330.0 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
text2 i.e the incoming text is the winner
collision happend with box:1438.0625 and text:Falwe solving on the basis of percent match boxes
the current box specification are
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dcKPZ70.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 492.8437500000001
bottom right x of SN: 898.625
first t/f detection
FALSE
((5274.250000000001, 1950.75), (5942.562499999999, 2194.59375))
FALSE
((5400.687499999999, 2492.625), (6032.875000000001, 2745.5))
A
((5211.031249999999, 2998.375), (5373.593749999999, 3160.9375))
collision happend with box:2998.375 and text:A solving on the basis of percent match boxes
the current box specification are
TRUE
((5400.687499999999, 2962.25), (5987.71875, 3179.0))
text2 i.e the incoming text is the winner
FALSE
((5355.531250000001, 3639.59375), (6050.937499999999, 3847.3125))
FALSE
((5346.499999999999, 4181.46875), (5996.749999999999, 4380.15625))
FALSE
((5391.65625, 4759.46875), (5978.687500000001, 4931.0625))
FALSE
((5382.625000000001, 5229.09375), (6014.8125, 5391.65625))
FALSE
((5364.5625, 5780.0), (5987.71875, 5951.59375))
TRUE
((5454.874999999999, 6222.53125), (6059.968750000001, 6430.25))
TRUE
((5400.687499999999, 6836.65625), (5987.71875, 7080.5))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3043, '4': 3621, '5': 4199, '6': 4777, '7': 5165, '8': 5752, '9': 6141, '10': 6728}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dYAaz7m.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 880.5624999999999
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6783.78125
first t/f detection
True
((5825.15625, 2023.0), (6303.812500000001, 2230.71875))
Pulse
((5752.906249999999, 2655.1875), (6267.687499999999, 2835.8125))
Palse
((5743.875, 3188.03125), (6367.03125, 3431.875))
True
((5707.750000000001, 3684.75), (6132.218749999999, 3865.375))
Tyue
((5689.6875, 4172.4375), (6123.1875, 4353.0625))
False
((5662.59375, 4849.78125), (6186.406249999999, 5066.53125))
True
((5671.624999999999, 5527.125), (6204.46875, 5743.875))
True
((5698.718749999999, 6041.90625), (6168.343750000001, 6258.65625))
True
((5707.750000000001, 6592.8125), (6204.46875, 6845.6875))
True
((5798.0625, 7225.0), (6249.625000000001, 7441.75))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2691, '3': 3269, '4': 3856, '5': 4244, '6': 4840, '7': 5617, '8': 6204, '9': 6601, '10': 7378}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : baS4IPn.jpg
OCR detection done with doctr
left top x of T/F: 5128.78125
bottom right x of T/F: 6350.28125
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
first t/f detection
TRUE
((5301.343750000001, 2185.5625), (5915.468749999999, 2447.46875))
FRUE
((5283.28125, 3079.65625), (5969.656249999999, 3332.53125))
FALSE
((5391.65625, 3666.6875), (6123.1875, 3910.53125))
FALSE
((5328.437500000001, 4280.8125), (6023.843749999999, 4497.5625))
FALSE
((5328.437500000001, 4669.15625), (5996.749999999999, 4876.875))
collision happend with box:4669.15625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
ORIE
((5337.46875, 4804.625), (5960.625, 5021.375))
text1 i.e the prev text is the winner
FALSE
((5328.437500000001, 5229.09375), (6005.781250000001, 5400.6875))
TRUE
((5301.343750000001, 5653.5625), (5888.374999999999, 5915.46875))
TRVE
((5364.5625, 6168.34375), (5969.656249999999, 6430.25))
TRUE
((5328.437500000001, 6836.65625), (6014.8125, 7089.53125))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2826, '3': 3206, '4': 3775, '5': 4335, '6': 4913, '7': 5292, '8': 5861, '9': 6240, '10': 6809}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PJF97Sn.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6738.624999999999
left top x of SN: 194.81250000000014
bottom right x of SN: 618.6562500000001
first t/f detection
faye
((5536.156249999999, 1743.03125), (6123.1875, 1941.71875))
fau
((5581.3125, 2384.25), (6114.156250000001, 2591.96875))
falye
((5500.03125, 2998.375), (6105.124999999999, 3197.0625))
Frue
((5572.281250000001, 3612.5), (6032.875000000001, 3784.09375))
True
((5617.437499999999, 4009.875), (6213.499999999999, 4253.71875))
faye
((5707.750000000001, 4696.25), (6339.9375, 4913.0))
Frue
((5689.6875, 5491.0), (6240.593749999999, 5662.59375))
fayo
((5707.750000000001, 6005.78125), (6177.375, 6231.5625))
the
((5346.499999999999, 6529.59375), (5572.281250000001, 6683.125))
collision happend with box:6529.59375 and text:the solving on the basis of percent match boxes
the current box specification are
Taue.
((5725.812499999999, 6628.9375), (6312.84375, 6845.6875))
text2 i.e the incoming text is the winner
True:
((5779.999999999999, 7288.21875), (6376.062499999999, 7495.9375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2591, '3': 3197, '4': 3811, '5': 4217, '6': 4831, '7': 5662, '8': 6294, '9': 6719, '10': 7577}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wN4cbxp.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1349.0654296875
bottom right x of T/F: 1821.873046875
first t/f detection
Tyut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
collision happend with box:645.755859375 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1411.626953125, 778.4111328125), (1526.7617187500002, 838.4814453125))
text2 i.e the incoming text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fpsn
((1386.59765625, 908.5634765625), (1524.2587890625, 978.6455078125))
text1 i.e the prev text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
faek
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
text1 i.e the prev text is the winner
Falte
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
collision happend with box:1058.7392578125 and text:Falte solving on the basis of percent match boxes
the current box specification are
Falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1203.9091796875 and text:Falk solving on the basis of percent match boxes
the current box specification are
faese
((1421.6386718749998, 1349.0791015625), (1539.2763671875, 1409.1494140625))
text2 i.e the incoming text is the winner
collision happend with box:1349.0791015625 and text:faese solving on the basis of percent match boxes
the current box specification are
Falh
((1436.65625, 1476.728515625), (1554.2939453125, 1536.798828125))
text2 i.e the incoming text is the winner
collision happend with box:1476.728515625 and text:Falh solving on the basis of percent match boxes
the current box specification are
BThu
((1366.57421875, 1624.4013671875), (1524.2587890625, 1684.4716796875))
text1 i.e the prev text is the winner
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
Trut
((1426.6445312500002, 1924.7529296875), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 788, '3': 896, '4': 1056, '5': 1213, '6': 1374, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jzBnw4J.jpg
OCR detection done with doctr
left top x of T/F: 5137.8125
bottom right x of T/F: 6323.1875
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
TRUE
((5183.9375, 1968.8125), (5861.281249999999, 2330.0625))
MRXXEPAISE
((5220.062500000001, 2573.90625), (6177.375, 2862.90625))
PALSE
((5183.9375, 3079.65625), (5978.687500000001, 3377.6875))
FALSE
((5102.65625, 3630.5625), (5897.406250000001, 3910.53125))
collision happend with box:3630.5625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
t
((6186.406249999999, 3684.75), (6303.812500000001, 3784.09375))
text1 i.e the prev text is the winner
TRUE
((5102.65625, 4226.625), (5834.187499999999, 4533.6875))
PALSE
((5039.4375, 4777.53125), (5825.15625, 5075.5625))
PALSE
((5084.59375, 5238.125), (5915.468749999999, 5527.125))
TRUE
((5012.34375, 5752.90625), (5680.656250000001, 6041.90625))
TRUE
((5012.34375, 6159.3125), (5671.624999999999, 6448.3125))
TR
((4958.15625, 6800.53125), (5337.46875, 7125.65625))
collision happend with box:6800.53125 and text:TR solving on the basis of percent match boxes
the current box specification are
VT
((5400.687499999999, 6890.84375), (5761.937500000001, 7134.6875))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2212, '2': 2745, '3': 3106, '4': 3657, '5': 4190, '6': 4741, '7': 5093, '8': 5644, '9': 6014, '10': 6565}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JcwfXfG.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1882.53125
first t/f detection
falte
((1438.78125, 627.1484375), (1621.59375, 741.40625))
collision happend with box:627.1484375 and text:falte solving on the basis of percent match boxes
the current box specification are
fabe
((1438.78125, 782.03125), (1578.4296875, 870.8984375))
text1 i.e the prev text is the winner
Trer
((1431.1640625, 929.296875), (1591.125, 1035.9375))
collision happend with box:929.296875 and text:Trer solving on the basis of percent match boxes
the current box specification are
Ru
((1443.859375, 1074.0234375), (1616.515625, 1180.6640625))
text1 i.e the prev text is the winner
Tue
((1433.703125, 1246.6796875), (1601.28125, 1353.3203125))
collision happend with box:1246.6796875 and text:Tue solving on the basis of percent match boxes
the current box specification are
Til
((1413.390625, 1383.7890625), (1578.4296875, 1470.1171875))
text2 i.e the incoming text is the winner
collision happend with box:1383.7890625 and text:Til solving on the basis of percent match boxes
the current box specification are
Taur
((1400.6953125, 1518.359375), (1573.3515624999998, 1617.3828125))
text2 i.e the incoming text is the winner
collision happend with box:1518.359375 and text:Taur solving on the basis of percent match boxes
the current box specification are
falie
((1423.546875, 1645.3125), (1573.3515624999998, 1734.1796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1645.3125 and text:falie solving on the basis of percent match boxes
the current box specification are
falre
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
true and false collision so given priority to text2 which is the incoming text
True
((1403.2343750000002, 1993.1640625), (1588.5859375, 2104.8828125))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 627, '2': 792, '3': 901, '4': 1061, '5': 1223, '6': 1388, '7': 1495, '8': 1655, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Vlo8tqw.jpg
OCR detection done with doctr
left top x of T/F: 5273.28125
bottom right x of T/F: 6458.65625
left top x of SN: 429.6249999999999
bottom right x of SN: 835.4062500000001
first t/f detection
S
((6069.0, 1210.1875), (6394.125, 1544.34375))
TRUE
((5328.437500000001, 1905.59375), (5951.593750000001, 2149.4375))
FAUE
((5355.531250000001, 2465.53125), (5969.656249999999, 2673.25))
TRUE
((5436.812500000001, 2998.375), (6087.062500000001, 3242.21875))
FALJE
((5391.65625, 3612.5), (6069.0, 3865.375))
FA
((5491.000000000001, 4262.75), (5734.843750000001, 4479.5))
collision happend with box:4262.75 and text:FA solving on the basis of percent match boxes
the current box specification are
LSE
((5761.937500000001, 4262.75), (6132.218749999999, 4452.40625))
text2 i.e the incoming text is the winner
FALE
((5445.84375, 4786.5625), (6096.09375, 4994.28125))
TRUE
((5400.687499999999, 5265.21875), (6023.843749999999, 5463.90625))
TRUE
((5382.625000000001, 5834.1875), (5996.749999999999, 6005.78125))
TRUE
((5481.968749999999, 6204.46875), (6032.875000000001, 6376.0625))
TRUE
((5500.03125, 6863.75), (6087.062500000001, 7062.4375))
the final dict without editing {'1': False, '2': True, '3': False, '4': 'NULL', '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2890, '3': 3269, '4': 3847, '5': 4425, '6': 5012, '7': 5400, '8': 5987, '9': 6376, '10': 6963}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': 'NULL', '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IEH3YjW.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 880.5624999999999
first t/f detection
Tue
((5445.84375, 1986.875), (5987.71875, 2239.75))
falie
((5436.812500000001, 2564.875), (5924.500000000001, 2826.78125))
True
((5500.03125, 3097.71875), (6014.8125, 3323.5))
folie
((5346.499999999999, 3630.5625), (5798.0625, 3892.46875))
Truve
((5382.625000000001, 4244.6875), (5960.625, 4452.40625))
Tsue
((5346.499999999999, 4831.71875), (5942.562499999999, 5048.46875))
True
((5454.874999999999, 5310.375), (5978.687500000001, 5527.125))
False
((5373.593749999999, 5761.9375), (5915.468749999999, 6032.875))
Tue
((5418.75, 6240.59375), (5933.53125, 6511.53125))
True
((5491.000000000001, 6791.5), (5969.656249999999, 7062.4375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2772, '3': 3169, '4': 3747, '5': 4316, '6': 4903, '7': 5328, '8': 5906, '9': 6303, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : N1HDgWz.jpg
rotation started
['f', '8', 'N', 'I', 'E', 'I', 'E', 'F', 'F', '>', 'I', 'F', 'I', '11', 'I', '2', 'I', 'p', '8', 'I', 'it', 'I', 'e', '-', 'H', 'p', 'I', 'I', 'E', 'I', 'E', 'I', 'I', 'I', '€', 'E', 'I', 'of', 'I', 'E', 'E', 'I', '8', 'I', '', 'I', 'I', 'E', ':', 'E', 'I', 'a', 'I', 'it', '3', 'I', '8', 'I', '9', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'it', 'of', 'I', 'a', 'I', 'I', 'Q', 'à', 'B', '8', 't', 'I', 'I', 'p', 'I', 'I', '9', 'I', 'I', 'p', '8', '2', 'P', 'E', '1', 'E', 'E', 'I', 'E', '1', 'E', 'I', 'E', 'I', '2', 'E', 'I', 'E', 'g', 'LE', 'I', '8', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'f', 'B', '8', 'I', '1', 'E', 'I', 'E', 'I', 'I', 'P', 'E', 'I', 'I', 'I', 'I', 'E', '2', 'E', 'I', 'iE', 'p', ':', 'E', '€', '9', 'f', 'I', 'E', 'I', 'E', 'E', 'p', '7', 'I', 'I', 'I', 'it', 'I', 'E', 'I', 'I', '1', 'I', 'I', 'E', 'F', '6', '00', '-', '', 'CT', '4', '1', '2', 's', 'a', 'E', 'I', 'a', '9', 'E', 'B', '1', 'I', 'E', 'E', 'I', 'I', 'E', '2', 'it', 'I', 'I', 'E', '2', 'E', 'I', 'it', 'I', '7', 'I', 'à', ':', 'I', 'E', 'E', 'i', 'i', 'm', 'E', 'à', 'E', 'I', 'MAE', 'COLROE']
rotation started
['"egep', 'usosun', 'mau', '07', 'TTOM', 'azieioues', 'gou', 'op', '7841', 'egep', 'Sururen', 'aya', 'ur', 'sTegop', 'IO', 'OSIOU', 'oyrads', 'amgdes', '07', 'UIeOT', 'Keur', 'lapour', 'au7', 'Se', "'sasear", '3NJL', '-Ul', 'Sumnyiano', 'Jo', 'YSLI', 'ay7', "'WAS", 'UI', 'pagaurered', 'D', 'ay7', 'Jo', 'anjea', '4814', 'B', 'YIIM', 'OT', 'WAS', '1SOI-SA-3UO', 'ueya', 'IOMOIS', 'SI', 'WAS', 'auo-SA-Ouo', 'Sursn', '33744', '30L', '33141', '3', '8741', '38143', 'uororpard', 'e', 'Suryeur', "'sassep", 'Jo', 'paqunu', 'a81e1', 'B', 'YAIM', 'suarqoid', 'ssepprmu', 'JOE', '6', 'ooeds', '[eursuo', 'aua', 'uI', 'JeQuIT-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstpop', 'OUL', '8', 'Sppoup', 'SI', 'OOIL', 'UOISIDOA', 'aus', 'ul', 'uonorpaad', 'B', 'Suryeur', 'JOJ', 'pammbar', 'OUILL', 'OUL', 'L', '"uonnqusip', 'uerssnes', 'B', 'Sienre', 'SI', 'suornquasip', 'uerssneg', 'OM7', 'Jo', 'amgXIur', 'V', '9', '-old', 'uoomgaq', 'gord', 'B', 'SI', 'aamo', '(bou)', 'onsuagpereud', 'Surgeado', 'IOAIODON', 'OUL', 'S', '"sapou', 'Jo', 'paqunu', 'aun', '09', '[euoriodoad', 'TeDoy', 'pue', 'UOISIO', 'yIomjau', '[emau', 'au7', 'ul', 'squarpers', 'ayn', 'agnduoo', '01', 'posn', 'quoosap', 'quorpe1s', 'ATIYM', "'saustam", 'au7', 'agepdn', '01', 'pasn', 'SI', 'uoreBodoxdypeg', 'V', '397V4', 'SI', ':f', 'pue', 'A', 'SIO1DOA', 'Aue', 'JOJ', 'ouaur', 'aouensip', 'PITRA', 'B', 'SI', '(@-z/Auopungauzsoy', '-', 'I', '&', '[euorsuotump-p', 'andL', 'Jyll', 'Fgb', 'A9IVA/aNaL', 'rayissep', 'meQuII-uou', 'B', 'SI', 'NNY', '2', 'quaurkordop', 'JOJ', 'quetarmbar', 'aBe1oqs', 'aua', 'STeordAL', 'I', 'ueui', '1a81el', 'yonu', 'SI', 'NNY', 'JOJ', 'INAS', 'quouagess', 'NS', ':arau', 'Jaqunu', 'IIOI', 'mor', 'O91M', '1O', 'EONI', 'OIUIM', '(sid', 'O1)', '6', 'Tendeo', 'ul', 'ISTVI', 'Sunumpueu', 'neop', 'pue', 'SIO11O1']
rotation started
['54300', 'aATAY', '3', 'L', 'E', ':', ':', ':', '€', 'L', 'I', '1', '*', 'à', '-', ':', 'a', 'E', 'a', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'E', 'E', 'a', 'I', 'I', 'iE', 'is', 'I', 'I', '1', 'I', 'a', 'I', 'a', 'E', 'of', '5', '$', 'd', 'a', 'is', 'I', 'I', 'i', ':', 'à', 'E', 'd', 'I', ':', 'e', 'I', '1', 'a', '1', '1', 'I', 'iE', ':', 'I', 'I', 'I', '1', '8', 'is', '8', 'I', 'E', '8', 'a', '1', 'I', '2', 'e', 'I', 'E', '8', ':', 'iE', 'd', '-', ':', ':', 'a', 'i', ':', 'a', 'I', 'is', 'of', 'I', '8', 'E', 'O', 'E', 'I', 'I', 'I', 'I', 'of', '€', 'is', 'I', 'I', 'I', 'a', '1', 'a', 'à', ':', 'is', 'of', 'e', 'I', 'E', 'de', 'S', 'I', 'e', 'I', 'I', '1', 'a', 'E', 'à', 'a', 'a', 'I', 'H', 'E', 'i', 'a', '$', 'is', '9', 'a', 'I', 'à', 'I', 'I', 'I', 'I', 'I', 'E', 'L', 'I', 'T', 'I', 'E', 'I', '', 'E', 'I', 'E', 'I', '€', 'I', 'E', 'I', '4', '', '0O', '0', 'I', 'I', 'a', 'I', 'e', 'I', 'E', 'I', 'of', 'I', 'I', '1', 'E', 'I', '1', 'a', '-', 's', 'E', 'à', '£', 'e', 'd', 'I', '1', '2', 'E', ':', 'I', '1', 'I', 'de', 'E', 'I', 'of', 'I', '9', 'I', 'I', '7', '1', '2', '', '8', 'I', '1f']
rotation started
['letters', 'and', 'clear', 'handwriting.', 'in', 'capital', 'Write', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALS', 'Tkue', 'TALE', 'TRUE', 'SN', 'Statement', 'larger', 'than', 'SVM', 'for', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', '3', '1-', 'cosineSimalarityz.s)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', 'while', 'gradient', 'descent', 'is', 'FALSE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'FALSE', 'FALSE', 'FALSE', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'TRVE', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:37:58] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : N1HDgWz.jpg
[2024/06/28 14:37:59] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:38:00] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.13939857482910156
[2024/06/28 14:38:02] ppocr DEBUG: rec_res num  : 34, elapsed : 2.0115578174591064
OCR detection done
left top x of T/F: 5260.0
bottom right x of T/F: 6208.0
left top y of T/F: 1061.0
bottom right y of T/F: 1579.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[660.0, 1503.0], [847.0, 1503.0], [847.0, 1628.0], [660.0, 1628.0]]
first t/f detection
first t/f detection
deployment.
[[985.0, 2052.0], [1645.0, 2052.0], [1645.0, 2187.0], [985.0, 2187.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[5416.0, 3181.0], [6023.0, 3157.0], [6032.0, 3369.0], [5425.0, 3393.0]]
first t/f detection
FALSE
[[5444.0, 3896.0], [6030.0, 3859.0], [6044.0, 4061.0], [5457.0, 4098.0]]
first t/f detection
FALSE
[[5426.0, 4308.0], [5994.0, 4286.0], [6002.0, 4479.0], [5434.0, 4501.0]]
first t/f detection
FALSE
[[5394.0, 4781.0], [5960.0, 4736.0], [5975.0, 4920.0], [5410.0, 4965.0]]
first t/f detection
first t/f detection
FALSE
[[5448.0, 5722.0], [6059.0, 5722.0], [6059.0, 5924.0], [5448.0, 5924.0]]
first t/f detection
the true list is  [1485, 1670, 2161, 2553, 5271, 6339]
the false list is  []
the true list for xdirn [954, 5336, 5395, 5429, 5377, 5350]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
left top x of SN: 660.0
bottom right x of SN: 987.0
left top y of SN: 1503.0
bottom right y of SN: 1768.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : od6O51t.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
collision happend with box:598.0078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 692.9296875), (968.6875, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:882.7734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1140.64453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((900.6601562500001, 1233.984375), (954.44921875, 1267.20703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 596, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kSgH2u5.jpg
OCR detection done with doctr
left top x of SN: 91.615234375
bottom right x of SN: 307.287109375
left top x of T/F: 861.806640625
bottom right x of T/F: 1224.8984375
first t/f detection
Fale
((885.18359375, 425.08984375), (963.958984375, 454.81640625))
collision happend with box:425.08984375 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tyuc
((880.7246093750001, 509.810546875), (958.013671875, 539.537109375))
text1 i.e the prev text is the winner
True
((877.751953125, 606.421875), (959.5, 640.607421875))
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
Tne
((877.751953125, 704.51953125), (959.5, 746.13671875))
text1 i.e the prev text is the winner
Tqtue
((877.751953125, 790.7265625), (952.068359375, 824.912109375))
collision happend with box:790.7265625 and text:Tqtue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 870.98828125), (955.0410156249999, 905.173828125))
text2 i.e the incoming text is the winner
collision happend with box:870.98828125 and text:True solving on the basis of percent match boxes
the current box specification are
Faoc
((886.669921875, 961.654296875), (953.5546875000001, 983.94921875))
text1 i.e the prev text is the winner
Fale
((882.2109374999999, 1035.970703125), (949.095703125, 1065.697265625))
collision happend with box:1035.970703125 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tyue
((877.751953125, 1154.876953125), (959.5, 1192.03515625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 331, '2': 432, '3': 500, '5': 700, '6': 801, '7': 869, '8': 969, '9': 1035, '10': 1137}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KKfbb39.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6422.531250000001
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5292.312499999999, 1905.59375), (5924.500000000001, 2149.4375))
TRVE
((5355.531250000001, 2447.46875), (5924.500000000001, 2664.21875))
FALSE
((5211.031249999999, 2989.34375), (5770.96875, 3206.09375))
FALSE
((5337.46875, 3540.25), (5978.687500000001, 3784.09375))
FALSE
((5328.437500000001, 4154.375), (6032.875000000001, 4371.125))
FALSE
((5247.156250000001, 4678.1875), (5915.468749999999, 4885.90625))
FALSE
((5274.250000000001, 5192.96875), (6023.843749999999, 5391.65625))
FALSE
((5238.124999999999, 5698.71875), (5825.15625, 5870.3125))
TRVE
((5337.46875, 6177.375), (5861.281249999999, 6358.0))
FALSE
((5319.406249999999, 6773.4375), (6023.843749999999, 7017.28125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2023, '2': 2610, '3': 3007, '4': 3585, '5': 4172, '6': 4759, '7': 5147, '8': 5743, '9': 6132, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fSgibgb.jpg
rotation started
['gou', 'op', 'ge47', 'enep', 'Surureng', '"eep', 'uoosun', "'mou", '01', 'ITOM', 'azye.ouas', 'Se', "'seseeIo", '4814', 'B', 'YAIM', 'Ouo-SA-auo', 'Bursn', 'sseppramur', 'IOI', 'BOAL', 'ou', 'ul', 'smelop', 'JO', 'OSIOU', 'oypads', 'amnadeo', '01', 'tieel', 'Keur', 'popour', 'au7', '-Ul', 'Sumnyiono', 'Jo', 'YSTI', 'ou1', "'WAS", 'ul', 'ngourered', 'D', 'aun', 'Jo', 'anreA', 'OT', '"WAS', 'QSOI-SA-QUO', 'ueyz', 'IOMOTS', 'SI', 'WAS', '6', 'BNAL', 'mp', '204', 'uororpard', 'B', 'Suryeur', "'sossep", 'Jo', 'pequnu', 'a81eT', 'B', 'YAIM', 'suerqoad', 'aoeds', 'TBULSTIO', 'ou7', 'uI', 'JeQUIT-Lou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstpop', 'OUL', '8', 'sapou', 'Jo', 'naqunu', 'au7', '07', 'Teuorniodoxd', 'B', 'Suppeur', 'JOJ', 'parmbar', 'OUIL', 'OUL', 'L', 'suornquasip', 'uerssnes', 'OM7', 'Jo', 'amgxur', 'V', '9', 'Stpamp', 'SI', 'DOIL', 'UOISIODC', 'aua', 'UI', 'uoporpaad', '"Lornqunsip', 'uerssneg', 'B', 'SienTe', 'SI', '30H', 'TeDOH', 'pue', 'LOISIO', 'Sunerado', 'IOAIODOH', 'OUL', 'S', 'Dnl', '-ald', 'uaamgaq', 'gord', 'e', 'SI', 'BAIO', '(DOH)', 'onsutegoereud', 'YIOmgau', 'Temeu', 'au7', 'uI', 'squorpe1s', 'au7', 'agnduoo', '01', 'pesn', "'Sq4810M", 'au7', 'agepdn', '01', 'pasn', 'SI', 'uone3odoxdypeg', '4', 'BNAL', 'SI', 'quaosap', 'quarpe1s', 'OTIYM', ':f', 'pue', 'I', 'SIOTDOA', 'aouensip', 'PITBA', 'B', 'SI', '(A-z)Aquopusgausoy', '-', 'I', '&', 'Kue', 'IOJ', 'ouIgour', '204L', 'rpsp', 'Tetorsuotup-p', 'loyisselo', 'reourI-uou', 'B', 'SI', 'NNX', '2', 'quou.ordap', 'JOJ', 'quouammbal', 'a8e1oqs', 'auy', 'SeordAL', 'I', '1a31e1', 'ypnu', 'SI', 'NNX', 'mng', '10J', 'WAS', 'ueyy', 'quauagess', 'NS', 'asTYa/30LL', ':aJou', 'paqunu', 'ITO.I', 'mOr', 'O91M', 'uI', 'ASTVA', 'JO', 'INAL', 'O9LIM', '(sad', 'OT)', "'6", 'S.101101', 'Teaideo', 'reop', 'pure', 'Surpzapaeg']
rotation started
['A', 'E', '-', ':', '2', 'A', 'a', '2', 'T', '1', '1', '10', 'I', 's', 'I', 'E', 'e', 'E', 'I', '1', '5', 'E', 'a', '-', '1', 'is', 'E', 'a', '-', 'à', 'I', 'I', 'I', 'is', 'I', 'I', 'I', 'a', 'a', 'of', 'S', 'e', 'I', 'iE', '2', 'à', 'I', ':', 'e', 'I', 'of', '1', 'I', 'I', 'E', 'e', 'I', 'I', 'a', 'I', '2', '9', 'E', 'à', '1', 'a', 's', 'is', 'a', 'I', 'I', 'à', 'a', 'I', 'E', 'e', 'E', '1', 'I', 'I', 'I', 'I', '8', 'is', 'e', 'e', 'I', 'E', 'i', 'I', '8', 'I', '7', 'I', 'I', 'I', '1', 'E', 'I', '1', 'E', ':', '6', 'E', '-', '2', 'e', 'o', 'E', 'a', '1', 'E', 'à', 'd', 'of', 'E', 'I', 'I', 's', '1', ':', '8', 'I', 'E', '0', 'I', 'I', 'of', ':', 'is', 'de', 'a', 'a', '-', 'd', 'is', 'i', 'I', 'I', 'of', 'de', '2', 'I', 'is', 'de', '1', 's', 'I', 'à', 'a', 'E', 'e', 'E', 'a', 'a', 'I', 'D', 'a', 'is', '8', '8', 'E', '5', 'a', 'I', 'I', 'à', 'I', 'I', ':', 'I', '1', 'I', 'I', '2', 'I', '11', 'I', 'I', 'I', '2', '3', 'de', 'E', 'o', 'I', '1', 'of', 'I', 'I', 'E', 'I', 'I', 'I', 'E', 'à', '', 'à', 'à', 'E', '-', 'E', 'I', 'I', '7', '11', '4', '12', '6', '7', '00', '', '9']
rotation started
['handwriting', 'and', 'clear', 'letters', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', 'SVM', 'for', 'due', 'KNN', 'is', 'much', 'larger', 'than', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityls.w)', 'vectors', 'I', 'and', 'y.', 'deployment.', 'drus', 'True', 'd-dimensional', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'while', 'gradient', 'descent', 'is', 'True', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'True', '5', 'The', 'Receiver', 'Operating', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', '7', 'The', 'Time', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'Toe', 'True', 'tue', 'Tvue', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '8', 'The', 'decision', '9', 'For', 'multiclass', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', '10', 'With', 'a', 'high', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'creases,', 'as', 'the', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'Tyue', 'training', 'data', 'that']
rotation done for:  fSgibgb.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of T/F: 5020.40625
bottom right x of T/F: 6449.625000000001
left top x of SN: 330.2812500000001
bottom right x of SN: 745.0937499999999
first t/f detection
due
((5192.96875, 2158.46875), (5635.5, 2456.5))
drus
((5192.96875, 2709.375), (5617.437499999999, 2944.1875))
True
((5310.375, 3197.0625), (5734.843750000001, 3431.875))
collision happend with box:3197.0625 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4145.34375, 3233.1875), (5066.53125, 3513.15625))
text2 i.e the incoming text is the winner
is
((4922.03125, 3865.375), (5075.5625, 4027.9375))
collision happend with box:3865.375 and text:is solving on the basis of percent match boxes
the current box specification are
True
((5319.406249999999, 3883.4375), (5779.999999999999, 4100.1875))
text2 i.e the incoming text is the winner
Pre-
((4795.59375, 4479.5), (5102.65625, 4660.125))
collision happend with box:4479.5 and text:Pre- solving on the basis of percent match boxes
the current box specification are
True
((5301.343750000001, 4452.40625), (5743.875, 4678.1875))
text2 i.e the incoming text is the winner
distribution.
((4344.03125, 5111.6875), (5129.75, 5283.28125))
directly
((4651.09375, 5536.15625), (5156.84375, 5698.71875))
Toe
((5373.593749999999, 5039.4375), (5834.187499999999, 5247.15625))
True
((5355.531250000001, 5644.53125), (5834.187499999999, 5852.25))
tue
((5436.812500000001, 6078.03125), (5915.468749999999, 6339.9375))
Tvue
((5445.84375, 6610.875), (5942.562499999999, 6863.75))
space.
((4768.5, 6195.4375), (5174.90625, 6330.90625))
prediction
((4560.78125, 6583.78125), (5211.031249999999, 6755.375))
overfitting
((4353.0625, 7197.90625), (5030.40625, 7396.59375))
the
((5030.40625, 7441.75), (5265.218749999999, 7586.25))
collision happend with box:7441.75 and text:the solving on the basis of percent match boxes
the current box specification are
Tyue
((5527.125, 7324.34375), (6032.875000000001, 7550.125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2610, '2': 3169, '3': 3549, '4': 4127, '5': 4696, '6': 5301, '7': 5698, '8': 6321, '9': 6746, '10': 7387}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KYwE0DO.jpg
rotation started
['6', '00', 'o5', 'B', 'ie', 'A', 'Il', 'e', 'E', 'I', 'it', 't', 'I', '9', 'E', 'E', 'I', 'I', '1', '8', '8', 'E', 'I', 'E', 't', 'E', 'E', 'I', '8', 'e', 'E', '2', 'it', 'E', 'E', ':', '1', 'E', 'f', 'I', 'E', '€', 'a', 'E', 'I', 'I', 'I', 'X', 'E', 'E', 'it', 'I', 'I', '-', 'E', '3', 'e', 'X', 'E', 'E', 'LE', 'P', '8', 'D', '2', 'I', 'A', 'E', 'E', 'e', 'E', '3', 'E', '00', 'F', '8', 'LA', 'à', 'of', 'a', 'X', 'a', 'I', '9', 'E', '2', 'E', 'E', 'I', 'E', 'I', 'I', 'I', 'I', 'I', 'a', '', 'OT', '4', '', '2', '1', '2', 'LE', '2', 'a', 'm', 'I', '2', 'E', 'I', 'E', 'I', 'I', '1', 'E', 'E', '8', 'p', '3', 'E', 'E', '1', '8', 'E', 'of', 'I', 'E', 'E', 'E', 'F', 'P', 'a', 'I', '8', 'I', 'iE', 'a', '8', 'E', 'I', 'lo', 'E', 'E', '-', 'E', '2', 'E', 'E', 'I', 'I', 'E', 'R', 'E', 'E', 'a', 'I', 'I', 'E', 'I', ':', 'f', 'I', 'E', 'E', '<', 'I', 'L', '8', 'I', 'E', 'E', 'E', 'F', 'E', '9', 'I', 'E', 'V', 'I', 'I', 'I', 'a', 'E', 'E', 'I', 'I', 'of', 'E', '€', 'I', '3', 'I', 'e', 'E', ':', '€', '3', 'A', 'A', 'I', '0O', '0', 'E', '2', 'E', 'E', '9', 'I', 'E', 'I', 'I', 'E', '8', '2', 'E', 'I', 'I', ':', 'à', 'à', '2', 'à', 'à', 'E', 'I', ':', 'I', 'a', 'an', 'EATTO', 'aba,', 'Nam', 'E']
rotation started
['aoeds-ae', 'ur', 'SISEq', 'au4', 'Jo', 'Quo', 'SI', "Co'T-l'urt))", '=1', 'a', 'OT', 'JagL', '4', 'ueya', '1978018', 'SI', 'ge47', 'OS', 'papeor', 'SI', 'aip', 'V', '6', 'auoonno', 'YAIM', 'peTToI', 'SI', 'arp', 'OUL', 'a0eJ', 'geya', 'uo', 'naqunu', 'X', 'Jo', 'anTeA', 'pagoadxa', 'OUL', 'X', 'JOJL', 'ay1', '01', '[euor.rodord', 'SI', 'dn', 'Suruoo', 'a0eJ', 'B', 'Jo', 'Kamiqeqoud', 'a47', 'gosezep', 'au7', 'uI', 'sieTno', '01', 'BATISUOS', 'SI', 'VIT', '8', 'JnyL', 'Taqer', 'ssepo', 'STpeuomipuoo', 'ore', 'samgeey', 'ITe', 'gey7', 'saunsse', 'sakeg', 'BAIEN', 'L', '3n3L', 'aua', 'UBALS', 'quopuadepur', '0>', '(X)0', 'eAmeBeu', 'BABY', 'asnu', 'A', 'IO', 'X', 'Jo', 'auo', 'ASBOT', '78', 'IO', '0', '>', '(x)0', '1OUA1O', '"OT', 'BOUeLIEA', 'OM7', 'are', 'A', 'pue', 'X', 'JI', '9', '38787', 'uayz', '0', '>', "(X'x)200", 'gey7', 'yons', 'SOTqELIEA', 'uopuel', 'panrea-Teal', '"OIOZ', 'aq', 'IIIM', 'au7', 'uayn', 'X=X', 'MOTTOI', 'Sppexe', 'suornqunsip', 'egep', 'JI', 'S', 'T]', '07', 'squrod', 'egep-IG', 'goafoud', 'ITIM', 'VOd', 'BUL', '4', 'anaL', 'XuIgeu', 'sourerreAOD', 'a47', 'Jo', 'yuel', '(fi)aouprioa', '<', '(r)aoupr.pa', 'JI', 'Lo', '38741', '"Quo', 'au7', 'Jo', 'anjea', 'aua', 'x', 'remonred', 'B', 'JOI', '&', '1998018', 'aq', 'ued', 'uorouny', 'ssew', 'Kamqeqoud', '3571', 'ueya', 'Syuapuadapur', 'goafo.d', 'OM', 'JI', 'VOT', '01', 'quareamba', 'sauooaq', 'VOd', '2', '35783', 'VOd', 'Bursn', 'ssep', 'yoea', 'Jo', 'sardures', '"D', 'qurod', 'au7', 'pue', 'UIBTIO', 'aut', 'uoamgaq', '00817', 'B', 'uauz', '(', 'pa', 'D', 'D', 'JI', 'I', '01', 'Tenba', 'SI', ',DD', 'XIIQBUI', 'aya', 'Jo', 'angL', 'ISTVA/ANaL', 'aouensip', 'ueapipong', 'au7', 'quawegens', 'NS', 'Jaqunu', 'IIOI', 'moc', 'BALIM', ':0.04', 'reg', 'IN', '9', '', 'a', 'B9LIM', '(sad', 'OI)', 'IO', 'ANAL', '-', 'zkne', '', 'pue', '197181', 'Teardes', 'ul', 'ASTVI', '-Surumpuey', 'reapo']
rotation started
['en', 'A', 'S', 'L', '3', 'E', 'I', '-', ':', ':', ':', ':', 'E', ':', 'à', 'à', '5', 'e', 'a', '00', '0', 'V', 'V', 'I', '8', 'I', ':', 'a', 'd', 'E', 'I', 'I', 'a', 'I', 'I', 'a', 'I', 'a', 'I', 'I', 'X', 'a', 'I', 'e', 'a', '2', 'à', '-', 'I', 'I', 'E', '-', '4', 'a', 'of', '1', ':', 'I', 'le', 'E', 'I', 'I', 'I', 'I', 'I', 'A', 'de', 'of', 'I', 'i', 'I', 'is', 'e', 'e', 'E', 'X', 'o', 'I', 'I', 'I', '&', 'is', 'of', 'a', 'E', 'e', 'I', 'I', 'e', 'I', '11', 'd', 'I', 'de', 'de', 'is', 'E', 'I', 'e', '2', 'a', 'of', 'de', 'of', 'e', 'o', 'à', 'I', 'e', 'à', 'E', 'E', 'E', 'e', 'E', 'X', '5', '8', 'a', '8', 'a', '4', '', 'E', 'I', 'a', 'E', '€', 'E', 'e', 'of', 'a', ':', '>', '8', 'I', 'I', '8', '', 'I', '€', '€', 'I', 'is', 'E', 'I', 'I', 'a', 'e', 'E', 'V', 'I', 'is', 'I', 'II', ':', 'W', '$', 'X', 'I', '-', 'a', 'de', 'A', 'i', 'is', '2', '8', 'a', '4', 'I', 'I', '1E', 'I', 'a', 'I', '7', '11', 'I', 'I', 'a', 'E', 'E', ':', '2', '1', 'E', '-', '5', 'E', 'à', 'E', 'e', '6', 'I', '1E', '€', '-', 'E', '8', 'I', 'i', ':', 'I', 'I', 'I', '1', 'iE', '1', '€', 'of', '8', 'is', 'I', 'I', 'i', 'I', 'I', '8', 'E', '8', 'E', '1E', 'E', '1E', 'et', '€', '3', '4', '12', '', '00', '', '19']
rotation started
['letter', 'and', 'clear', 'handwriting.', 'auy', 'àe', 'TRUE', 'or', 'FALSE', 'in', 'capital', '6.', '(10', 'pts)', 'Write', 'AI', 'B93', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/FALSH', 'TRUE', 'SN', 'Statement', 'to', 'the', 'Euclidean', 'distance', 'of', 'the', 'matrix', "aa'", 'is', 'equal', '1', 'If', 'a', '€', 'Rd,', 'then', 'a', 'trace', 'between', 'the', 'origin', 'and', 'the', 'point', 'a.', 'of', 'each', 'class', 'using', 'PCA', 'FALSE', 'becomes', 'equivalent', 'to', 'LDA', 'if', 'we', 'project', 'samples', '2', 'PCA', 'independently.', 'function', 'can', 'be', 'greater', 'than', 'FALSE', '3', 'For', 'a', 'particular', 'I,', 'the', 'value', 'of', 'the', 'probability', 'mass', 'one.', 'FALSE', '2D-data', 'points', 'to', '[1,017', 'if', 'variance', '(x)', '>', 'variance(y).', '4', 'The', 'PCA', 'will', 'project', '5', 'If', 'data', 'distributions', 'exactly', 'will', 'be', 'zero.', '6', 'If', 'X', 'and', 'Y', 'are', 'two', 'at', 'least', 'one', 'of', 'X', 'or', 'Y', 'a(Y)<0.', 'follow', 'y=X,', 'then', 'the', 'rank', 'of', 'the', 'covariance', 'matrix', 'TRUE', 'real-valued', 'random', 'variables', 'such', 'that', 'Cou(X,Y)', '<', '0', 'then', 'must', 'have', 'negative', 'variance', 'i.e.', 'either', 'a(X)', '<', '0', 'or', 'FALSE', 'that', 'all', 'features', 'are', 'conditionally', 'independent', 'given', 'the', 'TRUE', '7', 'Naive', 'Bayes', 'assumes', 'class', 'label.', 'TRUE', 'TRUE', '8', 'LDA', 'is', 'sensitive', 'to', 'outliers', 'in', 'the', 'dataset.', 'the', 'probability', 'of', 'a', 'face', 'coming', 'up', 'is', 'proportional', 'to', 'the', 'die', 'is', 'loaded', 'SO', 'that', 'number', 'on', 'that', 'face.', 'is', 'greater', 'than', '4.', '9', 'A', 'The', 'die', 'is', 'rolled', 'with', 'outcome', 'X.', 'The', 'expected', 'value', 'of', 'X', 'TRUE', '10', 'B', '=', '((1,1.1-1,07)', 'is', 'one', 'of', 'the', 'basis', 'in', '2D-space.']
OCR detection done with doctr
left top x of SN: 176.75
bottom right x of SN: 591.5625000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:38:47] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : KYwE0DO.jpg
[2024/06/28 14:38:48] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:38:48] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12378835678100586
[2024/06/28 14:38:51] ppocr DEBUG: rec_res num  : 39, elapsed : 2.1640007495880127
OCR detection done
left top x of T/F: 5556.0
bottom right x of T/F: 6464.0
left top y of T/F: 1147.0
bottom right y of T/F: 1666.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[192.0, 1681.0], [530.0, 1643.0], [547.0, 1787.0], [209.0, 1825.0]]
first t/f detection
first t/f detection
FALSE
[[5622.0, 2398.0], [6277.0, 2303.0], [6309.0, 2515.0], [5654.0, 2610.0]]
first t/f detection
FALSE
[[5623.0, 3012.0], [6176.0, 2939.0], [6205.0, 3152.0], [5653.0, 3226.0]]
first t/f detection
FALSE
[[5627.0, 3591.0], [6253.0, 3507.0], [6284.0, 3730.0], [5658.0, 3814.0]]
first t/f detection
first t/f detection
will be zero.
[[737.0, 4481.0], [1475.0, 4459.0], [1479.0, 4594.0], [742.0, 4616.0]]
first t/f detection
FALSE
[[5665.0, 4768.0], [6339.0, 4662.0], [6374.0, 4875.0], [5700.0, 4981.0]]
first t/f detection
first t/f detection
class label.
[[765.0, 5861.0], [1441.0, 5815.0], [1452.0, 5979.0], [776.0, 6024.0]]
first t/f detection
first t/f detection
first t/f detection
the true list is  [1650, 1730, 4076, 5448, 5959, 6517, 7165]
the false list is  []
the true list for xdirn [538, 5696, 5615, 5669, 5647, 5683, 5704]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
left top x of SN: 192.0
bottom right x of SN: 687.0
left top y of SN: 1681.0
bottom right y of SN: 1927.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GdDku30.jpg
OCR detection done with doctr
left top x of T/F: 4767.53125
bottom right x of T/F: 6106.4375
left top x of SN: 23.218749999999872
bottom right x of SN: 465.125
first t/f detection
Tue
((5012.34375, 1697.875), (5554.21875, 1968.8125))
collision happend with box:1697.875 and text:Tue solving on the basis of percent match boxes
the current box specification are
for
((4560.78125, 1833.34375), (4768.5, 1995.90625))
text2 i.e the incoming text is the winner
false
((5111.6875, 2284.90625), (5590.343749999999, 2573.90625))
True
((5247.156250000001, 2790.65625), (5770.96875, 3043.53125))
collision happend with box:2790.65625 and text:True solving on the basis of percent match boxes
the current box specification are
ddimensional
((4027.9374999999995, 2835.8125), (4958.15625, 3179.0))
text2 i.e the incoming text is the winner
is
((4858.8125, 3468.0), (5021.375, 3630.5625))
collision happend with box:3468.0 and text:is solving on the basis of percent match boxes
the current box specification are
fale
((5192.96875, 3359.625), (5635.5, 3630.5625))
text2 i.e the incoming text is the winner
collision happend with box:3359.625 and text:fale solving on the basis of percent match boxes
the current box specification are
descent
((4380.15625, 3477.03125), (4876.875, 3729.90625))
text1 i.e the prev text is the winner
Tue
((5319.406249999999, 3919.5625), (5888.374999999999, 4190.5))
between
((4289.84375, 4109.21875), (4813.65625, 4325.96875))
collision happend with box:4109.21875 and text:between solving on the basis of percent match boxes
the current box specification are
Pre-
((4804.625, 4073.09375), (5102.65625, 4244.6875))
text2 i.e the incoming text is the winner
Tsue
((5364.5625, 4542.71875), (5960.625, 4759.46875))
Trul
((5554.21875, 5021.375), (6059.968750000001, 5192.96875))
false
((5563.249999999999, 5491.0), (6087.062500000001, 5707.75))
distribution.
((4416.28125, 4651.09375), (5202.0, 4903.96875))
is
((4642.0625, 5111.6875), (4786.5625, 5256.1875))
collision happend with box:5111.6875 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4768.5, 5030.40625), (5256.1875, 5256.1875))
text2 i.e the incoming text is the winner
original
((4479.5, 5671.625), (4958.15625, 5897.40625))
collision happend with box:5671.625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4949.125, 5653.5625), (5346.499999999999, 5843.21875))
text1 i.e the prev text is the winner
a
((4705.28125, 6123.1875), (4822.6875, 6258.65625))
collision happend with box:6123.1875 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4795.59375, 6014.8125), (5445.84375, 6267.6875))
text2 i.e the incoming text is the winner
overfitting
((4678.1875, 6628.9375), (5346.499999999999, 6881.8125))
details
((4741.40625, 6845.6875), (5183.9375, 7062.4375))
data.
((4533.6875, 7098.5625), (4867.84375, 7279.1875))
the
((5337.46875, 6800.53125), (5563.249999999999, 6963.09375))
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2591, '2': 3160}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rijC15L.jpg
OCR detection done with doctr
left top x of SN: 980.5312500000001
bottom right x of SN: 1395.3437499999998
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6883.125000000001
first t/f detection
handwriting.
((4867.84375, 821.84375), (5662.59375, 1101.8125))
TRHE
((5599.375000000001, 2510.6875), (6159.312499999999, 2718.40625))
TRUE
((5436.812500000001, 2980.3125), (6141.250000000001, 3269.3125))
FALSE
((5436.812500000001, 3458.96875), (6041.90625, 3720.875))
FALSE
((5310.375, 4036.96875), (5951.593750000001, 4280.8125))
FALSE
((5211.031249999999, 4624.0), (5789.031250000001, 4885.90625))
FALSE
((5174.90625, 5075.5625), (5770.96875, 5346.5))
FALSE
((5039.4375, 5554.21875), (5635.5, 5807.09375))
ERUETRUE
((4967.1875, 6069.0), (5996.749999999999, 6403.15625))
the final dict without editing {'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 1860, '2': 2429}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WacNh4T.jpg
OCR detection done with doctr
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6729.59375
first t/f detection
True
((5554.21875, 1688.84375), (5906.4375, 1878.5))
False
((5572.281250000001, 2185.5625), (5879.34375, 2393.28125))
Falie
((5590.343749999999, 2745.5), (5906.4375, 2944.1875))
False
((5509.062499999999, 3215.125), (5843.218750000001, 3440.90625))
Trve
((5536.156249999999, 3648.625), (5888.374999999999, 3874.40625))
Tre
((5563.249999999999, 4335.0), (5906.4375, 4560.78125))
Tirve
((5572.281250000001, 4949.125), (5951.593750000001, 5120.71875))
Falte
((5554.21875, 5418.75), (5861.281249999999, 5617.4375))
True
((5563.249999999999, 5942.5625), (5933.53125, 6159.3125))
Flse
((6032.875000000001, 6547.65625), (6358.000000000001, 6728.28125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1616, '2': 2167, '3': 2718, '4': 3278, '5': 3648, '6': 4199, '7': 4931, '8': 5491, '9': 5861, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H2iPb1j.jpg
OCR detection done with doctr
left top x of SN: 166.1328125
bottom right x of SN: 387.3671875
left top x of T/F: 930.4218749999999
bottom right x of T/F: 1303.7734375
first t/f detection
hmnderiring
((819.890625, 171.28125), (943.59375, 222.03125))
Faulye
((938.8359375, 469.4375), (1018.1328125, 507.5))
collision happend with box:469.4375 and text:Faulye solving on the basis of percent match boxes
the current box specification are
Jhird
((932.4921875, 563.0078125), (1018.1328125, 594.7265625))
text1 i.e the prev text is the winner
Pue
((913.4609374999999, 650.234375), (989.5859375, 686.7109375))
collision happend with box:650.234375 and text:Pue solving on the basis of percent match boxes
the current box specification are
Tue
((902.359375, 740.6328125), (983.2421875, 781.8671875))
text2 i.e the incoming text is the winner
collision happend with box:740.6328125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Truc
((889.6718750000001, 848.4765625), (962.6250000000001, 889.7109375))
text2 i.e the incoming text is the winner
collision happend with box:848.4765625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((876.9843750000001, 930.9453125), (956.2812500000001, 972.1796875))
text2 i.e the incoming text is the winner
collision happend with box:930.9453125 and text:True solving on the basis of percent match boxes
the current box specification are
Thue
((864.296875, 1007.0703125), (945.1796875, 1053.0625))
text1 i.e the prev text is the winner
Fale
((854.78125, 1091.125), (934.078125, 1138.703125))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'1': 1065, '2': 459, '3': 524, '4': 626}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UXsG00l.jpg
OCR detection done with doctr
left top x of T/F: 5562.281250000001
bottom right x of T/F: 6837.96875
left top x of SN: 303.1875000000001
bottom right x of SN: 727.0312500000001
first t/f detection
TRUE
((5617.437499999999, 1752.0625), (6159.312499999999, 1923.65625))
TRUE
((5463.906250000001, 2384.25), (5996.749999999999, 2601.0))
FALSE
((5572.281250000001, 3034.5), (6132.218749999999, 3169.96875))
TRUE
((5536.156249999999, 3612.5), (6123.1875, 3784.09375))
FALSE
((5590.343749999999, 4118.25), (6159.312499999999, 4280.8125))
TRUC
((5590.343749999999, 4903.96875), (6078.031249999999, 5075.5625))
TRUE
((5626.468750000001, 5491.0), (6059.968750000001, 5662.59375))
FALSE
((5626.468750000001, 6014.8125), (6195.437500000001, 6213.5))
TRUE
((5644.531249999999, 6628.9375), (6150.28125, 6800.53125))
TRUE
((5653.562500000001, 7234.03125), (6059.968750000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2474, '3': 3070, '4': 3666, '5': 4055, '6': 4651, '7': 5445, '8': 6041, '9': 6448, '10': 7243}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F4DRxwk.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6539.9375
left top x of SN: 610.25
bottom right x of SN: 1016.0312499999999
first t/f detection
TRUE
((5409.718750000001, 2059.125), (5879.34375, 2275.875))
TRUE
((5445.84375, 2628.09375), (5960.625, 2808.71875))
TRUE
((5445.84375, 3115.78125), (5951.593750000001, 3377.6875))
TRUE
((5463.906250000001, 3802.15625), (5933.53125, 4018.90625))
TRUE
((5427.781249999999, 4425.3125), (5897.406250000001, 4633.03125))
TRUE
((5463.906250000001, 4967.1875), (5906.4375, 5147.8125))
FALSE
((5481.968749999999, 5400.6875), (5960.625, 5617.4375))
TRUE
((5373.593749999999, 5951.59375), (5843.218750000001, 6123.1875))
TRVE
((5436.812500000001, 6439.28125), (5960.625, 6601.84375))
TRUE
((5400.687499999999, 7053.40625), (5879.34375, 7215.96875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2908, '3': 3278, '4': 3856, '5': 4407, '6': 4985, '7': 5355, '8': 5933, '9': 6321, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BLK52Gc.jpg
OCR detection done with doctr
left top x of SN: 91.79296874999997
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (943.375, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
collision happend with box:598.0078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 692.9296875), (970.2695312500001, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (962.359375, 914.4140625))
text2 i.e the incoming text is the winner
collision happend with box:882.7734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1142.2265625), (979.7617187500001, 1170.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1142.2265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((952.8671875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 593, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1240}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IZoP6L9.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6440.593749999999
left top x of SN: 492.8437500000001
bottom right x of SN: 898.625
first t/f detection
Talie
((5491.000000000001, 1499.1875), (5969.656249999999, 1761.09375))
Trba
((5545.187500000001, 2095.25), (5996.749999999999, 2302.96875))
polx
((5689.6875, 2257.8125), (6141.250000000001, 2492.625))
palk
((5716.78125, 2817.75), (6177.375, 3088.6875))
Coux
((5843.218750000001, 3233.1875), (6303.812500000001, 3468.0))
AHUL
((5644.531249999999, 3594.4375), (6159.312499999999, 3775.0625))
collision happend with box:3594.4375 and text:AHUL solving on the basis of percent match boxes
the current box specification are
pall
((5752.906249999999, 3747.96875), (6204.46875, 3982.78125))
text2 i.e the incoming text is the winner
then
((5030.40625, 4181.46875), (5337.46875, 4353.0625))
collision happend with box:4181.46875 and text:then solving on the basis of percent match boxes
the current box specification are
Falsl
((5509.062499999999, 4262.75), (6014.8125, 4488.53125))
text2 i.e the incoming text is the winner
collision happend with box:4262.75 and text:Falsl solving on the basis of percent match boxes
the current box specification are
or
((5174.90625, 4416.28125), (5337.46875, 4524.65625))
text1 i.e the prev text is the winner
the
((5129.75, 4958.15625), (5346.499999999999, 5102.65625))
collision happend with box:4958.15625 and text:the solving on the basis of percent match boxes
the current box specification are
Taea
((5653.562500000001, 4922.03125), (6141.250000000001, 5138.78125))
text2 i.e the incoming text is the winner
palx
((5689.6875, 5120.71875), (6141.250000000001, 5328.4375))
Tsicle
((5662.59375, 5454.875), (6177.375, 5635.5))
collision happend with box:5454.875 and text:Tsicle solving on the basis of percent match boxes
the current box specification are
Teue
((5599.375000000001, 5590.34375), (6059.968750000001, 5770.96875))
text1 i.e the prev text is the winner
Palk
((5689.6875, 6096.09375), (6141.250000000001, 6312.84375))
PRETR
((5743.875, 6637.96875), (6168.343750000001, 6800.53125))
collision happend with box:6637.96875 and text:PRETR solving on the basis of percent match boxes
the current box specification are
Pary
((5789.031250000001, 6746.34375), (6222.531250000001, 6917.9375))
text1 i.e the prev text is the winner
the
((5165.875, 5915.46875), (5382.625000000001, 6059.96875))
collision happend with box:5915.46875 and text:the solving on the basis of percent match boxes
the current box specification are
ll
((5509.062499999999, 5870.3125), (5906.4375, 6050.9375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2312, '3': 2853, '4': 3404, '5': 3757, '6': 4325, '7': 5084, '8': 5662, '9': 6059, '10': 6845}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': False, '8': False, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Hj9MaiP.jpg
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 916.6875000000001
left top x of T/F: 5598.40625
bottom right x of T/F: 6792.812499999999
first t/f detection
Tue
((5752.906249999999, 1887.53125), (6285.75, 2113.3125))
false
((5680.656250000001, 2438.4375), (6339.9375, 2691.3125))
false
((5770.96875, 3061.59375), (6339.9375, 3260.28125))
Cue
((5689.6875, 3576.375), (6294.781249999999, 3747.96875))
Taue.
((5680.656250000001, 4082.125), (6303.812500000001, 4325.96875))
falie
((5752.906249999999, 4614.96875), (6339.9375, 4931.0625))
Tue.
((5626.468750000001, 5355.53125), (6339.9375, 5554.21875))
Taue.
((5707.750000000001, 5888.375), (6358.000000000001, 6096.09375))
F
((5716.78125, 6385.09375), (5933.53125, 6601.84375))
collision happend with box:6385.09375 and text:F solving on the basis of percent match boxes
the current box specification are
Aobe
((5942.562499999999, 6394.125), (6529.59375, 6647.0))
text2 i.e the incoming text is the winner
Teue
((5816.125000000001, 6719.25), (6312.84375, 6899.875))
Tawe
((5716.78125, 7080.5), (6267.687499999999, 7288.21875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2483, '3': 3061, '4': 3648, '5': 4027, '6': 4624, '7': 5400, '8': 5996, '9': 6394, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IUmBbJR.jpg
OCR detection done with doctr
left top x of T/F: 4830.75
bottom right x of T/F: 6052.25
left top x of SN: 556.0625
bottom right x of SN: 961.8437499999999
first t/f detection
for
((4669.15625, 2302.96875), (4849.78125, 2456.5))
collision happend with box:2302.96875 and text:for solving on the basis of percent match boxes
the current box specification are
Tpl
((5012.34375, 2230.71875), (5337.46875, 2465.53125))
text2 i.e the incoming text is the winner
Falxe
((5057.5, 2682.28125), (5463.906250000001, 2953.21875))
Tyue
((5192.96875, 3079.65625), (5563.249999999999, 3332.53125))
collision happend with box:3079.65625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
ddingenaional
((4199.53125, 3142.875), (5012.34375, 3431.875))
text2 i.e the incoming text is the winner
descent
((4497.5625, 3711.84375), (4967.1875, 3919.5625))
collision happend with box:3711.84375 and text:descent solving on the basis of percent match boxes
the current box specification are
ls
((4949.125, 3702.8125), (5075.5625, 3847.3125))
text2 i.e the incoming text is the winner
collision happend with box:3702.8125 and text:ls solving on the basis of percent match boxes
the current box specification are
Falle
((5238.124999999999, 3639.59375), (5599.375000000001, 3928.59375))
text2 i.e the incoming text is the winner
Pre
((4885.90625, 4226.625), (5156.84375, 4407.25))
collision happend with box:4226.625 and text:Pre solving on the basis of percent match boxes
the current box specification are
Falsl
((5346.499999999999, 4136.3125), (5779.999999999999, 4425.3125))
text2 i.e the incoming text is the winner
collision happend with box:4136.3125 and text:Falsl solving on the basis of percent match boxes
the current box specification are
between
((4416.28125, 4262.75), (4903.96875, 4479.5))
text1 i.e the prev text is the winner
Tiuul
((5373.593749999999, 4669.15625), (5734.843750000001, 4894.9375))
collision happend with box:4669.15625 and text:Tiuul solving on the basis of percent match boxes
the current box specification are
distribution.
((4515.625, 4750.4375), (5256.1875, 5012.34375))
text2 i.e the incoming text is the winner
is
((4741.40625, 5192.96875), (4858.8125, 5328.4375))
collision happend with box:5192.96875 and text:is solving on the basis of percent match boxes
the current box specification are
directls
((4840.75, 5120.71875), (5301.343750000001, 5337.46875))
text2 i.e the incoming text is the winner
collision happend with box:5120.71875 and text:directls solving on the basis of percent match boxes
the current box specification are
True
((5436.812500000001, 5102.65625), (5825.15625, 5337.46875))
true and false collision so given priority to text2 which is the incoming text
Thue
((5563.249999999999, 5545.1875), (5987.71875, 5825.15625))
original
((4560.78125, 5716.78125), (5021.375, 5933.53125))
collision happend with box:5716.78125 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((5003.3125, 5698.71875), (5382.625000000001, 5879.34375))
text1 i.e the prev text is the winner
a
((4777.53125, 6150.28125), (4894.9375, 6267.6875))
collision happend with box:6150.28125 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4849.78125, 6032.875), (5463.906250000001, 6285.75))
text2 i.e the incoming text is the winner
overfitting
((4750.4375, 6610.875), (5373.593749999999, 6854.71875))
the
((5355.531250000001, 6782.46875), (5581.3125, 6936.0))
collision happend with box:6782.46875 and text:the solving on the basis of percent match boxes
the current box specification are
delails
((4822.6875, 6827.625), (5220.062500000001, 7017.28125))
text2 i.e the incoming text is the winner
data.
((4605.9375, 7062.4375), (4922.03125, 7243.0625))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2844, '2': 3359, '3': 3711}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lx19RYA.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 826.3749999999999
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRIJE
((5192.96875, 1625.625), (5707.750000000001, 1833.34375))
TRIJE
((5183.9375, 2122.34375), (5626.468750000001, 2330.0625))
FALSE
((5202.0, 2718.40625), (5716.78125, 2971.28125))
FALSE
((5220.062500000001, 3206.09375), (5698.718749999999, 3413.8125))
TRUE
((5238.124999999999, 3684.75), (5725.812499999999, 3865.375))
TRUE
((5174.90625, 4298.875), (5725.812499999999, 4497.5625))
TRDE
((5229.09375, 4985.25), (5626.468750000001, 5174.90625))
TRUE
((5183.9375, 5391.65625), (5653.562500000001, 5572.28125))
FALSE
((5202.0, 5942.5625), (5707.750000000001, 6105.125))
TRUE
((5156.84375, 6502.5), (5662.59375, 6683.125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1643, '2': 2176, '3': 2718, '4': 3260, '5': 3621, '6': 4172, '7': 4885, '8': 5427, '9': 5789, '10': 6520}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : t4fbUW1.jpg
rotation started
['and', 'clear', 'handwriting.', 'letters', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'True', 'False', 'True', 'SN', 'Statement', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'd-dimensional', '3', '1', '-', 'cosineSimalarityl.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'false', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'True', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'Teue', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'True', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'False', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'Toue', 'True', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
rotation done for:  t4fbUW1.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1977.84375), (5978.687500000001, 2230.71875))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
false
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5400.687499999999, 4244.6875), (5960.625, 4443.375))
Teue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5310.375), (5960.625, 5527.125))
False
((5373.593749999999, 5780.0), (5915.468749999999, 6032.875))
Toue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2772, '3': 3151, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Sb9xEDW.jpg
OCR detection done with doctr
left top x of SN: 790.8750000000001
bottom right x of SN: 1241.8125000000002
left top x of T/F: 5715.812499999999
bottom right x of T/F: 7045.687500000001
first t/f detection
TRUE
((5843.218750000001, 2348.125), (6385.093750000001, 2601.0))
TRUE
((5734.843750000001, 2890.0), (6222.531250000001, 3106.75))
FALSE
((5635.5, 3413.8125), (6376.062499999999, 3666.6875))
TRUE
((5545.187500000001, 4000.84375), (6096.09375, 4226.625))
FALSE
((5454.874999999999, 4587.875), (6123.1875, 4885.90625))
FALSE
((5364.5625, 5129.75), (5906.4375, 5355.53125))
FALSE
((5229.09375, 5581.3125), (5789.031250000001, 5834.1875))
TRVE
((5192.96875, 6069.0), (5725.812499999999, 6321.875))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2908, '2': 2447, '3': 2835}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hTdvXQF.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6819.906249999999
left top x of SN: 312.21875
bottom right x of SN: 736.0625
first t/f detection
FALS
((5599.375000000001, 1896.5625), (6132.218749999999, 2068.15625))
TRUE
((5662.59375, 2429.40625), (6321.874999999999, 2682.28125))
FALSE
((5599.375000000001, 2989.34375), (6439.281250000001, 3269.3125))
TRUE
((5572.281250000001, 3558.3125), (6258.65625, 3802.15625))
FAESE
((5599.375000000001, 4055.03125), (6330.906250000001, 4307.90625))
FALSE
((5662.59375, 4777.53125), (6367.03125, 4994.28125))
TRUE
((5617.437499999999, 5427.78125), (6249.625000000001, 5671.625))
FALSE
((5662.59375, 5960.625), (6367.03125, 6159.3125))
TRUE
((5635.5, 6529.59375), (6213.499999999999, 6782.46875))
TRUE
((5662.59375, 7161.78125), (6222.531250000001, 7369.5))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2465, '3': 3070, '4': 3666, '5': 4073, '6': 4678, '7': 5481, '8': 6087, '9': 6502, '10': 7306}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nG4XW3E.jpg
OCR detection done with doctr
left top x of SN: 101.21093750000003
bottom right x of SN: 321.494140625
left top x of T/F: 956.2109375
bottom right x of T/F: 1337.01171875
first t/f detection
True
((971.044921875, 427.001953125), (1056.4453125, 473.73046875))
collision happend with box:427.001953125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((969.4335937499999, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
fe
((958.154296875, 787.939453125), (1008.10546875, 834.66796875))
text1 i.e the prev text is the winner
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1095.1171875, 834.66796875))
text1 i.e the prev text is the winner
False
((974.267578125, 874.951171875), (1070.947265625, 912.01171875))
collision happend with box:874.951171875 and text:False solving on the basis of percent match boxes
the current box specification are
True
((972.6562500000001, 963.57421875), (1056.4453125, 1005.46875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:963.57421875 and text:True solving on the basis of percent match boxes
the current box specification are
False
((972.6562500000001, 1052.197265625), (1062.890625, 1089.2578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1052.197265625 and text:False solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
text2 i.e the incoming text is the winner
collision happend with box:1137.59765625 and text:False solving on the basis of percent match boxes
the current box specification are
False
((991.9921875, 1242.333984375), (1098.33984375, 1281.005859375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 578, '2': 509, '3': 578, '4': 681, '5': 784, '6': 887, '7': 955, '8': 1060, '9': 1129, '10': 1235}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wGegiaZ.jpg
rotation started
['LE', '6', 'o', 'I', 'I', 'E', 'I', '9', 'N', 'o', 'C1', '#', 'E', 'E', 'ao', 'F', 'F', '2', 'F', 'S', '1', '1', '8', 'E', '/', '/', 'F', 'I', 'E', '1', '1', '2', 'E', '/', '8', 'I', 'E', 'I', 'E', 'I', '2', '8', 'I', 'of', '8', 'E', '2', 'I', '1e', 'e', '1t', '2', 'E', 'I', 'E', 'I', 'E', 'I', 'I', 'I', '8', 'I', '/', 'E', 'ts', 's', '/', 'I', '/', 'Q', 'E', 'of', 'e', '8', 'a', '&', 'I', 'B', 'I', '/', 'I', 'A', 'I', 'I', 'I', 'E', '8', 'f', 'I', 'I', 'I', '2', 'E', 'E', '2', 'A', '8', 'I', 'I', 'I', '8', 'É', 'I', 'E', '2', 'I', 'E', '/', 'de', 'É', 'I', 'I', '-', '/', 'f', 'ta', '€', '1', 'E', 'E', '8', 'I', 'I', '2', 'f', 'F', 'F', 'I', 'I', 'I', 'E', 'E', '8', 'E', 'I', 'A', 'F', 'f', '8', 'I', 'it', 'I', 'I', 'I', 'A', ':', 'I', 'a', 'F', '/', 'E', 'E', 'E', '/', 'i', 'I', 'a', '/', '1', 's', 'E', 'E', '-', 'a', '2', '2', 'E', 'I', '-', 'E', '2', 'a', 'it', '/', 'I', '/', '/', '6', '1', 'I', 'a', '3', '6', ':', 'I', 'E', '2', 'e', 'I', 'tn', 'I', '/', 'I', 'E', 'F', '>', 'I', '>', 'Dy', 'I', 'E', '', 'P', 'I', 'i', 'I', ':', '?', 'a', 'I', ':', 'E', 'I', 'à', ':', '/']
rotation started
['047', 'ut', 'erep', 'uoasun', "'mou", '03', 'Syelap', 'Jo', 'eSjour', '-us', 'Sunaysano', 'Jo', 'uoyopaud', 'D', 'Surypraz', '3AyL', 'Tlom', 'azterauss', 'oyppads', 'amgdes', '03', '1ou', 'op', '3842', 'ezep', 'Burureaz', 'D', 'aya', 'Jo', 'anper', 'yaty', 'e', 'St', 'IAS', 'ato-S1-3110', 'ysu', 'aug', 'TAS', 'UT', 'Jalorrered', 'utear', 'Seur', 'fapottr', 'auy', 'se', "'saseass", '3nal', 'INt', '99708', 'rageds', '35763', 'ARugel', 'POuL', '3GuL', 'WAS', '3891-51-000', 'ueyy', 'Jamors', "'sosspyo", 'Jo', 'Jaquune', 'TOIAL', 'OT', 'Susn', 'sseptamtr', 'JOE', '6', '88181', 'B', 'yorAn', 'stuargaud', 'NAS', 'ue', 'Jo', 'Crepuamoq', 'uoteroap', 'peursuo', '047', 'ur', 'Jeoury-tou', 'SI', 'DOIL', 'urorsIog', 'oTg', 'creissnes', 'B', 'SKempe', 'ST', 'Jord', 'B', 'SI', 'aAmo', '(08)', '2q', 'tres', "'sopou", 'Jo', 'suornquasp', 'Ap1poup', '"Donnqusp', 'B4J', 'traamgaq', 'OUL', '8', 'OULL', '2', '9', 'ur', 'uorgorpexd', 'B', 'Suryeuz', 'aaqutha', 'eqa', '02', 'reuoruodord', 'JoJ', 'pamnbar', 'aUITL', 'uerssnes', 'Om2', 'jo', 'amIXuz', 'V', 'Treoay', 'Jaaraooy', 'OULL', 'S', 'ay2', 'anduos', '03', 'pasn', 'nopclocoutrpeg', '+', 'R', 'pue', 'r', 'S10Ja1', '1zp@queypunsaupeo', '1', 'I', '&', 'uayissepo', 'neauty-nou', 'R', 'ST', 'NNY', 'onsuaypeapo', 'Bureado', 'ptre', 'toIsto', 'INyL', '35104', 'anye', 'Iny', '35143', 'asTva/anuL', 'ST', 'guassap', 'quarpers', 'yromgou', 'Temneu', 'auz', 'uI', 'siuarpeus', 'oTTgA', "'sau8ram", 'aup', 'ogepdn', '03', 'pasn', 'SI', 'Juuorsupump-p', 'Aue', 'JOJ', 'OIzzeuz', 'aoueisip', 'PITBA', 'e', 'SI', '(A', '3', '1', '101', 'WAS', 'ueug', '108101', 'yonur', 'SI', 'NNY', '1OJ', 'quoturammbay', 'attiodap', 'a8e1018', 'aup', 'reoidit', 'guowagers', 'NS', 'tasay', 'paqunu', 'Ijou', 'mor', 'OJUM', 'Surgtumpuey', 'Jeapo', 'pue', 'SJOMar', 'Teaides', 'UI', 'aSTVI', '10', 'ENUL', '0214H', '(sid', 'or)', '6']
rotation started
['/', ':', '-', 'I', ':', 'E', 'L', '-', '', 'I', 'I', '€', ':', 'e', 'E', ':', '', 'I', 'i', 'E', 'e', 'I', 'e', 'E', 'is', 'E', 'I', '#', 'I', 'A', 'e', '/', 's', 'LE', 'I', '-', 'I', 'I', 'a', 'a', '2', 'I', 'e', 'a', 'I', '/', 'i', ':', 'is', 'I', 'de', '/', 'of', '6', 'I', 'E', 'a', 'I', 'E', '2', ':', '$', 'I', '/', '8', 'I', '#', 'a', 'J', 'à', 'a', 'I', 'e', 'I', 'is', 'I', 'of', ':', 'I', 'I', '7', '9', 'le', 'a', 'E', 'E', 'o', 'I', 'i', 'i', 'I', '8', 'i', '1', '3', '8', 'I', 'a', 'f', 'E', ':', 'S', 'e', 'I', 'T', 'I', '2', '!', '3', 'I', 'I', 'à', '', 'a', 'e', 'I', 's', 'i', 'e', ':', 'i', 'ee', 'E', 'E', '9', 'E', 'of', 'e', ']', '2', '6', '/', 'I', 'f', '1', '8', '/', 'I', 'i', 'de', 'e', 'I', '1', '/', '7', ':', '2', 'J', 'I', 'a', '1', 'I', 'à', 'e', 'E', 'I', 'a', 'e', 'I', '/', 'I', 'I', '3', '2', 'S', '3', 'a', 'a', '/', '4', 'E', 'I', '12', '6', 'N', 'I', '9', ':', 'I', 'I', 'E', '-', 'ts', 'E', 'à', 'E', 'e', 'o', 'I', 'I', '1', 'of', 'I', 'a', '2', 'of', '7', '-', '', 'I', 'I', 'I', 'I', 'a', '1', 'E', '1', 'à', '2', 'I', 'E', 'I', '/', '0o', '', 'of']
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'handwriting,', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', '1', 'Typically:', 'the', 'deployment.', '2', 'kNN', 'is', 'a', '3', 'Vectors', 'I', 'L-outineSsmalenbviesl', 'and', '3.', '4', 'Backpropogstion', 'used', 'to', 'compute', 'the', '5', 'The', 'Receiver', '6', 'A', 'mixture', 'of', '7', 'The', 'Time', '8', 'The', 'decision', '9', 'For', 'multiclass', '10', 'With', 'Storage', 'TRUE/EAISE', 'FALSE', 'RUE', 'PRur', 'FALSE', 'TRUE', 'tequirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'non-linear', 'classifier.', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'gradient', 'descent', 'is', 'is', 'used', 'to', 'update', 'the', 'gradients', 'in', 'the', 'neural', 'weights,', 'While', 'network.', 'cision', 'and', 'Recall', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'two', 'Gaussian', 'required', 'for', 'TREE', 'TRUE', 'Tomsp', 'FALSE', 'FRUE', 'TRUE', 'distributions', 'is', 'always', 'a', 'Gaussian', 'Decision', 'Tree', 'is', 'distribution.', 'directly', 'Droportional', 'to', 'the', 'making', 'a', 'prediction', 'in', 'the', 'pumber', 'of', 'nodes', 'boundary', 'of', 'an', 'SVM', 'Can', 'be', 'non-linear', 'in', 'the', 'original', 'of', 'classes,', 'one-vs-rest', 'making', 'a', 'SVM', 'the', 'risk', 'of', 'data.', 'using', 'one-vs-one', 'problemas', 'with', 'a', 'large', 'number', 'space.', 'Rftoss', 'SVM', 'is', 'slower', 'than', 'prediction', 'a', 'high', 'value', 'of', 'the', 'C', 'creases,', 'as', 'the', 'model', 'parameter', 'in', 'SVM,', 'training', 'data', 'that', 'may', 'learn', 'to', 'capture', 'do', 'not', 'generalize', 'well', 'specific', 'noise', 'or', 'overiting', 'in-', 'to', 'new,', 'unseen', 'details', 'in', 'the', 'TRVE']
OCR detection done with doctr
left top x of SN: 1206.3125
bottom right x of SN: 1612.0937499999998
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:40:10] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : wGegiaZ.jpg
[2024/06/28 14:40:10] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:40:11] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12510251998901367
[2024/06/28 14:40:13] ppocr DEBUG: rec_res num  : 41, elapsed : 2.000828504562378
OCR detection done
left top x of SN: 1266.0
bottom right x of SN: 1603.0
left top y of SN: 1515.0
bottom right y of SN: 1832.0
left top x of T/F: 5784.0
bottom right x of T/F: 6695.0
left top y of T/F: 1652.0
bottom right y of T/F: 2280.0
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are []
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : I3rHIGa.jpg
OCR detection done with doctr
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6413.499999999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRUE
((5427.781249999999, 1932.6875), (6014.8125, 2140.40625))
FALSE
((5454.874999999999, 2456.5), (5996.749999999999, 2664.21875))
FALSE
((5427.781249999999, 2962.25), (5996.749999999999, 3179.0))
TRUE
((5310.375, 3558.3125), (5852.25, 3766.03125))
TRUE
((5391.65625, 4145.34375), (5924.500000000001, 4353.0625))
TROE
((5346.499999999999, 4642.0625), (5897.406250000001, 4840.75))
TROE
((5400.687499999999, 5111.6875), (5879.34375, 5292.3125))
TRU
((5427.781249999999, 5617.4375), (5789.031250000001, 5789.03125))
FALSE
((5491.000000000001, 6059.96875), (6005.781250000001, 6231.5625))
TRUE
((5472.9375, 6647.0), (5978.687500000001, 6854.71875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2664, '3': 3043, '4': 3621, '5': 4199, '6': 4786, '7': 5174, '8': 5761, '9': 6159, '10': 6764}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RDvyz0H.jpg
OCR detection done with doctr
left top x of T/F: 864.09375
bottom right x of T/F: 1229.1328125
left top x of SN: 81.04687499999999
bottom right x of SN: 299.015625
first t/f detection
F
((913.64453125, 409.74609375), (940.5390625, 446.1328125))
collision happend with box:409.74609375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((913.64453125, 492.01171875), (938.95703125, 526.81640625))
text2 i.e the incoming text is the winner
collision happend with box:492.01171875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 572.6953125), (946.8671875000001, 610.6640625))
text2 i.e the incoming text is the winner
directly
((790.24609375, 950.80078125), (866.18359375, 980.859375))
collision happend with box:950.80078125 and text:directly solving on the basis of percent match boxes
the current box specification are
T.
((899.40625, 952.3828125), (950.03125, 985.60546875))
text1 i.e the prev text is the winner
T
((912.0625, 681.85546875), (943.703125, 715.078125))
collision happend with box:681.85546875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 784.6875), (940.5390625, 817.91015625))
text2 i.e the incoming text is the winner
collision happend with box:784.6875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 870.1171875), (950.03125, 908.0859375))
text2 i.e the incoming text is the winner
prediction
((772.84375, 1120.078125), (867.765625, 1150.13671875))
collision happend with box:1120.078125 and text:prediction solving on the basis of percent match boxes
the current box specification are
the
((836.125, 1254.55078125), (872.51171875, 1279.86328125))
text1 i.e the prev text is the winner
collision happend with box:1120.078125 and text:prediction solving on the basis of percent match boxes
the current box specification are
F
((912.0625, 1034.6484375), (943.703125, 1080.52734375))
text1 i.e the prev text is the winner
collision happend with box:1120.078125 and text:prediction solving on the basis of percent match boxes
the current box specification are
F
((915.2265624999999, 1120.078125), (942.12109375, 1151.71875))
text1 i.e the prev text is the winner
collision happend with box:1120.078125 and text:prediction solving on the basis of percent match boxes
the current box specification are
F
((912.0625, 1219.74609375), (942.12109375, 1254.55078125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 423, '2': 523, '3': 591, '4': 694, '5': 794, '6': 895, '7': 963, '8': 1066, '9': 1132, '10': 1233}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : apa52fV.jpg
OCR detection done with doctr
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6594.125
left top x of SN: 537.9999999999999
bottom right x of SN: 943.7812500000001
first t/f detection
TRVE
((5509.062499999999, 1914.625), (5951.593750000001, 2095.25))
TRUE
((5436.812500000001, 2474.5625), (5933.53125, 2655.1875))
FALSE
((5463.906250000001, 2989.34375), (5924.500000000001, 3160.9375))
FALSE
((5391.65625, 3630.5625), (5852.25, 3766.03125))
FALSE
((5355.531250000001, 4208.5625), (5843.218750000001, 4371.125))
FALSE
((5346.499999999999, 4732.375), (5798.0625, 4894.9375))
FALSE
((5355.531250000001, 5192.96875), (5798.0625, 5355.53125))
TRUE
((5319.406249999999, 5725.8125), (5761.937500000001, 5888.375))
TRVE
((5265.218749999999, 6213.5), (5734.843750000001, 6376.0625))
FALSE
((5337.46875, 6836.65625), (5816.125000000001, 7008.25))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2528, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5057, '8': 5635, '9': 6032, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MKo064b.jpg
OCR detection done with doctr
left top x of SN: 944.4062499999999
bottom right x of SN: 1350.1875000000002
left top x of T/F: 5300.375
bottom right x of T/F: 6467.687499999999
first t/f detection
Ave
((5391.65625, 2528.75), (5707.750000000001, 2727.4375))
False
((5346.499999999999, 2998.375), (5752.906249999999, 3215.125))
Trul
((5409.718750000001, 3386.71875), (5798.0625, 3603.46875))
Falle
((5346.499999999999, 3928.59375), (5725.812499999999, 4208.5625))
Folle
((5382.625000000001, 4470.46875), (5825.15625, 4687.21875))
Tire
((5319.406249999999, 4958.15625), (5671.624999999999, 5202.0))
Tyue
((5319.406249999999, 5427.78125), (5689.6875, 5617.4375))
Taxe
((5355.531250000001, 5879.34375), (5770.96875, 6114.15625))
Falie
((5382.625000000001, 6267.6875), (5798.0625, 6502.5))
Falie
((5364.5625, 6890.84375), (5752.906249999999, 7080.5))
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2465, '2': 2998, '3': 3350, '4': 3901, '5': 4416, '6': 4958, '7': 5310, '8': 5861}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pKLNQz5.jpg
OCR detection done with doctr
left top x of T/F: 5598.40625
bottom right x of T/F: 6910.218750000001
left top x of SN: 510.9062499999999
bottom right x of SN: 925.71875
first t/f detection
TRVE
((5590.343749999999, 1806.25), (6276.718750000001, 2059.125))
TRUE
((5554.21875, 2465.53125), (6195.437500000001, 2718.40625))
FALS
((5581.3125, 2944.1875), (6177.375, 3197.0625))
FALSE
((5536.156249999999, 3657.65625), (6376.062499999999, 3955.6875))
TRVE
((5509.062499999999, 4325.96875), (6123.1875, 4542.71875))
JRUE
((5554.21875, 4922.03125), (6114.156250000001, 5120.71875))
FALSE
((5500.03125, 5427.78125), (6177.375, 5635.5))
PALSE
((5472.9375, 5942.5625), (6177.375, 6159.3125))
TRUE
((5454.874999999999, 6502.5), (5960.625, 6755.375))
TRUE
((5427.781249999999, 7125.65625), (6014.8125, 7324.34375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2664, '3': 3061, '4': 3666, '5': 4271, '6': 4885, '7': 5292, '8': 5906, '9': 6321, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xE2j1uA.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 663.8124999999999
left top x of T/F: 5517.125
bottom right x of T/F: 6747.656250000001
first t/f detection
TRUE
((5689.6875, 2023.0), (6258.65625, 2230.71875))
FALSE
((5608.40625, 2664.21875), (6177.375, 2835.8125))
FALSE
((5626.468750000001, 3251.25), (6321.874999999999, 3458.96875))
TRVE
((5635.5, 3757.0), (6249.625000000001, 3955.6875))
FALSE
((5662.59375, 4226.625), (6339.9375, 4434.34375))
FALSE
((5698.718749999999, 4903.96875), (6285.75, 5102.65625))
TRUE
((5698.718749999999, 5617.4375), (6285.75, 5816.125))
FALSE
((5716.78125, 6150.28125), (6358.000000000001, 6348.96875))
TRUE
((5680.656250000001, 6719.25), (6276.718750000001, 6890.84375))
TRUE
((5635.5, 7333.375), (6222.531250000001, 7550.125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2041, '2': 2637, '3': 3251, '4': 3865, '5': 4262, '6': 4876, '7': 5689, '8': 6303, '9': 6710, '10': 7532}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DpgnoTP.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6765.718749999999
left top x of SN: 537.9999999999999
bottom right x of SN: 943.7812500000001
first t/f detection
FALSE
((5554.21875, 1815.28125), (6412.187500000001, 2104.28125))
TRVE
((5563.249999999999, 2420.375), (6303.812500000001, 2673.25))
FALSE
((5590.343749999999, 3043.53125), (6303.812500000001, 3251.25))
FALSE
((5635.5, 3522.1875), (6394.125, 3766.03125))
TRVE
((5590.343749999999, 4009.875), (6276.718750000001, 4181.46875))
FALSE
((5635.5, 4633.03125), (6367.03125, 4849.78125))
TRVE
((5563.249999999999, 5337.46875), (6204.46875, 5545.1875))
TRVE
((5644.531249999999, 5852.25), (6303.812500000001, 6023.84375))
TRUE
((5581.3125, 6367.03125), (6294.781249999999, 6619.90625))
TRUE
((5662.59375, 6999.21875), (6403.156249999999, 7197.90625))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2555, '3': 3124, '4': 3693, '5': 4073, '6': 4651, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AoWLqhH.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6666.375000000001
left top x of SN: 438.6562500000001
bottom right x of SN: 871.53125
first t/f detection
Toue
((5545.187500000001, 2077.1875), (5933.53125, 2266.84375))
Taue
((5355.531250000001, 2601.0), (5861.281249999999, 2826.78125))
Taue
((5463.906250000001, 3052.5625), (5852.25, 3287.375))
Taue
((5283.28125, 3757.0), (5734.843750000001, 3982.78125))
Tue
((5355.531250000001, 4380.15625), (5807.093749999999, 4605.9375))
fale
((5355.531250000001, 4849.78125), (5825.15625, 5084.59375))
True
((5382.625000000001, 5391.65625), (5852.25, 5626.46875))
Tue
((5400.687499999999, 5888.375), (5879.34375, 6114.15625))
Toue
((5418.75, 6358.0), (5870.312500000001, 6592.8125))
fake
((5364.5625, 7026.3125), (5789.031250000001, 7252.09375))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
the unassigned keys are ['2', '4', '5', '6', '8', '9']
the assigned keys are ['1', '3', '7', '10']
['1', '3', '7', '10', '1', '3', '7', '10']
printing the number dict y_coordinate
{'1': 2176, '3': 3169, '7': 5328, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GRBnj1Z.jpg
OCR detection done with doctr
left top x of SN: 808.9374999999999
bottom right x of SN: 1223.75
left top x of T/F: 5300.375
bottom right x of T/F: 6449.625000000001
first t/f detection
TRUE
((5319.406249999999, 2059.125), (6132.218749999999, 2302.96875))
TRUE
((5292.312499999999, 2510.6875), (6023.843749999999, 2772.59375))
TRUE
((5292.312499999999, 2989.34375), (6078.031249999999, 3242.21875))
FALSE
((5283.28125, 3531.21875), (6168.343750000001, 3811.1875))
FALSE
((5292.312499999999, 4118.25), (6213.499999999999, 4362.09375))
FALSE
((5283.28125, 4605.9375), (6168.343750000001, 4840.75))
TRUE
((5292.312499999999, 5075.5625), (6114.156250000001, 5328.4375))
FALSE
((5301.343750000001, 5536.15625), (6150.28125, 5834.1875))
TRUE
((5274.250000000001, 5978.6875), (6114.156250000001, 6258.65625))
TRUE
((5310.375, 6710.21875), (6141.250000000001, 6963.09375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2032, '2': 2564, '3': 2926, '4': 3468, '5': 4018, '6': 4569, '7': 4949, '8': 5509}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gyP6GmY.jpg
OCR detection done with doctr
left top x of SN: 135.04882812499997
bottom right x of SN: 360.166015625
left top x of T/F: 983.603515625
bottom right x of T/F: 1372.4609375
first t/f detection
F
((1027.44140625, 449.560546875), (1072.55859375, 501.123046875))
T
((938.818359375, 900.732421875), (1043.5546875, 953.90625))
collision happend with box:900.732421875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((974.267578125, 995.80078125), (1011.328125, 1042.529296875))
text2 i.e the incoming text is the winner
collision happend with box:995.80078125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((959.7656249999999, 1076.3671875), (995.21484375, 1119.873046875))
text2 i.e the incoming text is the winner
F
((998.4375, 1284.228515625), (1027.44140625, 1321.2890625))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 378, '2': 483, '3': 552, '4': 660, '5': 758, '6': 858, '7': 934, '8': 1031, '9': 1100, '10': 1202}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uCpvJcc.jpg
OCR detection done with doctr
left top x of SN: 102.796875
bottom right x of SN: 319.21875
left top x of T/F: 891.5859375
bottom right x of T/F: 1254.861328125
first t/f detection
Eere
((913.7265625, 358.1484375), (986.5703125, 385.46484375))
collision happend with box:358.1484375 and text:Eere solving on the basis of percent match boxes
the current box specification are
FALSE
((921.314453125, 402.158203125), (1004.78125, 430.9921875))
text2 i.e the incoming text is the winner
collision happend with box:402.158203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((913.7265625, 459.826171875), (1001.74609375, 494.73046875))
text2 i.e the incoming text is the winner
collision happend with box:459.826171875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((907.65625, 540.2578125), (983.53515625, 575.162109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:540.2578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((915.244140625, 669.251953125), (985.052734375, 699.603515625))
text1 i.e the prev text is the winner
TRVE
((916.76171875, 736.025390625), (988.087890625, 766.376953125))
collision happend with box:736.025390625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((912.208984375, 839.220703125), (963.806640625, 872.607421875))
text2 i.e the incoming text is the winner
collision happend with box:839.220703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((965.32421875, 842.255859375), (995.67578125, 869.572265625))
text1 i.e the prev text is the winner
collision happend with box:839.220703125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((913.7265625, 925.72265625), (962.2890625, 957.591796875))
text2 i.e the incoming text is the winner
collision happend with box:925.72265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((965.32421875, 927.240234375), (997.193359375, 954.556640625))
text1 i.e the prev text is the winner
collision happend with box:925.72265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((918.279296875, 1015.259765625), (1001.74609375, 1045.611328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1015.259765625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((921.314453125, 1083.55078125), (1000.228515625, 1113.90234375))
text2 i.e the incoming text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Teef
((921.314453125, 1185.228515625), (1000.228515625, 1220.1328125))
text1 i.e the prev text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((857.576171875, 1233.791015625), (892.48046875, 1259.58984375))
text1 i.e the prev text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((927.384765625, 1242.896484375), (1010.8515625, 1273.248046875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 540, '2': 471, '3': 541, '4': 648, '5': 754, '6': 863, '7': 933, '8': 1042, '9': 1113, '10': 1221}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gKmfNLx.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 295.2578125
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((821.40234375, 329.09765625), (897.7148437500001, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:414.94921875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((827.76171875, 494.44140625), (873.8671875, 526.23828125))
text2 i.e the incoming text is the winner
collision happend with box:494.44140625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((870.6875, 496.03125), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:494.44140625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 589.83203125), (899.3046875, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((819.8125, 685.22265625), (904.07421875, 717.01953125))
text2 i.e the incoming text is the winner
collision happend with box:685.22265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((816.6328125, 766.3046875), (900.89453125, 796.51171875))
text2 i.e the incoming text is the winner
collision happend with box:766.3046875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
text2 i.e the incoming text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((816.6328125, 925.2890625), (896.125, 955.49609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:925.2890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (899.3046875, 1030.21875))
text1 i.e the prev text is the winner
TRVE
((832.53125, 1090.6328125), (910.43359375, 1127.19921875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'NULL', '8': 'UNASSIGNED', '9': True, '10': 'NULL'}
the unassigned keys are ['1', '4', '5', '8']
the assigned keys are ['2', '3', '6', '7', '9', '10']
['2', '3', '6', '7', '9', '10', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'9': 996, '2': 419, '3': 489, '6': 772, '7': 834, '10': 1092, '1': 119}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'NULL', '8': 'UNASSIGNED', '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : plsg9LG.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1318.41015625
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1349.486328125, 604.18359375), (1457.208984375, 665.0703125))
collision happend with box:604.18359375 and text:True solving on the basis of percent match boxes
the current box specification are
Tue
((1482.96875, 728.298828125), (1583.666015625, 786.84375))
text1 i.e the prev text is the winner
Falsc
((1363.537109375, 850.072265625), (1475.9433593749998, 906.275390625))
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falke
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
ER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Fadse
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
text2 i.e the incoming text is the winner
collision happend with box:1285.646484375 and text:Fadse solving on the basis of percent match boxes
the current box specification are
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
text2 i.e the incoming text is the winner
collision happend with box:1398.052734375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1533.876953125), (1436.1328125, 1583.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1533.876953125 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyuu
((1471.259765625, 1639.2578125), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 985, '5': 1135, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : d0CumBh.jpg
OCR detection done with doctr
left top x of T/F: 5408.75
bottom right x of T/F: 6639.281250000001
left top x of SN: 384.4687500000001
bottom right x of SN: 790.25
first t/f detection
Tgul
((5454.874999999999, 1851.40625), (5933.53125, 2023.0))
Taul
((5463.906250000001, 2492.625), (5978.687500000001, 2664.21875))
Fale
((5572.281250000001, 3043.53125), (6041.90625, 3269.3125))
Tque
((5536.156249999999, 3585.40625), (6050.937499999999, 3747.96875))
TAul
((5536.156249999999, 4073.09375), (6069.0, 4244.6875))
gul
((5734.843750000001, 4687.21875), (6114.156250000001, 4858.8125))
the
((5183.9375, 5409.71875), (5409.718750000001, 5554.21875))
collision happend with box:5409.71875 and text:the solving on the basis of percent match boxes
the current box specification are
Taue
((5599.375000000001, 5400.6875), (6195.437500000001, 5599.375))
text2 i.e the incoming text is the winner
Freeel
((5662.59375, 5933.53125), (6177.375, 6141.25))
collision happend with box:5933.53125 and text:Freeel solving on the basis of percent match boxes
the current box specification are
Falee
((5870.312500000001, 6041.90625), (6258.65625, 6231.5625))
text2 i.e the incoming text is the winner
the
((5211.031249999999, 6394.125), (5427.781249999999, 6529.59375))
collision happend with box:6394.125 and text:the solving on the basis of percent match boxes
the current box specification are
Folee
((5653.562500000001, 6412.1875), (6150.28125, 6674.09375))
text2 i.e the incoming text is the winner
T9ue
((5698.718749999999, 6683.125), (6285.75, 6881.8125))
Tael
((5680.656250000001, 7098.5625), (6168.343750000001, 7279.1875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2664, '3': 3224, '4': 3802, '5': 4181, '6': 4750, '7': 5509, '8': 6078, '9': 6457, '10': 7225}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sVRUXRv.jpg
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'azrpe.oues', 'qou', 'op', 'ge47', 'egep', 'Sururenq', ':', 'anal', 'auy', 'ur', 'sTregop', 'JO', 'asIOU', 'oyroads', 'amngdes', '09', 'UIeOT', 'Keur', 'popou', 'au4', 'Se', "'soseaIo", '-ur', 'Surnayiano', 'Jo', 'YSLI', 'ay7', "'WAS", 'UI', 'reneurered', 'D', 'ay4', 'Jo', 'anTeA', 'y81y', 'B', 'YAIM', 'OT', 'uororpard', 'B', 'Suryeur', "'sassepp", 'Jo', 'poqunu', 'a81er', 'e', 'YAIM', 'suerqoid', 'ssepormu', 'JOI', '6', '"aoeds', '[eUrBTIO', 'a47', 'uI', 'JeQuII-uou', 'aq', 'ued', 'IAS', 'ue', 'Jo', 'Arepunoq', 'uorsioep', 'OUL', '8', 'mAL', 'MYL', '2TJ', 'Phy', 'asped', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', "'sopou", 'Jo', 'poqunu', 'e47', '07', 'Teuorgodord', 'Stapaup', 'SI', 'DOIL', 'UOISIDOC', 'ay7', 'UI', 'uororpard', 'B', 'Suryeur', 'IOJ', 'pammbar', 'OUIL', 'OUL', 'L', '"uornquasip', 'uerssneg', 'B', 'skenre', 'SI', 'Suorgnquasip', 'uerssneD', 'OM9', 'Jo', 'OIgXIU', 'V', '9', '-ald', 'usamgaq', 'nord', 'e', 'SI', 'BAINO', '(DOH)', 'orgstie90e.eUD', 'Surgeredo', 'JIOAIODON', 'OUL', 'S', 'SI', 'quaosap', 'querpels', 'STIYM', "'SA4B1OM", 'ay7', 'agepdn', '09', 'posn', 'SI', 'uone8odoxdypeg', '#', 'Teuorsuaump-p', 'Aue', 'IOJ', 'ouIgOur', 'souensip', 'PITEA', 'B', 'SI', "'=)ag.oypuagausoo", '-', 'I', '&', 'Teoay', 'pue', 'UOISIO', 'YIOMIOU', 'remeu', 'ay4', 'UI', 'squerpers', 'au7', 'eanduoo', '07', 'pasn', 'DTO', 'ErL', ':f', 'pue', 'I', 'SIO90OA', '"JoyIsseTD', 'reQuIT-uou', 'B', 'SI', 'NNY', '2', 'mp', 'L', 'muL', 'quourdordap', '10B1e1', 'yonur', 'SI', 'NNX', 'JOJ', 'quouammbar', '08e109S', 'auy', 'STeordAL', 'I', 'JOJ', 'WAS', 'ueyg', 'quewagens', 'NS', 'ASTVI/ANHL', ':0J04', 'Joqunu', 'ITO.I', 'mor', 'BTLIM', 'S109191', 'reardes', 'UI', 'ASTVI', 'IO', 'INHL', 'ALIM', '(sad', 'OT)', '6', 'Surumpuey', 'reapo', 'pue']
rotation started
['2', '-', '3', '2', 'É', 'a', '7', 'I', '', '2', '4', 'I', 'a', 'E', ':', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'I', 'E', 'I', 'I', 'I', 'a', 'I', 'e', 'I', 'iE', 'I', 'of', 'E', 'e', 'iE', 'I', '1', 'I', 'is', 'I', '&', 'I', 'a', 'I', 'I', 'I', ':', 'E', 'I', 'I', 'E', '-', '6', 'E', '-', '2', 'e', 'o', 'à', 'a', 's', 'a', 'iis', '1', 'à', 'E', 'I', '1', 'I', 'a', 'iE', 'I', 'I', '€', 'iis', 'e', 'e', '8', '1', 'e', 'I', 'i', 'iE', 'I', '8', 'I', 'I', 'I', 'I', 'of', '5', '$', 'i', ':', 'I', ':', 'e', 'I', 'E', 'I', 'I', 'I', 'iE', 'o', 'I', '2', 'a', 'I', '-', 'à', ':', 'o', '8', 'I', 'of', 'a', 'D', '.', 'I', 'I', 'I', 'a', 'e', 'E', 'I', 'of', 'I', 'I', 'I', '-', 'a', 'is', 'I', 'I', '1', 'of', 'E', 'is', 'de', 'à', ':', '2', 'I', 'is', 'a', 'S', 'I', 'E', 'e', 'E', '', 'I', 'is', '8', '8', 'I', 'E', ':', 'I', 'I', 'I', 'E', 'I', '11', 'I', 'I', 'I', 'E', '.', 'A', 'a', '', '-', 'of', 'de', 'I', 'I', '8', 'I', 'à', 'a', 'de', 'à', 'I', '5', '', '8', '$', 'I', 'I', 'I', 'I', 'E', '6o', 'I', 'I', 'I', 'E', 'E', ':', 'E', 'I', 'I', '7', '11', '4', '10', '00', '', '1f']
rotation started
['in', 'capital', 'letters', 'and', 'clear', 'handwriting.', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'True', 'deployment.', 'Taiue', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'vectors', 'I', 'and', 'J.', 'True', 'used', 'False', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'cision', 'and', 'Recall.', 'False', 'Rue', 'Fase', 'True', 'Trrue', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'True.']
rotation done for:  sVRUXRv.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6503.812500000001
left top x of SN: 601.2187500000001
bottom right x of SN: 1016.0312499999999
first t/f detection
True
((5382.625000000001, 2158.46875), (5852.25, 2429.40625))
Taiue
((5418.75, 2555.84375), (5915.468749999999, 2772.59375))
True
((5355.531250000001, 3215.125), (5861.281249999999, 3477.03125))
False
((5472.9375, 3784.09375), (5933.53125, 4009.875))
False
((5454.874999999999, 4389.1875), (5879.34375, 4614.96875))
Rue
((5481.968749999999, 4813.65625), (5897.406250000001, 5048.46875))
Fase
((5563.249999999999, 5301.34375), (6032.875000000001, 5563.25))
True
((5518.093750000001, 5825.15625), (5942.562499999999, 6050.9375))
Trrue
((5481.968749999999, 6321.875), (5933.53125, 6529.59375))
True.
((5481.968749999999, 6981.15625), (5987.71875, 7197.90625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2221, '2': 2790, '3': 3160, '4': 3729, '5': 4298, '6': 4867, '7': 5256, '8': 5825, '9': 6204, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pG15tPy.jpg
rotation started
['"egep', 'uoosun', "'mou", '09', 'ITOM', 'azireloues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'eu4', 'UT', 'sTrezep', 'IO', 'OSIOU', 'oyreds', 'amngdes', '01', 'UIeOT', 'Keur', 'lapour', 'a47', 'Se', "'soseaIo", '-Ul', 'SumayIeno', 'Jo', 'YSLI', 'ou4', "'WAS", 'UI', 'rgeurered', 'D', 'o7', 'Jo', 'anTea', 'y81y', 'e', 'Y9IM', 'OT', 'amal', 'OaL', 'IAS', '9S0I-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo-SA-QUO', 'Sursn', 'uomorpad', 'B', 'Suryeur', "'sossero", 'Jo', 'poqunu', 'a81eT', 'e', 'YAIM', 'suerqoid', 'sseporamu', 'JOI', '6', '2979', '"aoeds', 'TeUrSTIO', 'au9', 'UI', 'IBQUIT-Uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsioep', 'OUL', '8', "'sopou", 'Jo', 'oqunu', 'au7', '07', 'Teuorgiodo.d', '2mal', 'Stgoaup', 'SI', 'DOIL', 'UOISIDOC', 'ou7', 'UI', 'uomorperd', 'B', 'Suryeur', 'JOJ', 'pemmba', 'OWIL', 'BUL', 'L', 'anal', '"Lornquasip', 'uerssneD', 'e', 'siemre', 'SI', 'suorgnqugsip', 'ueissneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'TTeDOH', 'pue', 'UOISIO', 'amel', '-ald', 'UDamneq', 'gord', 'e', 'SI', 'OAINO', '(DOH)', 'orgsttepe.eud', 'Surgeiado', 'IOAIODON', 'BUL', 'S', 'YIOMIOU', '[emnou', 'o47', 'UI', 'squerpels', 'au7', 'aanduoo', '07', 'pasn', 'aypoy', 'SI', 'queosap', 'querpe.1s', 'TIYM', "'sqy8IOM", 'au7', 'agepdn', '07', 'posn', 'SI', 'uome@odoxdypeg', '4', ':f', 'pue', 'I', 'SIOTOOA', '>el', 'py', 'Teuorsuouup-P', 'Kue', 'IOJ', 'OLIQOUI', 'souensip', 'PITBA', 'B', 'SI', '(f', "'r)@guoypungausog", '-', 'I', '&', 'IOUISSETD', 'IBQUIT-uou', 'B', 'SI', 'NNY', '2', 'queurdordap', '1081el', 'yonur', 'SI', 'NNX', 'JOJ', 'queuemmbar', '98BI09s', 'au7', 'ATreoIdSL', 'I', 'ane', 'aSTVA/AnaL', 'IOJ', 'WAS', 'ueya', 'quewagens', 'NS', ':0JOU', '10', 'qunu', 'ITOI', 'moc', 'B91M', 'IO', 'INHL', 'O9LIM', '(sad', 'OT)', '6', 'S.I09191', 'Teardeo', 'UI', 'ASTVI', '-Surumpuey', 'reepp', 'pue']
rotation started
['I', 'I', '*', '2', 'à', 'I', 'I', 'I', '*', '2', ':', 'a', 'E', 'a', '-', 'i', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'e', 'E', 'I', 'I', 'I', 'is', 'I', 'à', 'a', 'E', 'of', '6', ':', 'a', 'a', 'is', 'I', 'I', '1', 'a', 'I', 'à', '€', 'a', 'I', ':', 'a', 'I', 'I', '1', 'I', 'a', 'E', ':', '1', 'E', 'I', 'I', '€', 'is', 'e', 'I', 'E', 'o', 'e', 'E', 'i', 'I', '2', 'e', 'I', 'E', '', '-', 'à', ':', '9', 'i', ':', '', 'I', 'of', 'I', 'E', '8', 'a', '0', 'I', 'I', 'I', 'of', ':', 'I', 'E', 'I', 'I', 'is', 'e', 'à', ':', '2', 'I', 'is', 'a', 'I', 'a', 'e', 'E', 'of', '1', 'de', 'S', 'I', 'I', 'E', 'o', 'I', 'à', ':', 'E', '€', 'E', 'I', 'of', 'I', 'de', 'a', 'I', '8', '-', '8', '$', 'is', '8', 'E', 'a', 'I', 'à', 'I', 'I', 'I', ':', 'I', 'I', 'E', 'I', 'I', 'I', 'I', 'L', 'I', 'a', '3', 'I', 'I', 'a', 'I', 'e', 'I', 'E', 'I', 'of', 'I', 'I', 'I', '3', 'E', 'I', '1', 'iE', '-', 'a', 'E', '€', '2', 'e', 'o', 'I', 'i', '-', 'a', 'is', 'I', 'I', 'I', 'I', 'E', 'à', 'A', 'E', 'E', 'a', '-', '€', 'I', 'I', '7', '11', '4', '10', '6', 'I', '00', '', '1f']
rotation started
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/pG15tPy.jpg: {{function_node __wrapped__StridedSlice_device_/job:localhost/replica:0/task:0/device:GPU:0}} slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4o6dYrK.jpg
OCR detection done with doctr
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6395.437500000001
left top x of SN: 926.3437500000001
bottom right x of SN: 1323.0937500000002
first t/f detection
TRVE
((5319.406249999999, 2149.4375), (5789.031250000001, 2330.0625))
TRVE
((5292.312499999999, 2646.15625), (5779.999999999999, 2808.71875))
FALSE
((5292.312499999999, 3115.78125), (5743.875, 3287.375))
FALSE
((5310.375, 3639.59375), (5779.999999999999, 3820.21875))
FALSE
((5274.250000000001, 4226.625), (5779.999999999999, 4407.25))
FALSE
((5274.250000000001, 4741.40625), (5770.96875, 4903.96875))
FALSE
((5256.1875, 5174.90625), (5716.78125, 5355.53125))
TRUE
((5211.031249999999, 5662.59375), (5635.5, 5843.21875))
TRVE
((5265.218749999999, 6096.09375), (5752.906249999999, 6267.6875))
TRVE
((5220.062500000001, 6683.125), (5626.468750000001, 6863.75))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2248, '2': 2754, '3': 3097, '4': 3630, '5': 4127, '6': 4651, '7': 4994, '8': 5527, '9': 5879, '10': 6421}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gbeOzSl.jpg
OCR detection done with doctr
left top x of T/F: 5182.96875
bottom right x of T/F: 6386.406249999999
left top x of SN: 321.2499999999999
bottom right x of SN: 736.0625
first t/f detection
TRUE
((5229.09375, 1833.34375), (5861.281249999999, 2077.1875))
TRUE
((5220.062500000001, 2411.34375), (5924.500000000001, 2664.21875))
TRVE
((5256.1875, 3007.40625), (5933.53125, 3260.28125))
TRUE
((5319.406249999999, 3540.25), (5897.406250000001, 3747.96875))
TRUE
((5301.343750000001, 4046.0), (5933.53125, 4262.75))
TRUR
((5337.46875, 4678.1875), (5951.593750000001, 4885.90625))
TRVE
((5292.312499999999, 5355.53125), (5834.187499999999, 5563.25))
FALSE
((5328.437500000001, 5825.15625), (6014.8125, 6023.84375))
the
((4976.21875, 6267.6875), (5192.96875, 6412.1875))
collision happend with box:6267.6875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 6348.96875), (6105.124999999999, 6592.8125))
text2 i.e the incoming text is the winner
FALSE
((5346.499999999999, 7017.28125), (6014.8125, 7225.0))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2510, '3': 3061, '4': 3621, '5': 3991, '6': 4560, '7': 5319, '8': 5897, '9': 6285, '10': 7080}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8m1YEXP.jpg
OCR detection done with doctr
left top x of T/F: 867.3046875
bottom right x of T/F: 1232.09765625
left top x of SN: 80.033203125
bottom right x of SN: 297.97265625
first t/f detection
Teuf
((892.48046875, 342.97265625), (965.32421875, 373.32421875))
collision happend with box:342.97265625 and text:Teuf solving on the basis of percent match boxes
the current box specification are
FALSE
((901.5859375, 383.947265625), (989.60546875, 418.8515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:383.947265625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((898.55078125, 449.203125), (953.18359375, 482.58984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:449.203125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((953.18359375, 446.16796875), (985.052734375, 471.966796875))
text1 i.e the prev text is the winner
collision happend with box:449.203125 and text:FAL solving on the basis of percent match boxes
the current box specification are
d-dimensional
((743.7578125, 528.1171875), (872.751953125, 556.951171875))
text2 i.e the incoming text is the winner
collision happend with box:528.1171875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((895.515625, 525.08203125), (974.4296875, 563.021484375))
text2 i.e the incoming text is the winner
collision happend with box:525.08203125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
is
((857.576171875, 628.27734375), (881.857421875, 657.111328125))
text1 i.e the prev text is the winner
collision happend with box:525.08203125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((909.173828125, 655.59375), (980.5, 685.9453125))
text2 i.e the incoming text is the winner
collision happend with box:655.59375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Pre
((839.365234375, 731.47265625), (884.892578125, 761.82421875))
text1 i.e the prev text is the winner
collision happend with box:655.59375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((912.208984375, 720.849609375), (986.5703125, 751.201171875))
text1 i.e the prev text is the winner
distribution.
((771.07421875, 836.185546875), (890.962890625, 869.572265625))
collision happend with box:836.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((913.7265625, 824.044921875), (1000.228515625, 860.466796875))
text1 i.e the prev text is the winner
collision happend with box:836.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((819.63671875, 904.4765625), (895.515625, 939.380859375))
text1 i.e the prev text is the winner
collision happend with box:836.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FAL
((919.796875, 912.064453125), (969.876953125, 943.93359375))
text1 i.e the prev text is the winner
collision happend with box:836.185546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
SE
((971.39453125, 910.546875), (1003.263671875, 939.380859375))
text1 i.e the prev text is the winner
space.
((837.84765625, 1015.259765625), (900.068359375, 1044.09375))
collision happend with box:1015.259765625 and text:space. solving on the basis of percent match boxes
the current box specification are
FAL
((930.419921875, 1001.6015625), (983.53515625, 1031.953125))
text2 i.e the incoming text is the winner
collision happend with box:1001.6015625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((982.017578125, 1001.6015625), (1012.369140625, 1028.91796875))
text1 i.e the prev text is the winner
collision happend with box:1001.6015625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((936.490234375, 1068.375), (1013.88671875, 1098.7265625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1068.375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
prediction
((809.013671875, 1082.033203125), (906.138671875, 1116.9375))
text1 i.e the prev text is the winner
collision happend with box:1068.375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
feef
((942.560546875, 1170.052734375), (1019.95703125, 1204.95703125))
text1 i.e the prev text is the winner
collision happend with box:1068.375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
overfitting
((780.1796875, 1189.78125), (881.857421875, 1223.16796875))
text2 i.e the incoming text is the winner
collision happend with box:1189.78125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((880.33984375, 1221.650390625), (915.244140625, 1248.966796875))
text1 i.e the prev text is the winner
collision happend with box:1189.78125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
FALSE
((948.630859375, 1224.685546875), (1035.1328125, 1259.58984375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 382, '2': 488, '3': 558, '4': 666, '5': 770, '6': 880, '7': 950, '8': 1059, '9': 1132, '10': 1236}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : h8CIV67.jpg
OCR detection done with doctr
left top x of T/F: 4948.15625
bottom right x of T/F: 6160.625
left top x of SN: 366.40625
bottom right x of SN: 772.1874999999999
first t/f detection
TRUE
((5057.5, 2321.03125), (5472.9375, 2519.71875))
TRUE
((5075.5625, 2844.84375), (5509.062499999999, 3061.59375))
d-dimensional
((4118.25, 3296.40625), (4949.125, 3531.21875))
collision happend with box:3296.40625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5084.59375, 3233.1875), (5716.78125, 3531.21875))
true and false collision so given priority to text2 which is the incoming text
is
((4840.75, 3883.4375), (4958.15625, 4018.90625))
collision happend with box:3883.4375 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5211.031249999999, 3811.1875), (5779.999999999999, 4064.0625))
text2 i.e the incoming text is the winner
Pre-
((4714.3125, 4443.375), (4985.25, 4587.875))
collision happend with box:4443.375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5202.0, 4362.09375), (5779.999999999999, 4633.03125))
text2 i.e the incoming text is the winner
FALSE
((5174.90625, 4885.90625), (5734.843750000001, 5102.65625))
collision happend with box:4885.90625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4289.84375, 4976.21875), (5021.375, 5174.90625))
text2 i.e the incoming text is the winner
directly
((4587.875, 5355.53125), (5039.4375, 5527.125))
collision happend with box:5355.53125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRVE
((5192.96875, 5355.53125), (5635.5, 5536.15625))
text1 i.e the prev text is the winner
space.
((4696.25, 5933.53125), (5066.53125, 6096.09375))
collision happend with box:5933.53125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5238.124999999999, 5870.3125), (5653.562500000001, 6069.0))
text2 i.e the incoming text is the winner
prediction
((4533.6875, 6294.78125), (5102.65625, 6466.375))
collision happend with box:6294.78125 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5229.09375, 6285.75), (5707.750000000001, 6493.46875))
text2 i.e the incoming text is the winner
overfitting
((4353.0625, 6845.6875), (4958.15625, 7053.40625))
collision happend with box:6845.6875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRVE
((5301.343750000001, 6854.71875), (5897.406250000001, 7071.46875))
text1 i.e the prev text is the winner
the
((4949.125, 7017.28125), (5156.84375, 7170.8125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2655, '2': 3206, '3': 3585, '4': 4145, '5': 4705, '6': 5274, '7': 5653}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WG85Ru8.jpg
OCR detection done with doctr
left top x of SN: 528.96875
bottom right x of SN: 943.7812500000001
left top x of T/F: 5490.03125
bottom right x of T/F: 6666.375000000001
first t/f detection
FALSE
((5545.187500000001, 1887.53125), (6059.968750000001, 2068.15625))
FALS
((5518.093750000001, 2483.59375), (5897.406250000001, 2673.25))
FALSE
((5527.125, 3043.53125), (6041.90625, 3206.09375))
TRUE
((5463.906250000001, 3549.28125), (5951.593750000001, 3729.90625))
TRUE
((5463.906250000001, 3991.8125), (5879.34375, 4163.40625))
FALSE
((5454.874999999999, 4624.0), (5942.562499999999, 4831.71875))
TRUE
((5418.75, 5310.375), (5816.125000000001, 5481.96875))
TRUE
((5382.625000000001, 5825.15625), (5779.999999999999, 5996.75))
TRUE
((5400.687499999999, 6348.96875), (5816.125000000001, 6529.59375))
TRUE
((5445.84375, 6954.0625), (5888.374999999999, 7134.6875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2366, '3': 2926, '4': 3504, '5': 3874, '6': 4443, '7': 5192, '8': 5761, '9': 6141, '10': 6908}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A4qd5JR.jpg
OCR detection done with doctr
left top x of SN: 190.107421875
bottom right x of SN: 430.99414062500006
left top x of T/F: 1405.0566406250002
bottom right x of T/F: 1882.021484375
first t/f detection
handwriting
((1220.6875, 243.546875), (1422.08203125, 318.484375))
True
((1429.107421875, 688.48828125), (1536.830078125, 751.716796875))
collision happend with box:688.48828125 and text:True solving on the basis of percent match boxes
the current box specification are
Tme
((1541.513671875, 826.654296875), (1644.552734375, 887.541015625))
text1 i.e the prev text is the winner
Falsc
((1403.34765625, 929.693359375), (1518.095703125, 988.23828125))
collision happend with box:929.693359375 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1370.5625, 1067.859375), (1478.28515625, 1124.0625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1067.859375 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1347.14453125, 1215.392578125), (1454.8671875, 1278.62109375))
text1 i.e the prev text is the winner
falk
((1475.9433593749998, 1231.78515625), (1571.95703125, 1295.013671875))
collision happend with box:1231.78515625 and text:falk solving on the basis of percent match boxes
the current box specification are
Fasse
((1326.0683593749998, 1353.55859375), (1431.44921875, 1416.787109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1353.55859375 and text:Fasse solving on the basis of percent match boxes
the current box specification are
Falye
((1295.625, 1463.623046875), (1417.3984374999998, 1533.876953125))
true and false collision so given priority to text2 which is the incoming text
Tyu
((1391.638671875, 1721.220703125), (1506.3867187500002, 1793.81640625))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'1': 494, '2': 643, '3': 742, '4': 892}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VdH6dUQ.jpg
OCR detection done with doctr
left top x of SN: 718.625
bottom right x of SN: 1133.4375
left top x of T/F: 5435.84375
bottom right x of T/F: 6603.156249999999
first t/f detection
TRUE
((5536.156249999999, 2167.5), (6014.8125, 2339.09375))
TRUE
((5617.437499999999, 2718.40625), (5987.71875, 2853.875))
FALSE
((5472.9375, 3188.03125), (6059.968750000001, 3386.71875))
TRRIBE
((5509.062499999999, 3838.28125), (6023.843749999999, 4009.875))
collision happend with box:3838.28125 and text:TRRIBE solving on the basis of percent match boxes
the current box specification are
TOUE
((5554.21875, 3991.8125), (6014.8125, 4163.40625))
text1 i.e the prev text is the winner
FALS
((5518.093750000001, 4416.28125), (5933.53125, 4596.90625))
FALSE
((5418.75, 4913.0), (6059.968750000001, 5111.6875))
TRUE
((5454.874999999999, 5454.875), (6023.843749999999, 5671.625))
TRUG
((5491.000000000001, 5852.25), (6096.09375, 6069.0))
FALSE
((5563.249999999999, 6339.9375), (6204.46875, 6592.8125))
TRUE
((5463.906250000001, 6981.15625), (5987.71875, 7161.78125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2745, '3': 3124, '4': 3693, '5': 4262, '6': 4849, '7': 5238, '8': 5816, '9': 6204, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f5UXaA3.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6738.624999999999
left top x of SN: 294.1562499999999
bottom right x of SN: 708.96875
first t/f detection
False
((5626.468750000001, 1959.78125), (6339.9375, 2221.6875))
FALSE
((5608.40625, 2492.625), (6367.03125, 2799.6875))
False
((5689.6875, 3088.6875), (6448.3125, 3377.6875))
TRUE
((5626.468750000001, 3666.6875), (6403.156249999999, 3910.53125))
TRUE
((5644.531249999999, 4100.1875), (6457.343749999999, 4335.0))
False.
((5572.281250000001, 4840.75), (6330.906250000001, 5093.625))
TRUE
((5725.812499999999, 5554.21875), (6493.468750000001, 5789.03125))
Tne
((5671.624999999999, 6177.375), (6312.84375, 6376.0625))
TRUE
((5680.656250000001, 6538.625), (6457.343749999999, 6881.8125))
Toue
((5906.4375, 7252.09375), (6619.906249999999, 7514.0))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 3188, '4': 3793, '5': 4190, '6': 4795, '7': 5590, '8': 6195, '9': 6601, '10': 7423}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bOOb4M8.jpg
OCR detection done with doctr
left top x of SN: 899.2500000000001
bottom right x of SN: 1305.03125
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5436.812500000001, 2348.125), (6078.031249999999, 2546.8125))
TRUE
((5527.125, 2844.84375), (6177.375, 3016.4375))
False
((5572.281250000001, 3314.46875), (6159.312499999999, 3522.1875))
False
((5518.093750000001, 3883.4375), (6078.031249999999, 4091.15625))
False
((5472.9375, 4479.5), (6050.937499999999, 4696.25))
false
((5292.312499999999, 4958.15625), (5888.374999999999, 5174.90625))
True
((5400.687499999999, 5436.8125), (5924.500000000001, 5653.5625))
True
((5454.874999999999, 5879.34375), (5942.562499999999, 6087.0625))
True
((5481.968749999999, 6403.15625), (5987.71875, 6610.875))
Trwe
((5418.75, 6945.03125), (5987.71875, 7143.71875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 2230, '2': 2763, '3': 3124, '4': 3675, '5': 4208, '6': 4768}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CLBs5ko.jpg
OCR detection done with doctr
left top x of T/F: 4884.9375
bottom right x of T/F: 6070.312500000001
left top x of SN: 303.1875000000001
bottom right x of SN: 708.96875
first t/f detection
T
((5247.156250000001, 2185.5625), (5445.84375, 2348.125))
T
((5274.250000000001, 2691.3125), (5454.874999999999, 2862.90625))
T
((5301.343750000001, 3693.78125), (5481.968749999999, 3847.3125))
F
((5328.437500000001, 4262.75), (5445.84375, 4425.3125))
F
((5310.375, 4714.3125), (5463.906250000001, 4903.96875))
F
((5382.625000000001, 5129.75), (5527.125, 5328.4375))
Pre-
((4633.03125, 4235.65625), (4894.9375, 4389.1875))
distribution.
((4208.5625, 4795.59375), (4922.03125, 4967.1875))
directly
((4488.53125, 5174.90625), (4949.125, 5346.5))
space.
((4587.875, 5770.96875), (4967.1875, 5933.53125))
prediction
((4407.25, 6141.25), (4994.28125, 6312.84375))
collision happend with box:6141.25 and text:prediction solving on the basis of percent match boxes
the current box specification are
T
((5481.968749999999, 6150.28125), (5635.5, 6330.90625))
text1 i.e the prev text is the winner
T
((5481.968749999999, 6800.53125), (5689.6875, 6945.03125))
collision happend with box:6800.53125 and text:T solving on the basis of percent match boxes
the current box specification are
the
((4822.6875, 6890.84375), (5039.4375, 7035.34375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2375, '2': 2935, '3': 3314, '4': 3874, '5': 4425, '6': 4994, '7': 5373, '8': 5942, '9': 6321, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TLzmbPh.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
True
((5436.812500000001, 1977.84375), (5978.687500000001, 2230.71875))
False
((5427.781249999999, 2564.875), (5915.468749999999, 2826.78125))
True
((5518.093750000001, 3088.6875), (6005.781250000001, 3314.46875))
false
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5400.687499999999, 4244.6875), (5960.625, 4443.375))
Teue
((5355.531250000001, 4849.78125), (5933.53125, 5048.46875))
True
((5454.874999999999, 5310.375), (5960.625, 5527.125))
False
((5373.593749999999, 5780.0), (5915.468749999999, 6032.875))
Toue
((5418.75, 6249.625), (5915.468749999999, 6502.5))
True
((5500.03125, 6782.46875), (5969.656249999999, 7044.375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2772, '3': 3160, '4': 3738, '5': 4325, '6': 4913, '7': 5310, '8': 5906, '9': 6303, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LQah8ff.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6684.437499999999
left top x of SN: 438.6562500000001
bottom right x of SN: 871.53125
first t/f detection
Paue
((5527.125, 2077.1875), (5942.562499999999, 2275.875))
Taue
((5355.531250000001, 2601.0), (5816.125000000001, 2826.78125))
Taue
((5445.84375, 3061.59375), (5852.25, 3278.34375))
Tue
((5319.406249999999, 3747.96875), (5734.843750000001, 3982.78125))
Tue
((5355.531250000001, 4389.1875), (5807.093749999999, 4605.9375))
fale
((5355.531250000001, 4849.78125), (5798.0625, 5084.59375))
True
((5373.593749999999, 5391.65625), (5870.312500000001, 5653.5625))
Tue
((5418.75, 5888.375), (5879.34375, 6114.15625))
Toue
((5418.75, 6367.03125), (5879.34375, 6592.8125))
fabe
((5373.593749999999, 7026.3125), (5807.093749999999, 7252.09375))
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are ['2', '4']
the assigned keys are ['1', '3', '5', '6', '7', '8', '9', '10']
['1', '3', '5', '6', '7', '8', '9', '10', '1', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '3': 3160, '5': 4335, '6': 4931, '7': 5328, '8': 5915, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SxOFztL.jpg
OCR detection done with doctr
left top x of SN: 173.9375
bottom right x of SN: 390.875
left top x of T/F: 924.2187499999999
bottom right x of T/F: 1295.8203125
first t/f detection
hanvleriting
((818.7890625000001, 133.8984375), (938.8359375000001, 178.53125))
F
((968.078125, 429.3984375), (994.2421875, 461.71875))
collision happend with box:429.3984375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((948.0703124999999, 520.203125), (971.15625, 552.5234375))
text2 i.e the incoming text is the winner
collision happend with box:520.203125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((934.2187499999999, 586.3828125), (963.4609375, 617.1640625))
text2 i.e the incoming text is the winner
collision happend with box:586.3828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((915.75, 684.8828125), (946.53125, 717.203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'1': 320, '2': 421, '3': 487, '4': 587}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : v5r2evS.jpg
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
left top x of T/F: 5146.84375
bottom right x of T/F: 6287.062500000001
first t/f detection
TRUE
((5165.875, 1616.59375), (5707.750000000001, 1833.34375))
TKIE
((5183.9375, 2113.3125), (5635.5, 2330.0625))
FALSE
((5192.96875, 2718.40625), (5725.812499999999, 2971.28125))
FALSE
((5220.062500000001, 3197.0625), (5689.6875, 3422.84375))
TRUE
((5220.062500000001, 3666.6875), (5761.937500000001, 3883.4375))
TRUE
((5156.84375, 4289.84375), (5734.843750000001, 4506.59375))
TRIE
((5220.062500000001, 4985.25), (5635.5, 5183.9375))
TRUE
((5165.875, 5382.625), (5662.59375, 5599.375))
FALSE
((5174.90625, 5915.46875), (5725.812499999999, 6114.15625))
TRUE
((5138.78125, 6484.4375), (5689.6875, 6701.1875))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['1', '6', '8']
the assigned keys are ['2', '3', '4', '5', '7', '9', '10']
['2', '3', '4', '5', '7', '9', '10', '2', '3', '4', '5', '7', '9', '10']
printing the number dict y_coordinate
{'2': 2185, '3': 2727, '4': 3269, '5': 3648, '7': 4913, '9': 5807, '10': 6511, '1': 1885}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': False, '5': True, '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hsrMdD1.jpg
OCR detection done with doctr
left top x of SN: 276.0937500000001
bottom right x of SN: 699.9375000000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6865.0625
first t/f detection
FALSE
((5716.78125, 1770.125), (6430.249999999999, 1977.84375))
FALSE
((5635.5, 2366.1875), (6403.156249999999, 2619.0625))
TRVE
((5581.3125, 2980.3125), (6231.5625, 3188.03125))
TRUE
((5626.468750000001, 3513.15625), (6276.718750000001, 3729.90625))
FALSE
((5599.375000000001, 4018.90625), (6348.968749999999, 4217.59375))
FALS
((5671.624999999999, 4714.3125), (6240.593749999999, 4931.0625))
TRVE
((5653.562500000001, 5454.875), (6294.781249999999, 5662.59375))
TRUE
((5680.656250000001, 5996.75), (6367.03125, 6213.5))
TRUE
((5761.937500000001, 6529.59375), (6403.156249999999, 6737.3125))
TRUE
((5698.718749999999, 7179.84375), (6249.625000000001, 7441.75))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1706, '2': 2330, '3': 2944, '4': 3558, '5': 3964, '6': 4587, '7': 5409, '8': 6023, '9': 6439, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MLNMK7L.jpg
OCR detection done with doctr
left top x of SN: 70.23828124999997
bottom right x of SN: 304.4130859375
left top x of T/F: 1164.2314453125
bottom right x of T/F: 1597.431640625
first t/f detection
faly
((1198.068359375, 543.9150390625), (1349.7578125, 641.4296875))
collision happend with box:543.9150390625 and text:faly solving on the basis of percent match boxes
the current box specification are
faloe
((1193.734375, 671.767578125), (1308.5849609375, 749.779296875))
text2 i.e the incoming text is the winner
collision happend with box:671.767578125 and text:faloe solving on the basis of percent match boxes
the current box specification are
TAuV
((1185.06640625, 799.6201171875), (1317.2529296875, 888.466796875))
text2 i.e the incoming text is the winner
collision happend with box:799.6201171875 and text:TAuV solving on the basis of percent match boxes
the current box specification are
Rue
((1195.9013671875, 925.3056640625), (1334.5888671875, 1011.9853515625))
text1 i.e the prev text is the winner
Tfur
((1185.06640625, 1068.3271484375), (1321.5869140625002, 1157.173828125))
collision happend with box:1068.3271484375 and text:Tfur solving on the basis of percent match boxes
the current box specification are
Tul
((1161.2294921875, 1187.51171875), (1302.083984375, 1259.0224609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1187.51171875 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tyue
((1148.2275390625, 1298.0283203125), (1295.5830078125, 1384.7080078125))
text1 i.e the prev text is the winner
Falue
((1165.5634765624998, 1408.544921875), (1291.2490234375, 1484.3896484375))
collision happend with box:1408.544921875 and text:Falue solving on the basis of percent match boxes
the current box specification are
falre
((1159.0625, 1525.5625), (1286.9150390625, 1601.4072265625))
text2 i.e the incoming text is the winner
True
((1143.8935546875, 1698.921875), (1295.5830078125, 1796.4365234375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 526, '2': 665, '3': 758, '4': 894, '5': 1031, '6': 1170, '7': 1261, '8': 1399, '9': 1490, '10': 1627}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KAyvprp.jpg
OCR detection done with doctr
left top x of SN: 11.980468749999993
bottom right x of SN: 228.40234375
left top x of T/F: 717.302734375
bottom right x of T/F: 1079.060546875
first t/f detection
for
((695.4335937500001, 289.857421875), (725.78515625, 314.138671875))
collision happend with box:289.857421875 and text:for solving on the basis of percent match boxes
the current box specification are
Tywue
((743.99609375, 283.787109375), (824.427734375, 320.208984375))
text2 i.e the incoming text is the winner
collision happend with box:283.787109375 and text:Tywue solving on the basis of percent match boxes
the current box specification are
True
((757.654296875, 362.701171875), (835.05078125, 400.640625))
text2 i.e the incoming text is the winner
collision happend with box:362.701171875 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((621.072265625, 441.615234375), (745.513671875, 482.58984375))
text2 i.e the incoming text is the winner
collision happend with box:441.615234375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Fole
((769.794921875, 437.0625), (841.1210937499999, 476.51953125))
text1 i.e the prev text is the winner
collision happend with box:441.615234375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((665.08203125, 537.22265625), (734.890625, 567.57421875))
text1 i.e the prev text is the winner
collision happend with box:441.615234375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((733.373046875, 535.705078125), (754.619140625, 556.951171875))
text1 i.e the prev text is the winner
collision happend with box:441.615234375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Fase
((774.3476562499999, 519.01171875), (850.2265625, 563.021484375))
text2 i.e the incoming text is the winner
collision happend with box:519.01171875 and text:Fase solving on the basis of percent match boxes
the current box specification are
between
((649.90625, 628.27734375), (728.8203124999999, 663.181640625))
text1 i.e the prev text is the winner
collision happend with box:519.01171875 and text:Fase solving on the basis of percent match boxes
the current box specification are
Pre-
((722.75, 626.759765625), (763.7246093750001, 652.55859375))
text1 i.e the prev text is the winner
collision happend with box:519.01171875 and text:Fase solving on the basis of percent match boxes
the current box specification are
Fosc
((784.970703125, 610.06640625), (868.4375, 652.55859375))
text1 i.e the prev text is the winner
Fake
((797.1113281249999, 693.533203125), (876.025390625, 731.47265625))
collision happend with box:693.533203125 and text:Fake solving on the basis of percent match boxes
the current box specification are
distribution.
((665.08203125, 716.296875), (777.3828125, 752.71875))
text2 i.e the incoming text is the winner
collision happend with box:716.296875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((712.126953125, 775.482421875), (784.970703125, 810.38671875))
text1 i.e the prev text is the winner
collision happend with box:716.296875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fase
((806.216796875, 764.859375), (879.0605468750001, 804.31640625))
text1 i.e the prev text is the winner
collision happend with box:716.296875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
original
((668.1171875, 875.642578125), (737.92578125, 909.029296875))
text1 i.e the prev text is the winner
collision happend with box:716.296875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
space.
((734.890625, 871.08984375), (792.55859375, 899.923828125))
text1 i.e the prev text is the winner
collision happend with box:716.296875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
True
((813.8046875, 851.361328125), (885.130859375, 889.30078125))
text1 i.e the prev text is the winner
prediction
((710.609375, 930.275390625), (803.181640625, 965.1796875))
collision happend with box:930.275390625 and text:prediction solving on the basis of percent match boxes
the current box specification are
True
((819.8749999999999, 927.240234375), (894.236328125, 965.1796875))
text2 i.e the incoming text is the winner
collision happend with box:927.240234375 and text:True solving on the basis of percent match boxes
the current box specification are
overfiting
((690.880859375, 1022.84765625), (786.4882812500001, 1057.751953125))
text2 i.e the incoming text is the winner
collision happend with box:1022.84765625 and text:overfiting solving on the basis of percent match boxes
the current box specification are
Trwe
((832.0156250000001, 1019.8125), (913.96484375, 1063.822265625))
text1 i.e the prev text is the winner
collision happend with box:1022.84765625 and text:overfiting solving on the basis of percent match boxes
the current box specification are
details
((699.986328125, 1054.716796875), (760.689453125, 1085.068359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1054.716796875 and text:details solving on the basis of percent match boxes
the current box specification are
thè
((783.453125, 1048.646484375), (816.83984375, 1074.4453125))
text1 i.e the prev text is the winner
collision happend with box:1054.716796875 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((668.1171875, 1091.138671875), (718.1972656250001, 1121.490234375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '2', '7', '8']
the assigned keys are ['3', '4', '5', '6', '9', '10']
printing the number dict y_coordinate
{'3': 519, '5': 702, '6': 793, '4': 611, '9': 1007, '10': 1098}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'NULL', '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hEADtQh.jpg
OCR detection done with doctr
left top x of T/F: 5318.437500000001
bottom right x of T/F: 6639.281250000001
left top x of SN: 221.9062500000001
bottom right x of SN: 645.7500000000001
first t/f detection
Fale
((5436.812500000001, 1878.5), (5743.875, 2140.40625))
Fle
((5391.65625, 2465.53125), (5734.843750000001, 2664.21875))
Trve
((5346.499999999999, 3025.46875), (5789.031250000001, 3260.28125))
Trie
((5355.531250000001, 3621.53125), (5707.750000000001, 3883.4375))
Fabe
((5409.718750000001, 4181.46875), (5870.312500000001, 4452.40625))
True
((5364.5625, 4777.53125), (5725.812499999999, 4967.1875))
True
((5436.812500000001, 5301.34375), (5852.25, 5500.03125))
Trve
((5463.906250000001, 5770.96875), (5879.34375, 6041.90625))
prediction
((4705.28125, 6276.71875), (5346.499999999999, 6439.28125))
collision happend with box:6276.71875 and text:prediction solving on the basis of percent match boxes
the current box specification are
Fale
((5500.03125, 6294.78125), (5897.406250000001, 6520.5625))
text2 i.e the incoming text is the winner
the
((5147.8125, 7089.53125), (5382.625000000001, 7243.0625))
collision happend with box:7089.53125 and text:the solving on the basis of percent match boxes
the current box specification are
Tre
((5472.9375, 6990.1875), (5924.500000000001, 7252.09375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2059, '2': 2682, '3': 3097, '4': 3711, '5': 4335, '6': 4949, '7': 5346, '8': 5960}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : L5rBGZ5.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/L5rBGZ5.jpg: {{function_node __wrapped____EagerConst_device_/job:localhost/replica:0/task:0/device:GPU:0}} Expected begin, end, and strides to be 1D equal size tensors, but got shapes [4], [1], and [1] instead.
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PYdhI8v.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
lyw
((1426.6640625, 647.015625), (1567.1015625, 742.3125))
collision happend with box:647.015625 and text:lyw solving on the basis of percent match boxes
the current box specification are
Colte
((1416.6328125, 767.390625), (1569.6093749999998, 875.2265625))
text2 i.e the incoming text is the winner
collision happend with box:767.390625 and text:Colte solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 905.3203125), (1569.6093749999998, 1010.6484375))
text2 i.e the incoming text is the winner
collision happend with box:905.3203125 and text:Trov solving on the basis of percent match boxes
the current box specification are
Trus
((1431.6796875, 1033.21875), (1574.625, 1146.0703125))
text2 i.e the incoming text is the winner
Tise
((1414.1250000000002, 1223.8125), (1574.625, 1341.6796875))
collision happend with box:1223.8125 and text:Tise solving on the basis of percent match boxes
the current box specification are
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
text2 i.e the incoming text is the winner
collision happend with box:1346.6953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tywe
((1414.1250000000002, 1504.6875), (1579.640625, 1605.0))
text1 i.e the prev text is the winner
Fale
((1441.7109375, 1625.0625), (1569.6093749999998, 1705.3125))
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falw
((1429.171875, 1752.9609375), (1584.6562500000002, 1855.78125))
text2 i.e the incoming text is the winner
Falie
((1414.1250000000002, 1915.96875), (1609.7343750000002, 2046.375))
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 789, '3': 900, '4': 1063, '5': 1218, '6': 1379, '7': 1487, '8': 1650, '9': 1757, '10': 1918}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1CCExTK.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6278.031249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5463.906250000001, 1652.71875), (6069.0, 1914.625))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Pette
((5138.78125, 1788.1875), (5752.906249999999, 2104.28125))
text1 i.e the prev text is the winner
FfsFASE
((5156.84375, 2221.6875), (6204.46875, 2537.78125))
FALSE
((5138.78125, 2826.78125), (5888.374999999999, 3079.65625))
TRUE
((5174.90625, 3395.75), (5861.281249999999, 3612.5))
TRUE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
FTRUE
((5129.75, 4371.125), (6078.031249999999, 4614.96875))
FALSE
((5129.75, 4876.875), (5852.25, 5138.78125))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
FaUE
((5174.90625, 5346.5), (5807.093749999999, 5590.34375))
FALSE
((5138.78125, 5843.21875), (5852.25, 6150.28125))
FALSE
((5229.09375, 6339.9375), (5951.593750000001, 6746.34375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1941, '2': 2483, '3': 2853, '4': 3404, '5': 3937, '6': 4506, '7': 4867, '8': 5427, '9': 5807, '10': 6358}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': False, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D7klNpd.jpg
OCR detection done with doctr
left top x of SN: 76.55175781250004
bottom right x of SN: 321.8818359375
left top x of T/F: 1400.58984375
bottom right x of T/F: 1879.4482421875
first t/f detection
Folue
((1443.2548828125, 645.7626953125), (1616.630859375, 743.7578125))
collision happend with box:645.7626953125 and text:Folue solving on the basis of percent match boxes
the current box specification are
Falle
((1445.767578125, 776.4228515625), (1609.0927734375, 859.341796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:776.4228515625 and text:Falle solving on the basis of percent match boxes
the current box specification are
True
((1433.2041015625, 909.595703125), (1599.0419921875002, 1017.6416015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:909.595703125 and text:True solving on the basis of percent match boxes
the current box specification are
Tvul
((1453.3056640624998, 1067.8955078125), (1606.580078125, 1170.916015625))
text2 i.e the incoming text is the winner
collision happend with box:1067.8955078125 and text:Tvul solving on the basis of percent match boxes
the current box specification are
Tyul
((1445.767578125, 1226.1953125), (1604.0673828125, 1334.2412109375))
text2 i.e the incoming text is the winner
collision happend with box:1226.1953125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1369.4189453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tud
((1438.2294921875, 1492.541015625), (1606.580078125, 1593.048828125))
text1 i.e the prev text is the winner
Tru
((1443.2548828125, 1630.7392578125), (1599.0419921875002, 1713.658203125))
collision happend with box:1630.7392578125 and text:Tru solving on the basis of percent match boxes
the current box specification are
False
((1450.79296875, 1766.4248046875), (1588.9912109375, 1844.318359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1766.4248046875 and text:False solving on the basis of percent match boxes
the current box specification are
Falu
((1438.2294921875, 1919.69921875), (1631.70703125, 2017.6943359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 892, '2': 781, '3': 889, '4': 1052, '5': 1211, '6': 1374, '7': 1479, '8': 1643, '9': 1753, '10': 1917}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pBOLe58.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
first t/f detection
Cug
((5834.187499999999, 1914.625), (6303.812500000001, 2131.375))
Falre
((5391.65625, 2591.96875), (5978.687500000001, 2844.84375))
false
((5617.437499999999, 3043.53125), (6177.375, 3314.46875))
Guo
((5572.281250000001, 3775.0625), (6005.781250000001, 4009.875))
Toue
((5310.375, 4407.25), (5870.312500000001, 4624.0))
Falso
((5328.437500000001, 4885.90625), (5861.281249999999, 5147.8125))
Toue
((5319.406249999999, 5346.5), (5915.468749999999, 5608.40625))
Cuug
((5346.499999999999, 5960.625), (5897.406250000001, 6186.40625))
falxe
((5427.781249999999, 6303.8125), (5987.71875, 6601.84375))
False
((5454.874999999999, 6800.53125), (6069.0, 7116.625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2727, '3': 3115, '4': 3702, '5': 4280, '6': 4858, '7': 5238, '8': 5825, '9': 6222, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : alybfPY.jpg
rotation started
['f', '', 'N', '11', '2', 'I', 'E', 'I', '9', 'E', 'E', '>', 'E', 'F', 'a', '7', 'E', 'p', 'I', 'I', 'e', 'E', '-', 'I', 'E', '8', '8', 'it', 'p', 'I', ':', '€', 'I', 'I', 'I', 'I', 'I', 'of', 'I', 'E', 'I', '8', 'E', 'E', 'E', 'E', 'I', 'e', 'I', 'E', 'E', 'I', 'a', 'I', '2', 'it', '8', 'I', 'I', 'f', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 't', 'f', 'I', 'a', 'I', 'Q', 'E', 'B', 'I', '8', 'I', 'it', 'I', '2', 'f', 'I', 'I', 'I', 'I', '2', 'e', 'E', 'p', '8', 'I', 'I', 'E', '-', 'I', 'E', '1', '€', 'E', 'I', '€', 'E', 'I', '8', 'E', '9', 'it', 'I', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'f', 'E', '8', 'I', 'I', 'E', 'I', 'E', 'P', 'E', '2', 'I', 'I', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'p', 'it', ':', 'E', '€', '9', 'f', 'I', 'E', 'I', 'e', 'E', 'p', '2', 'I', 'I', 'I', 'it', 'I', 'E', 'I', 'E', 'F', '1', 'I', 'I', 'I', '7', '', '00', '-', '', 'OT', '1', '16', 'E', 'E', '-', 'E', '9', 'E', 'DE', 'i', 'I', 'E', 'E', '1', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'E', 'I', 'I', 'it', ')', 'I', 'N', '€', 'e', ':', 'N', '14', 'a', '#', ':', '-', 'à', 'TTI', 'I', ':', ':', '', '-', '-', 'Aie', '4', 'RAI', 'BIR', 'eye', 'RIe', 'o', 'e', 'IRE', 'RE', '5', '-']
rotation started
['"egep', 'uoesun', 'mou', '07', 'ITOM', 'azireioues', 'qou', 'op', '7e47', 'egep', 'Surureng', '35741', 'au9', 'ur', 'sTregep', 'IO', 'OSIOU', 'oyreds', 'amades', '07', 'UIBOT', 'Keur', 'Topour', 'au7', 'Se', "'SOseOID", '-ul', 'Burayreno', 'Jo', 'YSLI', 'eu7', "'WAS", 'uI', 'rjewrered', 'D', 'aua', 'Jo', 'anTeA', 'y81y', 'B', 'YAIM', 'OT', 'uonorperd', 'e', 'Buryeur', "'sassepp", 'Jo', 'requnu', 'a8.1eT', 'e', 'YAIM', 'suerqoId', 'ssepormu', 'JOI', '6', '3OXL', 'WAS', '9SOI-SA-BUO', 'ueyz', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', 'HOXL', 'aoeds', '[eurBTo', 'au4', 'ul', 'JeQUIT-uou', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoap', 'OUL', '8', '35741', '"sopou', 'Jo', 'poqunu', 'auy', '07', 'Teuorg.odord', 'Appamp', 'SI', 'OOIL', 'UOISIDOCI', 'a47', 'ur', 'uonorpard', 'B', 'Suryeur', 'IOJ', 'pammbar', 'OUIL', 'OUL', 'L', '30', 'XL', '"uornquasip', 'uerssnes', 'e', 'sienre', 'SI', 'suorgnqugsip', 'uerssneD', 'OM9', 'Jo', 'aIgXIuL', 'V', '9', '791', 'aNdL', '75741', 'TreDOH', 'pue', 'UOISIO', '-aId', 'uaamgaq', 'gord', 'B', 'SI', 'BAIO', '(boH)', 'DISLIO90BIEUD', 'Surgeredo', 'IOAIODOY', 'OUL', 'S', 'SI', 'quaosap', 'quarpe1s', 'ATIYM', "'S24810M", 'ay4', 'agepdn', '07', 'pasn', 'SI', 'uoneodoxdypeg', '4', '"YIOMIOU', '[emau', 'au7', 'uI', 'squorpe.s', 'oy4', 'aanduoo', '01', 'pasn', ':f', 'pue', 'I', 'SIO900A', '757H1', 'ROJL', 'FOYL', 'Mva/anuL', 'Kue', 'JOJ', 'ouIgaur', 'aouensip', 'PITBA', 'e', 'SI', "(@'z/quopuagauso", '-I', '&', 'Teuorsuauump-P', 'layissepp', 'IBQUIT-uou', 'B', 'SI', 'NNY', '2', 'Dord', '1', 'ape', 'aard', 'so', '9', 'eveO', 'aet', 'gut', '', 'quaurfordap', 'a8810qS', 'aya', 'STeordAL', 'I', '1a81eT', 'yonu', 'SI', 'NNY', 'JOJ', 'quetaumbar', 'JOJ', 'WAS', 'ueya', 'quauagens', 'NS', 'ITO.I', 'mor', 'B9LIM', ':a104', 'naqunu', 'a', 'A', 'OALIM', '(sad', 'O1)', '6', 'ASTVA', 'IO', 'INUL', 'Tenrdeo', 'ul', 'Sunumpuey', 'Jeop', 'pue', 'SIO71e1', 'Uepi']
rotation started
['-', 'CRE', 'à', 'MRE', 'à', '%o', 'RO', 'Devs', '-', 'Rero', '4', 'e', 'MIA', '-', 'of', ':', '€', ':', ':', ':', 'U', '&', 'I', ':', 'E', '€', '*', '/', '-', 'a', 'E', 'a', 'I', '1', 'iis', 'E', 'e', 'I', 'i', 'E', 'I', 'I', 'I', 'is', 'I', 'a', 'I', 'I', '1', 'à', 'I', 'a', 'E', 'a', 'of', 's', '$', 'a', 'I', 'a', 'is', 'I', 'iE', 'i', ':', 'a', 'à', 'I', '1', 'E', 'e', 'I', ':', 'e', 'I', 'I', 'I', 'iE', 'I', 'of', 'E', 'I', 'I', 'I', 'I', '1', '8', 'is', 'e', 'I', '.E', 'o', 'e', '1', 'I', '2', '-', 'a', 'I', 'E', 'I', 'o', 'a', 'i', 'E', 'I', 'a', 'of', 'I', '-', ':', '', 'I', 'is', 'o', 'E', 'U', 'E', 'I', 'I', '1', 'I', 'I', 'of', '€', 'I', 'is', 'e', 'à', 'I', 'a', 'I', 'of', ':', 'is', 'I', 'e', 'e', 'E', 'de', 'S', 'I', 'I', '1', 'I', 'E', 'o', 'i', 'à', 'a', 'of', 'I', 'I', 'E', 'a', 'a', 'I', 'is', '8', '9', 'I', 'E', 'à', 'I', ':', 'a', '8', 'S', 'I', 'I', 'I', 'I', 'E', '11', 'I', 'I', 'I', 'I', 'E', '.', 'A', 'E', 'I', '4', '10', '6o', 'I', 'E', 'a', 'iE', 'I', '1', 'I', '(', '1', 'E', 'I', '1', 'E', 'a', 'oe', 'E', 'à', 'E', 'e', '', '-', '1', '2', '3', ':', 'I', 'e', 'I', '1', 'I', 'E', 'E', 'I', 'E', 'I', 'I', '7', '11', 'a', '3', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'Indan', 'letters', 'FALSE', 'in', 'capital', 'pts)', 'Write', 'TRUE', 'or', '', '9.', '(10', 'Dese', 'toil', 'MITIE', 'Hrne', 'S', 'Of', 'cove', 'DATE', 'Sels', '1', 'Srco', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FALS', 'TRUE', 'TRUE', 'larger', 'than', 'SVM', 'for', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', '3', '1-', 'cosineSimalarityz.y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'FALSE', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TR', 'UE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'TKUE', 'FALSE']
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 916.6875000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:43:07] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : alybfPY.jpg
[2024/06/28 14:43:08] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:09] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12659573554992676
[2024/06/28 14:43:12] ppocr DEBUG: rec_res num  : 41, elapsed : 2.095767021179199
[2024/06/28 14:43:12] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:13] ppocr DEBUG: dt_boxes num : 45, elapsed : 0.19032645225524902
[2024/06/28 14:43:15] ppocr DEBUG: rec_res num  : 45, elapsed : 1.6504030227661133
['SNStatement', '10', '6', '8', '6', 'V', '2', '4', '3', '-', 'With a high value of the C parameter in SVM, the risk of overftting in-', 'training data that do not generalize well to new, unseen data.', 'creases, as the model may learn to capture specific noise or details in the', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'KNN is a non-linear classifier.', 'cision and Recall.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'proportional to the number of nodes.', 'used to compute the gradients in the neural network.', 'Backpropogation is used to update the weights, while gradient descent is', 'deployment.', 'vectors x and y.', 'Write your roll number here:', 'TRUE/FALS', 'TRUE', 'TRUE', 'FALSE', 'TRUE', 'FABE', 'FALSE', 'FALSE', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'NAME', 'Indian', 'COURSE', 'Mautik..', 'DATE', 'TITLE', 'Des!']
[2024/06/28 14:43:16] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:16] ppocr DEBUG: dt_boxes num : 37, elapsed : 0.12047791481018066
[2024/06/28 14:43:18] ppocr DEBUG: rec_res num  : 37, elapsed : 1.8392772674560547
['FHLSE', '10', 'TRUE', 'TRUE', 'FA75E', 'FRUE', 'FE', 'TRUE', 'FAAUE', '3574', 'TRUE', 'TRUE', 'NS', 'PDATTEF', 'CCOTTSTL', 'NAME']
[2024/06/28 14:43:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:20] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.12368273735046387
[2024/06/28 14:43:21] ppocr DEBUG: rec_res num  : 40, elapsed : 1.5986130237579346
['CCOUSr', 'NAAE', 'TRUE', 'FA75E', 'FA7SE', 'FAA5E', 'TRUE', 'FHSSE', 'TRUE', 'F', 'TRUE', 'FRUE', 'TRUE', '2', '3', '5', '10', '6', '8', '9']
[2024/06/28 14:43:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:23] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12239861488342285
[2024/06/28 14:43:25] ppocr DEBUG: rec_res num  : 41, elapsed : 2.0828967094421387
['Indian', 'MautikDes', 'Write your roll number here:', 'TRUE/FALS', 'SN', 'Statement', 'COURSE TITLE', 'TRUE', 'Typically, the storage requirement for KNN is much larger than SVM for', 'deployment.', 'TRUE', 'KNN is a non-linear classifier.', '1-cosineSimalarity(x, y) is a valid distance metric for any d-dimensional', 'FALSE', '3', 'vectors x and y.', 'Backpropogation is used to update the weights, while gradient descent is', 'FALSE', 'used to compute the gradients in the neural network', 'TRUE', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre', '5', 'FAESE', 'cision and Recall.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'TRUE', 'The Time required for making a prediction in the Decision Tree is directly', '7', 'FALSE', 'proportional to the number of nodes.', 'TRUE', 'For multiclass problems with a large number of classes, making a prediction', 'TRUE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'With a high value of the C parameter in SVM, the risk of overfitting in-', '10', 'creases, as the model may learn to capture specific noise or details in the', 'FALSE', 'training data that do not generalize well to new, unseen data.']
OCR detection done
left top x of SN: 562.0
bottom right x of SN: 997.0
left top y of SN: 1984.0
bottom right y of SN: 2259.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/alybfPY.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Z2YvRlp.jpg
OCR detection done with doctr
left top x of SN: 99.52343750000003
bottom right x of SN: 319.171875
left top x of T/F: 876.5
bottom right x of T/F: 1243.5078125
first t/f detection
Feiye
((896.0156250000001, 426.6171875), (970.5546875, 458.3359375))
collision happend with box:426.6171875 and text:Feiye solving on the basis of percent match boxes
the current box specification are
Trice
((894.4296875, 517.015625), (983.2421875, 548.734375))
text2 i.e the incoming text is the winner
collision happend with box:517.015625 and text:Trice solving on the basis of percent match boxes
the current box specification are
Tuc
((886.5, 604.2421875), (968.9687500000001, 642.3046875))
text2 i.e the incoming text is the winner
collision happend with box:604.2421875 and text:Tuc solving on the basis of percent match boxes
the current box specification are
Tuue
((892.84375, 702.5703125), (967.3828125, 734.2890625))
text2 i.e the incoming text is the winner
collision happend with box:702.5703125 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Truc
((891.2578125, 808.828125), (968.9687500000001, 846.890625))
text2 i.e the incoming text is the winner
collision happend with box:808.828125 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((896.0156250000001, 888.125), (970.5546875, 929.359375))
text2 i.e the incoming text is the winner
collision happend with box:888.125 and text:True solving on the basis of percent match boxes
the current box specification are
True
((892.84375, 969.0078125), (975.3125000000001, 1007.0703125))
text2 i.e the incoming text is the winner
collision happend with box:969.0078125 and text:True solving on the basis of percent match boxes
the current box specification are
faye
((896.0156250000001, 1053.0625), (970.5546875, 1092.7109375))
text1 i.e the prev text is the winner
Trwe
((880.1562499999999, 1137.1171875), (961.0390625, 1176.765625))
collision happend with box:1137.1171875 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Falye
((880.1562499999999, 1246.546875), (961.0390625, 1283.0234375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '2', '3', '4', '6', '7']
the assigned keys are ['5', '8', '9', '10']
printing the number dict y_coordinate
{'5': 777, '8': 1056, '9': 1118, '10': 1221}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jsuJUBM.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1044.44140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1285.646484375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1398.052734375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
text1 i.e the prev text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
Truc
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 985, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JX0es3Z.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 311.34375
left top x of T/F: 873.2578125
bottom right x of T/F: 1241.4609375
first t/f detection
FALSE
((894.33203125, 430.3125), (978.1796875, 461.953125))
collision happend with box:430.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 598.0078125), (965.5234375000001, 629.6484375))
collision happend with box:598.0078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:691.34765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 792.59765625), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:792.59765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((884.83984375, 881.19140625), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:881.19140625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1172.28515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1140.64453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1235.56640625), (987.671875, 1267.20703125))
text2 i.e the incoming text is the winner
collision happend with box:1235.56640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
the
((838.9609375, 1265.625), (875.3476562499999, 1290.9375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '8', '10']
the assigned keys are ['5', '6', '7', '9']
printing the number dict y_coordinate
{'5': 794, '6': 897, '7': 966, '9': 1137}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IHbBRG1.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 876.421875
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((894.33203125, 430.3125), (941.79296875, 461.953125))
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:430.3125 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((892.75, 598.0078125), (965.5234375000001, 628.06640625))
collision happend with box:598.0078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((891.16796875, 692.9296875), (968.6875, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:692.9296875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 825.8203125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:882.7734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (965.5234375000001, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1140.64453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((900.6601562500001, 1233.984375), (956.03125, 1267.20703125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1233.984375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((954.44921875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y2wzyA1.jpg
OCR detection done with doctr
left top x of T/F: 5002.34375
bottom right x of T/F: 6305.124999999999
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:43:35] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : y2wzyA1.jpg
[2024/06/28 14:43:36] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:43:36] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.1452178955078125
[2024/06/28 14:43:39] ppocr DEBUG: rec_res num  : 38, elapsed : 2.2130343914031982
OCR detection done
left top x of T/F: 5045.0
bottom right x of T/F: 6097.0
left top y of T/F: 1340.0
bottom right y of T/F: 1666.0
cant detect s/n column also so going with all detection using box width
first t/f detection
FALSE
[[5142.0, 1918.0], [5765.0, 1810.0], [5803.0, 2022.0], [5181.0, 2130.0]]
first t/f detection
first t/f detection
FALSE
[[5189.0, 2523.0], [5834.0, 2428.0], [5865.0, 2630.0], [5221.0, 2725.0]]
first t/f detection
FALSE
[[5371.0, 3100.0], [5978.0, 3016.0], [6009.0, 3229.0], [5402.0, 3313.0]]
first t/f detection
first t/f detection
FALSE
[[5475.0, 4119.0], [6055.0, 4038.0], [6082.0, 4223.0], [5502.0, 4304.0]]
first t/f detection
FALSE
[[5679.0, 4742.0], [6313.0, 4686.0], [6330.0, 4871.0], [5696.0, 4927.0]]
first t/f detection
will be zero.
[[770.0, 5094.0], [1501.0, 4992.0], [1525.0, 5157.0], [794.0, 5259.0]]
first t/f detection
first t/f detection
first t/f detection
class label.
[[1004.0, 6481.0], [1677.0, 6379.0], [1705.0, 6553.0], [1032.0, 6655.0]]
first t/f detection
first t/f detection
the true list is  [2318, 3647, 5467, 6006, 6527, 7192]
the false list is  []
the true list for xdirn [223, 5432, 5808, 5897, 5870, 6152]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
['2', '3', '4', '5']
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : J6SsjFs.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6440.593749999999
left top x of SN: 167.71875000000014
bottom right x of SN: 627.6875
first t/f detection
FALSE
((5256.1875, 1770.125), (5906.4375, 2077.1875))
FALSE
((5292.312499999999, 2339.09375), (5951.593750000001, 2601.0))
TRUE
((5247.156250000001, 2799.6875), (5861.281249999999, 3097.71875))
collision happend with box:2799.6875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4244.6875, 2899.03125), (5165.875, 3151.90625))
text2 i.e the incoming text is the winner
1s
((5030.40625, 3567.34375), (5183.9375, 3684.75))
collision happend with box:3567.34375 and text:1s solving on the basis of percent match boxes
the current box specification are
TRUE
((5247.156250000001, 3495.09375), (5870.312500000001, 3747.96875))
text2 i.e the incoming text is the winner
Pre
((4903.96875, 4145.34375), (5220.062500000001, 4325.96875))
collision happend with box:4145.34375 and text:Pre solving on the basis of percent match boxes
the current box specification are
TRUE
((5319.406249999999, 4118.25), (5951.593750000001, 4362.09375))
text2 i.e the incoming text is the winner
distribution.
((4461.4375, 4750.4375), (5238.124999999999, 4958.15625))
collision happend with box:4750.4375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((5427.781249999999, 4687.21875), (6050.937499999999, 4903.96875))
text1 i.e the prev text is the winner
directly
((4786.5625, 5165.875), (5283.28125, 5346.5))
collision happend with box:5165.875 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5346.499999999999, 5147.8125), (6023.843749999999, 5391.65625))
true and false collision so given priority to text2 which is the incoming text
FALSE
((5500.03125, 5626.46875), (6177.375, 5888.375))
space.
((4903.96875, 5789.03125), (5310.375, 5951.59375))
prediction
((4714.3125, 6168.34375), (5382.625000000001, 6376.0625))
collision happend with box:6168.34375 and text:prediction solving on the basis of percent match boxes
the current box specification are
FALSE
((5554.21875, 6123.1875), (6285.75, 6376.0625))
text2 i.e the incoming text is the winner
overfitting
((4533.6875, 6782.46875), (5202.0, 6981.15625))
collision happend with box:6782.46875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRVE
((5500.03125, 6764.40625), (6177.375, 7017.28125))
text1 i.e the prev text is the winner
the
((5183.9375, 6954.0625), (5454.874999999999, 7143.71875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '4', '7', '8', '9', '10']
the assigned keys are ['3', '5', '6']
printing the number dict y_coordinate
{'3': 3260, '5': 4461, '6': 5066}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cRogGRp.jpg
OCR detection done with doctr
left top x of SN: 537.9999999999999
bottom right x of SN: 934.7499999999999
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6431.5625
first t/f detection
FALSE
((5283.28125, 2077.1875), (5870.312500000001, 2275.875))
TAVE
((5391.65625, 2564.875), (5942.562499999999, 2781.625))
TRUG
((5400.687499999999, 3106.75), (5978.687500000001, 3323.5))
TRUE
((5418.75, 3784.09375), (5915.468749999999, 4000.84375))
f
((5183.9375, 4461.4375), (5274.250000000001, 4551.75))
collision happend with box:4461.4375 and text:f solving on the basis of percent match boxes
the current box specification are
FALSE
((5491.000000000001, 4316.9375), (6105.124999999999, 4578.84375))
text2 i.e the incoming text is the winner
T
((5165.875, 4849.78125), (5301.343750000001, 4949.125))
collision happend with box:4849.78125 and text:T solving on the basis of percent match boxes
the current box specification are
FALSE
((5355.531250000001, 4777.53125), (5879.34375, 4958.15625))
text2 i.e the incoming text is the winner
FALSE
((5292.312499999999, 5229.09375), (5807.093749999999, 5400.6875))
TRUG
((5328.437500000001, 5734.84375), (5906.4375, 5897.40625))
TRUG
((5310.375, 6168.34375), (5924.500000000001, 6367.03125))
T
((5192.96875, 6818.59375), (5319.406249999999, 6963.09375))
collision happend with box:6818.59375 and text:T solving on the basis of percent match boxes
the current box specification are
TRVE
((5454.874999999999, 6782.46875), (6005.781250000001, 6954.0625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2564, '3': 2944, '4': 3513, '5': 4073, '6': 4651, '7': 5021, '8': 5608, '9': 5996, '10': 6565}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F436xrf.jpg
OCR detection done with doctr
left top x of SN: 75.06640625000004
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folse
((1345.3154296875, 626.0009765625), (1512.087890625, 734.765625))
collision happend with box:626.0009765625 and text:folse solving on the basis of percent match boxes
the current box specification are
Trbk
((1367.068359375, 768.603515625), (1516.921875, 848.3642578125))
text1 i.e the prev text is the winner
collision happend with box:626.0009765625 and text:folse solving on the basis of percent match boxes
the current box specification are
Fake
((1524.1728515625, 763.76953125), (1618.435546875, 833.8623046875))
text1 i.e the prev text is the winner
abefu
((1412.9912109375, 889.453125), (1616.0185546875, 998.2177734375))
collision happend with box:889.453125 and text:abefu solving on the basis of percent match boxes
the current box specification are
True
((1485.5009765625, 1046.5576171875), (1613.6015625, 1138.4033203125))
text2 i.e the incoming text is the winner
collision happend with box:1046.5576171875 and text:True solving on the basis of percent match boxes
the current box specification are
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
text2 i.e the incoming text is the winner
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1305.17578125), (1500.0029296875, 1404.2724609375))
text2 i.e the incoming text is the winner
collision happend with box:1305.17578125 and text:True solving on the basis of percent match boxes
the current box specification are
Tyul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
text2 i.e the incoming text is the winner
collision happend with box:1440.52734375 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Falu
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1580.712890625 and text:Falu solving on the basis of percent match boxes
the current box specification are
Falve
((1357.400390625, 1701.5625), (1509.6708984375, 1798.2421875))
true and false collision so given priority to text2 which is the incoming text
falxe
((1357.400390625, 1863.5009765625), (1514.5048828125002, 1960.1806640625))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : T2EiQ3J.jpg
OCR detection done with doctr
left top x of T/F: 4912.03125
bottom right x of T/F: 6061.281249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 988.9374999999999
first t/f detection
TRUE
((4958.15625, 1842.375), (5518.093750000001, 2050.09375))
TRUE
((4985.25, 2302.96875), (5554.21875, 2510.6875))
TRUE
((5003.3125, 2709.375), (5626.468750000001, 2926.125))
is
((4786.5625, 3278.34375), (4913.0, 3404.78125))
collision happend with box:3278.34375 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5039.4375, 3197.0625), (5716.78125, 3449.9375))
text2 i.e the incoming text is the winner
Pre-
((4660.125, 3802.15625), (4922.03125, 3955.6875))
collision happend with box:3802.15625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((4967.1875, 3747.96875), (5689.6875, 4000.84375))
text2 i.e the incoming text is the winner
distribution.
((4244.6875, 4344.03125), (4940.09375, 4515.625))
collision happend with box:4344.03125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRUE
((5012.34375, 4262.75), (5617.437499999999, 4515.625))
text1 i.e the prev text is the winner
directly
((4515.625, 4705.28125), (4958.15625, 4867.84375))
collision happend with box:4705.28125 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5138.78125, 4669.15625), (5852.25, 4876.875))
true and false collision so given priority to text2 which is the incoming text
space.
((4614.96875, 5274.25), (4967.1875, 5409.71875))
collision happend with box:5274.25 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((5120.71875, 5183.9375), (5789.031250000001, 5391.65625))
text2 i.e the incoming text is the winner
TROE
((5048.46875, 5509.0625), (5734.843750000001, 5761.9375))
collision happend with box:5509.0625 and text:TROE solving on the basis of percent match boxes
the current box specification are
prediction
((4434.34375, 5608.40625), (5003.3125, 5780.0))
text2 i.e the incoming text is the winner
falae
((5192.96875, 6123.1875), (5861.281249999999, 6367.03125))
the
((4840.75, 6330.90625), (5048.46875, 6475.40625))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2113, '2': 2619, '3': 2962, '5': 4018, '6': 4560, '4': 3495, '7': 4913, '8': 5454, '9': 5816, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qmwIFuq.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
collision happend with box:1395.693359375 and text:frul solving on the basis of percent match boxes
the current box specification are
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1524.70703125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
Falue
((1273.986328125, 1794.462890625), (1426.45703125, 1888.291015625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yF4wPq5.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1885.0703125000002
first t/f detection
falue
((1446.3984374999998, 632.2265625), (1621.59375, 738.8671875))
collision happend with box:632.2265625 and text:falue solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Ful
((1446.3984374999998, 1081.640625), (1613.9765625, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
Trur
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
collision happend with box:1246.6796875 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1388.8671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
text2 i.e the incoming text is the winner
collision happend with box:1523.4375 and text:True solving on the basis of percent match boxes
the current box specification are
Folw
((1423.546875, 1647.8515625), (1573.3515624999998, 1734.1796875))
text1 i.e the prev text is the winner
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AwF0CBa.jpg
rotation started
['1f', '6o', '00', 'II', 'Co', 'S', '', '/', 'e', '5', 'I', '6', '6', 'F', 'f', '2', 'o', 'A', 'Co', 'E', '3', 'I', '5', 'E', '1E', 'F', '2', '', 'a', 'E', '8', 'F', '8', '2', '2', 'F', '8', '14', 'A', '3', '1E', 'of', 'I', '3', 'a', '', ':', 'E', 'I', 'm', '/', '9', 'F', 'I', 'F', 'r', '/', '/', '/', 'I', 'E', '4e', 'I', 'E', 'I', 'l', 'F', 'I', 'I', 'I', 'I', 'E', 'I', 'F', 'F', 'P', 'S', 'F', 'F', 'a', '/', 'I', 'I', '5', 'I', 'F', 'of', 'I', 'S', '1E', 'a', 'F', 'e', '/', 'E', 'I', '/', 'E', 'S', '1E', 'a', '/', 'I', 'le', 'E', 'iE', 'E', 'of', '/', 'i', '5', 'I', 'F', 'of', 's', 'V', 'A', '5', 'à', 'Ln', 'E', 'A', 'a', '/', 'F', '9', 'o', 'F', '/', '/', 'I', 'I', 'a', '/', 'CT', 'M', 'F', '9', 'E', 'I', 'A', '8', '/', '-', 'F', '8', 't', 'F', 'S', 'F', 'F', 'of', 'e', '/', 'le', 'LE', 'F', 'I', 'S', 'I', 'I', 'LE', ':', 'S', 'I', 'F', 'I', '/', 'X', 'I', 'F', '5', 'to', '1', 'I', 'E', 'f', '8', 'XX', '&', 'o', 'E', 'E', 'F', ':', 'f', 'à', 'iE', 'i', 'F', 'E', 'E', 'H', 'F', 'E', '9', 'F', 'I', 'F', 'I', 'E', '/', 'I', 'I', 'I', 'E', 'e', 'I', 'F', '/', 'i', '8', 'F', ':', '2', '/', '', 'F', 'a', 'F', '-', '/', 'E', 'E', 'F', 'I']
rotation started
['Inal', 'oouds-az', 'ur', 'HISUq', 'aus', 'jo', 'auo', '8T', '38744', 'XJo', 'onTeA', 'pazpodxo', '(ao1-1arn)', '=a', 'O1', '1', 'teya', '1370018', 'SI', '1011', 'uo', 'Jaquunur', '1041', '08', 'papeor', '8I', 'arp', 'siatano', '03', 'aaraisutas', 'SI', '1e13', 'satInsse', 'u', '02', 'OUL', 'X', 'proraodord', '81', 'dn', 'Suruos', 'omogno', 'VIIM', 'porjor', '81', '308L', 'SNaL', 'aoy', '8', 'jo', 'arp', 'BUL', 'raeg', 'Autiquqgoud', 'auy', 'osvgap', 'aus', 'uy', 'V', '6', 'VaT', '8', 'Taqer', 'ssepo', 's34mg', 'BATEN', 'L', '0>', 'A', '10', '*', 'jo', 'auo', 'C)o', '39e31', '78', 'aIe', 'A', 'pure', 'XJI', '9', 'O3Z', 'aq', 'ITLM', 'suornqUap', 'erep', 'JI', 'S', 'IIIM', 'Vod', 'OUI', 'sumogured', 'e', '104', 'smuapadapor', 'S3LL1033q', 'Vod', 'aus', 'uaangaq', 'uaun', 'pll', '9', 'DJI', 'quouogns', 'OTM', 'au3', 'LOALS', 'auaptodapur', '(x)o', 'JoygTo', '*)nop', 'ge47', 'yons', 'Ayunorpuog', 'DI0', 'saangeag', 'Ire', '3S743', '10', '0', '>', 'uaya', '0', '>', '(A', '10T', 'OOUIPTIUA', 'ahppeisous', 'BAUY', '38TIELI', 'sDIqUTIuA', 'moptres', 'ouy', 'uous', "'Xas", 'JI', 'slo', "'1)", 'on', 'equrod', 'EOyL', '3041', '3ST4J', '3041', '30AL', 'ponpea-uas', '0M3', 'morjog', 'ATIuxa', 'wyep-az', '1aofoud', 'XTIZEUI', 'OOTTeLITRAOS', '(A)aoupxma', 'oun', 'Jo', 'yuer', '<', '(a)aoumyamn', 'ueyg', '1370018', 'aq', 'ues', 'uonouny', 'BISUUI', 'Jo', 'sordurus', 'F', 'auo', '&', '2', 'I', 'NS', 'Auiqugoud', 'ous', 'jo', 'anyes', 'poofoud', 'oM', 'J', 'VaT', '01', 'Vod', 'a0U1e951p', 'aus', "'r", 'auoruamnbs', 'D', 'auyod', 'au', 'puu', 'urduo', 'oun', 'jo', 'aous', 'U', 'Susn', 'ssup', 'youo', 'umaprpng', 'oun', '01', '[unbo', 'ISTVA/anuL', 'HI', 'jun', 'xpquur', '10104', 'saqunu', 'IIO1', 'aos', 'Surgumpruny', 'mop', 'puy', '197101', 'pydus', 'ur', '38TVA', '10', 'aMUL', 'aUM', '(sad', 'OI)', '9']
rotation started
['I', 'E', 'E', '2', '-', '2', 'a', 'i', 'f', 'I', 'e', '5', 'e', '/', 'de', 'i', 'A', '/', 'de', 'of', 'i', 'e', 'I', 'of', '1', 'de', 'I', 'I', '', 'I', '5', '16', 'S', 'E', 'e', 'E', ':', 'X', 'i', '16', '1f', 'S', 'de', 'S', '/', 'e', 'i', ':', 'I', 'a', '/', '5', 'of', 'i', '2', '!', 'de', '0o', 'of', ':', 'I', 'S', ':', 'I', 'i', 'a', 'I', 'de', 'I', 'I', 'S', 'I', 'I', '/', 'i', 's', 'le', '#', 's', 'A', 'I', 'I', ':', 'L', 'e', 'I', 'E', 's', 'S', 'de', 'dA', '/', 'E', '/', 'I', 'E', 'e', 'of', 'o', '3', '/', ':', 'a', 'A', 'a', '/', '/', 'a', 'a', 'E', '8', '8', '€', 'I', '2', '1', 'J', ':', '/', 'I', '3', '1', '8', 'I', '5', 'a', 'is', '', 'E', 'J', '4', 'de', '6', '3', '4', '1', 'i', 'II', 'A', '00', '', '.', '0', ':', 'I', ':', 'i', 'de', 'S', 'I', 'E', 'E', '8', 'S', '0', 'o', 'V', 'E', 'i', ':', ':', 's', 'E', '/', 'I', '/', 'I', 'I', ':', 'e', 'I', 'E', '/', '/', ':', 'I', ':', '1', 'de', ':', 'e', 'E', ':', 'E', 'e', '6', '1', '!', '/', 'I', '1', 'I', '1', 'e', '/', '1E', ':', 'I', 'I', 'e', '1', 'e', ':', 'of', 'le', '2', '8', 'E', '$', 'e', '3', '2', '1E', '-', '', '1O', '', ':', 'of']
rotation started
['6.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letter', 'and', 'clear', 'handwriting', 'Write', 'your', 'roll', 'number', 'heres', 'SN', 'Statement', '1', 'Ifa', '€', 'R', 'between', 'the', 'then', 'a', 'trace', 'of', 'the', 'origin', 'and', 'the', 'matrix', "aa'", 'in', 'point', 'a,', '2', 'equal', 'to', 'the', 'TRUE/FALS', 'TRUE', 'TRUE', 'PCA', 'becomes', 'Euclidean', 'distance', 'independenty', 'equivalent', 'to', 'LDA', 'if', 'we', 'project', 'probability', 'mass', '3', 'For', 'a', 'particular', 'one.', '4', 'The', 'PCA', '5', 'If', 'data', 'mamples', 'of', 'each', 'class', 'using', 'PCA', 'z,', 'the', 'value', 'of', 'the', 'function', 'can', 'be', 'will', 'project', 'greater', 'than', '2D-data', 'points', 'to', '11,0y7', 'if', 'follow', 'yex,', 'then', 'FALSE', 'TRUE', 'TRUE', 'will', 'be', 'distributions', 'exactly', 'zero,', 'uariance(a)', 'o>', 'the', 'rank', 'variancelu).', '6', 'If', 'Y', 'and', 'y', 'at', 'least', 'are', 'two', 'a()<0', '7', 'Naive', '8', 'LDA', '9', 'A', 'die', 'is', 'of', 'the', 'covariance', 'such', 'that', 'Cou(x)', 'ie.', 'either', 'matrix', 'one', 'of', 'X', 'or', 'real-valued', 'y', 'random', 'variables', 'negative', 'variance', 'must', 'have', '<0', 'then', 'a(X)', 'K', '0', 'or', 'class', 'Bayes', 'assumes', 'that', 'label', 'is', 'sensitive', 'all', 'features', 'in', 'the', 'dataset,', 'FALSE', 'are', 'conditionally', 'independent', 'to', 'outliers', 'given', 'the', 'TRUE', 'TRUE', 'FALSE', 'TRVE', 'number', 'loaded', '80', 'that', 'the', 'is', 'greater', 'on', 'that', 'face.', 'The', 'die', 'probability', 'ofa', 'face', 'than', '4.', '(LITE-LOT)', 'is', 'is', 'rolled', 'with', 'coming', 'up', 'is', 'outcome', 'X.', 'in', '2D-space.', '10', 'B', 'iE', 'proportional', 'to', 'The', 'expected', 'the', 'value', 'of', 'X', 'one', 'of', 'the', 'basis']
OCR detection done with doctr
left top x of SN: 1079.8749999999998
bottom right x of SN: 1494.6875
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:44:14] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : AwF0CBa.jpg
[2024/06/28 14:44:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:16] ppocr DEBUG: dt_boxes num : 43, elapsed : 0.1262047290802002
[2024/06/28 14:44:18] ppocr DEBUG: rec_res num  : 43, elapsed : 2.178654193878174
[2024/06/28 14:44:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:19] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.17969918251037598
[2024/06/28 14:44:21] ppocr DEBUG: rec_res num  : 39, elapsed : 1.4400060176849365
['10', '6', 'is greater than 4.', 'LDA is sensitive to outliers in the dataset.', '9', 'class label.', 'Naive Bayes', 'oY<0.', 'at least one of X or Y must have negative variance i.c. cither oX0 or', 'If X and Y are two real-valued random variables such that CouX,Y<0 then', 'will be zero.', 'If data distributions exactly follow y=x then the rank of the covariance matrix', 'one.', 'SN', 'independently.', 'between the origin and the point a.', 'IfaERd,', 'Statement', '10 pts Write TRUE or FALSE in copital lotter and clear handwriting.', 'Write your roll number hore', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'TRUE/FALS']
[2024/06/28 14:44:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:22] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12024164199829102
[2024/06/28 14:44:24] ppocr DEBUG: rec_res num  : 41, elapsed : 2.0483932495117188
['TRUE', 'dssq  0}=', 'FAE5E', 'O0', 'TRUE', 'TRUE', '8', 'FALSE', 'L', '0>1', 'TRUE', '9', 'TRUE', 'FASSE', 'oone', 'TRUE', '  ', '2', 'NS']
[2024/06/28 14:44:25] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:26] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.11892890930175781
[2024/06/28 14:44:27] ppocr DEBUG: rec_res num  : 36, elapsed : 1.4114503860473633
['TRUE', 'FAASE', 'TRUE', 'TRUE', 'TRUE', 'FAASE', 'TRUE', 'TRUE', 'FAASE', 'TEUE', '0>1', 'nne', 'NS', '2', '6', '8', '9']
[2024/06/28 14:44:28] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:28] ppocr DEBUG: dt_boxes num : 43, elapsed : 0.12177658081054688
[2024/06/28 14:44:31] ppocr DEBUG: rec_res num  : 43, elapsed : 2.0728485584259033
['6.10 pts) Write TRUE or FALSE in copital lotter and cloar handwriting', 'Write your roll number hore', 'SN', 'Statement', '1', 'If a E Rd then a trace of the matrix aa is cqual to the Euclidean distance', 'between the origin and the point a', 'TRUE/FALSI', 'PCA becomes equivalent to LDA if we project samples of each class using PCA', '2', 'independently.', 'TRUE', '3', 'For a particular zthe value of the probability mass function can be greater than', 'TRUE', 'one.', 'The PCA will project 2D-data points to 10 if variancex)> variancey', 'FALSE', '5', 'If data distributions exactly follow y=x then the rank of the covariance matrix', 'will be zero,', 'TRUE', '6', 'If X and Y are two real-valued random variables such that CouXY)0 then', 'at least one of X or y must have negative variance i.c. cither oX) 0 or', 'TRUE', 'oY0.', '7', 'Naive Bayes assumes that all features are conditionally independent given the', 'FALSE', 'class label', 'LDA is sensitive to outliers in the dataset', 'TRUE', '9', 'A die is loaded so that the probability of a face coming up is proportional to the', 'number on that face.The die is rolled with outcome X.The expected value of X', 'TRUE', 'is greater than 4.', '10', 'B={[11J-10} is one of the basis in 2D-space', 'FALSE', 'TRUE']
OCR detection done
left top x of SN: 1116.0
bottom right x of SN: 1484.0
left top y of SN: 1227.0
bottom right y of SN: 1552.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/AwF0CBa.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6nLvfDA.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6476.718750000001
left top x of SN: 718.625
bottom right x of SN: 1124.40625
first t/f detection
TRUE
((5400.687499999999, 2366.1875), (5987.71875, 2573.90625))
TRUE
((5382.625000000001, 2880.96875), (6005.781250000001, 3097.71875))
TPU
((5391.65625, 3386.71875), (5834.187499999999, 3612.5))
BALSE
((5373.593749999999, 3973.75), (6141.250000000001, 4262.75))
EAUSE
((5409.718750000001, 4596.90625), (6186.406249999999, 4795.59375))
CALS
((5373.593749999999, 5075.5625), (5906.4375, 5283.28125))
CASE
((5382.625000000001, 5563.25), (6123.1875, 5734.84375))
TRDE
((5283.28125, 6041.90625), (5861.281249999999, 6213.5))
EAS
((5319.406249999999, 6565.71875), (5843.218750000001, 6773.4375))
TRUE
((5373.593749999999, 7080.5), (5915.468749999999, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2528, '2': 3070, '3': 3431, '4': 3982, '5': 4533, '6': 5084, '7': 5445, '8': 6014, '9': 6385, '10': 6963}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9FgCGu3.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6476.718750000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:44:39] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 9FgCGu3.jpg
[2024/06/28 14:44:40] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:44:41] ppocr DEBUG: dt_boxes num : 30, elapsed : 0.14306187629699707
[2024/06/28 14:44:43] ppocr DEBUG: rec_res num  : 30, elapsed : 1.981429100036621
OCR detection done
left top x of T/F: 5288.0
bottom right x of T/F: 6289.0
left top y of T/F: 1394.0
bottom right y of T/F: 1795.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[502.0, 1618.0], [719.0, 1618.0], [719.0, 1734.0], [502.0, 1734.0]]
first t/f detection
first t/f detection
will be-zero.
[[877.0, 4210.0], [1576.0, 4210.0], [1576.0, 4345.0], [877.0, 4345.0]]
first t/f detection
class-label.
[[887.0, 5510.0], [1527.0, 5510.0], [1527.0, 5645.0], [887.0, 5645.0]]
the true list is  [1591, 3564]
the false list is  []
the true list for xdirn [806, 5379]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
left top x of SN: 502.0
bottom right x of SN: 859.0
left top y of SN: 1618.0
bottom right y of SN: 1874.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DpJMbdM.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6648.3125
left top x of SN: 420.59375
bottom right x of SN: 826.3749999999999
first t/f detection
Truo
((5481.968749999999, 1851.40625), (6078.031249999999, 2095.25))
fale
((5671.624999999999, 2420.375), (6258.65625, 2637.125))
falas
((5581.3125, 2971.28125), (6114.156250000001, 3188.03125))
Trul
((5518.093750000001, 3576.375), (6078.031249999999, 3747.96875))
Rolse
((5770.96875, 3829.25), (6258.65625, 4009.875))
TROOL
((5581.3125, 4100.1875), (6204.46875, 4298.875))
collision happend with box:4100.1875 and text:TROOL solving on the basis of percent match boxes
the current box specification are
eoolll.e9-
((5599.375000000001, 3964.71875), (6132.218749999999, 4127.28125))
text2 i.e the incoming text is the winner
Falre.
((5572.281250000001, 4605.9375), (6141.250000000001, 4822.6875))
the
((5220.062500000001, 5328.4375), (5445.84375, 5463.90625))
collision happend with box:5328.4375 and text:the solving on the basis of percent match boxes
the current box specification are
Tre
((5626.468750000001, 5319.40625), (6168.343750000001, 5481.96875))
text2 i.e the incoming text is the winner
Tul
((5716.78125, 5852.25), (6294.781249999999, 6014.8125))
the
((5256.1875, 6312.84375), (5481.968749999999, 6457.34375))
collision happend with box:6312.84375 and text:the solving on the basis of percent match boxes
the current box specification are
folse
((5888.374999999999, 6358.0), (6367.03125, 6583.78125))
text2 i.e the incoming text is the winner
Toul
((5698.718749999999, 7053.40625), (6348.968749999999, 7215.96875))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2546, '3': 3115, '4': 3693, '5': 4082, '6': 4660, '7': 5445, '8': 6032, '9': 6439, '10': 7225}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SLoEgZp.jpg
OCR detection done with doctr
left top x of SN: 101.21093750000003
bottom right x of SN: 321.494140625
left top x of T/F: 956.2109375
bottom right x of T/F: 1335.400390625
first t/f detection
True
((972.6562500000001, 428.61328125), (1053.22265625, 470.5078125))
collision happend with box:428.61328125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1069.3359375, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
False
((971.044921875, 584.912109375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:584.912109375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
fa
((956.54296875, 787.939453125), (1008.10546875, 836.279296875))
text1 i.e the prev text is the winner
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1016.162109375, 792.7734375), (1093.505859375, 834.66796875))
text1 i.e the prev text is the winner
False
((974.267578125, 873.33984375), (1069.3359375, 913.623046875))
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
True
((974.267578125, 965.185546875), (1058.056640625, 1003.857421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:965.185546875 and text:True solving on the basis of percent match boxes
the current box specification are
false
((974.267578125, 1053.80859375), (1061.279296875, 1086.03515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1053.80859375 and text:false solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
text2 i.e the incoming text is the winner
collision happend with box:1137.59765625 and text:False solving on the basis of percent match boxes
the current box specification are
False.
((990.3808593750001, 1239.111328125), (1099.951171875, 1284.228515625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 404, '2': 509, '3': 578, '4': 681, '5': 784, '6': 886, '7': 955, '8': 1060, '9': 1129, '10': 1232}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CgQmkHz.jpg
OCR detection done with doctr
left top x of T/F: 4749.46875
bottom right x of T/F: 6016.125000000001
left top x of SN: 32.25000000000013
bottom right x of SN: 456.0937500000001
first t/f detection
Tyul
((5310.375, 1535.3125), (5807.093749999999, 1797.21875))
for
((4542.71875, 1833.34375), (4750.4375, 1995.90625))
False
((4994.28125, 2239.75), (5617.437499999999, 2591.96875))
False
((5301.343750000001, 2646.15625), (5897.406250000001, 3007.40625))
d-dimensional
((4018.9062500000005, 2853.875), (4940.09375, 3197.0625))
is
((4849.78125, 3495.09375), (5012.34375, 3657.65625))
collision happend with box:3495.09375 and text:is solving on the basis of percent match boxes
the current box specification are
Tgul
((5265.218749999999, 3422.84375), (5870.312500000001, 3693.78125))
text2 i.e the incoming text is the winner
collision happend with box:3422.84375 and text:Tgul solving on the basis of percent match boxes
the current box specification are
descent
((4371.125, 3513.15625), (4858.8125, 3738.9375))
text1 i.e the prev text is the winner
Pre-
((4795.59375, 4091.15625), (5093.625, 4271.78125))
collision happend with box:4091.15625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
Toue
((5238.124999999999, 4064.0625), (5825.15625, 4316.9375))
text2 i.e the incoming text is the winner
collision happend with box:4064.0625 and text:Toue solving on the basis of percent match boxes
the current box specification are
between
((4280.8125, 4127.28125), (4813.65625, 4353.0625))
text1 i.e the prev text is the winner
Fale
((5355.531250000001, 4560.78125), (5915.468749999999, 4867.84375))
collision happend with box:4560.78125 and text:Fale solving on the basis of percent match boxes
the current box specification are
distribution.
((4398.21875, 4660.125), (5202.0, 4940.09375))
text2 i.e the incoming text is the winner
is
((4633.03125, 5138.78125), (4759.46875, 5274.25))
collision happend with box:5138.78125 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4759.46875, 5066.53125), (5247.156250000001, 5283.28125))
text2 i.e the incoming text is the winner
original
((4461.4375, 5689.6875), (4949.125, 5915.46875))
collision happend with box:5689.6875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4931.0625, 5671.625), (5328.437500000001, 5852.25))
text1 i.e the prev text is the winner
a
((4687.21875, 6132.21875), (4804.625, 6258.65625))
collision happend with box:6132.21875 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4777.53125, 6032.875), (5418.75, 6276.71875))
text2 i.e the incoming text is the winner
overfitting
((4669.15625, 6628.9375), (5319.406249999999, 6881.8125))
the
((5310.375, 6800.53125), (5536.156249999999, 6963.09375))
collision happend with box:6800.53125 and text:the solving on the basis of percent match boxes
the current box specification are
details
((4732.375, 6836.65625), (5165.875, 7044.375))
text2 i.e the incoming text is the winner
data.
((4524.65625, 7089.53125), (4858.8125, 7270.15625))
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2591, '2': 3169}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SGX6mEJ.jpg
OCR detection done with doctr
left top x of T/F: 771.935546875
bottom right x of T/F: 1124.587890625
left top x of SN: 57.507812499999986
bottom right x of SN: 275.447265625
first t/f detection
Tye
((786.4882812500001, 312.62109375), (865.4023437499999, 342.97265625))
collision happend with box:312.62109375 and text:Tye solving on the basis of percent match boxes
the current box specification are
Tyue
((792.55859375, 390.017578125), (868.4375, 424.921875))
text2 i.e the incoming text is the winner
collision happend with box:390.017578125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fole
((801.6640625, 468.931640625), (871.47265625, 502.318359375))
text2 i.e the incoming text is the winner
collision happend with box:468.931640625 and text:Fole solving on the basis of percent match boxes
the current box specification are
is
((754.619140625, 555.43359375), (774.3476562499999, 579.71484375))
text1 i.e the prev text is the winner
collision happend with box:468.931640625 and text:Fole solving on the basis of percent match boxes
the current box specification are
folye
((795.5937499999999, 550.880859375), (869.955078125, 588.8203125))
text2 i.e the incoming text is the winner
collision happend with box:550.880859375 and text:folye solving on the basis of percent match boxes
the current box specification are
Pre
((734.890625, 648.005859375), (775.865234375, 672.287109375))
text1 i.e the prev text is the winner
collision happend with box:550.880859375 and text:folye solving on the basis of percent match boxes
the current box specification are
Fale
((801.6640625, 643.453125), (879.0605468750001, 679.875))
text2 i.e the incoming text is the winner
collision happend with box:643.453125 and text:Fale solving on the basis of percent match boxes
the current box specification are
distribution.
((669.634765625, 739.060546875), (777.3828125, 766.376953125))
text2 i.e the incoming text is the winner
collision happend with box:739.060546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fahe
((801.6640625, 723.884765625), (882.095703125, 760.306640625))
text1 i.e the prev text is the winner
collision happend with box:739.060546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((710.609375, 799.763671875), (780.41796875, 828.59765625))
text1 i.e the prev text is the winner
collision happend with box:739.060546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fayc
((806.216796875, 798.24609375), (876.025390625, 831.6328125))
text1 i.e the prev text is the winner
collision happend with box:739.060546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
space.
((725.78515625, 895.37109375), (780.41796875, 919.65234375))
text1 i.e the prev text is the winner
collision happend with box:739.060546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
True
((806.216796875, 883.23046875), (872.990234375, 915.099609375))
text1 i.e the prev text is the winner
prediction
((695.4335937500001, 954.556640625), (783.453125, 981.873046875))
collision happend with box:954.556640625 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tywe
((804.69921875, 962.14453125), (874.5078125, 990.978515625))
text1 i.e the prev text is the winner
collision happend with box:954.556640625 and text:prediction solving on the basis of percent match boxes
the current box specification are
Trwe
((804.69921875, 1054.716796875), (885.130859375, 1092.65625))
text2 i.e the incoming text is the winner
collision happend with box:1054.716796875 and text:Trwe solving on the basis of percent match boxes
the current box specification are
thè
((754.619140625, 1074.4453125), (788.005859375, 1098.7265625))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 326, '2': 418, '3': 479, '4': 575, '5': 663, '6': 754, '7': 816, '8': 909, '9': 969, '10': 1062}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FpAdggD.jpg
OCR detection done with doctr
left top x of SN: 90.82812499999997
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1215.7890625
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((904.9765625, 467.875), (923.4453125, 498.65625))
text2 i.e the incoming text is the winner
collision happend with box:467.875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((898.8203124999999, 534.0546875), (926.5234375, 563.296875))
text2 i.e the incoming text is the winner
collision happend with box:534.0546875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((897.28125, 634.09375), (926.5234375, 664.875))
text2 i.e the incoming text is the winner
collision happend with box:634.09375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 743.3671875), (923.4453125, 777.2265625))
text2 i.e the incoming text is the winner
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
collision happend with box:835.7109375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((891.125, 918.8203125), (923.4453125, 948.0625))
text2 i.e the incoming text is the winner
collision happend with box:918.8203125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1005.0078125), (924.9843750000001, 1040.40625))
text2 i.e the incoming text is the winner
collision happend with box:1005.0078125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((900.359375, 1083.5), (929.6015625, 1118.8984375))
text2 i.e the incoming text is the winner
collision happend with box:1083.5 and text:F solving on the basis of percent match boxes
the current box specification are
F
((898.8203124999999, 1192.7734375), (928.0625, 1226.6328125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 377, '2': 478, '3': 547, '4': 649, '5': 749, '6': 851, '7': 918, '8': 1021, '9': 1089, '10': 1191}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AbOkl8A.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 304.46875
left top x of T/F: 1238.18359375
bottom right x of T/F: 1692.13671875
first t/f detection
folse
((1278.677734375, 607.537109375), (1431.1484375, 699.01953125))
collision happend with box:607.537109375 and text:folse solving on the basis of percent match boxes
the current box specification are
Falte
((1283.369140625, 727.16796875), (1426.45703125, 809.267578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:727.16796875 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1276.33203125, 860.873046875), (1421.7656250000002, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:860.873046875 and text:True solving on the basis of percent match boxes
the current box specification are
Tiul
((1283.369140625, 1003.9609375), (1426.45703125, 1100.134765625))
text2 i.e the incoming text is the winner
collision happend with box:1003.9609375 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Hul
((1290.40625, 1158.77734375), (1421.7656250000002, 1245.568359375))
text1 i.e the prev text is the winner
Tul
((1281.0234374999998, 1285.4453125), (1428.802734375, 1355.81640625))
collision happend with box:1285.4453125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Igul
((1285.71484375, 1405.076171875), (1426.45703125, 1487.17578125))
text1 i.e the prev text is the winner
Mul
((1273.986328125, 1524.70703125), (1417.07421875, 1604.4609375))
collision happend with box:1524.70703125 and text:Mul solving on the basis of percent match boxes
the current box specification are
False
((1288.0605468750002, 1653.720703125), (1405.345703125, 1728.783203125))
text2 i.e the incoming text is the winner
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
falu
((1271.640625, 1789.771484375), (1433.494140625, 1885.9453125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 445
printing the number dict y_coordinate
{'2': 745, '3': 846, '4': 992, '5': 1144, '6': 1290, '7': 1393, '8': 1541, '9': 1639, '10': 1789, '1': 445}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WcmRS3m.jpg
OCR detection done with doctr
left top x of SN: 83.48632812500001
bottom right x of SN: 305.380859375
left top x of T/F: 936.875
bottom right x of T/F: 1325.732421875
first t/f detection
True
((958.154296875, 420.556640625), (1041.943359375, 462.451171875))
collision happend with box:420.556640625 and text:True solving on the basis of percent match boxes
the current box specification are
False
((961.376953125, 496.2890625), (1061.279296875, 541.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:496.2890625 and text:False solving on the basis of percent match boxes
the current box specification are
False
((962.9882812500001, 573.6328125), (1069.3359375, 621.97265625))
text2 i.e the incoming text is the winner
collision happend with box:573.6328125 and text:False solving on the basis of percent match boxes
the current box specification are
is
((914.6484375, 684.814453125), (937.20703125, 708.984375))
text1 i.e the prev text is the winner
collision happend with box:573.6328125 and text:False solving on the basis of percent match boxes
the current box specification are
True
((959.7656249999999, 676.7578125), (1053.22265625, 723.486328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:676.7578125 and text:True solving on the basis of percent match boxes
the current box specification are
Pre-
((890.4785156250001, 784.716796875), (938.818359375, 810.498046875))
text1 i.e the prev text is the winner
collision happend with box:676.7578125 and text:True solving on the basis of percent match boxes
the current box specification are
Trve
((1011.328125, 779.8828125), (1098.33984375, 826.611328125))
text1 i.e the prev text is the winner
False
((975.87890625, 860.44921875), (1074.169921875, 905.56640625))
collision happend with box:860.44921875 and text:False solving on the basis of percent match boxes
the current box specification are
distribution.
((816.357421875, 884.619140625), (940.4296875, 913.623046875))
text2 i.e the incoming text is the winner
collision happend with box:884.619140625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((863.0859375000001, 952.294921875), (943.65234375, 982.91015625))
text1 i.e the prev text is the winner
collision happend with box:884.619140625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Trve
((975.87890625, 952.294921875), (1064.501953125, 997.412109375))
text1 i.e the prev text is the winner
space.
((880.810546875, 1060.25390625), (945.2636718750001, 1084.423828125))
collision happend with box:1060.25390625 and text:space. solving on the basis of percent match boxes
the current box specification are
False
((982.3242187500001, 1040.91796875), (1072.55859375, 1079.58984375))
text2 i.e the incoming text is the winner
collision happend with box:1040.91796875 and text:False solving on the basis of percent match boxes
the current box specification are
prediction
((846.97265625, 1124.70703125), (948.486328125, 1155.322265625))
text1 i.e the prev text is the winner
collision happend with box:1040.91796875 and text:False solving on the basis of percent match boxes
the current box specification are
Fatse
((987.1582031249999, 1126.318359375), (1070.947265625, 1164.990234375))
text2 i.e the incoming text is the winner
collision happend with box:1126.318359375 and text:Fatse solving on the basis of percent match boxes
the current box specification are
the
((917.8710937500001, 1260.05859375), (956.54296875, 1285.83984375))
text1 i.e the prev text is the winner
collision happend with box:1126.318359375 and text:Fatse solving on the basis of percent match boxes
the current box specification are
False
((1006.494140625, 1227.83203125), (1108.0078125, 1274.560546875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['1', '8']
the assigned keys are ['2', '3', '4', '5', '6', '7', '9', '10']
['2', '3', '4', '5', '6', '7', '9', '10', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'2': 522, '3': 591, '4': 697, '5': 799, '6': 900, '7': 970, '9': 1144, '10': 1245, '1': 222}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'UNASSIGNED', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 55RvBa9.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6296.09375
left top x of SN: 592.1874999999999
bottom right x of SN: 1007.0
first t/f detection
TRUE
((5472.9375, 1652.71875), (6078.031249999999, 1905.59375))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Foete
((5138.78125, 1788.1875), (5752.906249999999, 2095.25))
text1 i.e the prev text is the winner
FtbsFASE
((5156.84375, 2203.625), (6204.46875, 2537.78125))
FACSE
((5147.8125, 2826.78125), (5888.374999999999, 3079.65625))
TRUE
((5156.84375, 3377.6875), (5879.34375, 3630.5625))
TRUE
((5174.90625, 3856.34375), (5834.187499999999, 4100.1875))
FTRUE
((5147.8125, 4380.15625), (6069.0, 4624.0))
FALSE
((5102.65625, 4858.8125), (5861.281249999999, 5147.8125))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
collision happend with box:5183.9375 and text:PALSE solving on the basis of percent match boxes
the current box specification are
RVE
((5165.875, 5337.46875), (5807.093749999999, 5590.34375))
text1 i.e the prev text is the winner
FALSE
((5120.71875, 5834.1875), (5852.25, 6168.34375))
the
((4876.875, 6502.5), (5111.6875, 6647.0))
collision happend with box:6502.5 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5220.062500000001, 6348.96875), (5951.593750000001, 6755.375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': False}
the unassigned keys are ['1', '2', '4', '5', '7', '8']
the assigned keys are ['3', '6', '9', '10']
printing the number dict y_coordinate
{'9': 568, '3': 2880, '6': 4506, '10': 6367}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'NULL', '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UAPlfB2.jpg
rotation started
['E0al', '"enep', 'uoosun', "'mou", '01', 'TTOM', 'ezireioues', 'qou', 'op', 'ge44', 'egep', 'Surureng', 'eu9', 'UI', 'sTregp', 'JO', 'OSIOU', 'oyroeds', 'omgdes', '01', 'ureeT', 'Keu', 'lopour', 'a47', 'Se', "'SoseaIo", 'BRg', '-UI', 'Sumay.reno', 'Jo', 'YSLI', 'ou9', "'WAS", 'uI', 'rejourered', 'D', 'o47', 'Jo', 'onTeA', 'y814', 'B', 'YAIM', 'OT', "'WAS", '9SOI-SA-OUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'QUO-SA-QUO', 'Bursn', '303l', 'uororpard', 'B', 'Suryeur', "'sessero", 'Jo', 'pequnu', 'a81eT', 'B', 'YAIM', 'suerqoid', 'ssepprgmu', 'JOI', '6', 'End)', 'BEROT', '"aoeds', 'TBULSTIO', 'oy7', 'UI', 'meQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorstop', 'OUL', '8', '2516J212', "'sopou", 'Jo', 'poqunu', 'au7', '07', 'Teuorgodoud', 'Atgpemp', 'SI', 'OOIL', 'UOISIDOC', 'o47', 'ul', 'uomorpard', 'B', 'Suryeu', 'IOJ', 'pammbal', 'OUIIL', 'OUL', 'L', '25743', '"uorgnqugsip', 'ueissnes', 'B', 'sienre', 'SI', 'suorgnquasip', 'uerssneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'Treday', 'pue', 'UOISIO', 'JOyl', '-ald', 'UOOMn0q', 'nord', 'B', 'SI', 'OAINO', '(DOH)', 'DISLIO90BIUD', 'Surgeredo', 'IOAIODOH', 'OUL', 'C', 'YIOMIOU', 'Temneu', 'o47', 'UI', 'squerpeLs', 'au4', 'aanduoo', '07', 'posn', '35767', 'R', '2', 'SI', 'queosep', 'querpe1s', 'OTIYM', "'SA481OM", 'a47', 'agepdn', '07', 'posn', 'SI', 'uone8odoxdypeg', '#', ':f', 'pue', 'I', 'SIO900A', 'aouegsip', 'PITBA', 'B', 'SI', "(A'z/@quopuagauzsoy", '-', 'I', '&', 'Kue', 'IOJ', 'olIgOur', '30yl', '303l0', 'Teuorsueuup-p', 'layissel', 'reourl-uou', 'B', 'SI', 'NNX', '2', 'queurdordap', 'a8e.10qs', 'au1', 'STeordAL', 'I', 'IOJ', 'quetemba', '1981e1', 'yonu', 'SI', 'NNY', 'Indl', 'JOJ', 'IAS', 'ueyz', 'quouagess', 'NS', 'O9LIM', '5an', 'X', 'SIVa/anaL', '1aqunu', 'IIOI', 'mor', ':a.10U', 'deady', 'mad', 'eul', '(sad', 'O1)', "'6", '29L1M', 'IO', 'ENAL', 'UI', 'ASTVA', 'Teardeo', 'SIO11e1', 'Surguumpueu', 'reapo', 'pue']
rotation started
['of', 'of', '?', '4', 'a', '-', '-', ':', 'd', ':', '', '', '-', '-', '&', 'N', ':', 'E', '-', '-', 'a', '-', 'a', 'E', 'a', 'I', '', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'I', 'I', 'E', 'a', 'iE', 'I', '1', 'I', 'I', 'is', '2', 'I', '', 'I', 'e', 'I', 'iE', 'E', '1', 'I', 'is', 'e', 'I', 'iE', 'o', 'I', '-', 'I', 'E', 'I', 'a', '-', 'à', ':', 'o', '-', '8', 'I', 'of', 'I', 'E', 'E', 'C', 'I', 'I', 'of', ':', 'I', 'is', '-', 'de', 'à', ':', 'I', 'a', 'E', 'of', 'de', 'I', '-', 'e', 'a', ':', 'I', '5', 'a', 's', '8a', 'I', 'a', 'I', 'iE', 'I', 'of', 'I', '(', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', 'E', '1', 'I', '1', '8', 'e', 'e', 'iE', 'i', 'o', 'I', 'E', 'I', 'of', '5', '$', '2', '', 'I', ':', 'a', 'I', '3', 'E', 'I', 'I', '1', 'a', 'a', 'oe', 'E', 'à', 'a', 'e', '6', '-', '8', 'is', 'I', 'I', 'I', 'is', 'e', 'S', 'E', 'a', '8', 'I', 'is', 'o', 'I', 'E', 'I', '11', 'I', 'I', 'a', '3', 'E', '3', ':', 'I', 'e', 'I', '1', 'I', '2', 'I', 'E', 'I', 'of', 'I', '0', 'a', 'I', 'I', 'I', 'I', 'à', 'I', 'I', 'I', 'I', 'E', 'I', 'E', 'à', 'A', 'E', 'à', ':', '€', 'I', 'I', '7', '11', '4', '10', '8', 'I', '00', '', '1f']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'TRUE', 'or', 'pts)', 'Write', '9.', '(10', 'Merao', 'A', 'pmpra', 'number', 'here:', 'Write', 'your', 'roll', 'TRUE/FALSN', 'AP', 'SN', 'Statement', 'SVM', 'for', 'TRUE', 'URS', 'is', 'much', 'larger', 'than', 'requirement', 'for', 'KNN', '1', 'Typically,', 'the', 'storage', 'deployment.', 'OTRUE', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalarityz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'i', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'lrebe', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', 'FALSE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'be', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Toas', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'TRUE', 'using', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'learn', 'may', '1208', 'TRUE', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
rotation started
['bf', '', '00', '1', '', 'CT', '4', '', 'N', 'E', 'I', 'E', 'E', '7', 'a', 'I', 'I', 'I', '2', 'e', 'E', '8', '8', 'it', 'a', 'I', ':', 'E', 'I', 'I', 'E', 'of', 'I', '8', 'E', 'E', 'E', ':', 'a', 'I', 'se', 'I', 'I', 'I', '8', 'I', 'of', 'E', 'it', '2', 'I', ':', 'I', 'E', 'I', '5', 'E', 'tn', 'I', 'E', 'E', '2', 'a', 'Q', 'I', 'I', 'E', 'B', 'I', '8', 'I', 'a', 'I', 'I', 'of', 'I', 'I', '8', ':', 'a', 'E', 'I', 'E', '-', 'I', 'E', 'I', 'I', 'E', 'I', '€', 'E', 'I', 'E', '9', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'f', '8', 'I', 'I', 'E', 'I', 'I', 'E', 'E', '8', 't', '€', '9', 'of', 'E', 'I', 'I', 'E', 'I', 'E', 'F', '11', '2', '8', 'E', 'E', '€', 'a', '9', 'E', 'DE', 'I', 'E', 'A', 'I', 'E', 'a', '-', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 't', 'I', '8', '€', 'I', '1', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 't', 'E', 'E', 'I', '8', 'I', 'I', 'I', 'E', 'E', 'E', '2', 'I', 'I', 'I', '2', 'E', 'E', 'I', 'g', 'e', 'I', '1', 'I', '€', ':', 't', 'I', 'I', 'I', 'I', ')', 'F', 'it', 'I', '-', '8', 'e', 'E', 'd', 'Si', '4', '8', '?', '-', ':', '-', 'à', '€', '-', '€', 'I', 'V', '', 'A', '2', 'o6', '-']
OCR detection done with doctr
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:45:21] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : UAPlfB2.jpg
[2024/06/28 14:45:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:23] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.1821129322052002
[2024/06/28 14:45:25] ppocr DEBUG: rec_res num  : 40, elapsed : 1.64573335647583
[2024/06/28 14:45:26] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:26] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12017440795898438
[2024/06/28 14:45:28] ppocr DEBUG: rec_res num  : 39, elapsed : 1.7850463390350342
['TRUE', '10', 'TRUE', '6', '8', 'FASSE', 'TRUE', '3', 'G', 'OTRUE', 'TRUE', 'NS', 'UUR']
[2024/06/28 14:45:29] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:30] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.11963629722595215
[2024/06/28 14:45:31] ppocr DEBUG: rec_res num  : 35, elapsed : 1.3297843933105469
['DTROE', 'TAUE', 'TRUE', 'TAUE', 'FASSE', 'FRUE', 'TRUE', 'NS', '2', '3', '4', '7', '8', '9', '10']
[2024/06/28 14:45:32] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:32] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.11912298202514648
[2024/06/28 14:45:34] ppocr DEBUG: rec_res num  : 40, elapsed : 1.8791029453277588
['Iicng', 'In', '9.10 pts Write TRUE or FALSE in capital lette', 'Write your roll number here:', 'TRUE', 'URS', 'Statement', 'SN', 'Typically, the storage requirement for KNN is much larger than SVM for', '1', 'deployment.', 'DTRUE', 'KNN is a non-linear classifier', '2', 'TRUE', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', '3', 'vectors x and y.', 'FORFALSE', 'Backpropogation is used to update the weights, while gradient descent is', 'used to compute the gradients in the neural network..', 'TRUE', 'The Receiver Operating Characteristic (ROC curve is a plot between Pre', '5', 'cision and Recall.', 'FALSE', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'The Time required for making a prediction in the Decision Tree is directly', 'oe FALSE', 'proportional to the number of nodes.', 'FTRUE', '9', 'TRUE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'creases, as the model may learn to capture specific noise or details in the', 'TRUE', 'training data that do not generalize well to new, unseen data.']
[2024/06/28 14:45:35] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:36] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.11695623397827148
[2024/06/28 14:45:37] ppocr DEBUG: rec_res num  : 40, elapsed : 1.5388989448547363
['6', '8', '9', 'SN', '2', '9.(10 pts Write TRUE or FALSE in capital letters and clear', '-', 'creases, as the model may learn to capture specific noise or details in the', 'training data that do not generalize well to new, unseen data.', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'proportional to the number of nodes.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre', 'cision and Recall.', 'used to compute the gradients in the neural network.', 'Statement', 'Backpropogation is used to update the weights, while gradient descent is', 'KNN is a non-linear classifier.', 'vectors x and y.', 'deployment.', 'Write your roll number here:', 'TRUE', 'TRUE', 'TRUE', 'FALSE', 'e FALSE', 'TRUE', 'DTRUE', 'FORFALSE', 'TRUE', 'TRUE', 'Ae', 'URS']
OCR detection done
left top x of SN: 7264.0
bottom right x of SN: 7558.0
left top y of SN: 562.0
bottom right y of SN: 997.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/UAPlfB2.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QHgIPCx.jpg
rotation started
['f', '3', 'N', '11', '2', 'I', 'E', 'E', '3', 'E', 'E', 'A', '8', 'E', 'E', 'LH', 'I', '2', 'I', 'a', '8', 'I', 'it', ':', 'e', '-', 'E', '8', '2o', 'I', 'I', '€', 'E', 'I', 'I', 'I', 'I', 'of', 'I', 'I', 'E', 'I', '8', 'E', 'E', ':', 'E', 'I', 'e', 'I', ':', 'E', 'I', 'E', 'I', 'it', 'I', '3', '8', 'I', 'of', '2', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'E', 'E', 'it', '', 'I', 'a', 'I', 'I', 'Q', 'E', 'B', '8', 'I', 'a', 'it', 'I', 'I', '%', 'I', 'I', 'I', '8', '8', '2', '2', 'E', 'I', 'E', ':', 'I', 'E', '1', '€', 'E', 'I', 'I', '€', 'E', 'I', 'E', 'e', 'it', 'I', '8', 'I', 'I', 'I', 'I', 'a', '2', 'I', 'f', 'E', '8', 'I', 'I', 'E', 'I', 'E', 'I', 'I', 'p', 'E', 'I', 'I', 'I', ':', 'E', '2', 'E', 'I', 'a', 't', '€', 'a', 'E', '€', '9', '2', 'I', 'I', 'E', 'E', '8', ':', 'I', 'I', 'I', 'it', 'I', 'E', '-', 'I', 'E', 'F', '1', 'I', 'I', 'I', '-', '6o', '00', '-', '', 'OT', '4', 'so', '&', 'E', 'I', 'a', 'of', 'E', 'DE', 'i', 'I', 'E', 'E', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'D', 'I', 'I', 'it', 'E', 'I', 'I', '2', 'I', '4', '2', '2', 'à', 'A', 'à', 'à', 'I', 'e', '3']
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'ozireloues', 'qou', 'op', 'gey7', 'egep', 'Sururenn', 'anaL', 'ouy', 'UI', 'smegop', 'JO', 'OSIOU', 'oyroeds', 'amgdes', '01', 'ureOl', 'Keur', 'lopour', 'a44', 'Se', "'soseaIo", '-UI', 'Surayieno', 'Jo', 'YSLI', 'ouA', "'IAS", 'UI', 'rogeurered', 'D', 'ay7', 'Jo', 'anTeA', 'y81y', 'e', 'Y9IM', 'OT', 'uorgorpard', 'B', 'Suryeur', "'sessepo", 'Jo', 'poqunu', 'a8rel', 'e', 'YAIM', 'suerqord', 'ssepprgmur', 'JOI', '6', '"WAS', '9sai-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Buo-SA-QUO', 'Sursn', '3STV', 'Snal', 'aoeds', 'TEULSTIO', 'aun', 'uT', 'JBOUIT-uou', '9q', 'ueo', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsipap', 'OUL', '8', 'DSTHE', 'Atgpamp', 'SI', 'DOIL', 'UOISIOOG', 'oun', 'UI', 'uororpard', 'e', 'Suryeu', 'IOJ', 'pammbar', 'OUIL', 'OUL', 'L', 'ESTUJ', '"uorgnquasip', 'uerssnes', 'e', 'Skemre', 'SI', 'Suorgnquasip', 'ueissneD', 'OM7', 'Jo', 'OIgXIU', 'V', '9', 'andi', '-aId', 'uoomgq', 'nord', 'B', 'SI', 'DAINO', '(DOH)', 'orgsutegoereud', 'Surgeiedo', 'IOAIODOY', 'BUL', 'C', 'sapou', 'Jo', 'poqunu', 'aya', '07', 'reuorgiodord', 'Teday', 'pue', 'UOISIO', 'YIOMgOU', 'Temeu', 'au7', 'UI', 'squerpels', 'o47', 'aanduoo', '07', 'pesn', 'querpe.s', 'OTIYM', "'s94810M", 'o47', 'agepdn', '07', 'posn', 'SI', 'uomeodoxdypeg', '4', '3STN', 'SI', 'quaosap', ':f', 'pue', 'i', 'SIO900A', 'aouensip', 'PITEA', 'B', 'SI', '(A-z/Aumpuagausoy', '-', 'I', '&', 'EnAL', 'Tettorsutatup-p', 'Kue', 'IOJ', 'OlIgOuI', '"IOyISSETD', 'IBQUIT-uou', 'B', 'SI', 'NNX', '2', '30AL', 'queurdordap', 'queutemmba', 'a8e.10qs', 'ayy', 'STeordAL', 'I', '131e1', 'yonur', 'SI', 'NNX', 'JOJ', 'IS', '30AL', 'JOJ', 'WAS', 'ueyg', 'quoulagens', 'NS', 'aWISIVA/anL', 'ITO.I', 'mox', 'O9LIM', ':a.04', 'loqumu', 'OALIM', '(sad', 'OT)', '6', 'ASTVA', 'IO', 'ANUL', 'Teardes', 'ul', 'reop', 'pue', 'S.121101', 'Surtmpuey']
rotation started
['-', ':', 'S', '-', 'P', 'E', '2', 'e', '2', '2', '1', '7', '2', 'a', 'I', 'a', 'E', ':', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'e', 'I', 'E', 'is', 'I', '1', 'I', 'à', 'a', 'E', 'of', '6', ':', 'a', 's', 'is', 'I', 'I', 'i', ':', 'à', '€', '8a', 'I', ':', 'e', 'I', 'i', 'e', 'I', 'I', 'E', ':', '1', 'E', 'I', 'I', 'I', '8', 'i', 'e', 'I', 'iE', 'o', 'e', 'i', '2', 'I', 'a', 'I', 'E', 'o', '-', 'iE', 'a', 'I', 'à', 'a', '8', 'i', 'E', 'a', 'I', 'is', 'of', 'I', 'o', 'E', 'E', 'I', 'I', 'I', 'of', 'E', 'I', 'I', 'E', 'I', 's', 'i', 'is', 'e', 'à', ':', 'is', 'of', 'a', 'I', 'E', 'de', 'S', 'I', 'e', 'I', 'I', '1', 'o', 'à', 'a', 'E', 'de', 'd', 'I', 'i', '8', '8', 'I', 'E', 'à', 'I', 'I', '5', 'a', '8', '$', 'I', 'I', 'I', '11', 'I', 'I', 'a', '3', 'I', 'I', '8a', 'I', 'e', 'I', 'ia', 'I', 'of', 'I', 'I', 'I', '3', 'E', 'I', '1', 'a', '2', 'S', 'E', ':', 'E', 'e', 'o', 'I', 'I', '2', 'a', ':', 'I', 'e', 'I', '1', 'I', 'E', 'I', 'E', 'I', 'of', 'I', 'I', 'I', 'I', 'E', 'à', 'A', 'E', 'E', 'E', 'i', 'E', 'I', 'I', '7', '11', '4', '10', '8o', 'I', '00', '', '09']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'in', 'capital', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FALSEME', ':', 'SVM', 'for', 'TRUE', 'S', 'KNN', 'is', 'much', 'larger', 'than', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalaritylz.u)', 'vectors', 'I', 'and', 'y.', 'deployment.', 'TRUE', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'cision', 'and', 'Recall.', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'FALSE']
OCR detection done with doctr
left top x of SN: 971.4999999999999
bottom right x of SN: 1368.2499999999998
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:45:55] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : QHgIPCx.jpg
[2024/06/28 14:45:56] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:45:57] ppocr DEBUG: dt_boxes num : 30, elapsed : 0.14176487922668457
[2024/06/28 14:45:58] ppocr DEBUG: rec_res num  : 30, elapsed : 1.3695082664489746
[2024/06/28 14:45:59] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:46:00] ppocr DEBUG: dt_boxes num : 35, elapsed : 0.1399526596069336
[2024/06/28 14:46:01] ppocr DEBUG: rec_res num  : 35, elapsed : 1.3651301860809326
['10', '6', 'SN', '8', '9', '3', 'T', 'Statement', 'training data that do not generalize well to new, unseen data.', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'The Time required for making a prediction in the Decision Tree is directly', 'The Receiver Operating Characteristic (ROC curve is a plot between Pre-', 'proportional to the number of nodes.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'KNN is a non-linear classifier.', 'cision and Recall.', 'used to compute the gradients in the neural network.', 'vectors x and y.', 'deployment.', 'FALSE', 'TRUE', 'FALSE', 'FALSE', 'TRUE', 'TRUE', 'TRUE', 'TRUE', 'FALSE', 'TRUE', 'S']
[2024/06/28 14:46:02] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:46:02] ppocr DEBUG: dt_boxes num : 29, elapsed : 0.11682581901550293
[2024/06/28 14:46:04] ppocr DEBUG: rec_res num  : 29, elapsed : 1.3250727653503418
['TRUE', '10', 'FASSE', '0', 'TRUE', 'FASSE', 'FASE', 'TRUE', 'FALSE', 'TRUE', 'TRUE', 'S', 'TRUE', 'NS', 'TRRASSRUSE']
[2024/06/28 14:46:05] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:46:05] ppocr DEBUG: dt_boxes num : 37, elapsed : 0.11907219886779785
[2024/06/28 14:46:07] ppocr DEBUG: rec_res num  : 37, elapsed : 1.4821794033050537
['S', 'TRAASSASSEE', 'TRUE', 'TRUE', 'TRUE', 'TRUE', 'FASSE', 'FASSE', 'FALSE', 'FASSE', 'TRUE', 'TRUE', 'NS', '6', '2', '3', '5', '4', '8', '9', '7']
[2024/06/28 14:46:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:46:08] ppocr DEBUG: dt_boxes num : 30, elapsed : 0.11677002906799316
[2024/06/28 14:46:10] ppocr DEBUG: rec_res num  : 30, elapsed : 1.3246245384216309
['TRUE/FALSEME', 'Write your roll number here:', 'SN', 'Statement', 'TRUE', 'deployment.', 'TRUE', 'KNN is a non-linear classifier.', '2', 'TRUE', '3', 'vectors x and y.', 'FALSE', 'Backpropogation is used to update the weights, while gradient descent is', 'used to compute the gradients in the neural network.', 'TRUE', 'The Receiver Operating Characteristic (ROC curve is a plot between Pre-', 'cision and Recall.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'FALSE', '6', 'FALSE', 'proportional to the number of nodes.', 'TRUE', 'X', 'FALSE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', '10', 'TRUE', 'training data that do not generalize well to new unseen data.']
OCR detection done
left top x of SN: 1015.0
bottom right x of SN: 1381.0
left top y of SN: 1994.0
bottom right y of SN: 2279.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/QHgIPCx.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Jg6DDR7.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6413.499999999999
left top x of SN: 303.1875000000001
bottom right x of SN: 717.9999999999999
first t/f detection
PCA
((4894.9375, 2131.375), (5211.031249999999, 2302.96875))
collision happend with box:2131.375 and text:PCA solving on the basis of percent match boxes
the current box specification are
TRUE
((5418.75, 2077.1875), (5888.374999999999, 2257.8125))
text2 i.e the incoming text is the winner
than
((4940.09375, 2691.3125), (5256.1875, 2862.90625))
collision happend with box:2691.3125 and text:than solving on the basis of percent match boxes
the current box specification are
FALSE
((5454.874999999999, 2673.25), (5978.687500000001, 2880.96875))
text2 i.e the incoming text is the winner
TRUE
((5382.625000000001, 3206.09375), (5897.406250000001, 3422.84375))
matrix
((4894.9375, 3648.625), (5328.437500000001, 3820.21875))
collision happend with box:3648.625 and text:matrix solving on the basis of percent match boxes
the current box specification are
TRUE
((5427.781249999999, 3666.6875), (5942.562499999999, 3874.40625))
text2 i.e the incoming text is the winner
then
((5057.5, 4208.5625), (5373.593749999999, 4380.15625))
or
((5202.0, 4425.3125), (5391.65625, 4560.78125))
collision happend with box:4425.3125 and text:or solving on the basis of percent match boxes
the current box specification are
TRUE
((5518.093750000001, 4316.9375), (5987.71875, 4497.5625))
text2 i.e the incoming text is the winner
the
((5192.96875, 4976.21875), (5418.75, 5138.78125))
collision happend with box:4976.21875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5518.093750000001, 4922.03125), (5969.656249999999, 5129.75))
text2 i.e the incoming text is the winner
FALSE
((5599.375000000001, 5491.0), (6123.1875, 5671.625))
to
((5111.6875, 5978.6875), (5265.218749999999, 6096.09375))
collision happend with box:5978.6875 and text:to solving on the basis of percent match boxes
the current box specification are
the
((5265.218749999999, 5942.5625), (5481.968749999999, 6096.09375))
text2 i.e the incoming text is the winner
value
((4894.9375, 6141.25), (5229.09375, 6321.875))
collision happend with box:6141.25 and text:value solving on the basis of percent match boxes
the current box specification are
of
((5229.09375, 6150.28125), (5373.593749999999, 6294.78125))
text1 i.e the prev text is the winner
collision happend with box:6141.25 and text:value solving on the basis of percent match boxes
the current box specification are
FALSE
((5653.562500000001, 6050.9375), (6195.437500000001, 6258.65625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 1878, '2': 2438, '3': 2998, '4': 3567, '5': 3946, '6': 4515, '7': 5274}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yuRHqjH.jpg
OCR detection done with doctr
left top x of T/F: 5327.46875
bottom right x of T/F: 6494.781249999999
left top x of SN: 709.5937500000001
bottom right x of SN: 1124.40625
first t/f detection
orut
((5590.343749999999, 2312.0), (6078.031249999999, 2492.625))
fale
((5509.062499999999, 2718.40625), (5888.374999999999, 2908.0625))
True
((5707.750000000001, 3260.28125), (6132.218749999999, 3440.90625))
fabe
((5472.9375, 3811.1875), (5888.374999999999, 4036.96875))
Frhe
((5445.84375, 4885.90625), (5870.312500000001, 5102.65625))
Fale
((5427.781249999999, 5319.40625), (5870.312500000001, 5554.21875))
Fahe
((5509.062499999999, 5780.0), (5951.593750000001, 5987.71875))
Tve
((5454.874999999999, 6231.5625), (5906.4375, 6466.375))
True
((5436.812500000001, 6863.75), (5861.281249999999, 7035.34375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are ['1', '4', '5']
the assigned keys are ['2', '3', '6', '7', '8', '9', '10']
['2', '3', '6', '7', '8', '9', '10', '2', '3', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2880, '3': 3251, '6': 4885, '7': 5292, '8': 5807, '9': 6186, '10': 6737, '1': 2580}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gdtcR42.jpg
OCR detection done with doctr
left top x of SN: 962.46875
bottom right x of SN: 1377.2812500000002
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6783.78125
first t/f detection
Trie
((5599.375000000001, 1977.84375), (6123.1875, 2194.59375))
Tuc
((5436.812500000001, 2501.65625), (5933.53125, 2754.53125))
Tyue
((5445.84375, 2971.28125), (6168.343750000001, 3215.125))
Fase
((5454.874999999999, 3630.5625), (6096.09375, 3874.40625))
Irue
((5427.781249999999, 4416.28125), (6069.0, 4660.125))
Tyue
((5418.75, 4750.4375), (5861.281249999999, 4958.15625))
False
((5202.0, 5138.78125), (5716.78125, 5409.71875))
True
((5220.062500000001, 5590.34375), (5680.656250000001, 5807.09375))
False
((5102.65625, 6041.90625), (5635.5, 6267.6875))
False
((5120.71875, 6565.71875), (5644.531249999999, 6818.59375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 1914, '2': 2456, '3': 2826, '4': 3368, '5': 3910}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : m0uDWq4.jpg
OCR detection done with doctr
left top x of SN: 447.6875
bottom right x of SN: 853.4687499999999
left top x of T/F: 5679.6875
bottom right x of T/F: 6883.125000000001
first t/f detection
FALSE
((5725.812499999999, 1905.59375), (6385.093750000001, 2113.3125))
FALS
((5653.562500000001, 2546.8125), (6240.593749999999, 2790.65625))
FALS
((5779.999999999999, 3124.8125), (6276.718750000001, 3332.53125))
TRUE
((5743.875, 3720.875), (6240.593749999999, 3928.59375))
TRUE
((5698.718749999999, 4172.4375), (6367.03125, 4416.28125))
FALSE
((5689.6875, 4867.84375), (6412.187500000001, 5111.6875))
TRUE
((5644.531249999999, 5563.25), (6249.625000000001, 5761.9375))
TRUE
((5626.468750000001, 6050.9375), (6132.218749999999, 6231.5625))
TRUE
((5617.437499999999, 6520.5625), (6222.531250000001, 6764.40625))
TRUE
((5671.624999999999, 7161.78125), (6303.812500000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2591, '3': 3206, '4': 3811, '5': 4208, '6': 4795, '7': 5563, '8': 6132, '9': 6511, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YvqixMk.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 605.19140625), (1431.1484375, 701.365234375))
collision happend with box:605.19140625 and text:falu solving on the basis of percent match boxes
the current box specification are
falk
((1281.0234374999998, 729.513671875), (1426.45703125, 806.921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:729.513671875 and text:falk solving on the basis of percent match boxes
the current box specification are
True
((1273.986328125, 853.8359375), (1417.07421875, 952.35546875))
text2 i.e the incoming text is the winner
collision happend with box:853.8359375 and text:True solving on the basis of percent match boxes
the current box specification are
Tiol
((1285.71484375, 996.923828125), (1424.111328125, 1097.7890625))
text1 i.e the prev text is the winner
Tyul
((1283.369140625, 1144.703125), (1419.419921875, 1247.9140625))
collision happend with box:1144.703125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1283.099609375), (1421.7656250000002, 1365.19921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1283.099609375 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
collision happend with box:1395.693359375 and text:frul solving on the basis of percent match boxes
the current box specification are
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1524.70703125 and text:True solving on the basis of percent match boxes
the current box specification are
Falye
((1285.71484375, 1653.720703125), (1405.345703125, 1726.4375))
text2 i.e the incoming text is the winner
collision happend with box:1653.720703125 and text:Falye solving on the basis of percent match boxes
the current box specification are
False
((1271.640625, 1794.462890625), (1445.2226562499998, 1888.291015625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R0rvJ4W.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6521.874999999999
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:46:32] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : R0rvJ4W.jpg
[2024/06/28 14:46:33] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:46:34] ppocr DEBUG: dt_boxes num : 33, elapsed : 0.14027738571166992
[2024/06/28 14:46:36] ppocr DEBUG: rec_res num  : 33, elapsed : 2.0199525356292725
OCR detection done
left top x of T/F: 5362.0
bottom right x of T/F: 6352.0
left top y of T/F: 1554.0
bottom right y of T/F: 2029.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
SN
[[670.0, 1975.0], [887.0, 1975.0], [887.0, 2090.0], [670.0, 2090.0]]
first t/f detection
first t/f detection
deployment.
[[995.0, 2514.0], [1695.0, 2514.0], [1695.0, 2678.0], [995.0, 2678.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[5379.0, 4345.0], [6168.0, 4345.0], [6168.0, 4585.0], [5379.0, 4585.0]]
first t/f detection
FALSE
[[5444.0, 4830.0], [6149.0, 4794.0], [6162.0, 5034.0], [5457.0, 5071.0]]
first t/f detection
first t/f detection
the true list is  [1936, 2064, 2659, 3754, 5809, 6288]
the false list is  []
the true list for xdirn [946, 5377, 5438, 5379, 5419, 5454]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
left top x of SN: 670.0
bottom right x of SN: 1027.0
left top y of SN: 1975.0
bottom right y of SN: 2230.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : l1ZVgCG.jpg
OCR detection done with doctr
left top x of SN: 980.5312500000001
bottom right x of SN: 1404.3750000000002
left top x of T/F: 5589.375000000001
bottom right x of T/F: 6865.0625
first t/f detection
handwriting
((4840.75, 1038.59375), (5617.437499999999, 1291.46875))
Halse
((5527.125, 2700.34375), (6087.062500000001, 3007.40625))
Halse
((5472.9375, 3179.0), (5960.625, 3449.9375))
Hrue
((5364.5625, 3648.625), (5843.218750000001, 3919.5625))
toue
((5328.437500000001, 4244.6875), (5906.4375, 4515.625))
False
((5256.1875, 4750.4375), (5734.843750000001, 5012.34375))
Taue
((5111.6875, 5229.09375), (5599.375000000001, 5500.03125))
False
((5391.65625, 6737.3125), (5816.125000000001, 7008.25))
the final dict without editing {'1': 'NULL', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1']
['1', '1']
printing the number dict y_coordinate
{'1': 2122}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DYcwFZ2.jpg
OCR detection done with doctr
left top x of SN: 104.67968750000003
bottom right x of SN: 321.6171875
left top x of T/F: 868.8125
bottom right x of T/F: 1229.640625
first t/f detection
F
((917.2890625000001, 383.2265625), (944.9921875, 414.0078125))
collision happend with box:383.2265625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((911.1328125, 474.03125), (934.2187499999999, 507.890625))
text2 i.e the incoming text is the winner
collision happend with box:474.03125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((904.9765625, 541.75), (935.7578125, 574.0703125))
text2 i.e the incoming text is the winner
collision happend with box:541.75 and text:T solving on the basis of percent match boxes
the current box specification are
T
((900.359375, 641.7890625), (931.1406250000001, 672.5703125))
text2 i.e the incoming text is the winner
collision happend with box:641.7890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 752.6015625), (924.9843750000001, 786.4609375))
text2 i.e the incoming text is the winner
collision happend with box:752.6015625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((892.6640624999999, 843.40625), (917.2890625000001, 883.421875))
text2 i.e the incoming text is the winner
collision happend with box:843.40625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((886.5078125, 926.515625), (920.3671874999999, 955.7578125))
text2 i.e the incoming text is the winner
collision happend with box:926.515625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 1015.78125), (918.828125, 1046.5625))
text2 i.e the incoming text is the winner
collision happend with box:1015.78125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((892.6640624999999, 1089.65625), (920.3671874999999, 1126.59375))
text2 i.e the incoming text is the winner
collision happend with box:1089.65625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((886.5078125, 1200.46875), (915.75, 1234.328125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 367, '2': 470, '3': 537, '4': 638, '5': 740, '6': 841, '7': 911, '8': 1011, '9': 1080, '10': 1183}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8wUWOwd.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRVE
((5563.249999999999, 1797.21875), (6159.312499999999, 2013.96875))
TRUE
((5509.062499999999, 2357.15625), (6087.062500000001, 2573.90625))
FALSE
((5680.656250000001, 3468.0), (6294.781249999999, 3684.75))
FALSE:
((5563.249999999999, 4145.34375), (6285.75, 4362.09375))
TRVE
((5608.40625, 4750.4375), (6213.499999999999, 4949.125))
False.
((5653.562500000001, 5220.0625), (6294.781249999999, 5427.78125))
TRUE
((5554.21875, 5870.3125), (6123.1875, 6069.0))
TRUE
((5635.5, 6385.09375), (6168.343750000001, 6592.8125))
TRUG
((5680.656250000001, 7125.65625), (6358.000000000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2637, '3': 3034, '4': 3621, '5': 4217, '6': 4831, '7': 5238, '8': 5852, '9': 6267, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SsSbA8u.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 510.9062499999999
bottom right x of SN: 943.7812500000001
first t/f detection
Cui
((5843.218750000001, 1914.625), (6303.812500000001, 2131.375))
False
((5391.65625, 2582.9375), (5978.687500000001, 2853.875))
False
((5617.437499999999, 3016.4375), (6186.406249999999, 3314.46875))
quo
((5563.249999999999, 3766.03125), (6014.8125, 4027.9375))
Tquie
((5292.312499999999, 4389.1875), (5888.374999999999, 4642.0625))
Falsa
((5328.437500000001, 4885.90625), (5870.312500000001, 5156.84375))
Iguue
((5337.46875, 5364.5625), (5924.500000000001, 5626.46875))
Guig
((5400.687499999999, 5960.625), (5906.4375, 6177.375))
false
((5418.75, 6294.78125), (5996.749999999999, 6610.875))
Falsa
((5445.84375, 6800.53125), (6014.8125, 7116.625))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are ['1', '3', '4']
the assigned keys are ['2', '5', '6', '7', '8', '9', '10']
['2', '5', '6', '7', '8', '9', '10', '2', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 2736, '5': 4280, '6': 4867, '7': 5247, '8': 5834, '9': 6231, '10': 6818, '1': 2436}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 56jXNyb.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6485.75
left top x of SN: 682.5000000000001
bottom right x of SN: 1079.25
first t/f detection
TRUE
((5364.5625, 1941.71875), (6041.90625, 2239.75))
TROE
((5436.812500000001, 2483.59375), (6096.09375, 2745.5))
FALSE
((5373.593749999999, 2989.34375), (6195.437500000001, 3287.375))
TRUE
((5391.65625, 3702.8125), (6096.09375, 3946.65625))
TROE
((5454.874999999999, 4253.71875), (6168.343750000001, 4506.59375))
TRUE
((5319.406249999999, 4786.5625), (6132.218749999999, 5075.5625))
TRUE
((5391.65625, 5238.125), (5951.593750000001, 5463.90625))
FEU
((5346.499999999999, 5707.75), (5834.187499999999, 5933.53125))
collision happend with box:5707.75 and text:FEU solving on the basis of percent match boxes
the current box specification are
FALSE
((5888.374999999999, 5680.65625), (6358.000000000001, 5906.4375))
text2 i.e the incoming text is the winner
TRUE
((5382.625000000001, 6168.34375), (6023.843749999999, 6367.03125))
FALSE
((5436.812500000001, 6782.46875), (6204.46875, 7026.3125))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3224, '4': 3766, '5': 4307, '6': 4858, '7': 5229, '8': 5780, '9': 6141, '10': 6710}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': True, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : s1XljD0.jpg
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 844.4375
left top x of T/F: 5228.124999999999
bottom right x of T/F: 6377.375
first t/f detection
TRUE
((5301.343750000001, 2284.90625), (5951.593750000001, 2483.59375))
TR
((5147.8125, 2808.71875), (5409.718750000001, 3016.4375))
collision happend with box:2808.71875 and text:TR solving on the basis of percent match boxes
the current box specification are
U
((5436.812500000001, 2826.78125), (5599.375000000001, 2989.34375))
text1 i.e the prev text is the winner
TRUE
((5256.1875, 3332.53125), (6032.875000000001, 3576.375))
TRUE
((5256.1875, 3982.78125), (5879.34375, 4154.375))
FALSE
((5481.968749999999, 4425.3125), (6186.406249999999, 4624.0))
TYPUE
((5382.625000000001, 4624.0), (6059.968750000001, 4840.75))
FALS
((5337.46875, 5129.75), (5861.281249999999, 5301.34375))
FALS
((5292.312499999999, 5599.375), (5834.187499999999, 5761.9375))
TRUE
((5355.531250000001, 6087.0625), (5951.593750000001, 6249.625))
FALSE
((5328.437500000001, 6547.65625), (6032.875000000001, 6746.34375))
TIRUE
((5373.593749999999, 7143.71875), (6014.8125, 7351.4375))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2474, '2': 3043, '3': 3431, '4': 4009, '5': 4587, '6': 5165, '7': 5563, '8': 6159, '9': 6556, '10': 7170}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pi57kK6.jpg
OCR detection done with doctr
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6738.624999999999
first t/f detection
TRUE
((5680.656250000001, 1986.875), (6177.375, 2167.5))
TRUE
((5590.343749999999, 2483.59375), (6105.124999999999, 2664.21875))
TRUE
((5608.40625, 3079.65625), (6204.46875, 3278.34375))
FALSE
((5608.40625, 3657.65625), (6114.156250000001, 3829.25))
FALSE
((5572.281250000001, 4036.96875), (6195.437500000001, 4289.84375))
FALS
((5599.375000000001, 4741.40625), (6041.90625, 4949.125))
TRUE
((5554.21875, 5400.6875), (6123.1875, 5608.40625))
TRUE
((5581.3125, 5969.65625), (6096.09375, 6177.375))
TRUE
((5626.468750000001, 6484.4375), (6222.531250000001, 6701.1875))
FALS
((5671.624999999999, 6737.3125), (6050.937499999999, 6908.90625))
FALSE
((5644.531249999999, 7098.5625), (6186.406249999999, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 3188, '4': 3775, '5': 4163, '6': 4759, '7': 5536, '8': 6132, '9': 6529, '10': 7306}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5pOfNJj.jpg
OCR detection done with doctr
left top x of SN: 528.96875
bottom right x of SN: 934.7499999999999
left top x of T/F: 5300.375
bottom right x of T/F: 6413.499999999999
first t/f detection
F
((5635.5, 1797.21875), (5770.96875, 1995.90625))
F
((5653.562500000001, 2375.21875), (5825.15625, 2564.875))
F
((5671.624999999999, 2880.96875), (5816.125000000001, 3079.65625))
T
((5653.562500000001, 3404.78125), (5843.218750000001, 3576.375))
T
((5653.562500000001, 3874.40625), (5834.187499999999, 4046.0))
F
((5734.843750000001, 4470.46875), (5888.374999999999, 4687.21875))
T
((5743.875, 5635.5), (5906.4375, 5834.1875))
T
((5761.937500000001, 6159.3125), (5942.562499999999, 6348.96875))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'NULL', '8': True, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2411, '3': 2953, '4': 3495, '5': 3856, '6': 4416, '7': 5165, '8': 5734, '9': 6123, '10': 6899}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': 'NULL', '8': True, '9': True, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : thbXo3M.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRuE
((5725.812499999999, 1914.625), (6358.000000000001, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6231.5625, 2610.03125))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
fAlsE
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5608.40625, 4840.75), (6096.09375, 5003.3125))
TRUE
((5581.3125, 5554.21875), (6123.1875, 5716.78125))
tRul
((5843.218750000001, 6096.09375), (6466.375000000001, 6294.78125))
falte
((5743.875, 6656.03125), (6213.499999999999, 6836.65625))
folst
((5779.999999999999, 7161.78125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5491, '8': 6123, '9': 6529, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dOhV2kI.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6341.250000000001
left top x of SN: 628.3125000000001
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5319.406249999999, 2167.5), (5807.093749999999, 2339.09375))
TRUE
((5292.312499999999, 2655.1875), (5752.906249999999, 2835.8125))
TRUE
((5229.09375, 3169.96875), (5861.281249999999, 3413.8125))
TEUE
((5247.156250000001, 3738.9375), (5707.750000000001, 3901.5))
TRUG
((5247.156250000001, 4325.96875), (5734.843750000001, 4461.4375))
FALSE
((5256.1875, 4867.84375), (5825.15625, 5075.5625))
TRUE
((5202.0, 5247.15625), (5770.96875, 5409.71875))
FALSE
((5156.84375, 5707.75), (5653.562500000001, 5915.46875))
SALSE
((5202.0, 6177.375), (5933.53125, 6394.125))
TRUE
((5265.218749999999, 6827.625), (5789.031250000001, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2312, '2': 2862, '3': 3233, '4': 3784, '5': 4325, '6': 4885, '7': 5265, '8': 5825, '9': 6204, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : G1CZP6M.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5364.5625, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5364.5625, 2492.625), (6105.124999999999, 2745.5))
FALSE
((5454.874999999999, 3016.4375), (6195.437500000001, 3269.3125))
FALSE
((5400.687499999999, 3630.5625), (6141.250000000001, 3847.3125))
FALSE
((5391.65625, 4217.59375), (6096.09375, 4434.34375))
FALSE
((5445.84375, 4732.375), (6240.593749999999, 4967.1875))
FALSE
((5427.781249999999, 5202.0), (6159.312499999999, 5400.6875))
TRUE
((5436.812500000001, 5725.8125), (6105.124999999999, 5969.65625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6448.3125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2754, '3': 3133, '4': 3702, '5': 4262, '6': 4849, '7': 5229, '8': 5789, '9': 6195, '10': 6764}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7pahTUB.jpg
rotation started
['"enep', 'uoosun', "'Mou", '01', 'ITOM', 'ozije.oues', 'gou', 'op', '1841', 'ejep', 'Sururen', 'aua', 'ul', 'smeop', 'JO', 'osTOU', 'oytads', 'omgdes', '01', 'UIBOT', 'Keur', 'lapour', 'au', 'se', "'sasean", '-UII', 'Sumayono', 'Jo', 'YSII', 'ouy', "'WAS", 'UI', 'pegourered', 'D', 'aua', 'Jo', 'anTBA', 'y8r4', 'B', 'Y1IM', 'OT', 'JoyL', "'IAS", '9S0.I-SA-3UO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'Ouo-SA-Quo', 'Bursn', 'anyL', 'uoporpad', 'B', 'Suryeur', "'sossepp", 'Jo', 'poqunu', '081eT', 'B', 'YAIM', 'surarqoud', 'sseprmu', 'JOE', '6', 'apeds', 'Teursto', 'ou1', 'UI', 'IBOUII-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorsiap', 'AUL', '8', '35743', '35', '741', '35781', 'sapou', 'Jo', 'raqunu', 'ay1', '01', 'reuoruodoad', 'Appamp', 'SI', 'DOIL', 'UOISIOOI', 'auy', 'UI', 'uororpard', 'e', 'Suryeur', 'JOJ', 'parmbar', 'AUIL', 'AUL', 'L', '"uornquasip', 'uerssneD', 'B', 'siemTe', 'SI', 'suornquasip', 'ueissnes', 'OMI', 'Jo', 'amgxt', 'V', '9', 'TeDay', 'pue', 'UOISDO', '35743', '-ald', 'uoamgaq', 'nord', 'B', 'SI', 'DAINO', '(DOH)', 'orgsuteg0ereuD', 'Surerado', 'IAATODOH', 'AUL', 'S', '36744', 'SI', 'quaosap', 'quorpers', 'OTIYM', "'sau810M", 'ayn', 'agepdn', '01', 'pasn', 'SI', 'uone@odoxdypeg', '1', 'YIOMIOU', 'Temneu', 'ay7', 'UI', 'squarpe1s', 'au7', 'agnduoo', '01', 'pasn', '-f', 'pue', 'I', 'sIOgDaA', 'Kue', 'JOJ', 'ouIgouI', 'aouensip', 'PITBA', 'B', 'SI', "(@'z)Aguopusgauasoo", '-', 'I', 'E', 'JOLL', 'pergorsuouup-p', '"Jayissel', 'reaull-uou', 'e', 'SI', 'NNY', '2', '3nXL', 'quauLiordap', '108101', 'yonur', 'SI', 'NNX', 'JOJ', 'quouammbar', 'a8e1oqs', 'aui', 'ATeoudiL', 'I', 'JAyL', 'JOJ', 'WAS', 'ueya', 'quauagess', 'NS', 'asTVA/ANaL', ':aJau', 'paqumnu', 'ITOJI', 'mor', 'OHM', 'A', 'h60', '1O', 'ANUL', 'O1UM', '(sid', 'O1)', '6', 'S101101', 'Tendes', 'ul', 'ASTVA', 'Supumpureyy', 'reop', 'pure', '00']
rotation started
['ERU', 'SAU', 'y', '*', ':', 'I', '-', ':', '-', ':', ':', ':', ':', ':', '5', 'E', 'a', 'I', '1', 'iis', '2', 's', 'I', 'is', 'E', 'I', 'I', 'I', 'I', 'is', 'I', 'I', 'd', '1', 'e', 'I', 'E', 'I', 'of', 'E', 'e', 'a', 'I', '1', 'I', 'I', 'E', 'à', 'I', 'a', 'a', 'is', '', 'I', 'I', 'à', 'E', 'a', 'i', 'e', '1', 'I', 'iE', 'I', 'I', 'I', '8', 'is', 'e', 'I', '-', 'de', 'I', '-', 'iE', 'a', '-', ':', 'a', 'o', '', 'i', 'E', 'a', 'I', 'is', 'I', '8', 'of', 'E', '0', 'E', 'I', 'S', 'I', 'E', 'I', 'of', 'I', 'I', 'I', 'I', '1', 'is', 'de', '-', 'E', 'I', 'e', 'e', 'E', 'of', 'de', 'E', 'I', 'I', '8', 'I', 'à', 'a', '1', 'of', '1', 'e', 'I', '5', '8', 'S', 'à', 'I', 'I', 'a', 'I', 'I', 'I', 'of', 'e', '€', '1', 'I', 'I', ':', 'e', 'I', '3', '5', 'E', 'I', '1', 'E', '-', 's', 'E', 'à', 'E', 'e', 'oi', ':', '1', 'I', 'I', 'iE', 'o', 'be', 'E', 'I', 'I', 'i', '2', 'I', ':', 'I', 'e', 'I', '1', 'I', 'is', 'e', 's', 'I', 'I', 'E', 'a', 'I', '.s', 'H', '9', 'I', 'E', 'I', 'I', 'a', '1', 'I', 'I', '2', '62', 'T', 'à', 'à', 'A', 'à', 'à', 'E', 'I', 'E', 'I', '7', '1', '4', 'iD', '6', '', '00', '', 'o9']
rotation started
['A', 'and', 'clear', 'handwriting.', 'in', 'capital', 'letters', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', '094', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', 'much', 'larger', 'than', 'SVM', 'for', 'TRUE', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'deployment.', 'TRUE', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', 'cosineSimalaritylr,', 'y)', 'is', 'a', 'valid', 'metric', 'for', 'd-dimensiofial', '-', 'vectors', 'I', 'and', 'y.', 'distance', 'any', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'FAL', 'SE', 'FALSE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'TRUE']
rotation done for:  7pahTUB.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6657.343749999999
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
first t/f detection
A
((6520.562500000001, 162.5625), (6628.937500000001, 279.96875))
TRUE
((5518.093750000001, 2257.8125), (6087.062500000001, 2519.71875))
TRUE
((5518.093750000001, 2817.75), (5987.71875, 3052.5625))
TRUE
((5463.906250000001, 3287.375), (6050.937499999999, 3531.21875))
FALSE
((5527.125, 3883.4375), (6123.1875, 4136.3125))
FALSE
((5509.062499999999, 4461.4375), (6123.1875, 4714.3125))
FALSE
((5545.187500000001, 5030.40625), (6087.062500000001, 5238.125))
FAL
((5635.5, 5491.0), (6032.875000000001, 5716.78125))
collision happend with box:5491.0 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((5951.593750000001, 5463.90625), (6267.687499999999, 5662.59375))
text1 i.e the prev text is the winner
FALSE
((5644.531249999999, 6023.84375), (6150.28125, 6249.625))
TRUE
((5653.562500000001, 6493.46875), (6231.5625, 6755.375))
the
((5229.09375, 7315.3125), (5445.84375, 7468.84375))
TRUE
((5707.750000000001, 7143.71875), (6276.718750000001, 7396.59375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2528, '2': 3079, '3': 3449, '4': 4018, '5': 4587, '6': 5165, '7': 5563, '8': 6168, '9': 6574, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MBJiE0X.jpg
OCR detection done with doctr
left top x of T/F: 5074.59375
bottom right x of T/F: 6259.968750000001
left top x of SN: 366.40625
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5192.96875, 1878.5), (5861.281249999999, 2185.5625))
TRUE
((5418.75, 2474.5625), (5951.593750000001, 2745.5))
d-dimensional
((4226.625, 3025.46875), (5129.75, 3305.4375))
collision happend with box:3025.46875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5310.375, 2890.0), (6069.0, 3188.03125))
true and false collision so given priority to text2 which is the incoming text
descentis
((4515.625, 3630.5625), (5174.90625, 3874.40625))
collision happend with box:3630.5625 and text:descentis solving on the basis of percent match boxes
the current box specification are
TRUE
((5373.593749999999, 3603.46875), (6023.843749999999, 3856.34375))
text2 i.e the incoming text is the winner
Pre
((4894.9375, 4226.625), (5192.96875, 4398.21875))
collision happend with box:4226.625 and text:Pre solving on the basis of percent match boxes
the current box specification are
FALSE
((5400.687499999999, 4163.40625), (6114.156250000001, 4425.3125))
text2 i.e the incoming text is the winner
FALSG
((5463.906250000001, 4624.0), (6141.250000000001, 4913.0))
FALSE
((5527.125, 5129.75), (6195.437500000001, 5418.75))
TRUE
((5572.281250000001, 5635.5), (6204.46875, 5879.34375))
distribation.
((4488.53125, 4804.625), (5229.09375, 5012.34375))
directly
((4795.59375, 5192.96875), (5301.343750000001, 5364.5625))
space.
((4931.0625, 5780.0), (5301.343750000001, 5951.59375))
prediction
((4768.5, 6141.25), (5391.65625, 6348.96875))
overfitting
((4605.9375, 6728.28125), (5238.124999999999, 6926.96875))
details
((4660.125, 6926.96875), (5075.5625, 7098.5625))
collision happend with box:6926.96875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5220.062500000001, 6908.90625), (5454.874999999999, 7053.40625))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['2', '3']
['2', '3', '2', '3']
printing the number dict y_coordinate
{'2': 3124, '3': 4687, '1': 2824}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kK8CqVE.jpg
OCR detection done with doctr
left top x of T/F: 5598.40625
bottom right x of T/F: 6846.999999999999
left top x of SN: 258.03125
bottom right x of SN: 672.8437500000001
first t/f detection
Falbe
((5734.843750000001, 2023.0), (6159.312499999999, 2239.75))
false
((5689.6875, 2591.96875), (6114.156250000001, 2862.90625))
Thul
((5662.59375, 3197.0625), (6041.90625, 3377.6875))
THue
((5662.59375, 3747.96875), (6041.90625, 3919.5625))
TAul
((5734.843750000001, 4217.59375), (6114.156250000001, 4389.1875))
False
((5671.624999999999, 4831.71875), (6150.28125, 5102.65625))
Tuue
((5716.78125, 5698.71875), (6159.312499999999, 5879.34375))
Tau
((5716.78125, 6231.5625), (6195.437500000001, 6412.1875))
false
((5951.593750000001, 6791.5), (6403.156249999999, 7017.28125))
TMue
((5825.15625, 7486.90625), (6276.718750000001, 7667.53125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1923, '2': 2528, '3': 3133, '4': 3747, '5': 4154, '6': 4768, '7': 5599, '8': 6231, '9': 6656, '10': 7495}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xKeed9J.jpg
OCR detection done with doctr
left top x of T/F: 5146.84375
bottom right x of T/F: 6323.1875
left top x of SN: 637.34375
bottom right x of SN: 1043.125
first t/f detection
TRUE.
((5355.531250000001, 2059.125), (5870.312500000001, 2312.0))
FALSE
((5436.812500000001, 2492.625), (5906.4375, 2727.4375))
FALSE.
((5436.812500000001, 2935.15625), (5987.71875, 3188.03125))
FALSE
((5346.499999999999, 3513.15625), (5779.999999999999, 3738.9375))
FALSE
((5373.593749999999, 4109.21875), (5825.15625, 4325.96875))
distribution.
((4425.3125, 4651.09375), (5156.84375, 4813.65625))
directly
((4705.28125, 5030.40625), (5165.875, 5192.96875))
space.
((4804.625, 5626.46875), (5165.875, 5761.9375))
TRUE
((5409.718750000001, 4651.09375), (5834.187499999999, 4822.6875))
FALSE
((5454.874999999999, 5057.5), (5870.312500000001, 5274.25))
FALSE
((5463.906250000001, 5581.3125), (5897.406250000001, 5761.9375))
prediction
((4605.9375, 5987.71875), (5202.0, 6141.25))
collision happend with box:5987.71875 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5418.75, 5996.75), (5852.25, 6222.53125))
text2 i.e the incoming text is the winner
the
((5021.375, 6737.3125), (5238.124999999999, 6881.8125))
collision happend with box:6737.3125 and text:the solving on the basis of percent match boxes
the current box specification are
TROE
((5491.000000000001, 6728.28125), (5834.187499999999, 6926.96875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2221, '2': 2754, '3': 3115, '4': 3666, '5': 4208, '6': 4777, '7': 5138, '8': 5698, '9': 6087, '10': 6637}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TAJCbig.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6910.218750000001
left top x of SN: 176.75
bottom right x of SN: 591.5625000000001
first t/f detection
TRUE
((5698.718749999999, 2032.03125), (6249.625000000001, 2257.8125))
TRUE
((5653.562500000001, 2691.3125), (6267.687499999999, 2908.0625))
FALSE
((5608.40625, 3251.25), (6222.531250000001, 3513.15625))
ERTRUE
((5563.249999999999, 3847.3125), (6520.562500000001, 4046.0))
TRUE
((5653.562500000001, 4298.875), (6204.46875, 4506.59375))
FALSE
((5563.249999999999, 4994.28125), (6132.218749999999, 5192.96875))
TRME
((5590.343749999999, 5789.03125), (6150.28125, 5996.75))
FALSE
((5563.249999999999, 6348.96875), (6150.28125, 6547.65625))
TRUE
((5581.3125, 6881.8125), (6240.593749999999, 7125.65625))
TRUE
((5617.437499999999, 7532.0625), (6195.437500000001, 7703.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2790, '3': 3404, '4': 4009, '5': 4416, '6': 5021, '7': 5816, '8': 6430, '9': 6827, '10': 7622}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UnyTYcI.jpg
OCR detection done with doctr
left top x of T/F: 5490.03125
bottom right x of T/F: 6756.6875
left top x of SN: 438.6562500000001
bottom right x of SN: 853.4687499999999
first t/f detection
FALSE
((5527.125, 1770.125), (6123.1875, 1986.875))
TRU
((5527.125, 2402.3125), (5915.468749999999, 2637.125))
FALSE
((5518.093750000001, 2926.125), (6132.218749999999, 3133.84375))
TRrE
((5563.249999999999, 3477.03125), (6114.156250000001, 3702.8125))
TRUE
((5454.874999999999, 3892.46875), (6114.156250000001, 4181.46875))
FALSE
((5481.968749999999, 4551.75), (6150.28125, 4795.59375))
T
((5500.03125, 5346.5), (5617.437499999999, 5500.03125))
collision happend with box:5346.5 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5635.5, 5310.375), (6078.031249999999, 5527.125))
text2 i.e the incoming text is the winner
T
((5500.03125, 5843.21875), (5689.6875, 6023.84375))
collision happend with box:5843.21875 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5680.656250000001, 5816.125), (6096.09375, 6014.8125))
text2 i.e the incoming text is the winner
TRUE
((5608.40625, 6213.5), (6213.499999999999, 6520.5625))
TRVE
((5554.21875, 6899.875), (6078.031249999999, 7152.75))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1914, '2': 2492, '3': 3070, '4': 3657, '5': 4046, '6': 4633, '7': 5409, '8': 5996, '9': 6394, '10': 7179}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 8M5CU9m.jpg
OCR detection done with doctr
left top x of T/F: 1258.9599609375
bottom right x of T/F: 1751.791015625
left top x of SN: -9.990234375000021
bottom right x of SN: 235.08593749999997
first t/f detection
Tyut
((1346.55078125, 583.1826171875), (1451.673828125, 645.755859375))
collision happend with box:583.1826171875 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1359.0654296875, 715.837890625), (1474.2001953125, 780.9140625))
text2 i.e the incoming text is the winner
collision happend with box:715.837890625 and text:True solving on the basis of percent match boxes
the current box specification are
for
((1208.8896484375, 590.69140625), (1261.451171875, 633.2412109375))
text1 i.e the prev text is the winner
collision happend with box:715.837890625 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((1066.22265625, 850.99609375), (1291.486328125, 921.078125))
text2 i.e the incoming text is the winner
collision happend with box:850.99609375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
su
((1421.6386718749998, 856.001953125), (1481.708984375, 898.5517578125))
text1 i.e the prev text is the winner
collision happend with box:850.99609375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
fask
((1486.7148437500002, 818.4580078125), (1589.3349609375, 888.5400390625))
text2 i.e the incoming text is the winner
descent
((1143.8134765625, 1018.6923828125), (1266.45703125, 1068.7509765625))
collision happend with box:1018.6923828125 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((1268.9599609375, 1013.6865234375), (1304.0009765625, 1053.7333984375))
text1 i.e the prev text is the winner
collision happend with box:1018.6923828125 and text:descent solving on the basis of percent match boxes
the current box specification are
Pre-
((1243.9306640625, 1171.37109375), (1316.515625, 1213.9208984375))
text1 i.e the prev text is the winner
collision happend with box:1018.6923828125 and text:descent solving on the basis of percent match boxes
the current box specification are
falke
((1396.609375, 991.16015625), (1529.2646484375, 1063.7451171875))
text2 i.e the incoming text is the winner
collision happend with box:991.16015625 and text:falke solving on the basis of percent match boxes
the current box specification are
falk
((1411.626953125, 1141.3359375), (1529.2646484375, 1201.40625))
text2 i.e the incoming text is the winner
collision happend with box:1141.3359375 and text:falk solving on the basis of percent match boxes
the current box specification are
fasu
((1424.1416015625, 1278.9970703125), (1549.2880859375, 1354.0849609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1278.9970703125 and text:fasu solving on the basis of percent match boxes
the current box specification are
Faln
((1456.6796875, 1414.1552734375), (1574.3173828125, 1479.2314453125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1414.1552734375 and text:Faln solving on the basis of percent match boxes
the current box specification are
distribution.
((1136.3046875, 1326.552734375), (1336.5390625, 1386.623046875))
text2 i.e the incoming text is the winner
collision happend with box:1326.552734375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1218.9013671875002, 1429.1728515625), (1349.0537109375, 1486.740234375))
text1 i.e the prev text is the winner
space.
((1256.4453125, 1594.3662109375), (1359.0654296875, 1641.921875))
collision happend with box:1594.3662109375 and text:space. solving on the basis of percent match boxes
the current box specification are
OThe
((1401.6152343749998, 1556.822265625), (1559.2998046875, 1629.4072265625))
text1 i.e the prev text is the winner
collision happend with box:1594.3662109375 and text:space. solving on the basis of percent match boxes
the current box specification are
original
((1133.8017578125, 1596.869140625), (1261.451171875, 1654.4365234375))
text2 i.e the incoming text is the winner
collision happend with box:1596.869140625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1213.8955078125, 1694.4833984375), (1376.5859375, 1754.5537109375))
text1 i.e the prev text is the winner
collision happend with box:1596.869140625 and text:original solving on the basis of percent match boxes
the current box specification are
Tyue
((1461.685546875, 1681.96875), (1584.3291015625, 1742.0390625))
text1 i.e the prev text is the winner
overfitting
((1171.345703125, 1857.173828125), (1341.5449218749998, 1917.244140625))
collision happend with box:1857.173828125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Trut
((1491.720703125, 1859.6767578125), (1609.3583984375, 1924.7529296875))
text2 i.e the incoming text is the winner
collision happend with box:1859.6767578125 and text:Trut solving on the basis of percent match boxes
the current box specification are
details
((1186.36328125, 1914.7412109375), (1298.9951171875, 1962.296875))
text2 i.e the incoming text is the winner
collision happend with box:1914.7412109375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1339.0419921875, 1904.7294921875), (1401.6152343749998, 1949.7822265625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 705, '2': 866, '3': 973, '4': 1133, '5': 1291, '6': 1449, '7': 1554, '8': 1712, '9': 1819, '10': 1979}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eDELdBV.jpg
OCR detection done with doctr
left top x of SN: 77.48339843750003
bottom right x of SN: 317.908203125
left top x of T/F: 1337.732421875
bottom right x of T/F: 1806.3505859375
first t/f detection
folbe
((1350.1494140625, 628.41796875), (1509.6708984375, 732.3486328125))
collision happend with box:628.41796875 and text:folbe solving on the basis of percent match boxes
the current box specification are
Trobl
((1367.068359375, 773.4375), (1514.5048828125002, 845.947265625))
text2 i.e the incoming text is the winner
collision happend with box:773.4375 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falke
((1526.5898437500002, 766.1865234375), (1618.435546875, 836.279296875))
text2 i.e the incoming text is the winner
collision happend with box:766.1865234375 and text:Falke solving on the basis of percent match boxes
the current box specification are
alefue
((1410.57421875, 891.8701171875), (1613.6015625, 1000.634765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:891.8701171875 and text:alefue solving on the basis of percent match boxes
the current box specification are
Trve
((1490.3349609375, 1046.5576171875), (1616.0185546875, 1135.986328125))
text1 i.e the prev text is the winner
Falne
((1340.4814453124998, 1196.4111328125), (1500.0029296875, 1295.5078125))
collision happend with box:1196.4111328125 and text:Falne solving on the basis of percent match boxes
the current box specification are
True
((1345.3154296875, 1307.5927734375), (1502.4199218750002, 1404.2724609375))
text2 i.e the incoming text is the winner
collision happend with box:1307.5927734375 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((1352.5664062499998, 1440.52734375), (1495.1689453124998, 1527.5390625))
text2 i.e the incoming text is the winner
collision happend with box:1440.52734375 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falw
((1367.068359375, 1580.712890625), (1497.5859375, 1650.8056640625))
text2 i.e the incoming text is the winner
collision happend with box:1580.712890625 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falue
((1359.8173828125, 1706.396484375), (1507.25390625, 1795.8251953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1706.396484375 and text:Falue solving on the basis of percent match boxes
the current box specification are
falx
((1357.400390625, 1863.5009765625), (1516.921875, 1960.1806640625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 874, '2': 771, '3': 874, '4': 1029, '5': 1181, '6': 1336, '7': 1440, '8': 1595, '9': 1699, '10': 1853}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ICIXFCp.jpg
OCR detection done with doctr
left top x of SN: 899.2500000000001
bottom right x of SN: 1305.03125
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5445.84375, 2357.15625), (6069.0, 2528.75))
TRUE
((5527.125, 2853.875), (6186.406249999999, 3016.4375))
False
((5572.281250000001, 3314.46875), (6168.343750000001, 3531.21875))
False
((5527.125, 3892.46875), (6087.062500000001, 4091.15625))
False
((5472.9375, 4479.5), (6050.937499999999, 4696.25))
false
((5292.312499999999, 4958.15625), (5897.406250000001, 5165.875))
True
((5418.75, 5454.875), (5915.468749999999, 5635.5))
True
((5454.874999999999, 5879.34375), (5942.562499999999, 6087.0625))
Trrue
((5491.000000000001, 6403.15625), (5987.71875, 6619.90625))
True
((5427.781249999999, 6945.03125), (5987.71875, 7143.71875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 2230, '2': 2772, '3': 3124, '4': 3675, '5': 4208, '6': 4768}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : My1dMYr.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6594.125
left top x of SN: 429.6249999999999
bottom right x of SN: 871.53125
first t/f detection
True
((5436.812500000001, 1986.875), (5969.656249999999, 2248.78125))
Folse
((5427.781249999999, 2564.875), (5906.4375, 2835.8125))
True
((5500.03125, 3088.6875), (5996.749999999999, 3305.4375))
fale
((5355.531250000001, 3639.59375), (5779.999999999999, 3865.375))
Toue
((5382.625000000001, 4235.65625), (5951.593750000001, 4443.375))
Tsue
((5346.499999999999, 4840.75), (5951.593750000001, 5048.46875))
True
((5445.84375, 5283.28125), (5978.687500000001, 5554.21875))
False
((5364.5625, 5770.96875), (5915.468749999999, 6041.90625))
Tyuc
((5436.812500000001, 6267.6875), (5915.468749999999, 6493.46875))
True
((5500.03125, 6782.46875), (5969.656249999999, 7062.4375))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are ['2', '4']
the assigned keys are ['1', '3', '5', '6', '7', '8', '9', '10']
['1', '3', '5', '6', '7', '8', '9', '10', '1', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2212, '3': 3160, '5': 4344, '6': 4922, '7': 5319, '8': 5915, '9': 6312, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Zcai4vg.jpg
OCR detection done with doctr
left top x of T/F: 5264.250000000001
bottom right x of T/F: 6476.718750000001
left top x of SN: 465.7500000000001
bottom right x of SN: 880.5624999999999
first t/f detection
TRVE
((5229.09375, 2095.25), (5879.34375, 2348.125))
FALSE
((5319.406249999999, 2610.03125), (5969.656249999999, 2862.90625))
TRVE
((5301.343750000001, 3142.875), (5942.562499999999, 3404.78125))
TRUE
((5310.375, 3775.0625), (5960.625, 3991.8125))
FALSE
((5310.375, 4344.03125), (6050.937499999999, 4605.9375))
TRVE
((5301.343750000001, 4922.03125), (5951.593750000001, 5138.78125))
FALSE
((5265.218749999999, 5373.59375), (6050.937499999999, 5662.59375))
PALSE
((5346.499999999999, 5843.21875), (5969.656249999999, 6087.0625))
TRVE
((5328.437500000001, 6376.0625), (6014.8125, 6619.90625))
TRVE
((5409.718750000001, 7008.25), (6096.09375, 7215.96875))
a4
((5463.906250000001, 7324.34375), (5798.0625, 7504.96875))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2321, '2': 2890, '3': 3269, '4': 3838, '5': 4407, '6': 4985, '7': 5373, '8': 5960, '9': 6348, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XXfy8uN.jpg
OCR detection done with doctr
left top x of T/F: 4912.03125
bottom right x of T/F: 6133.53125
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:48:18] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : XXfy8uN.jpg
[2024/06/28 14:48:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:48:20] ppocr DEBUG: dt_boxes num : 34, elapsed : 0.12332463264465332
[2024/06/28 14:48:22] ppocr DEBUG: rec_res num  : 34, elapsed : 2.077007532119751
OCR detection done
left top x of T/F: 4932.0
bottom right x of T/F: 5955.0
left top y of T/F: 1328.0
bottom right y of T/F: 1696.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
first t/f detection
eployment.
[[813.0, 2481.0], [1407.0, 2414.0], [1424.0, 2559.0], [830.0, 2626.0]]
first t/f detection
FALS
[[5176.0, 2499.0], [5690.0, 2441.0], [5711.0, 2616.0], [5197.0, 2675.0]]
first t/f detection
first t/f detection
False
[[5229.0, 3901.0], [5834.0, 3825.0], [5865.0, 4066.0], [5260.0, 4141.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[5340.0, 5450.0], [5964.0, 5387.0], [5990.0, 5638.0], [5366.0, 5700.0]]
first t/f detection
first t/f detection
the true list is  [1800, 1941, 2746, 4457, 4928, 5926, 6479]
the false list is  []
the true list for xdirn [4983, 733, 5123, 5234, 5274, 5417, 5540]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : JmeCIC1.jpg
OCR detection done with doctr
left top x of T/F: 5056.53125
bottom right x of T/F: 6350.28125
left top x of SN: 113.53125000000014
bottom right x of SN: 528.3437499999999
first t/f detection
FALSE
((5202.0, 1724.96875), (5834.187499999999, 2032.03125))
FALSE
((5229.09375, 2284.90625), (5897.406250000001, 2573.90625))
d-dimensional
((4190.5, 2853.875), (5120.71875, 3142.875))
collision happend with box:2853.875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((5211.031249999999, 2754.53125), (5816.125000000001, 3070.625))
text2 i.e the incoming text is the winner
is
((5021.375, 3513.15625), (5147.8125, 3648.625))
collision happend with box:3513.15625 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5192.96875, 3449.9375), (5843.218750000001, 3747.96875))
text2 i.e the incoming text is the winner
Pre-
((4903.96875, 4109.21875), (5211.031249999999, 4298.875))
collision happend with box:4109.21875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5310.375, 4064.0625), (5933.53125, 4316.9375))
text2 i.e the incoming text is the winner
FALSE
((5418.75, 4624.0), (6059.968750000001, 4867.84375))
collision happend with box:4624.0 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4452.40625, 4705.28125), (5265.218749999999, 4940.09375))
text2 i.e the incoming text is the winner
directly
((4795.59375, 5129.75), (5283.28125, 5310.375))
collision happend with box:5129.75 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5373.593749999999, 5093.625), (6032.875000000001, 5355.53125))
true and false collision so given priority to text2 which is the incoming text
FALS
((5536.156249999999, 5599.375), (6059.968750000001, 5852.25))
collision happend with box:5599.375 and text:FALS solving on the basis of percent match boxes
the current box specification are
space.
((4931.0625, 5743.875), (5337.46875, 5924.5))
text1 i.e the prev text is the winner
prediction
((4759.46875, 6132.21875), (5400.687499999999, 6339.9375))
collision happend with box:6132.21875 and text:prediction solving on the basis of percent match boxes
the current box specification are
FALSE
((5572.281250000001, 6050.9375), (6339.9375, 6339.9375))
text2 i.e the incoming text is the winner
overfitting
((4605.9375, 6746.34375), (5256.1875, 6963.09375))
details
((4642.0625, 6954.0625), (5084.59375, 7161.78125))
collision happend with box:6954.0625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5247.156250000001, 6926.96875), (5472.9375, 7089.53125))
text1 i.e the prev text is the winner
TRUE
((5563.249999999999, 6701.1875), (6231.5625, 6990.1875))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'1': 2312, '2': 2908, '3': 3314, '4': 3910}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : O63hzUh.jpg
OCR detection done with doctr
left top x of SN: 1007.6250000000002
bottom right x of SN: 1413.40625
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6558.000000000001
first t/f detection
TRUE
((5436.812500000001, 2266.84375), (5906.4375, 2474.5625))
TRUE
((5391.65625, 2763.5625), (5870.312500000001, 2980.3125))
TRUE
((5355.531250000001, 3197.0625), (5816.125000000001, 3404.78125))
FALSE
((5265.218749999999, 3775.0625), (5816.125000000001, 3973.75))
FALSE
((5274.250000000001, 4335.0), (5816.125000000001, 4551.75))
FALSE
((5238.124999999999, 4840.75), (5770.96875, 5012.34375))
GALSE
((5183.9375, 5229.09375), (5689.6875, 5445.84375))
TRUE
((5138.78125, 5770.96875), (5563.249999999999, 5951.59375))
TRUE
((5066.53125, 6150.28125), (5527.125, 6376.0625))
TRUE
((5075.5625, 6701.1875), (5536.156249999999, 6917.9375))
the final dict without editing {'1': 'NULL', '2': True, '3': True, '4': False, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'2': 2682, '3': 3025, '1': 3043, '4': 3567}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': True, '4': False, '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zxomqZY.jpg
OCR detection done with doctr
left top x of T/F: 5345.531250000001
bottom right x of T/F: 6630.249999999999
left top x of SN: 375.4374999999999
bottom right x of SN: 790.25
first t/f detection
Tmue
((5572.281250000001, 2149.4375), (6087.062500000001, 2429.40625))
Tme
((5554.21875, 2682.28125), (6168.343750000001, 2935.15625))
Falie
((5617.437499999999, 3197.0625), (6195.437500000001, 3413.8125))
Falle
((5563.249999999999, 3838.28125), (6150.28125, 4091.15625))
Tre
((5518.093750000001, 4515.625), (6168.343750000001, 4759.46875))
False
((5554.21875, 5003.3125), (6087.062500000001, 5174.90625))
False
((5572.281250000001, 5500.03125), (6096.09375, 5680.65625))
True
((5572.281250000001, 6005.78125), (6087.062500000001, 6222.53125))
Fale
((5581.3125, 6457.34375), (6059.968750000001, 6683.125))
True
((5608.40625, 7125.65625), (6114.156250000001, 7306.28125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6910
printing the number dict y_coordinate
{'1': 2393, '2': 2998, '3': 3404, '4': 4009, '5': 4614, '6': 5211, '7': 5608, '8': 6204, '9': 6610, '10': 6910}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WmsdhW5.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 616.9921875))
text2 i.e the incoming text is the winner
T.
((900.98828125, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
text2 i.e the incoming text is the winner
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4eC8euy.jpg
OCR detection done with doctr
left top x of SN: 393.5
bottom right x of SN: 808.3125000000001
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6856.031250000001
first t/f detection
FALSE
((5770.96875, 1824.3125), (6439.281250000001, 2032.03125))
TRUE
((5770.96875, 2429.40625), (6367.03125, 2637.125))
FALSE
((5779.999999999999, 3034.5), (6421.21875, 3242.21875))
TRUE
((5716.78125, 3585.40625), (6303.812500000001, 3784.09375))
TRUE
((5779.999999999999, 4082.125), (6403.156249999999, 4280.8125))
FALSE
((5743.875, 4723.34375), (6385.093750000001, 4931.0625))
TRUE
((5816.125000000001, 5472.9375), (6376.062499999999, 5644.53125))
TRUE
((5825.15625, 5987.71875), (6394.125, 6204.46875))
FALS
((5716.78125, 6601.84375), (6177.375, 6827.625))
FALSE
((5779.999999999999, 7197.90625), (6403.156249999999, 7405.625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2438, '3': 3034, '4': 3639, '5': 4036, '6': 4651, '7': 5454, '8': 6078, '9': 6493, '10': 7306}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : il7ZzYK.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6431.5625
left top x of SN: 763.7812500000001
bottom right x of SN: 1169.5625
first t/f detection
TRUE
((5292.312499999999, 1923.65625), (5725.812499999999, 2095.25))
TRUE
((5310.375, 2393.28125), (5698.718749999999, 2573.90625))
TRUE
((5328.437500000001, 2908.0625), (5680.656250000001, 3079.65625))
PALSE
((5337.46875, 3440.90625), (5770.96875, 3612.5))
TRUE
((5292.312499999999, 4009.875), (5689.6875, 4172.4375))
TRUE
((5355.531250000001, 4488.53125), (5743.875, 4651.09375))
FALSE
((5409.718750000001, 4958.15625), (5779.999999999999, 5129.75))
TRUG
((5400.687499999999, 5427.78125), (5761.937500000001, 5599.375))
TRUE
((5427.781249999999, 5924.5), (5816.125000000001, 6087.0625))
the
((5066.53125, 6619.90625), (5283.28125, 6755.375))
collision happend with box:6619.90625 and text:the solving on the basis of percent match boxes
the current box specification are
FALSE
((5454.874999999999, 6583.78125), (5906.4375, 6746.34375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2050, '2': 2591, '3': 2953, '4': 3504, '5': 4046, '6': 4605, '7': 4967, '8': 5536, '9': 5915, '10': 6493}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : iw06r3Q.jpg
OCR detection done with doctr
left top x of SN: 97.98828125
bottom right x of SN: 318.271484375
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1333.7890625
first t/f detection
F
((1003.271484375, 425.390625), (1043.5546875, 472.119140625))
T
((988.76953125, 802.44140625), (1059.66796875, 852.392578125))
collision happend with box:802.44140625 and text:T solving on the basis of percent match boxes
the current box specification are
AT
((950.0976562499999, 881.396484375), (1050.0, 928.125))
text2 i.e the incoming text is the winner
collision happend with box:881.396484375 and text:AT solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 971.630859375), (1024.21875, 1021.58203125))
text1 i.e the prev text is the winner
T
((980.712890625, 1053.80859375), (1019.384765625, 1098.92578125))
collision happend with box:1053.80859375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((966.2109375, 1134.375), (1014.5507812499999, 1184.326171875))
text2 i.e the incoming text is the winner
collision happend with box:1134.375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1035.498046875, 1255.224609375), (1067.724609375, 1303.564453125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 512, '3': 581, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1061, '9': 1131, '10': 1235}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1NFTcys.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6810.875
left top x of SN: 276.0937500000001
bottom right x of SN: 690.9062499999999
first t/f detection
True
((5617.437499999999, 1715.9375), (6168.343750000001, 1968.8125))
Falg
((5626.468750000001, 2348.125), (6177.375, 2610.03125))
False
((5554.21875, 2971.28125), (6096.09375, 3197.0625))
Gale
((5554.21875, 3558.3125), (6041.90625, 3738.9375))
Falje
((5626.468750000001, 4687.21875), (6141.250000000001, 4913.0))
Trw
((5581.3125, 5436.8125), (6069.0, 5599.375))
Fals
((6041.90625, 5933.53125), (6484.437499999999, 6141.25))
collision happend with box:5933.53125 and text:Fals solving on the basis of percent match boxes
the current box specification are
Tne
((5518.093750000001, 5942.5625), (5978.687500000001, 6159.3125))
text1 i.e the prev text is the winner
Trwe
((5500.03125, 6520.5625), (6023.843749999999, 6782.46875))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2492, '3': 3079, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6059, '9': 6457, '10': 7234}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': 'NULL', '6': False, '7': True, '8': False, '9': True, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D2hIAB7.jpg
OCR detection done with doctr
left top x of T/F: 5074.59375
bottom right x of T/F: 6305.124999999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
FALSE
((5147.8125, 2194.59375), (5635.5, 2411.34375))
FALSE
((5220.062500000001, 2754.53125), (5653.562500000001, 2935.15625))
d-dimensional
((4307.90625, 3151.90625), (5129.75, 3386.71875))
collision happend with box:3151.90625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5292.312499999999, 3169.96875), (5743.875, 3386.71875))
true and false collision so given priority to text2 which is the incoming text
is
((5030.40625, 3729.90625), (5156.84375, 3856.34375))
collision happend with box:3729.90625 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5301.343750000001, 3684.75), (5698.718749999999, 3874.40625))
text2 i.e the incoming text is the winner
Pre-
((4940.09375, 4280.8125), (5192.96875, 4425.3125))
collision happend with box:4280.8125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5310.375, 4253.71875), (5779.999999999999, 4461.4375))
text2 i.e the incoming text is the winner
TRUE
((5337.46875, 4768.5), (5789.031250000001, 4985.25))
collision happend with box:4768.5 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((4524.65625, 4831.71875), (5256.1875, 5030.40625))
text2 i.e the incoming text is the winner
directly
((4822.6875, 5211.03125), (5274.250000000001, 5382.625))
collision happend with box:5211.03125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRUE
((5418.75, 5220.0625), (5825.15625, 5400.6875))
text2 i.e the incoming text is the winner
TRUE
((5472.9375, 5707.75), (5915.468749999999, 5915.46875))
collision happend with box:5707.75 and text:TRUE solving on the basis of percent match boxes
the current box specification are
space.
((4940.09375, 5798.0625), (5319.406249999999, 5960.625))
text1 i.e the prev text is the winner
prediction
((4768.5, 6168.34375), (5355.531250000001, 6339.9375))
collision happend with box:6168.34375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUC
((5527.125, 6150.28125), (5996.749999999999, 6367.03125))
text2 i.e the incoming text is the winner
overfitting
((4596.90625, 6737.3125), (5220.062500000001, 6936.0))
collision happend with box:6737.3125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUE.
((5617.437499999999, 6827.625), (6114.156250000001, 6999.21875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:6827.625 and text:TRUE. solving on the basis of percent match boxes
the current box specification are
the
((5211.031249999999, 6917.9375), (5427.781249999999, 7071.46875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['2', '8', '9', '10']
the assigned keys are ['1', '3', '4', '5', '6', '7']
['1', '3', '4', '5', '6', '7', '1', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2564, '3': 3486, '4': 4046, '5': 4596, '6': 5156, '7': 5545}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vMtPuyM.jpg
OCR detection done with doctr
left top x of T/F: 5408.75
bottom right x of T/F: 6639.281250000001
left top x of SN: 357.3750000000001
bottom right x of SN: 799.2812499999999
first t/f detection
Tau
((5463.906250000001, 1851.40625), (5870.312500000001, 2032.03125))
Trul
((5518.093750000001, 2492.625), (5978.687500000001, 2655.1875))
Fale
((5581.3125, 3043.53125), (6069.0, 3269.3125))
Tgie
((5608.40625, 3585.40625), (6032.875000000001, 3747.96875))
Fuil
((5725.812499999999, 4091.15625), (6069.0, 4226.625))
Auil
((5770.96875, 4705.28125), (6105.124999999999, 4840.75))
the
((5183.9375, 5409.71875), (5427.781249999999, 5554.21875))
collision happend with box:5409.71875 and text:the solving on the basis of percent match boxes
the current box specification are
LR
((5960.625, 5436.8125), (6150.28125, 5536.15625))
text2 i.e the incoming text is the winner
the
((5211.031249999999, 6385.09375), (5436.812500000001, 6538.625))
collision happend with box:6385.09375 and text:the solving on the basis of percent match boxes
the current box specification are
Fotte
((5653.562500000001, 6412.1875), (6123.1875, 6683.125))
text2 i.e the incoming text is the winner
TguO
((5698.718749999999, 6683.125), (6240.593749999999, 6890.84375))
Tail
((5689.6875, 7098.5625), (6177.375, 7279.1875))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are ['1', '2', '3', '4']
the assigned keys are ['5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'5': 4190, '6': 4750, '7': 5509, '8': 6078, '9': 6466, '10': 7234}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': False, '6': False, '7': False, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : E6MwJ00.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
a
((1410.75, 141.3125), (1423.21875, 168.328125))
Tyw
((1136.4375, 529.921875), (1244.5, 606.8125))
collision happend with box:529.921875 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Trur
((1134.359375, 847.875), (1250.734375, 937.234375))
collision happend with box:847.875 and text:Trur solving on the basis of percent match boxes
the current box specification are
Trwv
((1123.96875, 1005.8125), (1246.578125, 1093.09375))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
collision happend with box:1103.484375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1254.890625, 1319.609375))
text2 i.e the incoming text is the winner
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Falve
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
collision happend with box:1332.078125 and text:Falve solving on the basis of percent match boxes
the current box specification are
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1438.0625 and text:false solving on the basis of percent match boxes
the current box specification are
Fale
((1119.8125, 1575.21875), (1275.671875, 1681.203125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rBUuCSx.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 871.53125
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6819.906249999999
first t/f detection
TRUE
((5698.718749999999, 1923.65625), (6213.499999999999, 2104.28125))
TRUE
((5662.59375, 2483.59375), (6186.406249999999, 2700.34375))
FALE
((5689.6875, 3088.6875), (6177.375, 3269.3125))
TRUE
((5635.5, 3585.40625), (6159.312499999999, 3811.1875))
FRUSE
((5689.6875, 4073.09375), (6240.593749999999, 4298.875))
TRVE
((5653.562500000001, 4280.8125), (6231.5625, 4479.5))
FALE
((5689.6875, 4687.21875), (6240.593749999999, 4913.0))
TRUE
((5671.624999999999, 4967.1875), (6267.687499999999, 5174.90625))
TRUE
((5671.624999999999, 5445.84375), (6168.343750000001, 5653.5625))
TRVE
((5725.812499999999, 5933.53125), (6213.499999999999, 6159.3125))
TRVE
((5743.875, 6502.5), (6303.812500000001, 6719.25))
TKUE
((5680.656250000001, 7143.71875), (6240.593749999999, 7351.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2492, '3': 3079, '4': 3684, '5': 4082, '6': 4678, '7': 5481, '8': 6087, '9': 6493, '10': 7297}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qJ7zBpR.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6494.781249999999
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:49:14] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : qJ7zBpR.jpg
[2024/06/28 14:49:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:49:16] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.1258852481842041
[2024/06/28 14:49:18] ppocr DEBUG: rec_res num  : 40, elapsed : 2.0854411125183105
OCR detection done
left top x of T/F: 5227.0
bottom right x of T/F: 6311.0
left top y of T/F: 1028.0
bottom right y of T/F: 1399.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
first t/f detection
first t/f detection
FAISE
[[5503.0, 2894.0], [6059.0, 2857.0], [6073.0, 3059.0], [5517.0, 3096.0]]
first t/f detection
first t/f detection
fALSE
[[5734.0, 3930.0], [6335.0, 3930.0], [6335.0, 4142.0], [5734.0, 4142.0]]
first t/f detection
will be zero.
[[607.0, 4541.0], [1371.0, 4485.0], [1383.0, 4649.0], [619.0, 4705.0]]
first t/f detection
first t/f detection
first t/f detection
first t/f detection
class label.
[[752.0, 5967.0], [1436.0, 5900.0], [1454.0, 6075.0], [770.0, 6142.0]]
first t/f detection
Faise
[[5970.0, 6387.0], [6493.0, 6387.0], [6493.0, 6589.0], [5970.0, 6589.0]]
first t/f detection
fAUSt
[[6090.0, 6893.0], [6714.0, 6941.0], [6698.0, 7143.0], [6074.0, 7095.0]]
the true list is  [1671, 1736, 2223, 3383, 4621, 5311, 5845]
the false list is  []
the true list for xdirn [271, 5388, 5508, 5649, 5609, 5651, 6001]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
['2', '3', '5', '7', '8', '10']
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': True, '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9tuGAkX.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 249.3984375
left top x of T/F: 810.931640625
bottom right x of T/F: 1183.294921875
first t/f detection
folse
((822.5234375000001, 404.31640625), (924.3984375, 471.171875))
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
Trok
((835.2578125, 498.232421875), (925.9902343750001, 545.986328125))
text1 i.e the prev text is the winner
collision happend with box:404.31640625 and text:folse solving on the basis of percent match boxes
the current box specification are
Fake
((929.1738281250001, 490.2734375), (992.8457031249999, 541.2109375))
text1 i.e the prev text is the winner
Frue
((914.84765625, 592.1484375), (988.0703125, 641.494140625))
collision happend with box:592.1484375 and text:Frue solving on the basis of percent match boxes
the current box specification are
True
((908.4804687499999, 679.697265625), (989.6621093749999, 738.59375))
text2 i.e the incoming text is the winner
collision happend with box:679.697265625 and text:True solving on the basis of percent match boxes
the current box specification are
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
True
((824.115234375, 854.794921875), (921.21484375, 913.69140625))
collision happend with box:854.794921875 and text:True solving on the basis of percent match boxes
the current box specification are
Tul
((828.8906250000001, 937.568359375), (918.03125, 994.873046875))
text2 i.e the incoming text is the winner
collision happend with box:937.568359375 and text:Tul solving on the basis of percent match boxes
the current box specification are
Falu
((836.849609375, 1031.484375), (919.6230468750001, 1079.23828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1031.484375 and text:Falu solving on the basis of percent match boxes
the current box specification are
Falke
((830.482421875, 1114.2578125), (925.9902343750001, 1171.5625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1114.2578125 and text:Falke solving on the basis of percent match boxes
the current box specification are
Falx
((830.482421875, 1219.31640625), (930.765625, 1282.98828125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 561, '4': 663, '5': 762, '6': 862, '7': 929, '8': 1029, '9': 1098, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : g9OnxRJ.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6639.281250000001
left top x of SN: 637.34375
bottom right x of SN: 1052.15625
first t/f detection
TRUE
((5454.874999999999, 2068.15625), (6050.937499999999, 2275.875))
FALSE
((5436.812500000001, 2582.9375), (6150.28125, 2754.53125))
TRUE
((5445.84375, 3061.59375), (6059.968750000001, 3260.28125))
TRUE
((5427.781249999999, 3675.71875), (6059.968750000001, 3874.40625))
FALSE
((5454.874999999999, 4289.84375), (6204.46875, 4461.4375))
TRUE
((5391.65625, 4714.3125), (5933.53125, 4931.0625))
FALSE
((5445.84375, 5247.15625), (6050.937499999999, 5418.75))
TRUE
((5382.625000000001, 5698.71875), (5933.53125, 5906.4375))
FALSE
((5445.84375, 6240.59375), (6141.250000000001, 6439.28125))
FALSE
((5418.75, 6863.75), (6078.031249999999, 7062.4375))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2095, '2': 2673, '3': 3061, '4': 3648, '5': 4208, '6': 4795, '7': 5165, '8': 5743, '9': 6132, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PWkOVq9.jpg
OCR detection done with doctr
left top x of SN: 169.52148437500003
bottom right x of SN: 414.8515625
left top x of T/F: 1470.9453125
bottom right x of T/F: 1972.41796875
first t/f detection
handwriting
((1264.853515625, 236.193359375), (1478.4326171875, 314.0869140625))
falue
((1506.072265625, 713.60546875), (1679.4482421875, 814.11328125))
collision happend with box:713.60546875 and text:falue solving on the basis of percent match boxes
the current box specification are
Falre
((1503.5595703125, 849.291015625), (1651.80859375, 924.671875))
text2 i.e the incoming text is the winner
collision happend with box:849.291015625 and text:Falre solving on the basis of percent match boxes
the current box specification are
True
((1473.4072265625, 990.001953125), (1629.1943359375, 1082.9716796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:990.001953125 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1468.3818359375, 1138.2509765625), (1624.1689453125, 1241.271484375))
text2 i.e the incoming text is the winner
collision happend with box:1138.2509765625 and text:True solving on the basis of percent match boxes
the current box specification are
Tyue
((1443.2548828125, 1296.55078125), (1601.5546875, 1397.05859375))
text1 i.e the prev text is the winner
Twul
((1420.640625, 1442.287109375), (1583.9658203125, 1515.1552734375))
collision happend with box:1442.287109375 and text:Twul solving on the basis of percent match boxes
the current box specification are
Tyul
((1408.0771484375, 1560.3837890625), (1568.8896484374998, 1650.8408203125))
text2 i.e the incoming text is the winner
collision happend with box:1560.3837890625 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Tue
((1393.0009765625, 1696.0693359375), (1548.7880859375, 1778.98828125))
text1 i.e the prev text is the winner
Fale
((1385.462890625, 1836.7802734375), (1523.6611328125, 1907.1357421875))
collision happend with box:1836.7802734375 and text:Fale solving on the basis of percent match boxes
the current box specification are
false
((1352.7978515625, 1982.5166015625), (1546.275390625, 2077.9990234375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5']
['1', '2', '3', '4', '5', '1', '2', '3', '4', '5']
printing the number dict y_coordinate
{'1': 540, '2': 897, '3': 809, '4': 969, '5': 1128}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tc0TwSp.jpg
OCR detection done with doctr
left top x of SN: 736.6875000000001
bottom right x of SN: 1151.5
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6783.78125
first t/f detection
TRUE
((5599.375000000001, 2248.78125), (6168.343750000001, 2447.46875))
TRUE
((5590.343749999999, 2772.59375), (6195.437500000001, 2971.28125))
TRUE
((5635.5, 3242.21875), (6231.5625, 3413.8125))
TRUE
((5563.249999999999, 3874.40625), (6168.343750000001, 4118.25))
TRUE
((5581.3125, 4452.40625), (6087.062500000001, 4633.03125))
False
((5581.3125, 4958.15625), (6032.875000000001, 5138.78125))
Teese
((5653.562500000001, 5445.84375), (6123.1875, 5626.46875))
TRUE
((5608.40625, 5256.1875), (6240.593749999999, 5472.9375))
TRUE
((5491.000000000001, 5951.59375), (6096.09375, 6150.28125))
Talse
((5617.437499999999, 6484.4375), (6114.156250000001, 6665.0625))
TRUE
((5572.281250000001, 7098.5625), (6168.343750000001, 7315.3125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2086, '2': 2664, '3': 3052, '4': 3648, '5': 4235, '6': 4840, '7': 5238, '8': 5843, '9': 6240, '10': 6845}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qOjvI4Q.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6648.3125
left top x of SN: 375.4374999999999
bottom right x of SN: 799.2812499999999
first t/f detection
Tgil
((5463.906250000001, 1851.40625), (5960.625, 2032.03125))
Taul
((5463.906250000001, 2492.625), (5987.71875, 2664.21875))
Fale
((5572.281250000001, 3043.53125), (6050.937499999999, 3269.3125))
Taue
((5545.187500000001, 3585.40625), (6141.250000000001, 3747.96875))
True
((5554.21875, 4073.09375), (6069.0, 4244.6875))
Con(X)<Othen
((4172.4375, 4624.0), (5400.687499999999, 4822.6875))
Oor
((5093.625, 4840.75), (5409.718750000001, 4976.21875))
collision happend with box:4840.75 and text:Oor solving on the basis of percent match boxes
the current box specification are
giil
((5770.96875, 4705.28125), (6096.09375, 4840.75))
text2 i.e the incoming text is the winner
the
((5174.90625, 5409.71875), (5409.718750000001, 5554.21875))
collision happend with box:5409.71875 and text:the solving on the basis of percent match boxes
the current box specification are
tilel
((5680.656250000001, 5427.78125), (6141.250000000001, 5563.25))
text2 i.e the incoming text is the winner
the
((5202.0, 6385.09375), (5436.812500000001, 6538.625))
collision happend with box:6385.09375 and text:the solving on the basis of percent match boxes
the current box specification are
F
((5671.624999999999, 6430.25), (6087.062500000001, 6665.0625))
text2 i.e the incoming text is the winner
collision happend with box:6430.25 and text:F solving on the basis of percent match boxes
the current box specification are
ofX
((5138.78125, 6565.71875), (5445.84375, 6737.3125))
text2 i.e the incoming text is the winner
collision happend with box:6565.71875 and text:ofX solving on the basis of percent match boxes
the current box specification are
TOULe
((5716.78125, 6701.1875), (6240.593749999999, 6872.78125))
text2 i.e the incoming text is the winner
Toriel
((5671.624999999999, 7089.53125), (6168.343750000001, 7270.15625))
the final dict without editing {'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['4', '8']
the assigned keys are ['1', '2', '3', '5', '6', '7', '9', '10']
['1', '2', '3', '5', '6', '7', '9', '10', '1', '2', '3', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2131, '2': 2664, '3': 3251, '5': 4181, '6': 4750, '7': 5509, '9': 6466, '10': 7225}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': 'UNASSIGNED', '5': True, '6': False, '7': False, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : iz8f2EL.jpg
OCR detection done with doctr
left top x of SN: 781.8437499999999
bottom right x of SN: 1178.5937499999998
left top x of T/F: 5327.46875
bottom right x of T/F: 6503.812500000001
first t/f detection
Tywe
((5436.812500000001, 1959.78125), (5906.4375, 2185.5625))
Tywe
((5400.687499999999, 2483.59375), (5861.281249999999, 2691.3125))
False
((5364.5625, 2890.0), (5888.374999999999, 3151.90625))
TYwe
((5346.499999999999, 3540.25), (5779.999999999999, 3711.84375))
Trwe
((5382.625000000001, 4587.875), (5861.281249999999, 4795.59375))
Falst
((5391.65625, 5012.34375), (5942.562499999999, 5238.125))
True
((5346.499999999999, 5500.03125), (5789.031250000001, 5734.84375))
Tywl
((5382.625000000001, 5969.65625), (5852.25, 6150.28125))
TrW
((5445.84375, 6601.84375), (5960.625, 6782.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2004, '2': 2555, '3': 2917, '4': 3477, '5': 4027, '6': 4587, '7': 4958, '8': 5527, '9': 5906, '10': 6493}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : plR6CUU.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6720.562500000001
left top x of SN: 194.81250000000014
bottom right x of SN: 618.6562500000001
first t/f detection
FALSE
((5545.187500000001, 2131.375), (6141.250000000001, 2348.125))
FALSE
((5554.21875, 2736.46875), (6132.218749999999, 2935.15625))
FALSE
((5590.343749999999, 3350.59375), (6177.375, 3549.28125))
TRUE
((5572.281250000001, 3919.5625), (6023.843749999999, 4091.15625))
FALSE
((5563.249999999999, 4362.09375), (6123.1875, 4560.78125))
then
((5165.875, 4985.25), (5463.906250000001, 5129.75))
collision happend with box:4985.25 and text:then solving on the basis of percent match boxes
the current box specification are
FALSE
((5644.531249999999, 5030.40625), (6267.687499999999, 5202.0))
text2 i.e the incoming text is the winner
or
((5301.343750000001, 5192.96875), (5491.000000000001, 5337.46875))
the
((5283.28125, 5780.0), (5518.093750000001, 5933.53125))
collision happend with box:5780.0 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5662.59375, 5761.9375), (6159.312499999999, 5933.53125))
text2 i.e the incoming text is the winner
TRUE
((5680.656250000001, 6321.875), (6168.343750000001, 6502.5))
the
((5337.46875, 6791.5), (5563.249999999999, 6945.03125))
collision happend with box:6791.5 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5653.562500000001, 6791.5), (6195.437500000001, 6999.21875))
text2 i.e the incoming text is the winner
TRUE
((5779.999999999999, 7523.03125), (6276.718750000001, 7694.625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2393, '2': 2998, '3': 3594, '4': 4199, '5': 4596, '6': 5211, '7': 6005, '8': 6601}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yFqaV83.jpg
OCR detection done with doctr
left top x of SN: 29.603515625000014
bottom right x of SN: 247.806640625
left top x of T/F: 810.931640625
bottom right x of T/F: 1181.703125
first t/f detection
Falre
((822.5234375000001, 402.724609375), (924.3984375, 471.171875))
collision happend with box:402.724609375 and text:Falre solving on the basis of percent match boxes
the current box specification are
A
((894.154296875, 514.150390625), (908.4804687499999, 525.29296875))
text1 i.e the prev text is the winner
collision happend with box:402.724609375 and text:Falre solving on the basis of percent match boxes
the current box specification are
Fake
((930.765625, 491.865234375), (991.25390625, 538.02734375))
text1 i.e the prev text is the winner
collision happend with box:402.724609375 and text:Falre solving on the basis of percent match boxes
the current box specification are
Tt
((847.9921875, 510.966796875), (902.1132812499999, 541.2109375))
text1 i.e the prev text is the winner
Fue
((914.84765625, 592.1484375), (988.0703125, 643.0859375))
collision happend with box:592.1484375 and text:Fue solving on the basis of percent match boxes
the current box specification are
True
((908.4804687499999, 678.10546875), (991.25390625, 738.59375))
text2 i.e the incoming text is the winner
collision happend with box:678.10546875 and text:True solving on the basis of percent match boxes
the current box specification are
folne
((817.748046875, 778.388671875), (921.21484375, 842.060546875))
text1 i.e the prev text is the winner
Tyur
((824.115234375, 854.794921875), (921.21484375, 913.69140625))
collision happend with box:854.794921875 and text:Tyur solving on the basis of percent match boxes
the current box specification are
Tpl
((828.8906250000001, 937.568359375), (918.03125, 994.873046875))
text1 i.e the prev text is the winner
Falye
((836.849609375, 1029.892578125), (919.6230468750001, 1077.646484375))
collision happend with box:1029.892578125 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falk
((830.482421875, 1114.2578125), (925.9902343750001, 1173.154296875))
text2 i.e the incoming text is the winner
collision happend with box:1114.2578125 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falye
((830.482421875, 1217.724609375), (930.765625, 1282.98828125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 397, '2': 496, '3': 563, '4': 663, '5': 762, '6': 864, '7': 929, '8': 1029, '9': 1096, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dzWtTiV.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 925.71875
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5581.3125, 2203.625), (6050.937499999999, 2375.21875))
PALSE
((5581.3125, 2817.75), (6096.09375, 2989.34375))
TRUE
((5481.968749999999, 3350.59375), (5960.625, 3522.1875))
TRUE
((5491.000000000001, 3811.1875), (5987.71875, 3991.8125))
TRUE
((5527.125, 4452.40625), (6005.781250000001, 4624.0))
TRUE
((5491.000000000001, 5066.53125), (5933.53125, 5229.09375))
FALSE
((5527.125, 5626.46875), (6059.968750000001, 5789.03125))
FALSE
((5563.249999999999, 6204.46875), (6078.031249999999, 6376.0625))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2284, '3': 2844, '4': 3413, '5': 3784, '6': 4362, '7': 5120, '8': 5698, '9': 6087, '10': 6854}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7iL00J4.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6621.21875
left top x of SN: 772.8125
bottom right x of SN: 1169.5625
first t/f detection
Trul
((5527.125, 2411.34375), (5906.4375, 2601.0))
Tul
((5454.874999999999, 3025.46875), (5942.562499999999, 3206.09375))
Trnl
((5472.9375, 3477.03125), (5951.593750000001, 3684.75))
Tyue
((5301.343750000001, 7143.71875), (5671.624999999999, 7324.34375))
Tyul
((5472.9375, 4109.21875), (5879.34375, 4325.96875))
false
((5454.874999999999, 4687.21875), (5951.593750000001, 4903.96875))
Palse
((5445.84375, 5102.65625), (5861.281249999999, 5337.46875))
Tyul
((5445.84375, 5635.5), (5897.406250000001, 5843.21875))
Trul
((5391.65625, 6078.03125), (5770.96875, 6267.6875))
Trul
((5409.718750000001, 6565.71875), (5843.218750000001, 6746.34375))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2501, '2': 3052, '3': 3422, '4': 3982, '5': 4533, '6': 5102, '7': 5463, '8': 6032, '9': 6421, '10': 6999}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xiBmbZu.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1864.375
first t/f detection
True
((1451.09375, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1537.421875, 848.046875))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
text2 i.e the incoming text is the winner
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
Falde
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
collision happend with box:1233.984375 and text:Falde solving on the basis of percent match boxes
the current box specification are
Falje
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
text2 i.e the incoming text is the winner
collision happend with box:1378.7109375 and text:Falje solving on the basis of percent match boxes
the current box specification are
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1513.28125 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1665.625), (1565.3515625, 1716.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1665.625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
text2 i.e the incoming text is the winner
True
((1443.4765624999998, 1980.46875), (1532.34375, 2036.328125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 246j0f6.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
Folu
((1276.33203125, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:Folu solving on the basis of percent match boxes
the current box specification are
Falke
((1281.0234374999998, 729.513671875), (1428.802734375, 809.267578125))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falke solving on the basis of percent match boxes
the current box specification are
Troe
((1273.986328125, 853.8359375), (1419.419921875, 952.35546875))
text1 i.e the prev text is the winner
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
collision happend with box:996.923828125 and text:Tvod solving on the basis of percent match boxes
the current box specification are
Tyul
((1283.369140625, 1147.048828125), (1419.419921875, 1247.9140625))
text2 i.e the incoming text is the winner
collision happend with box:1147.048828125 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1271.640625, 1283.099609375), (1424.111328125, 1360.5078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1283.099609375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Trul
((1276.33203125, 1393.34765625), (1424.111328125, 1489.521484375))
text2 i.e the incoming text is the winner
collision happend with box:1393.34765625 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tru
((1278.677734375, 1524.70703125), (1417.07421875, 1604.4609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1524.70703125 and text:Tru solving on the basis of percent match boxes
the current box specification are
False
((1285.71484375, 1653.720703125), (1407.69140625, 1724.091796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
Falu
((1273.986328125, 1794.462890625), (1424.111328125, 1888.291015625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 846, '2': 743, '3': 842, '4': 994, '5': 1140, '6': 1290, '7': 1391, '8': 1538, '9': 1639, '10': 1787}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gOCVU3H.jpg
OCR detection done with doctr
left top x of T/F: 1295.8183593749998
bottom right x of T/F: 1793.54296875
left top x of SN: -7.675781249999986
bottom right x of SN: 237.37499999999997
first t/f detection
faly
((1335.841796875, 545.42578125), (1510.978515625, 680.53125))
collision happend with box:545.42578125 and text:faly solving on the basis of percent match boxes
the current box specification are
Falw
((1370.869140625, 680.53125), (1533.49609375, 788.115234375))
text2 i.e the incoming text is the winner
collision happend with box:680.53125 and text:Falw solving on the basis of percent match boxes
the current box specification are
Trul
((1375.8730468749998, 828.146484375), (1546.005859375, 950.7421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:828.146484375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tiur
((1403.39453125, 970.7578125), (1551.009765625, 1093.353515625))
true and false collision so given priority to text2 which is the incoming text
for
((1243.26953125, 582.955078125), (1298.3125, 625.48828125))
d-dimensional
((1098.15625, 840.65625), (1328.3359375, 910.7109375))
descent
((1175.716796875, 1003.283203125), (1305.8183593749998, 1063.330078125))
collision happend with box:1003.283203125 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((1303.31640625, 1005.78515625), (1338.34375, 1043.314453125))
text1 i.e the prev text is the winner
collision happend with box:1003.283203125 and text:descent solving on the basis of percent match boxes
the current box specification are
Pre-
((1278.296875, 1158.404296875), (1358.3593749999998, 1208.443359375))
text1 i.e the prev text is the winner
collision happend with box:1003.283203125 and text:descent solving on the basis of percent match boxes
the current box specification are
Tiul
((1423.41015625, 1133.384765625), (1581.033203125, 1240.96875))
text2 i.e the incoming text is the winner
collision happend with box:1133.384765625 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tiu
((1443.42578125, 1270.9921875), (1586.037109375, 1366.06640625))
text1 i.e the prev text is the winner
falre
((1438.4218750000002, 1406.09765625), (1616.060546875, 1523.689453125))
collision happend with box:1406.09765625 and text:falre solving on the basis of percent match boxes
the current box specification are
Falve
((1465.943359375, 1541.203125), (1633.57421875, 1638.779296875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1541.203125 and text:Falve solving on the basis of percent match boxes
the current box specification are
Falw
((1478.453125, 1668.802734375), (1643.58203125, 1786.39453125))
text2 i.e the incoming text is the winner
collision happend with box:1668.802734375 and text:Falw solving on the basis of percent match boxes
the current box specification are
Falye
((1493.46484375, 1823.923828125), (1661.095703125, 1944.017578125))
text2 i.e the incoming text is the winner
distribution.
((1170.712890625, 1316.02734375), (1375.8730468749998, 1376.07421875))
collision happend with box:1316.02734375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1255.779296875, 1421.109375), (1388.3828125, 1478.654296875))
text1 i.e the prev text is the winner
original
((1165.708984375, 1588.740234375), (1298.3125, 1646.28515625))
collision happend with box:1588.740234375 and text:original solving on the basis of percent match boxes
the current box specification are
spaçe.
((1293.30859375, 1586.23828125), (1398.390625, 1636.27734375))
text1 i.e the prev text is the winner
collision happend with box:1588.740234375 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1248.2734375, 1688.818359375), (1418.40625, 1748.865234375))
text1 i.e the prev text is the winner
overfitting
((1210.744140625, 1853.947265625), (1383.37890625, 1913.994140625))
collision happend with box:1853.947265625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((1223.25390625, 1911.4921875), (1338.34375, 1961.53125))
text2 i.e the incoming text is the winner
collision happend with box:1911.4921875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1380.876953125, 1901.484375), (1443.42578125, 1946.51953125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 705, '2': 858, '3': 963, '4': 1125, '5': 1283, '6': 1441, '7': 1548, '8': 1708, '9': 1818, '10': 1976}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': False, '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : icWtiVC.jpg
rotation started
['os', 'I', '/', 'E', 'I', '2', 'or', 'E', 'e', 'E', 'A', '', 'a', 'E', '8', '2', '7', '8', 'I', '2', 'F', '8', 'of', 'E', '8', 'I', '7', 'a', '2', '&', 'H', '€', '8', '2', 'F', '1', 'F', 'I', 't', 't', '/', 'I', 'I', 'E', 'a', 'Q', 'e', '/', '1', '2', 's', '/', 'I', 'I', '2', 'E', 'E', 'I', '8', 't', 'I', 'I', 'I', '/', '8', '8', 'I', '/', 'F', 'F', '2', 'of', 'I', 'E', '/', 'I', 'E', 'e', '/', '8', '/', '8', 'E', '2', 'E', 'F', 'P', 'I', '/', 'I', '2', '/', '8', 'E', 'I', 'A', '6', '/', '8', '/', 'f', '7', '/', 'it', '/', 'I', 'E', 'I', 'E', 'E', '8', 'I', 'F', '2', '2', '/', 'I', '8', 'I', '8', 'I', 'I', '9', 'E', 'la', '/', 'F', 'f', 'I', '/', 'I', 'F', '/', 't', 'I', 'A', 'A', 'I', '/', '#', 'I', 'E', '/', '1', '?', 'E', 'e', '/', '1', 't', '/', 'I', 'a', '/', '/', '7', 'I', 't', '/', 'to', 'o', 'P', '2', '', 'F', 'A', '/', '/', '/', 'I', 'F', '/', 'I', 'F', 'E', 'so', 'a', 'E', 'F', ':', '9', 'à', 'E', 'i', 'I', 'e', 'a', 't', 'I', 'f', 'F', '2', 'e', ':', '/', '8', 'F', 'F', 'I', 'E', 'I', 'I', 'F', ':', 'E', 'E', 'E', 'E', '2', ':', '2']
rotation started
['3h3L', 'aya', 'uur', 'piep', 'taosum', '-ur', 'stmeap', '10', 'asjou', '"Maur', '03', 'Tam', 'suragzaso', 'Jo', 'ayraods', 'TAS', '394:84-900', '"sossups', 'Jo', 'aus', 'ur', 'IMSITY-ROL', 'aq', 'tes', 'au', 'uy', 'siunpe', 'SI', 'azesattas', 'ysu', 'ays', 'TAS', 'amades', '01', 'ureal', 'Jou1', 'op', '2071', 'ezep', 'SAYL', 'an3L', '35104', '35143', '31743', '35701', '95743', 'BAYL', '3ASL', '35TVA/anuL', 'ur', 'pyautezed', 'Aeuur', 'ppouz', 'au', 'Surunurs', 'o', 'aus', 'Jo', 'Se', "'Somars", 'anpes', 'y8ry', 'B', 'TILM', 'O1', 'sutargoad', '000-51-300', 'Sursn', 'Anepunoq', 'uonorpaud', 'e', 'Suryerur', 'ageds', 'peurayuo', 'Anaup', 'SI', 'mornqump', '-a1d', 'uaanjaq', 'ST', 'auaosap', 'tretn', 'Iamors', 'ST', 'Jaquunuz', 'a8rer', 'e', 'VIIM', 'INAS', 'INAS', 'tre', 'jo', 'sopou', 'Jo', 'Iaqumnu', 'nomorpaud', 'e', 'Suryuur', 'au', '01', 'snornquap', 'tmeyssTeg', 'Ismupragmus', '104', '6', 'morstaap', 'OULL', '8', 'JOJ', 'poubas', 'pnoruodoad', 'OUULL', 'OULL', '2', '0m2', 'Jo', 'amaxqur', 'V', '9', 'Tesoy', 'pure', 'tOISTO', 'Surgezado', '12473004', 'OULL', 'S', 'posn', 'I', '-', 'I', '&', '2', 'OOIL', 'BONTOI', 'tnursrieg', 'e', 'zord', 'e', 'SI', 'aums', '(ou)', 'orsegapermD', 'yonjau', 'Tumnau', 'aurarpreus', 'aTyn', "'suyaram", 'aut', 'ur', 'suarpuzs', 'aua', 'azepdn', '03', 'posn', 'ouy', 'aunduos', '02', 'SI', 'copeahodutpng', 'A', 'pue', 'z', 'S103321', 'shumhasnien', 'IRAUIT-DOUE', 'e', 'SI', 'NNY', 'zuatrsioudap', 'a3e10gs', 'au', 'sgreoydit', 'I', 'quouagess', 'NS', 'O1HM', 'peostomutp-p', 'Atre', 'JOy', 'ouuzauur', 'aoueystp', 'prres', 'e', 'SI', 'ayissup', 'JOJ', 'JVAS', 'treya', 'Ja8rer', 'ypnur', 'SI', 'NNY', 'JOJ', 'auouaummbar', ':aay', 'Jaqunu', 'IjoI', 'mor', 'Surgumpurug', 'rap', 'pue', 'sumar', 'reudeo', 'uI', 'ISTWI', 'JO', 'IOUL', '31111', '(sid', 'o1)', '6']
rotation started
['4', 'E', '/', '-', ':', ':', 'a', 'E', 'I', '-', '1', '.2', 'a', 'e', 'I', '2', ':', '/', '.', '/', 'I', 'E', 'E', 'I', '4', 'I', 'I', '1', 'is', '-', '8', 'E', ':', '2', 'e', 'oj', 'E', '/', 'I', 'à', 'a', '/', 'e', 'I', 'a', '4', 'I', ':', '.', 'a', 'J', '1', 'E', '8', 'I', 'of', '8', '$', '-', 'I', 'f', '/', 'e', 'E', '2', ':', 'e', 'I', '8', '-4', 'is', '/', 'e', '/', '7', 'of', 'I', '1', '.9', 'a', 'i', '.E', 'e', 'e', 'E', '1', 'I', '/', '8', '1', '/', 'E', 'e', '2', '1', 'e', '/', 'a', 'f', '/', '7', '/', 'I', '/', 'I', 'I', 'of', 'à', '-', 'I', 'e', 'e', 's', '.', 'a', '/', 'E', '', '/', ':', '/', 'J', 'e', 'of', 'F', '/', 'o', 'I', 'e', 'i', 'I', 'i2', '/', '1', '.2', 'H', 'E', 'e', 'e', 'à', 'I', '1', '/', '/', 'I', 'E', 'of', 'e', 'of', '0o', 'I', 'E', 'I', 'e', 'de', 'I', 'i', '/', '1', 'I', '/', '3', 'i', '1', 'a', 'I', 'I', '1', '2', 'à', 'I', 'I', 'A', 'e', 'o', 'A', 'à', '1', 'a', '/', '', '2', 'E', '2', 'I', 'E', 'oo', 'I', 'I', 'o', 'of', '-', 'I', '/', 'e', '7', 'aa', 'is', '1', '#', 'de', 'is', '/', '!', 'a', '1', '/', '/', '/', '3', 'a', '$']
rotation started
['9', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'handwriting', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', '1', 'Typically', 'the', '2', 'KNN', 'is', 'a', 'non-linear', '3', '1', '-', 'vectors', 'z', 'and', 'emteiSimaioniovies', 'y.', '4', 'used', 'Baecigropeation', 'to', 'compute', 'is', 'used', 'to', 'update', 'the', '5', 'gradients', 'in', 'the', 'The', 'Receiver', '6', 'A', 'mixture', 'of', 'two', '7', 'The', 'Time', 'required', 'proportional', '8', 'The', 'decision', '9', 'For', 'multiclass', 'using', '10', 'With', 'deployment.', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'TRUETALSE', 'TRVE', 'TRVE', 'FALSE', 'FALSE', 'FALJE', 'FALIE', 'FALSE', 'TRVE', 'TRVE', 'larger', 'than', 'SVM', 'for', 'classifier', 'is', 'a', 'valid', 'distance', 'metric', 'the', 'weights,', 'for', 'any', 'd-dimensional', 'V', 'while', 'neural', 'network', 'gradient', 'descent', 'is', 'cision', 'and', 'Recall', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'always', 'a', 'in', 'the', 'between', 'Pre', 'distribution', 'directly', 'Gaussian', 'for', 'to', 'the', 'making', 'a', 'prediction', 'number', 'of', 'nodes', 'distribations', 'is', 'Gaussian', 'Decision', 'Tree', 'is', 'boundary', 'of', 'an', 'problems', 'with', 'one-ss-one', 'SVM', 'is', 'a', 'large', 'number', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'of', 'one-vs-test', 'fclasses,', 'making', 'a', 'SVM', 'to', 'capture', 'SVM,', 'the', 'risk', 'of', 'generalize', 'well', 'specific', 'original', 'space.', 'prediction', 'slower', 'than', 'a', 'high', 'value', 'creases,', 'as', 'the', 'of', 'the', 'C', 'training', 'data', 'model', 'may', 'learn', 'parameter', 'in', 'that', 'do', 'not', 'to', 'new,', 'noise', 'or', 'overfitting', 'details', 'in-', 'unscen', 'data.', 'in', 'the', 'TRUE']
OCR detection done with doctr
left top x of SN: 1432.0937499999998
bottom right x of SN: 1837.8750000000002
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:50:14] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : icWtiVC.jpg
[2024/06/28 14:50:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:50:16] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.12010645866394043
[2024/06/28 14:50:18] ppocr DEBUG: rec_res num  : 38, elapsed : 2.064439296722412
OCR detection done
left top x of SN: 1507.0
bottom right x of SN: 1835.0
left top y of SN: 1590.0
bottom right y of SN: 1855.0
left top x of T/F: 5743.0
bottom right x of T/F: 6669.0
left top y of T/F: 1884.0
bottom right y of T/F: 2491.0
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are []
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IF69nYD.jpg
OCR detection done with doctr
left top x of T/F: 5526.156249999999
bottom right x of T/F: 6910.218750000001
left top x of SN: 176.75
bottom right x of SN: 591.5625000000001
first t/f detection
TRUE
((5698.718749999999, 2032.03125), (6249.625000000001, 2257.8125))
TRUE
((5653.562500000001, 2700.34375), (6267.687499999999, 2908.0625))
FALSE
((5608.40625, 3260.28125), (6222.531250000001, 3513.15625))
TRUE
((5960.625, 3865.375), (6511.531249999999, 4036.96875))
TRUE
((5653.562500000001, 4307.90625), (6204.46875, 4506.59375))
FALSE
((5563.249999999999, 4994.28125), (6132.218749999999, 5192.96875))
TRME
((5581.3125, 5789.03125), (6150.28125, 5987.71875))
FALSE
((5563.249999999999, 6348.96875), (6150.28125, 6547.65625))
TRUE
((5581.3125, 6881.8125), (6240.593749999999, 7125.65625))
TRUE
((5617.437499999999, 7532.0625), (6195.437500000001, 7703.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2790, '3': 3404, '4': 4009, '5': 4407, '6': 5021, '7': 5816, '8': 6421, '9': 6827, '10': 7631}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Ar4iTZu.jpg
OCR detection done with doctr
left top x of SN: 87.74999999999999
bottom right x of SN: 309.3046875
left top x of T/F: 854.9609375
bottom right x of T/F: 1217.328125
first t/f detection
F
((906.5156249999999, 375.53125), (932.6796875, 406.3125))
collision happend with box:375.53125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((904.9765625, 467.875), (923.4453125, 497.1171875))
text2 i.e the incoming text is the winner
collision happend with box:467.875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((900.359375, 534.0546875), (924.9843750000001, 563.296875))
text2 i.e the incoming text is the winner
F
((897.28125, 743.3671875), (923.4453125, 777.2265625))
collision happend with box:743.3671875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((894.203125, 835.7109375), (920.3671874999999, 875.7265625))
text2 i.e the incoming text is the winner
F
((900.359375, 1194.3125), (928.0625, 1225.09375))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the unassigned keys are ['4', '9']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '10']
['1', '2', '3', '5', '6', '7', '8', '10', '1', '2', '3', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 381, '2': 486, '3': 550, '5': 749, '6': 852, '7': 923, '8': 1025, '10': 1191}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1f5kc6O.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 320.28124999999994
left top x of T/F: 1384.0625
bottom right x of T/F: 1872.4296875
first t/f detection
Colu
((1416.6328125, 769.8984375), (1567.1015625, 875.2265625))
Tyu
((1434.1875, 1055.7890625), (1562.0859375000002, 1133.53125))
A4
((1446.7265624999998, 1386.8203125), (1504.40625, 1426.9453125))
collision happend with box:1386.8203125 and text:A4 solving on the basis of percent match boxes
the current box specification are
U
((1501.8984375, 1399.359375), (1526.9765625, 1419.421875))
text2 i.e the incoming text is the winner
collision happend with box:1399.359375 and text:U solving on the basis of percent match boxes
the current box specification are
A
((1521.9609375, 1391.8359375), (1537.0078125000002, 1406.8828125))
text2 i.e the incoming text is the winner
Fale
((1441.7109375, 1625.0625), (1569.6093749999998, 1705.3125))
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falw
((1431.6796875, 1755.46875), (1584.6562500000002, 1855.78125))
text2 i.e the incoming text is the winner
L
((1529.484375, 1946.0625), (1564.59375, 1973.6484375))
collision happend with box:1946.0625 and text:L solving on the basis of percent match boxes
the current box specification are
A
((1481.8359375, 1983.6796875), (1499.390625, 2001.234375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': False, '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 631, '2': 794, '3': 900, '4': 1063, '5': 1228, '6': 1384, '8': 1650, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': False, '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': False, '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LmfCbHP.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6666.375000000001
left top x of SN: 384.4687500000001
bottom right x of SN: 799.2812499999999
first t/f detection
Tale
((5743.875, 1833.34375), (6339.9375, 2104.28125))
TRUE
((5491.000000000001, 2068.15625), (6168.343750000001, 2312.0))
FALSE
((5617.437499999999, 2465.53125), (6348.968749999999, 2682.28125))
FALSE
((5572.281250000001, 3070.625), (6358.000000000001, 3305.4375))
TRUE
((5617.437499999999, 3594.4375), (6240.593749999999, 3838.28125))
TRUE
((5653.562500000001, 3910.53125), (6114.156250000001, 4127.28125))
FA
((5545.187500000001, 4515.625), (5816.125000000001, 4723.34375))
collision happend with box:4515.625 and text:FA solving on the basis of percent match boxes
the current box specification are
LS
((5834.187499999999, 4506.59375), (6123.1875, 4687.21875))
text2 i.e the incoming text is the winner
TRUE
((5554.21875, 5346.5), (6105.124999999999, 5518.09375))
TRUE
((5554.21875, 5870.3125), (6069.0, 6041.90625))
TRUE
((5527.125, 6484.4375), (6213.499999999999, 6782.46875))
TRUE
((5518.093750000001, 7152.75), (6059.968750000001, 7378.53125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['8']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '9', '10']
['1', '2', '3', '4', '5', '6', '7', '9', '10', '1', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2546, '3': 3115, '4': 3693, '5': 4082, '6': 4660, '7': 5436, '9': 6439, '10': 7234}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gygqDOa.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1345.068359375
first t/f detection
T
((1033.88671875, 417.333984375), (1083.837890625, 462.451171875))
collision happend with box:417.333984375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 505.95703125), (1033.88671875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:505.95703125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1027.44140625, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1032.275390625, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((987.1582031249999, 884.619140625), (1032.275390625, 923.291015625))
text2 i.e the incoming text is the winner
collision happend with box:884.619140625 and text:T solving on the basis of percent match boxes
the current box specification are
or
((1000.0488281250001, 966.796875), (1083.837890625, 1013.525390625))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:or solving on the basis of percent match boxes
the current box specification are
F
((983.935546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 576, '4': 681, '5': 781, '6': 883, '7': 952, '8': 1055, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : epimQv0.jpg
OCR detection done with doctr
left top x of SN: 691.53125
bottom right x of SN: 1106.34375
left top x of T/F: 5779.031250000001
bottom right x of T/F: 7045.687500000001
first t/f detection
FALSE
((5798.0625, 2203.625), (6448.3125, 2411.34375))
TRUE
((5680.656250000001, 2781.625), (6240.593749999999, 3052.5625))
TRUE
((5617.437499999999, 3404.78125), (6150.28125, 3657.65625))
FALSE
((5527.125, 3919.5625), (6204.46875, 4217.59375))
FALSE
((5500.03125, 4353.0625), (6159.312499999999, 4651.09375))
TRUE
((5346.499999999999, 5021.375), (5870.312500000001, 5274.25))
FALSE
((5310.375, 5689.6875), (5987.71875, 5978.6875))
FALSE
((5174.90625, 6619.90625), (6023.843749999999, 6917.9375))
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['2']
['2', '2']
printing the number dict y_coordinate
{'2': 2284, '1': 1984}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jwVRl8o.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6348.968749999999, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6231.5625, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5770.96875, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SF26PyJ.jpg
OCR detection done with doctr
left top x of SN: 312.21875
bottom right x of SN: 772.1874999999999
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6756.6875
first t/f detection
Fole
((5527.125, 1950.75), (5861.281249999999, 2203.625))
Fle
((5445.84375, 2519.71875), (5834.187499999999, 2745.5))
Trve
((5400.687499999999, 3088.6875), (5852.25, 3350.59375))
Iire
((5409.718750000001, 3720.875), (5743.875, 3946.65625))
False
((5391.65625, 4262.75), (5888.374999999999, 4515.625))
True
((5373.593749999999, 4840.75), (5698.718749999999, 5030.40625))
True
((5418.75, 5373.59375), (5834.187499999999, 5572.28125))
Trie
((5436.812500000001, 5834.1875), (5825.15625, 6123.1875))
Fale
((5418.75, 6367.03125), (5834.187499999999, 6601.84375))
rte
((5427.781249999999, 7116.625), (5743.875, 7288.21875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6285, '1': 1959, '2': 2582, '3': 3034, '4': 3639, '5': 4253, '6': 4867, '7': 5265, '8': 5879, '10': 6890}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NzodNAi.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1285.646484375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Falye
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1398.052734375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
text1 i.e the prev text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1871.095703125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YAvWe7x.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 287.0771484375
left top x of T/F: 1144.7285156250002
bottom right x of T/F: 1582.2626953124998
first t/f detection
falre
((1185.06640625, 524.412109375), (1334.5888671875, 624.09375))
collision happend with box:524.412109375 and text:falre solving on the basis of percent match boxes
the current box specification are
Falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:Falre solving on the basis of percent match boxes
the current box specification are
TAu
((1180.732421875, 784.451171875), (1310.751953125, 875.46484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:784.451171875 and text:TAu solving on the basis of percent match boxes
the current box specification are
Riul
((1189.400390625, 910.13671875), (1328.087890625, 996.81640625))
text2 i.e the incoming text is the winner
collision happend with box:910.13671875 and text:Riul solving on the basis of percent match boxes
the current box specification are
Trur
((1182.8994140625, 1050.9912109375), (1321.5869140625002, 1142.0048828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1050.9912109375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1241.6865234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1156.8955078125, 1285.0263671875), (1302.083984375, 1373.873046875))
text2 i.e the incoming text is the winner
collision happend with box:1285.0263671875 and text:True solving on the basis of percent match boxes
the current box specification are
Folwe
((1178.5654296875, 1393.3759765625), (1302.083984375, 1469.220703125))
text1 i.e the prev text is the winner
Falu
((1174.2314453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
True
((1165.5634765624998, 1692.4208984375), (1315.0859375, 1783.4345703125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 775, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1187, '7': 1280, '8': 1419, '9': 1512, '10': 1646}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rZbH3th.jpg
OCR detection done with doctr
left top x of T/F: 5020.40625
bottom right x of T/F: 6449.625000000001
left top x of SN: 321.2499999999999
bottom right x of SN: 745.0937499999999
first t/f detection
due
((5165.875, 2149.4375), (5644.531249999999, 2465.53125))
drus
((5192.96875, 2718.40625), (5617.437499999999, 2944.1875))
True
((5310.375, 3206.09375), (5734.843750000001, 3431.875))
collision happend with box:3206.09375 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4136.3125, 3233.1875), (5066.53125, 3513.15625))
text2 i.e the incoming text is the winner
is
((4922.03125, 3865.375), (5084.59375, 4027.9375))
collision happend with box:3865.375 and text:is solving on the basis of percent match boxes
the current box specification are
Tue
((5328.437500000001, 3892.46875), (5779.999999999999, 4100.1875))
text2 i.e the incoming text is the winner
Pre
((4795.59375, 4470.46875), (5102.65625, 4660.125))
collision happend with box:4470.46875 and text:Pre solving on the basis of percent match boxes
the current box specification are
True
((5310.375, 4461.4375), (5752.906249999999, 4678.1875))
text2 i.e the incoming text is the winner
distribution
((4335.0, 5111.6875), (5120.71875, 5283.28125))
directly
((4642.0625, 5527.125), (5165.875, 5698.71875))
Toe
((5382.625000000001, 5039.4375), (5834.187499999999, 5247.15625))
Troe
((5346.499999999999, 5644.53125), (5834.187499999999, 5852.25))
space.
((4759.46875, 6177.375), (5183.9375, 6339.9375))
collision happend with box:6177.375 and text:space. solving on the basis of percent match boxes
the current box specification are
Juue
((5418.75, 6078.03125), (5915.468749999999, 6348.96875))
text2 i.e the incoming text is the winner
prediction
((4560.78125, 6583.78125), (5211.031249999999, 6755.375))
collision happend with box:6583.78125 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tvue
((5445.84375, 6610.875), (5951.593750000001, 6863.75))
text2 i.e the incoming text is the winner
overfitting
((4353.0625, 7197.90625), (5030.40625, 7396.59375))
the
((5021.375, 7423.6875), (5292.312499999999, 7604.3125))
collision happend with box:7423.6875 and text:the solving on the basis of percent match boxes
the current box specification are
Tvue
((5518.093750000001, 7324.34375), (6032.875000000001, 7550.125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['2', '4', '5', '8']
the assigned keys are ['1', '3', '6', '7', '9', '10']
['1', '3', '6', '7', '9', '10', '1', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2619, '3': 3549, '6': 5319, '7': 5725, '9': 6746, '10': 7378}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bOMQ443.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
F
((5644.531249999999, 1860.4375), (5798.0625, 2023.0))
collision happend with box:1860.4375 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5779.999999999999, 1860.4375), (6177.375, 2032.03125))
text2 i.e the incoming text is the winner
FALSE
((5608.40625, 2420.375), (6267.687499999999, 2664.21875))
FALIE
((5635.5, 3061.59375), (6141.250000000001, 3224.15625))
F
((5599.375000000001, 3567.34375), (5743.875, 3711.84375))
collision happend with box:3567.34375 and text:F solving on the basis of percent match boxes
the current box specification are
ALSE
((5752.906249999999, 3549.28125), (6150.28125, 3711.84375))
text2 i.e the incoming text is the winner
afue
((5644.531249999999, 3991.8125), (6159.312499999999, 4163.40625))
TRUE
((5653.562500000001, 4199.53125), (6141.250000000001, 4371.125))
TRUE
((5554.21875, 4660.125), (6041.90625, 4867.84375))
TRUE
((5536.156249999999, 5328.4375), (6078.031249999999, 5500.03125))
T&U
((5590.343749999999, 5770.96875), (5960.625, 6005.78125))
TRUE
((5617.437499999999, 6339.9375), (6123.1875, 6547.65625))
FALSE
((5572.281250000001, 6908.90625), (6132.218749999999, 7161.78125))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1896, '2': 2456, '3': 3016, '4': 3585, '5': 3955, '6': 4524, '7': 5274, '8': 5843, '9': 6222, '10': 6990}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uWMcs2Y.jpg
rotation started
['bf', '', '00', 'I', 'of', 'E', 'E', 'a', 'I', 'I', 'I', 't', 'a', 'I', '-', 'I', 'I', ':', 'E', 'I', '€', 'I', '1', 'f', 'I', 'I', 'I', '8', '9', '2', 'I', 'E', 'I', 'I', ':', 'of', 'I', 'I', 'D', 'I', 'I', 'E', 'e', 'E', 'E', 'I', 'I', 'E', 'E', 'Q', 'E', 'a', 'I', 'E', '2', 'it', 'I', '-', '', 'OT', '4', '3', '2', 'L', '2', '€', 'T', 'E', '2', ':', 'I', 'it', 'a', '2', 'I', 'I', 'I', '€', 'I', 'E', 'E', 't', '3', 'I', 'E', 'it', 'I', 'I', 'I', '8', 'E', '8', 'I', 'I', '8', 'I', 'E', '-', '8', 'a', 'E', '-', 'a', '9', 'E', 'P', 'E', 'P', 'E', '>', 'E', 'E', 'a', 'I', 'I', 'I', 'E', 'of', 'B', '8', 'I', 'a', '2', 'E', 'I', '-', 'E', 'I', 'I', '9', 'I', 'I', 'I', 'se', 'E', 'it', 'a', 'I', 'I', '€', 'I', 'I', 'I', 'I', 'E', 'E', 'I', 'E', 'I', 'E', 'I', 'D', '2', 'it', 'I', 'E', 'E', 'E', 'E', '2', 'E', '8', 'E', '8', 'E', 'I', '2', 'it', 'E', '%', '8', 'E', 'I', 'I', '-', 'a', 'E', 'E', 'I', '€', 'I', 'I', 'of', 'I', 'E', 'I', 'I', 'D', 'E', 'E', '€', '€', 'it', 'a', 'I', '', 'E', 'E', 'I', '2', '2', '€', 'A', 'à', '2', 'I', 'f', 'a', '-', 'I', 'I', '', '-', '-', 'Mue', '4', 'COURE', ':', 'Ino']
rotation started
['"egep', 'uoosun', 'MoU', '09', 'ITOM', 'ozireroues', 'qou', 'op', '7841', 'eep', 'Surureng', 'o47', 'UI', 'sTregop', 'JO', 'OSIOU', 'oyroods', 'YSLI', 'oun', "'IAS", 'UI', 'Iojourered', 'D', 'o44', 'Jo', 'onTeA', 'y81y', 'B', 'YAIM', 'OT', 'àn', 'oadeo', '01', 'UIeOT', 'Keur', 'popow', 'o44', 'Se', 'soseatour', '8umny.OAo', 'Jo', 'AS', '9SOI-SA-QUO', '1', '2011', 'ueya', 'JOMOIS', 'SI', 'WAS', 'QUO-SA-QUO', 'Sursn', 'uomorpaad', 'e', 'Suryeur', "'sossero", 'Jo', 'Joqunu', 'a8rel', 'e', 'YAIM', 'swarqoid', 'ssepprgmur', 'JOJ', '6', '2810', 'Do1et', '/', 'DNE', 'ooeds', '[eUrSLIO', 'o47', 'UI', 'IeQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uorstoop', 'OUL', '8', '"sopou', 'Jo', 'Joqunu', 'o47', '01', 'Teuorg.iodo.d', 'ST9DaIIp', 'SI', 'DOIL', 'UOISIDOCI', 'o44', 'UI', 'uonorpald', 'B', 'Suryeur', 'JOJ', 'paumbar', 'OUIIL', 'OUL', 'L', '-sneD', 'e', 'SABMTe', 'SI', 'Suornquasip', 'uerssneD', 'OM9', 'Jo', 'OINgXIU', 'V', '9', 'B', 'SI', 'OAINO', '(DOH)', 'Dr9sLIOgpere4D', 'Surgeiodo', 'IONTODOE', 'OUL', 'C', 'AV', '"uorgnquasip', 'uers', 'roL', 'TTeDOH', 'pue', 'UOISIDOId', 'Uoomgoq', 'gord', '"YIOMIOU', '-', 'anul', '[emeu', 'a47', 'UI', 'squerpels', 'o47', 'agnduoo', '07', 'posn', 'SI', 'quoosop', 'quorp', '-B.18', 'OTIYM', "'SQU8IOM", 'o47', 'agepdn', '07', 'posn', 'SI', 'uogeBodoxdypeg', '4', '.2091', ':f', 'pue', 'I', 'SIOTDOA', '[euorsuouump-p', 'Kue', 'JIOJ', 'OLIgOUI', 'souensip', 'PITEA', 'B', 'SI', "(A'z/Aumpuagausoo", '-', 'I', '&', 'layIsseo', 'JeQUII-uou', 'B', 'SI', 'NNY', '2', 'quourfordop', 'JOJ', 'WAS', 'ueya', 'quoutammbal', 'a8e10qs', '047', 'SeoidAL', 'I', '050', 'D0aL', '1081e1', 'yonu', 'SI', 'NNY', 'JOJ', 'quowagers', 'NS', 'O', 's', 'IVA/ANHL', ':aJa4', 'paqunu', 'IIO.I', 'mor', 'B11M', 'BALIM', '(sad', 'OT)', "'6", 'ul', 'ASTVI', 'IO', 'INLL', 'plmpuey', '1eOpp', 'pue', 'S.I01191', 'Teadeo', 'S']
rotation started
['4nD', 'AIAN', 'Dy', '-', '-', '4', 'A', 'r', '*', 'I', '-', 'à', '2', ':', '€', '-', 'à', '-', '', '1', '-', 'E', '€', '-', 'à', 'a', '-', '6', 'I', 'à', 'e', 'iE', 'I', '8', 'I', 'e', '-', 'e', '8', 'f', '-', 'is', 'E', 'o', 'I', '8', 'I', '7', '9', 'i', 'E', 'I', 'I', 'I', 'is', 'I', 'I', 'I', 'I', 'I', 'is', 'a', '€', 'à', '8', 'I', 'is', 'e', 'I', 'E', '€', '-', 'iE', 'of', 'I', ':', 'I', 'of', 'I', 'i', '1', 'E', '2', 'e', 'e', 'I', 'de', '-', 'is', '2', 'a', 'o', 'a', ':', 'E', 'iE', ':', 'E', '1', 'I', 'a', 'I', 'e', '%', 'I', 'E', ':', 'I', 'a', 'e', 'a', 'o', 'E', 'I', 'I', 'I', '0', 'a', 'I', 'E', '-', 'of', 'E', 'E', '€', 'iE', '8', 'e', 'I', 'I', 'a', '-', 'of', '-', '-', 'I', 'I', 'I', 'E', 'I', 'o', ':', 'I', '5', 'of', 'I', 'I', ':', 'I', 'I', '', 'E', '2', 'I', 'I', 'I', 'a', 'à', 'is', 'I', 'a', 'I', 'I', 'I', 'I', '1', 'E', '-', 'E', 'i', 'I', '5', 'E', 'E', 'E', 'I', '€', 'a', '8', 'is', 'E', '€', 'E', 'e', 'o', '-', 'I', '1', 'a', '2', 'L', '-', '1', 'E', 'a', 'A', 'E', 'E', 'E', 'E', 'I', 'à', 'I', 'I', 'E', 'of', '1', 'I', '7', '11', 'a', '3', '4', '12', '', 'I', '00', '', '1f']
rotation started
['RO', 'letters', 'and', 'clear', 'handwrin', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'Le', 'co', 'TRUE/FALS', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', '-', '1', 'Typically,', 'the', 'storage', 'requirement', 'than', 'SVM', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'Tove', 'Talse', '3', '1-', 'cosineSimalaritylr.p)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'vectors', 'I', 'and', 'y.', 'Tove', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gra-', 'dient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'Trve', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus-', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'plot', 'between', 'Precision', 'and', 'Recall.', 'Tot', 'sian', 'distribution.', 'Trve', 'Falge', 'o', 'original', 'space.', 'False', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'True', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'increases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'Trve', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 519.9375000000001
bottom right x of SN: 952.8125
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:51:15] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : uWMcs2Y.jpg
[2024/06/28 14:51:16] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:51:17] ppocr DEBUG: dt_boxes num : 51, elapsed : 0.12796306610107422
[2024/06/28 14:51:19] ppocr DEBUG: rec_res num  : 51, elapsed : 2.472529172897339
[2024/06/28 14:51:20] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:51:21] ppocr DEBUG: dt_boxes num : 52, elapsed : 0.18477988243103027
[2024/06/28 14:51:23] ppocr DEBUG: rec_res num  : 52, elapsed : 2.19882869720459
['6', '8', 'SN', '3', '2', '7', 'The decision boundary of an SVM can be non-linear in the', 'specific noise or details in the training data that do not', 'With a high value of the C parameter in SVM, the risk', 'one-vs-rest SVM.', 'generalize well to new, unseen data.', 'of overfitting increases, as the model may learn to capture', 'For multiclass problems with a large number of classes,', 'making a prediction using one-vs-one SVM is slower than', 'original space.', 'Tree is directly proportional to the number of nodes.', 'The Time required for making a prediction in the Decision', 'A mixture of two Gaussian distributions is always a Gaus-', 'sian distribution.', 'plot between Precision and Recall.', 'The Receiver Operating Characteristic ROC) curve is a', 'Backpropogation is used to update the weights, while gra-', 'than SVM for deployment.', 'Statement', 'network', 'd-dimensional vectors x and y.', 'KNN is a non-linear classifier.', 'Write your roll number here:', 'True', 'TRUE/FALS', 'Fase', 'Toue', 'Tre', 'True', 'Toue', 'Felge', 'Toue', 'False', 'NAME', 'Ind', 'V']
[2024/06/28 14:51:24] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:51:25] ppocr DEBUG: dt_boxes num : 49, elapsed : 0.1578998565673828
[2024/06/28 14:51:27] ppocr DEBUG: rec_res num  : 49, elapsed : 2.45300555229187
['O0', '6', '9', '5', 'Jnel', '3', '2', 'Fase', 'TneL', 'NS', 'TRRNUUS', 'NAAE']
[2024/06/28 14:51:28] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:51:29] ppocr DEBUG: dt_boxes num : 49, elapsed : 0.12753891944885254
[2024/06/28 14:51:31] ppocr DEBUG: rec_res num  : 49, elapsed : 2.167921304702759
['NAME', 'anel', 'Tue', 'yose', 'TneL', 'NS', '3', '2', '4', '5', '6', '8', '-', '7', '9', '10']
[2024/06/28 14:51:32] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:51:33] ppocr DEBUG: dt_boxes num : 50, elapsed : 0.1577134132385254
[2024/06/28 14:51:35] ppocr DEBUG: rec_res num  : 50, elapsed : 2.4019644260406494
['Ind', 'Write your roll number here:', 'TRUE/FALS', 'SN', 'Statement', 'Typically, the storage requirement for KNN is much larger', 'Toue', '1', 'than SVM for deployment.', 'Fase', 'KNN is a non-linear classifier', '2', '1-cosineSimalarity(x,y) is a valid distance metric for any', '3', "Toue'", 'd-dimensional vectors x and y.', 'Backpropogation is used to update the weights, while gra', '4', 'True', 'dient descent is used to compute the gradients in the neural', 'network.', 'The Receiver Operating Characteristic (ROC) curve is a', '5', 'plot between Precision and Recall', '6', 'A mixture of two Gaussian distributions is always a Gaus', 'sian distribution.', 'Trut', 'The Time required for making a prediction in the Decision', '7', 'Falge', 'Tree is directly proportional to the number of nodes.', 'The decision boundary of an SVM can be non-linear in the', '8', 'False', 'original space.', 'For multiclass problems with a large number of classes.', '9', 'Tre', 'making a prediction using one-vs-one SVM is slower than', 'one-vs-rest SVM.', 'With a high value of the C parameter in SVM, the risk', '10', 'Toue', 'of overfitting increases, as the model may learn to capture', 'specific noise or details in the training data that do not', 'generalize well to new, unseen data.']
OCR detection done
left top x of SN: 542.0
bottom right x of SN: 1007.0
left top y of SN: 1744.0
bottom right y of SN: 2067.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/uWMcs2Y.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7vXHnR1.jpg
OCR detection done with doctr
left top x of SN: 123.1484375
bottom right x of SN: 341.625
left top x of T/F: 884.203125
bottom right x of T/F: 1249.6484375
first t/f detection
F
((932.6796875, 395.5390625), (958.84375, 427.859375))
collision happend with box:395.5390625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.4453125, 486.34375), (946.53125, 520.203125))
text2 i.e the incoming text is the winner
collision happend with box:486.34375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((914.2109375, 554.0625), (944.9921875, 584.84375))
text2 i.e the incoming text is the winner
collision happend with box:554.0625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((904.9765625, 654.1015625), (935.7578125, 686.421875))
text2 i.e the incoming text is the winner
collision happend with box:654.1015625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((897.28125, 763.375), (924.9843750000001, 797.234375))
text2 i.e the incoming text is the winner
collision happend with box:763.375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((889.5859375000001, 854.1796875), (912.671875, 895.734375))
text2 i.e the incoming text is the winner
collision happend with box:854.1796875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((880.3515625, 937.2890625), (914.2109375, 968.0703125))
text2 i.e the incoming text is the winner
collision happend with box:937.2890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((881.890625, 1026.5546875), (908.0546875, 1058.875))
text2 i.e the incoming text is the winner
F
((869.578125, 1211.2421875), (898.8203124999999, 1246.640625))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['3']
the assigned keys are ['1', '2', '4', '5', '6', '7', '8', '9', '10']
['1', '2', '4', '5', '6', '7', '8', '9', '10', '1', '2', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 353, '2': 454, '4': 623, '5': 723, '6': 824, '7': 894, '8': 995, '9': 1063, '10': 1165}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'UNASSIGNED', '4': 'NULL', '5': False, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : favEvzP.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6278.031249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5472.9375, 1652.71875), (6069.0, 1905.59375))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5147.8125, 1797.21875), (5752.906249999999, 2095.25))
text2 i.e the incoming text is the winner
FlsFASE
((5165.875, 2230.71875), (6186.406249999999, 2519.71875))
FALSE
((5129.75, 2817.75), (5906.4375, 3097.71875))
TRUE
((5174.90625, 3395.75), (5861.281249999999, 3612.5))
TRUE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
FTRUE
((5147.8125, 4380.15625), (6069.0, 4614.96875))
FALSE
((5138.78125, 4876.875), (5861.281249999999, 5129.75))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5400.6875))
RUE
((5192.96875, 5355.53125), (5798.0625, 5572.28125))
FALSE
((5147.8125, 5852.25), (5852.25, 6150.28125))
FALSE
((5229.09375, 6339.9375), (5951.593750000001, 6728.28125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1941, '2': 2483, '3': 2853, '4': 3395, '5': 3937, '6': 4497, '7': 4858, '8': 5418, '9': 5807, '10': 6376}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GCKySAb.jpg
OCR detection done with doctr
left top x of SN: 953.4375000000001
bottom right x of SN: 1359.21875
left top x of T/F: 5300.375
bottom right x of T/F: 6467.687499999999
first t/f detection
Tril
((5391.65625, 2528.75), (5707.750000000001, 2727.4375))
False
((5355.531250000001, 3007.40625), (5743.875, 3197.0625))
Tyue
((5409.718750000001, 3386.71875), (5807.093749999999, 3603.46875))
Falle
((5364.5625, 3946.65625), (5725.812499999999, 4190.5))
Falle
((5382.625000000001, 4461.4375), (5825.15625, 4696.25))
Tiue
((5328.437500000001, 4967.1875), (5671.624999999999, 5202.0))
Tyue
((5319.406249999999, 5427.78125), (5680.656250000001, 5617.4375))
TAue
((5364.5625, 5888.375), (5770.96875, 6123.1875))
Falie
((5373.593749999999, 6276.71875), (5798.0625, 6511.53125))
Falie
((5364.5625, 6881.8125), (5761.937500000001, 7098.5625))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2474, '2': 2998, '3': 3350, '4': 3892, '5': 4416, '6': 4958, '7': 5319, '8': 5870}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 04t0i6U.jpg
OCR detection done with doctr
left top x of T/F: 862.7539062500001
bottom right x of T/F: 1259.66796875
left top x of SN: 23.86718750000002
bottom right x of SN: 244.15039062499997
first t/f detection
for
((838.916015625, 378.662109375), (872.7539062500001, 407.666015625))
collision happend with box:378.662109375 and text:for solving on the basis of percent match boxes
the current box specification are
T
((950.0976562499999, 359.326171875), (1001.66015625, 406.0546875))
text1 i.e the prev text is the winner
collision happend with box:378.662109375 and text:for solving on the basis of percent match boxes
the current box specification are
T
((922.7050781249999, 452.783203125), (971.044921875, 501.123046875))
text1 i.e the prev text is the winner
collision happend with box:378.662109375 and text:for solving on the basis of percent match boxes
the current box specification are
T
((935.595703125, 534.9609375), (977.4902343749999, 576.85546875))
text1 i.e the prev text is the winner
F
((969.4335937499999, 615.52734375), (1004.8828124999999, 668.701171875))
collision happend with box:615.52734375 and text:F solving on the basis of percent match boxes
the current box specification are
d-dimensional
((756.73828125, 543.017578125), (906.591796875, 594.580078125))
text2 i.e the incoming text is the winner
collision happend with box:543.017578125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((813.1347656249999, 649.365234375), (896.923828125, 686.42578125))
text1 i.e the prev text is the winner
collision happend with box:543.017578125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((896.923828125, 649.365234375), (917.8710937500001, 671.923828125))
text1 i.e the prev text is the winner
T
((1008.10546875, 723.486328125), (1051.611328125, 758.935546875))
collision happend with box:723.486328125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((991.9921875, 823.388671875), (1041.943359375, 870.1171875))
text2 i.e the incoming text is the winner
collision happend with box:823.388671875 and text:T solving on the basis of percent match boxes
the current box specification are
Pre-
((887.255859375, 749.267578125), (935.595703125, 776.66015625))
text2 i.e the incoming text is the winner
collision happend with box:749.267578125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
between
((798.6328125, 754.1015625), (890.4785156250001, 791.162109375))
text2 i.e the incoming text is the winner
collision happend with box:754.1015625 and text:between solving on the basis of percent match boxes
the current box specification are
distribution.
((822.8027343749999, 844.3359375), (956.54296875, 889.453125))
text2 i.e the incoming text is the winner
collision happend with box:844.3359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tree
((811.5234375, 926.513671875), (863.0859375000001, 958.740234375))
text1 i.e the prev text is the winner
collision happend with box:844.3359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((861.474609375, 924.90234375), (884.033203125, 949.072265625))
text1 i.e the prev text is the winner
collision happend with box:844.3359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((882.421875, 912.01171875), (966.2109375, 949.072265625))
text1 i.e the prev text is the winner
collision happend with box:844.3359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
oT
((1025.830078125, 902.34375), (1109.619140625, 949.072265625))
text1 i.e the prev text is the winner
collision happend with box:844.3359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
F
((1029.052734375, 989.35546875), (1058.056640625, 1031.25))
text1 i.e the prev text is the winner
original
((832.470703125, 1021.58203125), (916.259765625, 1060.25390625))
collision happend with box:1021.58203125 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((914.6484375, 1018.359375), (979.1015625, 1050.5859375))
text1 i.e the prev text is the winner
collision happend with box:1021.58203125 and text:original solving on the basis of percent match boxes
the current box specification are
making
((795.4101562500001, 1097.314453125), (875.9765625, 1135.986328125))
text1 i.e the prev text is the winner
collision happend with box:1021.58203125 and text:original solving on the basis of percent match boxes
the current box specification are
a
((872.7539062500001, 1098.92578125), (892.08984375, 1123.095703125))
text1 i.e the prev text is the winner
collision happend with box:1021.58203125 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((887.255859375, 1081.201171875), (1001.66015625, 1124.70703125))
text1 i.e the prev text is the winner
of
((842.138671875, 1198.828125), (871.142578125, 1229.443359375))
collision happend with box:1198.828125 and text:of solving on the basis of percent match boxes
the current box specification are
overfitting
((869.53125, 1187.548828125), (980.712890625, 1226.220703125))
text2 i.e the incoming text is the winner
collision happend with box:1187.548828125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((882.421875, 1224.609375), (953.3203125, 1258.447265625))
text2 i.e the incoming text is the winner
collision happend with box:1224.609375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((980.712890625, 1216.552734375), (1019.384765625, 1243.9453125))
text1 i.e the prev text is the winner
collision happend with box:1224.609375 and text:details solving on the basis of percent match boxes
the current box specification are
or
((853.41796875, 1240.72265625), (880.810546875, 1260.05859375))
text1 i.e the prev text is the winner
collision happend with box:1224.609375 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((843.75, 1266.50390625), (903.369140625, 1297.119140625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': True, '4': False, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 1492
printing the number dict y_coordinate
{'1': 481, '2': 583, '3': 650, '4': 752, '6': 953, '5': 852, '7': 1021, '9': 1192, '8': 1123, '10': 1492}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': False, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TphRpXN.jpg
OCR detection done with doctr
left top x of SN: 565.0937499999999
bottom right x of SN: 970.8750000000001
left top x of T/F: 5363.593749999999
bottom right x of T/F: 6503.812500000001
first t/f detection
Tycue
((5527.125, 2104.28125), (5933.53125, 2321.03125))
True
((5545.187500000001, 2691.3125), (5933.53125, 2926.125))
TRUE
((5536.156249999999, 3215.125), (6032.875000000001, 3422.84375))
FALSE
((5509.062499999999, 3865.375), (6141.250000000001, 4073.09375))
FALSE
((5454.874999999999, 4461.4375), (6078.031249999999, 4669.15625))
TRUE
((5491.000000000001, 4985.25), (6023.843749999999, 5192.96875))
TRUE
((5463.906250000001, 5527.125), (5960.625, 5707.75))
FALSE
((5391.65625, 6032.875), (5996.749999999999, 6231.5625))
TRUE
((5436.812500000001, 6502.5), (5960.625, 6683.125))
TRUE
((5355.531250000001, 7197.90625), (5897.406250000001, 7405.625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2221, '2': 2799, '3': 3188, '4': 3766, '5': 4335, '6': 4903, '7': 5283, '8': 5870, '9': 6249, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GoB1jLf.jpg
OCR detection done with doctr
left top x of SN: 94.32812499999997
bottom right x of SN: 310.94921875
left top x of T/F: 878.72265625
bottom right x of T/F: 1242.53125
first t/f detection
Le
((896.0468749999999, 279.78515625), (986.8671875, 316.40625))
collision happend with box:279.78515625 and text:Le solving on the basis of percent match boxes
the current box specification are
Trwe
((913.6250000000001, 336.9140625), (988.33203125, 372.0703125))
text2 i.e the incoming text is the winner
collision happend with box:336.9140625 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Tywe
((904.8359375, 404.296875), (986.8671875, 433.59375))
text1 i.e the prev text is the winner
collision happend with box:336.9140625 and text:Trwe solving on the basis of percent match boxes
the current box specification are
Fobse
((910.6953125000001, 477.5390625), (981.0078125000001, 505.37109375))
text2 i.e the incoming text is the winner
collision happend with box:477.5390625 and text:Fobse solving on the basis of percent match boxes
the current box specification are
FALSE
((898.9765624999999, 562.5), (982.47265625, 599.12109375))
text2 i.e the incoming text is the winner
collision happend with box:562.5 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((890.1875, 670.8984375), (983.9375, 706.0546875))
text2 i.e the incoming text is the winner
collision happend with box:670.8984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((898.9765624999999, 761.71875), (988.33203125, 793.9453125))
text2 i.e the incoming text is the winner
collision happend with box:761.71875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Fayye
((898.9765624999999, 849.609375), (975.1484375, 878.90625))
text1 i.e the prev text is the winner
collision happend with box:761.71875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Fte
((890.1875, 916.9921875), (970.75390625, 944.82421875))
text1 i.e the prev text is the winner
TeVE
((898.9765624999999, 952.1484375), (983.9375, 985.83984375))
collision happend with box:952.1484375 and text:TeVE solving on the basis of percent match boxes
the current box specification are
True
((903.37109375, 1013.671875), (983.9375, 1054.6875))
text2 i.e the incoming text is the winner
collision happend with box:1013.671875 and text:True solving on the basis of percent match boxes
the current box specification are
TRVE
((915.08984375, 1116.2109375), (994.19140625, 1144.04296875))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': False, '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 291, '2': 391, '3': 458, '4': 559, '5': 660, '6': 761, '7': 830, '8': 933, '9': 1000, '10': 1101}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': False, '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u6uDFnY.jpg
OCR detection done with doctr
left top x of SN: 547.0312500000001
bottom right x of SN: 961.8437499999999
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6828.937500000001
first t/f detection
folil
((5653.562500000001, 2095.25), (6050.937499999999, 2321.03125))
Fali
((5761.937500000001, 2655.1875), (6177.375, 2871.9375))
Tpnl
((5662.59375, 3278.34375), (6069.0, 3504.125))
1rul
((5725.812499999999, 3775.0625), (6150.28125, 3955.6875))
1hul
((5752.906249999999, 4226.625), (6105.124999999999, 4398.21875))
Folsl
((5779.999999999999, 4849.78125), (6150.28125, 5039.4375))
1rul
((5671.624999999999, 5527.125), (6105.124999999999, 5743.875))
1Ml
((5635.5, 6105.125), (6032.875000000001, 6285.75))
Lul
((5698.718749999999, 6610.875), (6032.875000000001, 6782.46875))
collision happend with box:6610.875 and text:Lul solving on the basis of percent match boxes
the current box specification are
Trud
((5725.812499999999, 6746.34375), (6177.375, 7017.28125))
text2 i.e the incoming text is the winner
Galst
((5707.750000000001, 7225.0), (6078.031249999999, 7414.65625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1977, '2': 2564, '3': 3151, '4': 3747, '5': 4145, '6': 4732, '7': 5536, '8': 6141, '9': 6538, '10': 7342}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : dmZCR9Y.jpg
OCR detection done with doctr
left top x of T/F: 5309.406249999999
bottom right x of T/F: 6530.906250000001
left top x of SN: 492.8437500000001
bottom right x of SN: 889.5937500000001
first t/f detection
TRUE
((5319.406249999999, 1932.6875), (5798.0625, 2140.40625))
TRUE
((5346.499999999999, 2564.875), (5834.187499999999, 2745.5))
FALSE
((5346.499999999999, 3016.4375), (5816.125000000001, 3242.21875))
PALSE
((5319.406249999999, 3648.625), (5798.0625, 3829.25))
PALSE
((5283.28125, 4244.6875), (5716.78125, 4425.3125))
TRUE
((5274.250000000001, 4777.53125), (5707.750000000001, 4985.25))
FALSE
((5229.09375, 5238.125), (5671.624999999999, 5418.75))
FALSE
((5238.124999999999, 5761.9375), (5716.78125, 5942.5625))
TRUS
((5183.9375, 6222.53125), (5635.5, 6439.28125))
TRUE
((5202.0, 6899.875), (5626.468750000001, 7080.5))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2104, '2': 2682, '3': 3070, '4': 3648, '5': 4217, '6': 4786, '7': 5165, '8': 5752, '9': 6141, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UeKwymv.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6368.343750000001
left top x of SN: 772.8125
bottom right x of SN: 1178.5937499999998
first t/f detection
True
((5373.593749999999, 1734.0), (5770.96875, 1869.46875))
Trve
((5418.75, 2203.625), (5834.187499999999, 2384.25))
False
((5400.687499999999, 2655.1875), (5825.15625, 2817.75))
True
((5373.593749999999, 3242.21875), (5834.187499999999, 3413.8125))
True
((5454.874999999999, 3811.1875), (5906.4375, 3973.75))
falye
((5418.75, 4271.78125), (5798.0625, 4443.375))
False
((5427.781249999999, 4705.28125), (5852.25, 4876.875))
Trve
((5418.75, 5202.0), (5834.187499999999, 5400.6875))
False
((5463.906250000001, 5707.75), (5798.0625, 5852.25))
True
((5463.906250000001, 6312.84375), (5879.34375, 6493.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1842, '2': 2366, '3': 2718, '4': 3251, '5': 3793, '6': 4335, '7': 4696, '8': 5256, '9': 5626, '10': 6195}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EPXRcep.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5724.843750000001
bottom right x of T/F: 7009.562499999999
first t/f detection
FALSE
((5816.125000000001, 1977.84375), (6466.375000000001, 2230.71875))
TRUE
((5770.96875, 2610.03125), (6376.062499999999, 2862.90625))
FALSE
((5734.843750000001, 3260.28125), (6385.093750000001, 3458.96875))
TRU
((5671.624999999999, 3775.0625), (6050.937499999999, 3991.8125))
TRUE
((5680.656250000001, 4262.75), (6213.499999999999, 4488.53125))
FALSE
((5879.34375, 4903.96875), (6583.78125, 5192.96875))
TRVE
((5861.281249999999, 5707.75), (6556.6875, 5969.65625))
TRUE
((5816.125000000001, 6276.71875), (6385.093750000001, 6475.40625))
FALSE
((5834.187499999999, 6845.6875), (6484.437499999999, 7062.4375))
TRVE
((5743.875, 7450.78125), (6249.625000000001, 7658.5))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2619, '3': 3224, '4': 3847, '5': 4253, '6': 4876, '7': 5698, '8': 6312, '9': 6728, '10': 7550}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : HOtiavT.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6792.812499999999
left top x of SN: 357.3750000000001
bottom right x of SN: 772.1874999999999
first t/f detection
Fatse
((5572.281250000001, 1959.78125), (6258.65625, 2212.65625))
FALSE
((5590.343749999999, 2122.34375), (6430.249999999999, 2420.375))
FALSE
((5635.5, 2465.53125), (6484.437499999999, 2799.6875))
TRUE
((5554.21875, 3097.71875), (6321.874999999999, 3395.75))
TRUE
((5536.156249999999, 3630.5625), (6285.75, 3919.5625))
TRUE
((5617.437499999999, 4091.15625), (6439.281250000001, 4389.1875))
or
((5310.375, 4967.1875), (5500.03125, 5102.65625))
TRUE
((5500.03125, 4768.5), (6312.84375, 5066.53125))
the
((5283.28125, 5536.15625), (5509.062499999999, 5689.6875))
collision happend with box:5536.15625 and text:the solving on the basis of percent match boxes
the current box specification are
False
((5626.468750000001, 5518.09375), (6385.093750000001, 5816.125))
text2 i.e the incoming text is the winner
TRVE
((5689.6875, 6005.78125), (6376.062499999999, 6267.6875))
SAsf
((5743.875, 6484.4375), (6457.343749999999, 6773.4375))
TRUE
((5725.812499999999, 6782.46875), (6511.531249999999, 7080.5))
TRVE
((5752.906249999999, 7152.75), (6556.6875, 7405.625))
the
((5328.437500000001, 6520.5625), (5545.187500000001, 6665.0625))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2149, '2': 2736, '3': 3323, '4': 3919, '5': 4316, '6': 4913, '7': 5698, '8': 6285, '9': 6683, '10': 7477}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 57xTE5U.jpg
OCR detection done with doctr
left top x of T/F: 5047.5
bottom right x of T/F: 6278.031249999999
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5138.78125, 1761.09375), (5743.875, 2077.1875))
TRUE
((5183.9375, 2284.90625), (5861.281249999999, 2573.90625))
Fatse
((5617.437499999999, 2591.96875), (6150.28125, 2853.875))
cete
((5509.062499999999, 2853.875), (5825.15625, 3025.46875))
Foags
((5337.46875, 3016.4375), (5852.25, 3197.0625))
d-dimensional
((4208.5625, 2826.78125), (5075.5625, 3070.625))
is
((4976.21875, 3431.875), (5102.65625, 3567.34375))
collision happend with box:3431.875 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5283.28125, 3332.53125), (5933.53125, 3648.625))
text2 i.e the incoming text is the winner
Pre
((4849.78125, 4000.84375), (5147.8125, 4181.46875))
collision happend with box:4000.84375 and text:Pre solving on the basis of percent match boxes
the current box specification are
FALSE
((5337.46875, 3946.65625), (5978.687500000001, 4235.65625))
text2 i.e the incoming text is the winner
TRUE
((5310.375, 4452.40625), (5960.625, 4759.46875))
TRUE
((5463.906250000001, 4940.09375), (6087.062500000001, 5202.0))
Rtocs
((5500.03125, 5491.0), (6168.343750000001, 5689.6875))
Qfase
((5617.437499999999, 5978.6875), (6222.531250000001, 6177.375))
FALS
((5491.000000000001, 6168.34375), (6014.8125, 6376.0625))
distribution.
((4416.28125, 4587.875), (5192.96875, 4786.5625))
directly
((4741.40625, 4985.25), (5220.062500000001, 5165.875))
space.
((4867.84375, 5617.4375), (5256.1875, 5752.90625))
collision happend with box:5617.4375 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((5491.000000000001, 5617.4375), (6258.65625, 5825.15625))
text2 i.e the incoming text is the winner
prediction
((4678.1875, 5987.71875), (5301.343750000001, 6159.3125))
overfitting
((4497.5625, 6592.8125), (5138.78125, 6764.40625))
the
((5138.78125, 6773.4375), (5364.5625, 6926.96875))
collision happend with box:6773.4375 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5662.59375, 6701.1875), (6258.65625, 6954.0625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6522
printing the number dict y_coordinate
{'1': 2230, '2': 2781, '3': 3151, '4': 3711, '5': 4280, '6': 4858, '7': 5238, '8': 5825, '9': 6222, '10': 6522}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': True, '7': True, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jlxLpcG.jpg
OCR detection done with doctr
left top x of SN: 980.5312500000001
bottom right x of SN: 1377.2812500000002
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6458.65625
first t/f detection
L
((6204.46875, 1327.59375), (6348.968749999999, 1435.96875))
TRVE
((5355.531250000001, 2194.59375), (5834.187499999999, 2366.1875))
TRVE
((5319.406249999999, 2673.25), (5816.125000000001, 2844.84375))
FALSE
((5319.406249999999, 3151.90625), (5770.96875, 3314.46875))
FALSE
((5319.406249999999, 3675.71875), (5798.0625, 3856.34375))
FALSE
((5274.250000000001, 4262.75), (5779.999999999999, 4434.34375))
FALSE
((5274.250000000001, 4768.5), (5761.937500000001, 4940.09375))
FALSE
((5238.124999999999, 5192.96875), (5707.750000000001, 5400.6875))
TRUE
((5183.9375, 5680.65625), (5626.468750000001, 5888.375))
TRVE
((5229.09375, 6132.21875), (5716.78125, 6294.78125))
TRVE
((5174.90625, 6710.21875), (5590.343749999999, 6908.90625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 2212, '2': 2718, '3': 3052, '4': 3576, '5': 4082, '6': 4605}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : D6dDvU3.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6765.718749999999
left top x of SN: 700.5624999999999
bottom right x of SN: 1115.375
first t/f detection
TRUG
((5617.437499999999, 2004.9375), (6204.46875, 2176.53125))
TRVE
((5572.281250000001, 2555.84375), (6141.250000000001, 2718.40625))
FALSE
((5590.343749999999, 3070.625), (6258.65625, 3278.34375))
FALSE
((5554.21875, 3675.71875), (6222.531250000001, 3838.28125))
TRVE
((5545.187500000001, 4280.8125), (6159.312499999999, 4443.375))
FALSE
((5509.062499999999, 4759.46875), (6159.312499999999, 4922.03125))
TFALSE
((5563.249999999999, 5238.125), (6330.906250000001, 5409.71875))
TRVE
((5500.03125, 5743.875), (6114.156250000001, 5906.4375))
TRVE
((5563.249999999999, 6195.4375), (6159.312499999999, 6358.0))
TRVE
((5518.093750000001, 6818.59375), (6078.031249999999, 6981.15625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2077, '2': 2655, '3': 3052, '4': 3630, '5': 4208, '6': 4795, '7': 5183, '8': 5770, '9': 6159, '10': 6746}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VJFlqhC.jpg
OCR detection done with doctr
left top x of T/F: 5481.000000000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 474.78125
bottom right x of SN: 898.625
first t/f detection
ToUe
((5536.156249999999, 1815.28125), (6141.250000000001, 2059.125))
Falge
((5527.125, 2293.9375), (6213.499999999999, 2582.9375))
False
((5563.249999999999, 2917.09375), (6096.09375, 3197.0625))
Toue
((5572.281250000001, 3892.46875), (6303.812500000001, 4154.375))
TOUe
((5599.375000000001, 4560.78125), (6222.531250000001, 4777.53125))
Paboe
((5671.624999999999, 5147.8125), (6312.84375, 5491.0))
tm
((5581.3125, 5807.09375), (5942.562499999999, 6096.09375))
Tove.
((5626.468750000001, 6493.46875), (6394.125, 6728.28125))
tove
((5581.3125, 6936.0), (6267.687499999999, 7234.03125))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['2', '9']
the assigned keys are ['1', '3', '4', '5', '6', '7', '8', '10']
['1', '3', '4', '5', '6', '7', '8', '10', '1', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 1878, '3': 3034, '4': 3585, '5': 3955, '6': 4542, '7': 5310, '8': 5906, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yfnPUlS.jpg
OCR detection done with doctr
left top x of SN: 69.84375
bottom right x of SN: 299.71875
left top x of T/F: 1095.265625
bottom right x of T/F: 1517.234375
first t/f detection
Tyw
((1121.890625, 525.765625), (1242.421875, 604.734375))
collision happend with box:525.765625 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1121.890625, 625.515625), (1242.421875, 710.71875))
text2 i.e the incoming text is the winner
collision happend with box:625.515625 and text:folte solving on the basis of percent match boxes
the current box specification are
Truv
((1130.2031250000002, 741.890625), (1238.265625, 818.78125))
text2 i.e the incoming text is the winner
collision happend with box:741.890625 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tror
((1132.28125, 845.796875), (1248.65625, 935.15625))
text2 i.e the incoming text is the winner
Tywv
((1123.96875, 1007.890625), (1242.421875, 1086.859375))
collision happend with box:1007.890625 and text:Tywv solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1178.296875))
text2 i.e the incoming text is the winner
collision happend with box:1103.484375 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1254.890625, 1315.453125))
text2 i.e the incoming text is the winner
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Fale
((1142.671875, 1330.0), (1244.5, 1396.5))
text2 i.e the incoming text is the winner
collision happend with box:1330.0 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falw
((1136.4375, 1440.140625), (1252.8125, 1519.109375))
text2 i.e the incoming text is the winner
collision happend with box:1440.140625 and text:Falw solving on the basis of percent match boxes
the current box specification are
Fale
((1126.046875, 1573.140625), (1269.4375, 1674.96875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 513, '2': 646, '3': 735, '4': 868, '5': 1001, '6': 1134, '7': 1224, '8': 1359, '9': 1448, '10': 1583}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : O0KTNBq.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6548.968749999999
left top x of SN: 510.9062499999999
bottom right x of SN: 925.71875
first t/f detection
Cup
((5843.218750000001, 1914.625), (6303.812500000001, 2131.375))
TEa
((5445.84375, 2077.1875), (5834.187499999999, 2293.9375))
False
((5391.65625, 2591.96875), (5969.656249999999, 2844.84375))
false
((5617.437499999999, 3043.53125), (6177.375, 3314.46875))
Tque
((5427.781249999999, 3747.96875), (6014.8125, 4018.90625))
Tque
((5292.312499999999, 4380.15625), (5879.34375, 4633.03125))
false
((5328.437500000001, 4885.90625), (5861.281249999999, 5156.84375))
Tgtue
((5328.437500000001, 5346.5), (5915.468749999999, 5608.40625))
Duug
((5346.499999999999, 5951.59375), (5897.406250000001, 6177.375))
falye
((5427.781249999999, 6303.8125), (5987.71875, 6601.84375))
False
((5454.874999999999, 6800.53125), (6069.0, 7107.59375))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2727, '3': 3106, '4': 3702, '5': 4271, '6': 4858, '7': 5238, '8': 5825, '9': 6222, '10': 6818}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kGfwhg1.jpg
OCR detection done with doctr
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6702.5
left top x of SN: 285.125
bottom right x of SN: 699.9375000000001
first t/f detection
TRUG
((5581.3125, 1734.0), (6177.375, 2004.9375))
FALSE
((5599.375000000001, 2293.9375), (6330.906250000001, 2582.9375))
TRUE
((5509.062499999999, 2998.375), (6249.625000000001, 3287.375))
FALSE
((6014.8125, 3531.21875), (6529.59375, 3738.9375))
FALSE
((5581.3125, 3955.6875), (6321.874999999999, 4199.53125))
FALSE
((5716.78125, 4696.25), (6294.781249999999, 4903.96875))
the
((5247.156250000001, 5355.53125), (5472.9375, 5500.03125))
collision happend with box:5355.53125 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5626.468750000001, 5364.5625), (6168.343750000001, 5572.28125))
text2 i.e the incoming text is the winner
Tpat
((5653.562500000001, 5915.46875), (6168.343750000001, 6123.1875))
collision happend with box:5915.46875 and text:Tpat solving on the basis of percent match boxes
the current box specification are
FALSE
((6258.65625, 5942.5625), (6656.031250000001, 6114.15625))
true and false collision so given priority to text2 which is the incoming text
the
((5292.312499999999, 6339.9375), (5509.062499999999, 6493.46875))
collision happend with box:6339.9375 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5644.531249999999, 6466.375), (6150.28125, 6683.125))
text2 i.e the incoming text is the winner
TRUE
((5725.812499999999, 7098.5625), (6195.437500000001, 7279.1875))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2041, '2': 2619, '3': 3206, '4': 3793, '5': 4190, '6': 4786, '7': 5563, '8': 6168, '9': 6565, '10': 7360}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XYvZQ69.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6792.812499999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRUE
((5617.437499999999, 2131.375), (6348.968749999999, 2393.28125))
TRUE
((5590.343749999999, 2700.34375), (6403.156249999999, 2989.34375))
TRVE
((5481.968749999999, 3215.125), (6285.75, 3468.0))
FALSE
((5491.000000000001, 3829.25), (6376.062499999999, 4073.09375))
Fase
((5536.156249999999, 4551.75), (6249.625000000001, 4723.34375))
FALSE
((5518.093750000001, 4777.53125), (6403.156249999999, 4949.125))
FALSE
((5536.156249999999, 5093.625), (6376.062499999999, 5301.34375))
FALSE
((5445.84375, 5608.40625), (6358.000000000001, 5816.125))
FALSE
((5427.781249999999, 6105.125), (6240.593749999999, 6348.96875))
TRVE
((5481.968749999999, 6592.8125), (6231.5625, 6800.53125))
TRVE
((5436.812500000001, 7252.09375), (6204.46875, 7486.90625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2239, '2': 2844, '3': 3242, '4': 3847, '5': 4443, '6': 5066, '7': 5463, '8': 6096, '9': 6502, '10': 7125}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CutQ325.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6485.75
left top x of SN: 519.9375000000001
bottom right x of SN: 925.71875
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5156.84375, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5156.84375, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5888.374999999999, 5102.65625))
FALSE
((5156.84375, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5147.8125, 5825.15625), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6511.53125))
TRVE
((5211.031249999999, 6990.1875), (5825.15625, 7161.78125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
the unassigned keys are ['7']
the assigned keys are ['1', '2', '3', '4', '5', '6', '8', '9', '10']
['1', '2', '3', '4', '5', '6', '8', '9', '10', '1', '2', '3', '4', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3242, '4': 3802, '5': 4362, '6': 4931, '8': 5879, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lLhLJNY.jpg
OCR detection done with doctr
left top x of SN: 330.2812500000001
bottom right x of SN: 754.1250000000001
left top x of T/F: 5453.906250000001
bottom right x of T/F: 6738.624999999999
first t/f detection
Febe
((5527.125, 1950.75), (5852.25, 2203.625))
Fle
((5472.9375, 2537.78125), (5816.125000000001, 2736.46875))
Trve
((5409.718750000001, 3079.65625), (5852.25, 3341.5625))
Trie
((5391.65625, 3693.78125), (5743.875, 3946.65625))
Fabe
((5427.781249999999, 4253.71875), (5879.34375, 4515.625))
Tre
((5346.499999999999, 4831.71875), (5716.78125, 5048.46875))
True
((5409.718750000001, 5364.5625), (5807.093749999999, 5554.21875))
Trve
((5436.812500000001, 5852.25), (5816.125000000001, 6105.125))
Fale
((5427.781249999999, 6367.03125), (5816.125000000001, 6592.8125))
True
((5382.625000000001, 7080.5), (5807.093749999999, 7315.3125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1968, '2': 2582, '3': 2998, '4': 3630, '5': 4235, '6': 4849, '7': 5256, '8': 5870, '9': 6276, '10': 6881}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 104uBJZ.jpg
OCR detection done with doctr
left top x of SN: 97.98828125
bottom right x of SN: 316.66015625
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1332.177734375
first t/f detection
F
((1003.271484375, 427.001953125), (1043.5546875, 472.119140625))
T
((988.76953125, 799.21875), (1061.279296875, 850.78125))
collision happend with box:799.21875 and text:T solving on the basis of percent match boxes
the current box specification are
PT
((946.875, 876.5625), (1053.22265625, 929.736328125))
text2 i.e the incoming text is the winner
collision happend with box:876.5625 and text:PT solving on the basis of percent match boxes
the current box specification are
F
((990.3808593750001, 971.630859375), (1024.21875, 1021.58203125))
text2 i.e the incoming text is the winner
collision happend with box:971.630859375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((980.712890625, 1052.197265625), (1019.384765625, 1100.537109375))
text2 i.e the incoming text is the winner
F
((1033.88671875, 1253.61328125), (1067.724609375, 1303.564453125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 514, '3': 580, '4': 688, '5': 787, '6': 889, '7': 957, '8': 1061, '9': 1129, '10': 1235}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fZ2tBIx.jpg
OCR detection done with doctr
left top x of SN: 628.3125000000001
bottom right x of SN: 1043.125
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6594.125
first t/f detection
True
((5391.65625, 1824.3125), (5843.218750000001, 2095.25))
Tue
((5400.687499999999, 2357.15625), (5843.218750000001, 2619.0625))
false
((5400.687499999999, 2799.6875), (5879.34375, 3124.8125))
False
((5355.531250000001, 3395.75), (5843.218750000001, 3711.84375))
Tue
((5319.406249999999, 4027.9375), (5807.093749999999, 4344.03125))
False
((5319.406249999999, 4524.65625), (5798.0625, 4840.75))
Folse
((5274.250000000001, 5012.34375), (5698.718749999999, 5310.375))
Thue
((5274.250000000001, 5590.34375), (5680.656250000001, 5816.125))
Tue
((5229.09375, 6059.96875), (5671.624999999999, 6339.9375))
Thue
((5229.09375, 6628.9375), (5725.812499999999, 6908.90625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['9']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '10']
['1', '2', '3', '4', '5', '6', '7', '8', '10', '1', '2', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'1': 1878, '2': 2447, '3': 2826, '4': 3404, '5': 3964, '6': 4551, '7': 4931, '8': 5518, '10': 6502}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BniP88N.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6422.531250000001
left top x of SN: 637.34375
bottom right x of SN: 1034.09375
first t/f detection
TRVE
((5192.96875, 1860.4375), (5608.40625, 2023.0))
TRUE
((5138.78125, 2239.75), (5545.187500000001, 2411.34375))
TRUE
((5183.9375, 2781.625), (5545.187500000001, 2953.21875))
False
((5256.1875, 3838.28125), (5599.375000000001, 4036.96875))
FALSE
((5256.1875, 3133.84375), (5716.78125, 3314.46875))
Falbe
((5220.062500000001, 4298.875), (5635.5, 4497.5625))
Falke
((5220.062500000001, 4642.0625), (5599.375000000001, 4858.8125))
TRUE
((5156.84375, 5265.21875), (5581.3125, 5445.84375))
TRUE
((5147.8125, 5789.03125), (5581.3125, 5969.65625))
TRUE
((5120.71875, 6394.125), (5581.3125, 6556.6875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1661, '2': 2212, '3': 2582, '4': 3133, '5': 3684, '6': 4235, '7': 4596, '8': 5147, '9': 5518, '10': 6069}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0rmWKaj.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyww
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyww solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
Tro
((1130.2031250000002, 743.96875), (1238.265625, 820.859375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1250.734375, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
a
((1408.671875, 775.140625), (1421.140625, 791.765625))
text1 i.e the prev text is the winner
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
collision happend with box:1003.734375 and text:Tisr solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
text1 i.e the prev text is the winner
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Falve
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
collision happend with box:1332.078125 and text:Falve solving on the basis of percent match boxes
the current box specification are
false
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1438.0625 and text:false solving on the basis of percent match boxes
the current box specification are
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mlxhGQo.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6485.75
left top x of SN: 519.9375000000001
bottom right x of SN: 916.6875000000001
first t/f detection
TRUE
((5220.062500000001, 1959.78125), (6005.781250000001, 2239.75))
TRUE
((5238.124999999999, 2591.96875), (5960.625, 2808.71875))
FALSE
((5192.96875, 2971.28125), (6078.031249999999, 3296.40625))
FALSE
((5156.84375, 3729.90625), (6141.250000000001, 3982.78125))
FALSE
((5165.875, 4353.0625), (5987.71875, 4560.78125))
FALSE
((5102.65625, 4894.9375), (5888.374999999999, 5102.65625))
FALSE
((5156.84375, 5328.4375), (5906.4375, 5536.15625))
TRVE
((5156.84375, 5816.125), (5888.374999999999, 6032.875))
TRUE
((5147.8125, 6294.78125), (5852.25, 6502.5))
TRVE
((5211.031249999999, 6999.21875), (5825.15625, 7170.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2302, '2': 2853, '3': 3233, '4': 3793, '5': 4362, '6': 4931, '7': 5310, '8': 5879, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 10
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6395.437500000001
left top x of SN: 664.4375
bottom right x of SN: 1061.1875
first t/f detection
PALSE
((5481.968749999999, 1743.03125), (6041.90625, 1941.71875))
TRAPE
((5238.124999999999, 1932.6875), (5725.812499999999, 2149.4375))
FALSE
((5265.218749999999, 2429.40625), (5915.468749999999, 2646.15625))
TRUE
((5436.812500000001, 2736.46875), (5987.71875, 2944.1875))
(RALSE
((5211.031249999999, 2962.25), (5852.25, 3169.96875))
TRUE
((5256.1875, 3477.03125), (5798.0625, 3702.8125))
TRUE
((5265.218749999999, 4109.21875), (5761.937500000001, 4280.8125))
FALSE
((5310.375, 4642.0625), (5906.4375, 4804.625))
FALSE
((5256.1875, 5102.65625), (5861.281249999999, 5274.25))
FALSE
((5301.343750000001, 5590.34375), (5933.53125, 5789.03125))
TRUE
((5229.09375, 6637.96875), (5716.78125, 6854.71875))
FALSE
((5283.28125, 6032.875), (5888.374999999999, 6231.5625))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2682, '3': 3052, '4': 3594, '5': 4136, '6': 4687, '7': 5057, '8': 5608, '9': 5978, '10': 6547}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': False, '8': False, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5Abx9M2.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6639.281250000001
left top x of SN: 357.3750000000001
bottom right x of SN: 817.34375
first t/f detection
aul
((5491.000000000001, 1878.5), (5924.500000000001, 2013.96875))
Tyuul
((5472.9375, 2483.59375), (5996.749999999999, 2664.21875))
Falie
((5563.249999999999, 3043.53125), (6041.90625, 3269.3125))
Taue
((5563.249999999999, 3576.375), (6041.90625, 3747.96875))
T2ul
((5572.281250000001, 4073.09375), (6087.062500000001, 4244.6875))
19ue
((5635.5, 4705.28125), (6105.124999999999, 4840.75))
collision happend with box:4705.28125 and text:19ue solving on the basis of percent match boxes
the current box specification are
Oor
((4876.875, 4822.6875), (5427.781249999999, 4985.25))
text2 i.e the incoming text is the winner
the
((5183.9375, 5409.71875), (5409.718750000001, 5563.25))
collision happend with box:5409.71875 and text:the solving on the basis of percent match boxes
the current box specification are
Taicie
((5626.468750000001, 5418.75), (6168.343750000001, 5581.3125))
text2 i.e the incoming text is the winner
the
((5211.031249999999, 6394.125), (5436.812500000001, 6538.625))
collision happend with box:6394.125 and text:the solving on the basis of percent match boxes
the current box specification are
Fate
((5653.562500000001, 6421.21875), (6141.250000000001, 6683.125))
text2 i.e the incoming text is the winner
collision happend with box:6421.21875 and text:Fate solving on the basis of percent match boxes
the current box specification are
ofX
((5138.78125, 6556.6875), (5445.84375, 6746.34375))
text1 i.e the prev text is the winner
Toie
((5698.718749999999, 6683.125), (6267.687499999999, 6890.84375))
Tairel
((5680.656250000001, 7089.53125), (6168.343750000001, 7261.125))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': False, '8': False, '9': True, '10': False}
the unassigned keys are ['1', '2', '4', '6']
the assigned keys are ['3', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'3': 3242, '5': 4190, '7': 5509, '8': 6087, '9': 6466, '10': 7234}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': False, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ofbF5fL.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 845.796875), (1248.65625, 937.234375))
collision happend with box:845.796875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text2 i.e the incoming text is the winner
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
collision happend with box:1330.0 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
text2 i.e the incoming text is the winner
collision happend with box:1438.0625 and text:Falwe solving on the basis of percent match boxes
the current box specification are
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CCqulRg.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6693.468750000001
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5572.281250000001, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5509.062499999999, 3034.5), (6096.09375, 3233.1875))
TRUE
((5572.281250000001, 3585.40625), (6087.062500000001, 3747.96875))
TROE
((5617.437499999999, 4082.125), (6087.062500000001, 4253.71875))
FALSE
((5509.062499999999, 4741.40625), (6069.0, 4903.96875))
TRUE
((5590.343749999999, 5445.84375), (6069.0, 5581.3125))
TRUE
((5581.3125, 5933.53125), (6078.031249999999, 6096.09375))
TRUe
((5581.3125, 6457.34375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are ['1', '2']
the assigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 6394, '3': 3097, '4': 3711, '5': 4064, '6': 4651, '7': 5436, '8': 6005, '10': 7152}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fSoFduO.jpg
OCR detection done with doctr
left top x of SN: 646.3749999999999
bottom right x of SN: 1052.15625
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6422.531250000001
first t/f detection
Tavs
((5319.406249999999, 2068.15625), (5843.218750000001, 2275.875))
TRUE
((5391.65625, 2582.9375), (5915.468749999999, 2763.5625))
TRWE
((5346.499999999999, 3007.40625), (6041.90625, 3251.25))
FALSE
((5301.343750000001, 3657.65625), (5897.406250000001, 3901.5))
FALS
((5454.874999999999, 4217.59375), (5870.312500000001, 4398.21875))
TRUE
((5382.625000000001, 4696.25), (5924.500000000001, 4867.84375))
TROE
((5463.906250000001, 5202.0), (6005.781250000001, 5373.59375))
FALSE
((5481.968749999999, 5671.625), (6150.28125, 5843.21875))
TRUB
((5454.874999999999, 6105.125), (5951.593750000001, 6321.875))
the
((5003.3125, 6836.65625), (5220.062500000001, 6981.15625))
collision happend with box:6836.65625 and text:the solving on the basis of percent match boxes
the current box specification are
TRue
((5337.46875, 6764.40625), (5825.15625, 6936.0))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2871, '3': 3242, '4': 3802, '5': 4353, '6': 4903, '7': 5274, '8': 5834, '9': 6204, '10': 6755}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bvW2cMc.jpg
OCR detection done with doctr
left top x of T/F: 5155.875
bottom right x of T/F: 6269.0
left top x of SN: 727.6562499999999
bottom right x of SN: 1142.46875
first t/f detection
TRUE
((5192.96875, 2086.21875), (5662.59375, 2302.96875))
TRUE
((5192.96875, 2582.9375), (5689.6875, 2799.6875))
TRUE
((5211.031249999999, 3016.4375), (5662.59375, 3242.21875))
FALSE
((5174.90625, 3585.40625), (5725.812499999999, 3811.1875))
FALSE
((5256.1875, 4163.40625), (5789.031250000001, 4380.15625))
FALSE
((5247.156250000001, 4624.0), (5798.0625, 4876.875))
GALSE
((5238.124999999999, 5057.5), (5779.999999999999, 5283.28125))
TRUE
((5247.156250000001, 5608.40625), (5680.656250000001, 5780.0))
prediction.
((4560.78125, 6032.875), (5192.96875, 6186.40625))
collision happend with box:6032.875 and text:prediction. solving on the basis of percent match boxes
the current box specification are
TRUE
((5238.124999999999, 6005.78125), (5671.624999999999, 6186.40625))
text2 i.e the incoming text is the winner
TRUE
((5274.250000000001, 6538.625), (5743.875, 6755.375))
the
((4958.15625, 6746.34375), (5192.96875, 6890.84375))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
the unassigned keys are ['2', '4', '7']
the assigned keys are ['1', '3', '5', '6', '8', '9', '10']
['1', '3', '5', '6', '8', '9', '10', '1', '3', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2375, '3': 3251, '5': 4325, '6': 4894, '8': 5761, '9': 6132, '10': 6674}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BwGdMO9.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6404.46875
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5247.156250000001, 2176.53125), (6240.593749999999, 2510.6875))
FALSE
((5301.343750000001, 3296.40625), (6321.874999999999, 3567.34375))
TRUE
((5229.09375, 3901.5), (6159.312499999999, 4154.375))
FAISE
((5220.062500000001, 4452.40625), (6213.499999999999, 4705.28125))
TRUE
((5183.9375, 4994.28125), (6114.156250000001, 5238.125))
TRUE
((5165.875, 5427.78125), (6032.875000000001, 5680.65625))
TRUE
((5183.9375, 5933.53125), (6014.8125, 6186.40625))
TRUE
((5238.124999999999, 6412.1875), (6069.0, 6647.0))
TRUE
((5238.124999999999, 6972.125), (6105.124999999999, 7215.96875))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3007, '3': 3377, '4': 3937, '5': 4488, '6': 5039, '7': 5418, '8': 5969, '9': 6348, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NNgkxyl.jpg
OCR detection done with doctr
left top x of T/F: 766.5
bottom right x of T/F: 1146.2265625
left top x of SN: 12.847656249999993
bottom right x of SN: 234.5078125
first t/f detection
for
((748.7265625, 342.5390625), (779.5859375, 368.76953125))
collision happend with box:342.5390625 and text:for solving on the basis of percent match boxes
the current box specification are
FALSE
((810.4453125, 339.453125), (898.3945312499999, 385.7421875))
text2 i.e the incoming text is the winner
collision happend with box:339.453125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((822.7890625, 416.6015625), (910.7382812500001, 459.8046875))
text2 i.e the incoming text is the winner
collision happend with box:416.6015625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((836.6757812499999, 498.37890625), (915.3671875, 536.953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:498.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((677.75, 506.09375), (813.53125, 555.46875))
text2 i.e the incoming text is the winner
collision happend with box:506.09375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((802.73046875, 607.9296875), (828.9609375, 635.703125))
text1 i.e the prev text is the winner
collision happend with box:506.09375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((845.93359375, 600.21484375), (924.625, 640.33203125))
text2 i.e the incoming text is the winner
collision happend with box:600.21484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
descent
((730.2109375, 612.55859375), (807.359375, 648.046875))
text1 i.e the prev text is the winner
collision happend with box:600.21484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Pre
((798.1015625, 708.22265625), (844.390625, 739.08203125))
text1 i.e the prev text is the winner
collision happend with box:600.21484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((875.25, 700.5078125), (950.85546875, 739.08203125))
text2 i.e the incoming text is the winner
collision happend with box:700.5078125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
between
((719.41015625, 714.39453125), (802.73046875, 751.42578125))
text1 i.e the prev text is the winner
collision happend with box:700.5078125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 782.28515625), (957.02734375, 827.03125))
text1 i.e the prev text is the winner
collision happend with box:700.5078125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((742.5546875, 806.97265625), (864.44921875, 851.71875))
text2 i.e the incoming text is the winner
collision happend with box:806.97265625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tree
((733.296875, 887.20703125), (782.6718749999999, 918.06640625))
text1 i.e the prev text is the winner
collision happend with box:806.97265625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((779.5859375, 887.20703125), (801.1875, 910.3515625))
text1 i.e the prev text is the winner
collision happend with box:806.97265625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((798.1015625, 874.86328125), (875.25, 911.89453125))
text1 i.e the prev text is the winner
collision happend with box:806.97265625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((895.30859375, 868.69140625), (964.7421875000001, 905.72265625))
text1 i.e the prev text is the winner
collision happend with box:806.97265625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((909.1953124999999, 950.46875), (997.14453125, 993.671875))
text1 i.e the prev text is the winner
FALSE
((926.16796875, 1033.7890625), (1006.40234375, 1073.90625))
collision happend with box:1033.7890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
original
((754.8984375, 982.87109375), (830.50390625, 1021.4453125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:982.87109375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((828.9609375, 978.2421875), (889.1367187500001, 1010.64453125))
text1 i.e the prev text is the winner
collision happend with box:982.87109375 and text:original solving on the basis of percent match boxes
the current box specification are
making
((722.49609375, 1056.93359375), (796.55859375, 1093.96484375))
text1 i.e the prev text is the winner
collision happend with box:982.87109375 and text:original solving on the basis of percent match boxes
the current box specification are
a
((793.4726562499999, 1058.4765625), (811.98828125, 1080.078125))
text1 i.e the prev text is the winner
collision happend with box:982.87109375 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((805.8164062500001, 1039.9609375), (907.65234375, 1083.1640625))
text1 i.e the prev text is the winner
risk
((728.66796875, 1163.3984375), (767.2421875, 1191.171875))
collision happend with box:1163.3984375 and text:risk solving on the basis of percent match boxes
the current box specification are
of
((767.2421875, 1158.76953125), (793.4726562499999, 1186.54296875))
text1 i.e the prev text is the winner
collision happend with box:1163.3984375 and text:risk solving on the basis of percent match boxes
the current box specification are
overfitting
((791.9296875, 1144.8828125), (893.765625, 1186.54296875))
text2 i.e the incoming text is the winner
collision happend with box:1144.8828125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((892.22265625, 1174.19921875), (929.25390625, 1201.97265625))
text1 i.e the prev text is the winner
collision happend with box:1144.8828125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUE
((941.5976562499999, 1146.42578125), (1020.2890625, 1186.54296875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1146.42578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
noise
((725.58203125, 1195.80078125), (778.04296875, 1226.66015625))
text1 i.e the prev text is the winner
collision happend with box:1146.42578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
or
((778.04296875, 1197.34375), (802.73046875, 1218.9453125))
text1 i.e the prev text is the winner
collision happend with box:1146.42578125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
details
((802.73046875, 1181.9140625), (869.078125, 1214.31640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1181.9140625 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((768.78515625, 1223.57421875), (824.33203125, 1254.43359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1223.57421875 and text:data. solving on the basis of percent match boxes
the current box specification are
unseen
((703.98046875, 1234.375), (773.4140625000001, 1265.234375))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 1444
printing the number dict y_coordinate
{'1': 447, '2': 546, '3': 612, '4': 711, '5': 811, '6': 910, '7': 976, '8': 1078, '9': 1144, '10': 1444}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6FPOAn4.jpg
OCR detection done with doctr
left top x of T/F: 5074.59375
bottom right x of T/F: 6314.156250000001
left top x of SN: 212.87499999999986
bottom right x of SN: 627.6875
first t/f detection
Tyebo
((5202.0, 2095.25), (5689.6875, 2302.96875))
TRUE
((5220.062500000001, 2293.9375), (5870.312500000001, 2510.6875))
TRUE
((5202.0, 2637.125), (5807.093749999999, 2844.84375))
TRUE
((5120.71875, 3124.8125), (5743.875, 3323.5))
FALSE
((5247.156250000001, 3738.9375), (5906.4375, 3955.6875))
FALSE
((5265.218749999999, 4244.6875), (5969.656249999999, 4488.53125))
TRUE
((5120.71875, 4795.59375), (5734.843750000001, 4994.28125))
TRRe
((5238.124999999999, 5238.125), (5798.0625, 5454.875))
FALSE
((5129.75, 5472.9375), (5798.0625, 5671.625))
FALSE
((5265.218749999999, 5789.03125), (5906.4375, 5960.625))
TRUE
((5202.0, 6294.78125), (5779.999999999999, 6493.46875))
TRUE
((5256.1875, 6881.8125), (5870.312500000001, 7143.71875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2772, '3': 3160, '4': 3757, '5': 4344, '6': 4940, '7': 5337, '8': 5942, '9': 6348, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qFKyFdJ.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6521.874999999999
left top x of SN: 655.4062500000001
bottom right x of SN: 1070.21875
first t/f detection
TRUE
((5382.625000000001, 1896.5625), (6005.781250000001, 2140.40625))
TRUE
((5491.000000000001, 2447.46875), (5987.71875, 2673.25))
TTRUE
((5445.84375, 2953.21875), (6005.781250000001, 3160.9375))
is
((5156.84375, 3549.28125), (5292.312499999999, 3675.71875))
collision happend with box:3549.28125 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5491.000000000001, 3504.125), (6059.968750000001, 3757.0))
text2 i.e the incoming text is the winner
Pre-
((5012.34375, 4118.25), (5310.375, 4298.875))
collision happend with box:4118.25 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5445.84375, 4109.21875), (6078.031249999999, 4362.09375))
text2 i.e the incoming text is the winner
distribution
((4569.8125, 4714.3125), (5319.406249999999, 4885.90625))
collision happend with box:4714.3125 and text:distribution solving on the basis of percent match boxes
the current box specification are
FALSE
((5563.249999999999, 4614.96875), (6141.250000000001, 4831.71875))
text1 i.e the prev text is the winner
directly
((4858.8125, 5102.65625), (5346.499999999999, 5274.25))
collision happend with box:5102.65625 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5563.249999999999, 5093.625), (6168.343750000001, 5364.5625))
true and false collision so given priority to text2 which is the incoming text
TRUE
((5581.3125, 5617.4375), (6087.062500000001, 5825.15625))
TRUE
((5635.5, 6096.09375), (6114.156250000001, 6312.84375))
space:
((4958.15625, 5707.75), (5364.5625, 5870.3125))
prediction
((4768.5, 6096.09375), (5382.625000000001, 6267.6875))
TRUE
((5599.375000000001, 6737.3125), (6177.375, 6945.03125))
collision happend with box:6737.3125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
the
((5192.96875, 6872.78125), (5418.75, 7017.28125))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
the assigned keys are ['10']
printing the number dict y_coordinate
{'10': 6755}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IqSlvss.jpg
rotation started
['E', '6', 'oo', 'I', 'I', 'it', 'de', 'E', 'P', 'II', 'toy', 't', 'A', '2', 'o', 'e', 'a', 'E', '8', 'E', '8', '1', 'f', 'a', '-', '9', 'oy', 'E', '44', 'I', 'I', 'Cr', 'A', '€', '2', '1', ':', '2', '2', '3', 'e', '3', '5', 'E', 'I', 'm', 'E', 'X', 'I', 'I', 'I', '/', 'I', '1', 'f', 'F', 'A', 'I', '/', 'E', '/', 'F', 'F', 'F', '8', 'E', 'f', 'I', 'I', 'I', 'E', 'I', 'E', '8', '1E', 'P', 'I', 'F', 'a', '/', 'I', '8', ':', '8', '/', 'E', 'I', 'le', 'E', 'E', 'E', 'f', 'i', 'F', '8', 'I', '8', 'V', 'S', '€', 'à', 'A', '/', '9', 'o', 'i', 'I', 'I', 'I', '9', 'F', 'E', 'I', 'A', '8', 'I', 'F', 'E', '8', '9', 'E', 'e', '/', 'tn', 'E', 'I', 'E', 'I', 'E', '8', 'I', 'F', 'I', 'X', 'I', '€', 'P', '6', '1', 'I', 'F', '8', '3', 'E', 't', 'E', 'I', '3', 'I', '5', 'E', 'LE', 'F', 'F', '/', 'o', 'a', 'E', 'F', 'E', 'f', 'I', 'tr', '8', 'f', '8', 'E', 'E', 'i', '£', 'E', 'I', 'a', 'I', 'H', '8', 'I', '2', '8', 'I', 'F', 'I', '2', 'I', 'à', 'E', 'i', 'F', 'E', 'E', 'I', 'I', 'I', 'B', '8', 'I', 'F', 'I', 'f', 'E', 'E', 'I', '3', '/', '?', '8', 'à', 'E', 'T', '/', '.', '2', 'i', 'E', 'm', '/', 'E', 'm', 'a', ':', '2', '-', '/']
rotation started
['35754', '3', 'STU3', 'aouds-az', 'ur', 'siseq', 'oun', 'Jo', 'auo', 'SI', 'Glot-ladrt)', '7', 'treua', '"apey', '7843', 'uo', 'Jaqunu', 'auz', '2043', 'OS', 'papeor', 'SI', '365t', 'XJo', 'anfea', 'pazoodxa', '=8', 'OI', '1970013', 'SI', 'arp', 'V', '6', 'au1', '03', 'puuorodoad', 'OUL', 'X', 'atoono', 'Y3IM', 'SI', 'dn', 'Suruos', 'porjor', 'SI', 'arp', 'OUL', 'ENaL', 'aoey', 'e', 'Jo', 'Sunrquqoad', 'zosezep', 'aua', 'ur', 'siarano', '03', 'INAL', 'aus', 'UaA18', 'aApisuas', 'SI', 'VaT', '8', 'auapuodapur', 'Apenorupuoo', 'are', 'samgeay', 'ITe', 'Jeua', 'sotumssu', 'Taqer', 'ssepp', '3S704', '10', '0', '>', '(x)o', 'sadeg', 'BATUN', '2', 'auo', '2s0O1', '2e', 'OMI', 'are', '1', 'pue', 'X', 'JI', '"O13Z', 'aq', 'IILA', 'suornquasp', 'eep', 'JI', 'S', 'uaua', '0', '>', '(ax)aos', 'Jaysta', 'aT', 'aoueyres', 'aapesou', 'ze42', 'yons', 'SOTqULTEA', 'DAB1', 'asnur', 'A', '10', 'Y', 'Jo', '0>', '(A)o', 'tuopuer', 'ponpen-Tuar', 'Es1U1', 'xueur', '357U4', 'aotreTTenoo', 'au3', 'Jo', 'yuer', '(A)aoupupa', '<', '(z)aupuma', '9', 'auz', 'uaug', 'X=x', 'Morrog', 'Apoexo', 'JI', "2lo'1]", '02', 'squrod', 'prp-az', 'soofoxd', 'ENL', 'ueuys', '1030018', 'IILM', 'VOd', 'OUL', 'numotuned', 'e', '101', 'aq', 'ues', 'uonouny', 'F', 'ouo', '&', 'sseuz', 'surrgeqoud', 'aun', 'Jo', 'angen', 'aus', "'r", 'IOAL', 'VOd', 'Sursn', 'ssepo', 'ypea', 'Jo', 'sojdures', 'poafoxd', 'am', 'J!', 'VaT', '02', 'IOdL', 'STVa/anul', 'auoruambo', 'sumapuadapor', 'aoueastp', 'souro0aq', 'VOd', '2', 'usuo', 'auz', '003n10q', 'pll', '9', 'DJI', 'I', 'Juouayens', 'NS', 'OJUM', 'ueaprpong', 'ayz', '03', 'Tenba', 'SI', '"D', 'auod', 'ouz', 'pue', ',UD', 'xuTeuL', 'au3', 'Jo', '00011', 'B', 'nou', ':0104', 'Jaqumu', 'Ijoa', 'aox', 'Sunyampamy', 'peapo', 'pue', '107301', 'Teydes', 'ur', 'asTV', '10', 'SNUL', 'O1HM', '(sad', 'O1)', '9']
rotation started
['I', 'E', 'E', 'E', 'E', 'L', 'E', 'E', 'I', 'a', 'i', '4', 'e', '1', 'o', 'of', 'I', '1', 'i', 's', 'I', 'E', 'e', 'f', 'o1', 'e', 'e', 'i', 'a', 'of', 'e', 'e', 'of', '2', 'I', 'E', 'i', 'de', 'i', 'e', 'I', '#', 'H', ':', 'L', 'e', 'W', 'I', 'I', 'I', ':', '/', 'a', '/', 'S', 'I', 'de', 'E', 'I', 'E', 'E', 'I', 'WI', ':', '8', 'o', 'o', 'V', 'V', 'E', 'I', ':', 'E', 'E', 'i', 'I', 'A', '/', 'e', 'E', '/', '/', 'de', '5', 'o', 'i', 'I', 'I', '.s', 'S', 'E', 'XX', '/', 'a', '/', 'a', 'of', ':', 'I', 'de', 'I', 'E', 'I', '.', '€', 'E', ':', '1', 'e', 'E', 's', 'E', 'E', '£', 'e', '1', 'e', 'of', 'I', '2', '1t', '€', ':', 'I', 'e', 'I', 'i', ':', 'I', 'I', '1', '1A', 'I', 'I', 's', 'E', 'y', '2', 'a', 'of', 'A', '/', 'E', 'E', '8', 'I', 'à', '4', ':', 'I', 'I', '/', '1', '.', 'I', '!', 'I', 'I', '1', 'I', 'e', 'I', 'E', ':', 'I', 'I', 'E', '1', 'a', 'of', 'is', '8', 'I', 'e', '€', 'f', 'e', 'o', 'a', '8', '&', '1', 'I', ':', 'I', 'I', '1', '.2', '.s', '8', 'I', 'de', 'I', '4', '3', 'I', '4', '1', 'II', '2', '0o', 'i', '29', '', 'of', 'a', '2', '1', '2', '8', 'E', '$', 'e', 'E', '-', 'I', '2', '', '1E', 'E', ':', '1E', '€', '4', '1', '']
rotation started
['6.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letter', 'and', 'clear', 'handwriting', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', '1', 'Ifae', 'R,', 'then', 'between', 'the', '2', 'PCA', 'becomes', 'independentiy.', '3', 'For', 'a', 'one.', '4', 'The', '5', 'If', 'data', 'will', 'be', 'zero.', '6', 'If', 'X', 'and', 'Y', 'a(F)', '<0.', '7', 'Naive', '4', 'LDA', 'is', '9', 'A', 'die', 'is', 'loaded', 'number', 'is', 'greater', 'than', '4.', 'a', 'trace', 'of', 'the', 'matrix', 'origin', 'and', 'the', 'point', 'equivalent', 'to', 'LDA', 'if', "aa'", 'is', 'equal', 'to', 'a.', 'TRUE/FALS', 'TRUE', 'TRUE', 'the', 'Euclidean', 'distance', 'we', 'project', 'samples', 'of', 'each', 'class', 'using', 'PCA', 'particular', 'a,', 'the', 'value', 'of', 'the', 'probability', 'mass', 'function', 'can', 'be', 'greater', 'PCA', 'will', 'distributions', 'than', 'project', '2D-data', 'TRUE', 'FALSE', 'FISE', 'points', 'to', '[1,017', 'if', 'tariance(z)', '>', 'exactly', 'follow', 'y=x,', 'tariancelu).', 'covariance', 'matrix', 'then', 'the', 'rank', 'of', 'the', 'variables', 'such', 'that', 'are', 'two', 'at', 'least', 'one', 'of', 'X', 'real-valued', 'random', 'or', 'y', 'must', 'have', 'negative', 'variance', 'ie.', 'Cou(x,)', ')<0', 'then', 'either', 'o(X)', '<Oor', 'FALS', 'E', 'class', 'Bayes', 'assumes', 'that', 'all', 'label.', 'features', 'are', 'conditionally', 'independent', 'given', 'the', 'sensitive', 'to', 'outliers', 'TRUE', 'TRUE', 'in', 'the', 'dataset.', 'die', 'is', 'rolled', 'with', 'So', 'that', 'the', 'on', 'that', 'face.', 'The', 'probability', 'of', 'a', 'face', 'coming', 'up', 'is', 'outcome', 'X.', 'The', 'proportional', 'to', 'the', '10', 'B', 'il', 'expected', 'value', 'ofx', 'TRSE', '(LIFH-L.OF)', 'is', 'one', 'of', 'the', 'basis', 'FALSE', 'FALSE', 'in', '2D-space.']
OCR detection done with doctr
left top x of SN: 989.5625
bottom right x of SN: 1431.4687500000002
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:54:06] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : IqSlvss.jpg
[2024/06/28 14:54:07] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:54:08] ppocr DEBUG: dt_boxes num : 44, elapsed : 0.15520715713500977
[2024/06/28 14:54:10] ppocr DEBUG: rec_res num  : 44, elapsed : 2.3582205772399902
[2024/06/28 14:54:11] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:54:12] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.1791086196899414
[2024/06/28 14:54:13] ppocr DEBUG: rec_res num  : 40, elapsed : 1.5546002388000488
['10', '6', '8', 'B={[1,1[-1,0]} is one of the basis in 2D-space.', 'is greater than 4.', 'number on that face.The die is rolled with outcome X.The expected value of X', 'A die is loaded so that the probability of a face coming up is proportional to the', 'LDA is sensitive to outliers in the dataset.', '9', 'class label.', 'Cr', '4', 'Y<0.', 'at least one of X or Y must have negative variance i.e. either o(X)< 0 or', 'If data distributions exactly follow y=x, then the rank of the covariance matrix', 'will be zero.', 'The PCA will project 2D-data points to [1,0] if variance(x> variance(y).', 'SN', 'one.', 'independently.', 'between the origin and the point a.', 'Statement', 'Write your roll number here:', 'FALSE', 'FALSE', 'TRDE', 'TRUE', 'TRUE', 'FALSE', 'FALSE', 'FALSE', 'TRUE', 'TRUE', 'TRUE/FALS', 'TRUE']
[2024/06/28 14:54:14] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:54:15] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.12123990058898926
[2024/06/28 14:54:17] ppocr DEBUG: rec_res num  : 40, elapsed : 1.9410748481750488
['FASSE', 'FAASE', '308', '10', 'TAUE', '8', 'FAA5E', '0>', 'FHSSE', 'FAASE', 'TRUE', 'oone', 'TRUE', 'TRUE', '2', 'TRAL/RUES', 'NS']
[2024/06/28 14:54:17] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:54:18] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12076187133789062
[2024/06/28 14:54:19] ppocr DEBUG: rec_res num  : 39, elapsed : 1.5091218948364258
['TRAIRUES', 'TRUE', 'TRUE', 'TRUE', 'FAASE', 'FHTSE', 'FALSE', 'TRRE', 'TAUE', '308', 'FAASE', 'FASSE', 'stne', '0>1', 'one', 'NS', '2', '3', '4', '5', '6', '8', '9']
[2024/06/28 14:54:20] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:54:21] ppocr DEBUG: dt_boxes num : 44, elapsed : 0.12074756622314453
[2024/06/28 14:54:23] ppocr DEBUG: rec_res num  : 44, elapsed : 2.237910032272339
['6.(10 pts) Write TRUE or FALSE in capital letter and clear handwriting.', 'Write your roll number here:', 'SN', 'Statement', 'If a  Rd then a trace of the matrix aa is equal to the Euclidean distance', '1', 'between the origin and the point a.', 'TRUE/FALS', '2', 'PCA becomes equivalent to LDA if we project samples of each class using PCA', 'TRUE', 'independently.', '3', 'For a particular x the value of the probability mass function can be greater than', 'TRUE', 'one.', 'The PCA will project 2D-data points to [1,0] if variance(x> variance(y)', 'TRUE', '5', 'If data distributions exactly follow y=x, then the rank of the covariance matrix', 'FALSE', 'will be zero.', '6', 'If X and Y are two real-valued random variables such that CovX,Y)<0 then', 'FALSE', 'at least one of X or Y must have negative variance i.e. either oX) 0 or', 'oY<0.', 'FALSE', '7', 'Naive Bayes assumes that all features are conditionally independent given the', 'class label.', '8', 'LDA is sensitive to outliers in the dataset', 'TRUE', 'A die is loaded so that the probability of a face coming up is proportional to the', '9', 'TRUE', 'number on that face.The die is rolled with outcome X.The expected value of X', 'is greater than 4.', 'TRDE', '10', 'B={[11][-1,0]} is one of the basis in 2D-space', 'FALSE', 'FALSE']
OCR detection done
left top x of SN: 1044.0
bottom right x of SN: 1431.0
left top y of SN: 1223.0
bottom right y of SN: 1527.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/IqSlvss.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ewA8Rpn.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((921.5546875, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (943.703125, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((923.13671875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
collision happend with box:579.0234375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
text2 i.e the incoming text is the winner
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:878.02734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((904.15234375, 961.875), (943.703125, 988.76953125))
text2 i.e the incoming text is the winner
collision happend with box:961.875 and text:T solving on the basis of percent match boxes
the current box specification are
F
((910.48046875, 1042.55859375), (935.7929687499999, 1082.109375))
text2 i.e the incoming text is the winner
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (934.2109374999999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 583, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1126, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : A2bBrU9.jpg
OCR detection done with doctr
left top x of T/F: 5435.84375
bottom right x of T/F: 6684.437499999999
left top x of SN: 348.3437499999999
bottom right x of SN: 763.15625
first t/f detection
TRUE
((5527.125, 1887.53125), (6005.781250000001, 2050.09375))
TRUE
((5581.3125, 2483.59375), (6059.968750000001, 2655.1875))
FALSE
((5527.125, 3052.5625), (6069.0, 3224.15625))
TRUE
((5590.343749999999, 3585.40625), (6078.031249999999, 3747.96875))
TRUE
((5626.468750000001, 4109.21875), (6087.062500000001, 4244.6875))
FALSE
((5527.125, 4750.4375), (6059.968750000001, 4885.90625))
TRUE
((5608.40625, 5445.84375), (6078.031249999999, 5581.3125))
TRUE
((5590.343749999999, 5942.5625), (6087.062500000001, 6105.125))
TRUE
((5626.468750000001, 6466.375), (6105.124999999999, 6637.96875))
TRUE
((5626.468750000001, 7062.4375), (6087.062500000001, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3088, '4': 3675, '5': 4064, '6': 4642, '7': 5418, '8': 5996, '9': 6385, '10': 7152}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hhJrQUf.jpg
OCR detection done with doctr
left top x of T/F: 4758.5
bottom right x of T/F: 6034.187499999999
left top x of SN: 176.75
bottom right x of SN: 609.6249999999999
first t/f detection
A
((5698.718749999999, 460.59375), (5752.906249999999, 523.8125))
for
((4578.84375, 2230.71875), (4768.5, 2384.25))
collision happend with box:2230.71875 and text:for solving on the basis of percent match boxes
the current box specification are
Halse
((4876.875, 2185.5625), (5418.75, 2456.5))
text2 i.e the incoming text is the winner
Jalse
((4967.1875, 2655.1875), (5454.874999999999, 2917.09375))
Hue
((5021.375, 3142.875), (5481.968749999999, 3377.6875))
collision happend with box:3142.875 and text:Hue solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4091.15625, 3160.9375), (4940.09375, 3458.96875))
text2 i.e the incoming text is the winner
descent
((4416.28125, 3757.0), (4876.875, 3973.75))
collision happend with box:3757.0 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((4876.875, 3757.0), (5003.3125, 3892.46875))
text1 i.e the prev text is the winner
between
((4325.96875, 4335.0), (4831.71875, 4551.75))
collision happend with box:4335.0 and text:between solving on the basis of percent match boxes
the current box specification are
Pre
((4804.625, 4298.875), (5093.625, 4479.5))
text2 i.e the incoming text is the winner
toul
((5156.84375, 3666.6875), (5752.906249999999, 3973.75))
False
((5265.218749999999, 4217.59375), (5725.812499999999, 4434.34375))
Taue
((5265.218749999999, 4723.34375), (5752.906249999999, 4949.125))
collision happend with box:4723.34375 and text:Taue solving on the basis of percent match boxes
the current box specification are
distribution.
((4434.34375, 4840.75), (5211.031249999999, 5120.71875))
text2 i.e the incoming text is the winner
is
((4660.125, 5310.375), (4786.5625, 5436.8125))
collision happend with box:5310.375 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((4777.53125, 5229.09375), (5247.156250000001, 5445.84375))
text2 i.e the incoming text is the winner
collision happend with box:5229.09375 and text:directly solving on the basis of percent match boxes
the current box specification are
Truc
((5364.5625, 5174.90625), (5879.34375, 5436.8125))
text2 i.e the incoming text is the winner
Frue
((5418.75, 5680.65625), (5933.53125, 5888.375))
original
((4488.53125, 5843.21875), (4958.15625, 6059.96875))
collision happend with box:5843.21875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4949.125, 5825.15625), (5328.437500000001, 5996.75))
text1 i.e the prev text is the winner
a
((4705.28125, 6267.6875), (4822.6875, 6394.125))
collision happend with box:6267.6875 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4804.625, 6177.375), (5400.687499999999, 6394.125))
text2 i.e the incoming text is the winner
collision happend with box:6177.375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TEBA
((5527.125, 6159.3125), (6032.875000000001, 6412.1875))
text2 i.e the incoming text is the winner
overfitting
((4678.1875, 6737.3125), (5319.406249999999, 6990.1875))
the
((5301.343750000001, 6908.90625), (5518.093750000001, 7062.4375))
collision happend with box:6908.90625 and text:the solving on the basis of percent match boxes
the current box specification are
details
((4741.40625, 6945.03125), (5156.84375, 7161.78125))
text2 i.e the incoming text is the winner
data.
((4533.6875, 7188.875), (4858.8125, 7369.5))
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2862, '2': 3422}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ypdRsuD.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6576.062499999999
left top x of SN: 447.6875
bottom right x of SN: 871.53125
first t/f detection
True
((5436.812500000001, 1986.875), (5978.687500000001, 2239.75))
False
((5436.812500000001, 2564.875), (5915.468749999999, 2826.78125))
True
((5509.062499999999, 3106.75), (6014.8125, 3323.5))
fale
((5364.5625, 3648.625), (5789.031250000001, 3874.40625))
True
((5391.65625, 4253.71875), (5960.625, 4452.40625))
Teue
((5346.499999999999, 4849.78125), (5942.562499999999, 5057.5))
True
((5463.906250000001, 5310.375), (5978.687500000001, 5527.125))
False
((5373.593749999999, 5770.96875), (5915.468749999999, 6032.875))
Txuc
((5436.812500000001, 6258.65625), (5933.53125, 6511.53125))
True
((5509.062499999999, 6782.46875), (5969.656249999999, 7053.40625))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['2', '4', '8']
the assigned keys are ['1', '3', '5', '6', '7', '9', '10']
['1', '3', '5', '6', '7', '9', '10', '1', '3', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '3': 3160, '5': 4325, '6': 4913, '7': 5310, '9': 6312, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 9q4RhnA.jpg
OCR detection done with doctr
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6720.562500000001
left top x of SN: 682.5000000000001
bottom right x of SN: 1088.28125
first t/f detection
Tiul
((5445.84375, 2167.5), (5933.53125, 2438.4375))
Tyue
((5572.281250000001, 2754.53125), (6059.968750000001, 2971.28125))
Falu
((5590.343749999999, 3224.15625), (6050.937499999999, 3431.875))
Trw
((5527.125, 3847.3125), (6014.8125, 4073.09375))
Tfut
((5590.343749999999, 4443.375), (6078.031249999999, 4660.125))
Tul
((5545.187500000001, 4985.25), (5969.656249999999, 5165.875))
Palk
((5662.59375, 5454.875), (6078.031249999999, 5635.5))
Tyue
((5491.000000000001, 5888.375), (5960.625, 6096.09375))
Twu
((5509.062499999999, 6439.28125), (5933.53125, 6665.0625))
dyu
((5572.281250000001, 6863.75), (6032.875000000001, 7071.46875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2375, '2': 2944, '3': 3314, '4': 3892, '5': 4461, '6': 5048, '7': 5436, '8': 6023, '9': 6421, '10': 7035}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tA3XsPA.jpg
OCR detection done with doctr
left top x of T/F: 4993.3125
bottom right x of T/F: 6160.625
left top x of SN: 483.8124999999999
bottom right x of SN: 880.5624999999999
first t/f detection
TRUE
((5093.625, 2068.15625), (5644.531249999999, 2293.9375))
TRUE
((5039.4375, 2546.8125), (5671.624999999999, 2790.65625))
Trul
((5093.625, 3025.46875), (5662.59375, 3278.34375))
Falu
((5066.53125, 3639.59375), (5662.59375, 3856.34375))
Trul
((5084.59375, 4253.71875), (5653.562500000001, 4461.4375))
True
((5093.625, 4696.25), (5617.437499999999, 4903.96875))
True
((5093.625, 5211.03125), (5581.3125, 5382.625))
True
((5030.40625, 5599.375), (5527.125, 5807.09375))
Tyul
((5039.4375, 6059.96875), (5509.062499999999, 6231.5625))
Tyue
((4985.25, 6683.125), (5472.9375, 6863.75))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2257, '2': 2790, '3': 3142, '4': 3693, '5': 4226, '6': 4768, '7': 5129, '8': 5671, '9': 6041, '10': 6601}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F0L3AOw.jpg
OCR detection done with doctr
left top x of SN: 50.735351562500014
bottom right x of SN: 284.91015625
left top x of T/F: 1144.7285156250002
bottom right x of T/F: 1582.2626953124998
first t/f detection
falte
((1182.8994140625, 524.412109375), (1332.4218749999998, 626.2607421875))
collision happend with box:524.412109375 and text:falte solving on the basis of percent match boxes
the current box specification are
falre
((1178.5654296875, 656.5986328125), (1297.75, 736.77734375))
text2 i.e the incoming text is the winner
collision happend with box:656.5986328125 and text:falre solving on the basis of percent match boxes
the current box specification are
TAu
((1180.732421875, 782.2841796875), (1310.751953125, 873.2978515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.2841796875 and text:TAu solving on the basis of percent match boxes
the current box specification are
Rwl
((1191.5673828125, 910.13671875), (1325.9208984375, 996.81640625))
text1 i.e the prev text is the winner
Trur
((1182.8994140625, 1050.9912109375), (1319.419921875, 1142.0048828125))
collision happend with box:1050.9912109375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Tul
((1167.73046875, 1170.17578125), (1306.41796875, 1243.853515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1170.17578125 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trur
((1156.8955078125, 1282.859375), (1299.9169921875, 1373.873046875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1282.859375 and text:Trur solving on the basis of percent match boxes
the current box specification are
Fole
((1178.5654296875, 1391.208984375), (1302.083984375, 1469.220703125))
text1 i.e the prev text is the winner
Falu
((1172.064453125, 1510.3935546875), (1299.9169921875, 1586.23828125))
True
((1163.396484375, 1690.25390625), (1315.0859375, 1781.267578125))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 777, '2': 684, '3': 777, '4': 914, '5': 1050, '6': 1189, '7': 1280, '8': 1419, '9': 1512, '10': 1646}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': True, '6': False, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 3pwsTyE.jpg
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 970.8750000000001
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6711.531249999999
first t/f detection
TRUE
((5518.093750000001, 2086.21875), (6078.031249999999, 2339.09375))
TRUE
((5491.000000000001, 2628.09375), (6087.062500000001, 2871.9375))
FALSE
((5563.249999999999, 3215.125), (6213.499999999999, 3468.0))
TRUE
((5545.187500000001, 3720.875), (6123.1875, 3937.625))
TRUE
((5545.187500000001, 4190.5), (6186.406249999999, 4443.375))
FALSE
((5554.21875, 4867.84375), (6222.531250000001, 5111.6875))
TRUE
((5554.21875, 5599.375), (6105.124999999999, 5807.09375))
TRUE
((5536.156249999999, 6032.875), (6159.312499999999, 6276.71875))
FALSE
((5545.187500000001, 6610.875), (6132.218749999999, 6827.625))
TRUE
((5554.21875, 7197.90625), (6087.062500000001, 7414.65625))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['4', '5', '8']
the assigned keys are ['1', '2', '3', '6', '7', '9', '10']
['1', '2', '3', '6', '7', '9', '10', '1', '2', '3', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2628, '3': 3179, '6': 4732, '7': 5472, '9': 6439, '10': 7188}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': True, '8': 'UNASSIGNED', '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sAoxOtx.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
left top x of T/F: 5625.5
bottom right x of T/F: 6828.937500000001
first t/f detection
TRUE
((5716.78125, 1797.21875), (6556.6875, 2122.34375))
TRVE
((5626.468750000001, 2483.59375), (6484.437499999999, 2736.46875))
FALSE
((5617.437499999999, 3043.53125), (6592.812499999999, 3332.53125))
FALSE
((5608.40625, 3576.375), (6538.624999999999, 3856.34375))
TRUE
((5590.343749999999, 4064.0625), (6430.249999999999, 4298.875))
TRUE
((5653.562500000001, 4741.40625), (6493.468750000001, 4994.28125))
TRUE
((5608.40625, 5409.71875), (6457.343749999999, 5689.6875))
TRUE
((5608.40625, 5951.59375), (6394.125, 6186.40625))
FALSE
((5644.531249999999, 6475.40625), (6538.624999999999, 6764.40625))
TRUE
((5599.375000000001, 7089.53125), (6502.5, 7333.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2456, '3': 3043, '4': 3639, '5': 4027, '6': 4624, '7': 5409, '8': 6005, '9': 6403, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : S4Gjogj.jpg
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6548.968749999999
left top x of SN: 393.5
bottom right x of SN: 799.2812499999999
first t/f detection
TRUE
((5554.21875, 1706.90625), (6114.156250000001, 1923.65625))
TRUE
((5527.125, 2275.875), (6023.843749999999, 2438.4375))
FALSE
((5463.906250000001, 2844.84375), (6105.124999999999, 3052.5625))
TRUE
((5481.968749999999, 3386.71875), (6059.968750000001, 3594.4375))
FALSE
((5472.9375, 3883.4375), (6105.124999999999, 4100.1875))
TRUE
((5445.84375, 4515.625), (6005.781250000001, 4714.3125))
TRUE
((5454.874999999999, 5238.125), (5996.749999999999, 5445.84375))
TRUE
((5445.84375, 5798.0625), (6050.937499999999, 6005.78125))
TRUE
((5400.687499999999, 6303.8125), (6005.781250000001, 6511.53125))
TRUE
((5382.625000000001, 6908.90625), (5960.625, 7116.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1788, '2': 2339, '3': 2908, '4': 3468, '5': 3847, '6': 4425, '7': 5174, '8': 5752, '9': 6141, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : o8Eg109.jpg
OCR detection done with doctr
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6946.34375
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5798.0625, 1986.875), (6358.000000000001, 2212.65625))
ALSE
((5897.406250000001, 2610.03125), (6439.281250000001, 2781.625))
TRVE
((5897.406250000001, 2790.65625), (6348.968749999999, 2962.25))
FALSE
((5861.281249999999, 3188.03125), (6412.187500000001, 3404.78125))
FALSE
((5906.4375, 3720.875), (6457.343749999999, 3919.5625))
FALSE
((5852.25, 4199.53125), (6457.343749999999, 4443.375))
FALSE
((5843.218750000001, 4949.125), (6502.5, 5192.96875))
TRUE
((5906.4375, 5680.65625), (6394.125, 5951.59375))
TRUE
((5888.374999999999, 6213.5), (6484.437499999999, 6457.34375))
TRUE
((5915.468749999999, 6791.5), (6439.281250000001, 7017.28125))
TRUE
((5879.34375, 7459.8125), (6439.281250000001, 7667.53125))
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2601, '3': 3206, '4': 3811, '5': 4208, '6': 4822, '7': 5635, '8': 6240, '9': 6647, '10': 7441}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fxCtAQD.jpg
OCR detection done with doctr
left top x of T/F: 5011.375
bottom right x of T/F: 6151.593750000001
left top x of SN: 574.1250000000001
bottom right x of SN: 979.90625
first t/f detection
TRue
((5093.625, 1941.71875), (5653.562500000001, 2149.4375))
TRue
((5084.59375, 2465.53125), (5635.5, 2682.28125))
TluE
((5120.71875, 2989.34375), (5608.40625, 3197.0625))
TRUE
((5039.4375, 3576.375), (5527.125, 3757.0))
TRUE
((5048.46875, 4036.96875), (5545.187500000001, 4253.71875))
PALSE
((5048.46875, 4524.65625), (5536.156249999999, 4705.28125))
FRUG
((5066.53125, 4976.21875), (5599.375000000001, 5147.8125))
TRUE
((5021.375, 5472.9375), (5518.093750000001, 5680.65625))
FALSE
((5084.59375, 4822.6875), (5518.093750000001, 4958.15625))
TRUE
((5084.59375, 5897.40625), (5518.093750000001, 6078.03125))
PASE
((5102.65625, 6556.6875), (5653.562500000001, 6764.40625))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2068, '2': 2601, '3': 2953, '4': 3486, '5': 4027, '6': 4569, '7': 4931, '8': 5491, '9': 5861, '10': 6430}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 2bdo5ud.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5625.5
bottom right x of T/F: 6865.0625
first t/f detection
FALSE
((5761.937500000001, 1824.3125), (6430.249999999999, 2041.0625))
TRUE
((5707.750000000001, 2420.375), (6358.000000000001, 2637.125))
FALSE
((5761.937500000001, 3034.5), (6430.249999999999, 3251.25))
TRUE
((5716.78125, 3576.375), (6303.812500000001, 3784.09375))
TRUE
((5779.999999999999, 4073.09375), (6412.187500000001, 4289.84375))
FALSE
((5734.843750000001, 4714.3125), (6394.125, 4931.0625))
TRUE
((5807.093749999999, 5463.90625), (6376.062499999999, 5662.59375))
TRUE
((5816.125000000001, 5969.65625), (6403.156249999999, 6213.5))
FALSE
((5698.718749999999, 6583.78125), (6376.062499999999, 6827.625))
FALSE
((5770.96875, 7197.90625), (6412.187500000001, 7405.625))
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are ['1']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '9', '10']
that question which is editted is 1
the value of y is 2138
printing the number dict y_coordinate
{'2': 2438, '3': 3070, '4': 3648, '5': 4046, '6': 4651, '7': 5454, '8': 6087, '9': 6493, '10': 7315, '1': 2138}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SxxUauX.jpg
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6693.468750000001
left top x of SN: 655.4062500000001
bottom right x of SN: 1070.21875
first t/f detection
Tue
((5536.156249999999, 1932.6875), (6041.90625, 2113.3125))
True
((5445.84375, 2610.03125), (5942.562499999999, 2781.625))
Tyue
((5427.781249999999, 3115.78125), (5834.187499999999, 3296.40625))
False
((5337.46875, 3585.40625), (5825.15625, 3766.03125))
Trre
((5346.499999999999, 3747.96875), (5779.999999999999, 3919.5625))
Falye
((5373.593749999999, 4298.875), (5870.312500000001, 4479.5))
Falce
((5355.531250000001, 4777.53125), (5879.34375, 4949.125))
False
((5301.343750000001, 5265.21875), (5707.750000000001, 5427.78125))
Fal
((5346.499999999999, 5734.84375), (5626.468750000001, 5915.46875))
collision happend with box:5734.84375 and text:Fal solving on the basis of percent match boxes
the current box specification are
se
((5617.437499999999, 5761.9375), (5807.093749999999, 5906.4375))
text1 i.e the prev text is the winner
True
((5301.343750000001, 6936.0), (5635.5, 7080.5))
True
((5373.593749999999, 6249.625), (5725.812499999999, 6430.25))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2745, '3': 3115, '4': 3684, '5': 4235, '6': 4804, '7': 5183, '8': 5743, '9': 6123, '10': 6701}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LPYDGGc.jpg
OCR detection done with doctr
left top x of SN: 72.38671874999999
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1586.037109375, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falve
((1433.41796875, 753.087890625), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:753.087890625 and text:falve solving on the basis of percent match boxes
the current box specification are
Trul
((1413.40234375, 903.205078125), (1583.53515625, 1008.287109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:903.205078125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tiul
((1428.4140624999998, 1045.81640625), (1578.5312500000002, 1150.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tiul
((1430.916015625, 1198.435546875), (1591.041015625, 1303.517578125))
text2 i.e the incoming text is the winner
collision happend with box:1198.435546875 and text:Tiul solving on the basis of percent match boxes
the current box specification are
Tyue
((1435.919921875, 1338.544921875), (1576.029296875, 1431.1171875))
text1 i.e the prev text is the winner
falre
((1418.40625, 1478.654296875), (1593.54296875, 1583.736328125))
collision happend with box:1478.654296875 and text:falre solving on the basis of percent match boxes
the current box specification are
Falu
((1435.919921875, 1616.26171875), (1596.0449218750002, 1698.826171875))
text2 i.e the incoming text is the winner
collision happend with box:1616.26171875 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((1423.41015625, 1738.857421875), (1588.5390625, 1853.947265625))
true and false collision so given priority to text2 which is the incoming text
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 893, '2': 775, '3': 880, '4': 1048, '5': 1203, '6': 1363, '7': 1468, '8': 1633, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x9v67l6.jpg
OCR detection done with doctr
left top x of SN: 38.205078124999986
bottom right x of SN: 263.041015625
left top x of T/F: 944.3740234374999
bottom right x of T/F: 1344.9267578125
first t/f detection
Faly
((963.7148437499999, 476.3818359375), (1085.1455078125, 556.712890625))
collision happend with box:476.3818359375 and text:Faly solving on the basis of percent match boxes
the current box specification are
falye
((976.7919921874999, 575.39453125), (1087.013671875, 642.6484375))
text2 i.e the incoming text is the winner
collision happend with box:575.39453125 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((967.4511718749999, 685.6162109375), (1085.1455078125, 765.947265625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:685.6162109375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tul
((973.0556640624999, 797.7060546875), (1079.541015625, 878.037109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:797.7060546875 and text:Tul solving on the basis of percent match boxes
the current box specification are
Trul
((974.9238281249999, 911.6640625), (1083.27734375, 993.86328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:911.6640625 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((974.9238281249999, 1014.4130859375), (1075.8046875, 1085.4033203125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1014.4130859375 and text:True solving on the basis of percent match boxes
the current box specification are
falre
((961.8466796874999, 1124.634765625), (1085.1455078125, 1199.361328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1124.634765625 and text:falre solving on the basis of percent match boxes
the current box specification are
Falu
((969.3193359374999, 1221.779296875), (1085.1455078125, 1283.4287109375))
text2 i.e the incoming text is the winner
collision happend with box:1221.779296875 and text:Falu solving on the basis of percent match boxes
the current box specification are
falte
((971.1874999999999, 1318.923828125), (1079.541015625, 1389.9140625))
text2 i.e the incoming text is the winner
collision happend with box:1318.923828125 and text:falte solving on the basis of percent match boxes
the current box specification are
Falye
((963.7148437499999, 1431.013671875), (1077.6728515625, 1509.4765625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 476, '2': 595, '3': 674, '4': 795, '5': 915, '6': 1031, '7': 1111, '8': 1231, '9': 1309, '10': 1429}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : bAgEOfS.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tjut
((1416.6328125, 645.755859375), (1516.75, 698.3173828125))
collision happend with box:645.755859375 and text:Tjut solving on the basis of percent match boxes
the current box specification are
True
((1416.6328125, 780.9140625), (1524.2587890625, 833.4755859375))
text2 i.e the incoming text is the winner
collision happend with box:780.9140625 and text:True solving on the basis of percent match boxes
the current box specification are
fosn
((1394.1064453125, 911.06640625), (1524.2587890625, 976.142578125))
text1 i.e the prev text is the winner
falt
((1426.6445312500002, 1058.7392578125), (1551.791015625, 1118.8095703125))
collision happend with box:1058.7392578125 and text:falt solving on the basis of percent match boxes
the current box specification are
falk
((1424.1416015625, 1203.9091796875), (1534.2705078125, 1256.470703125))
true and false collision so given priority to text2 which is the incoming text
fask
((1526.7617187500002, 888.5400390625), (1626.8789062500002, 956.119140625))
Faes
((1424.1416015625, 1346.576171875), (1539.2763671875, 1409.1494140625))
collision happend with box:1346.576171875 and text:Faes solving on the basis of percent match boxes
the current box specification are
Faln
((1436.65625, 1476.728515625), (1554.2939453125, 1539.3017578125))
text2 i.e the incoming text is the winner
collision happend with box:1476.728515625 and text:Faln solving on the basis of percent match boxes
the current box specification are
BThu
((1369.0771484375, 1624.4013671875), (1521.755859375, 1684.4716796875))
text1 i.e the prev text is the winner
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
True
((1426.6445312500002, 1924.7529296875), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': False, '2': True, '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 790, '3': 898, '4': 1056, '5': 1216, '6': 1371, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : PtQ8lwm.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6539.9375
left top x of SN: 592.1874999999999
bottom right x of SN: 1016.0312499999999
first t/f detection
RUE
((5436.812500000001, 2077.1875), (6069.0, 2293.9375))
TRUE
((5463.906250000001, 2682.28125), (6114.156250000001, 2899.03125))
FALSE
((5454.874999999999, 3088.6875), (6204.46875, 3341.5625))
TRUE
((5536.156249999999, 3802.15625), (6087.062500000001, 4009.875))
FALSE
((5418.75, 4371.125), (6150.28125, 4578.84375))
FALSE
((5472.9375, 4840.75), (6096.09375, 5048.46875))
FALSE
((5463.906250000001, 5328.4375), (6168.343750000001, 5572.28125))
TRUE
((5427.781249999999, 5852.25), (6087.062500000001, 6050.9375))
TRUE
((5481.968749999999, 6321.875), (6150.28125, 6529.59375))
TRUE
((5572.281250000001, 6890.84375), (6123.1875, 7116.625))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
the unassigned keys are ['2', '3', '7', '9']
the assigned keys are ['1', '4', '5', '6', '8', '10']
['1', '4', '5', '6', '8', '10', '1', '4', '5', '6', '8', '10']
printing the number dict y_coordinate
{'1': 2348, '4': 3856, '5': 4470, '6': 5012, '8': 5951, '10': 6917}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': False, '6': False, '7': 'UNASSIGNED', '8': True, '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hBD1FRE.jpg
OCR detection done with doctr
left top x of SN: 93.10156249999997
bottom right x of SN: 308.7734375
left top x of T/F: 861.806640625
bottom right x of T/F: 1224.8984375
first t/f detection
Feye
((886.669921875, 425.08984375), (962.4726562499999, 454.81640625))
collision happend with box:425.08984375 and text:Feye solving on the basis of percent match boxes
the current box specification are
Tyeue
((877.751953125, 508.32421875), (960.9863281250001, 542.509765625))
text2 i.e the incoming text is the winner
collision happend with box:508.32421875 and text:Tyeue solving on the basis of percent match boxes
the current box specification are
True
((877.751953125, 606.421875), (959.5, 640.607421875))
text2 i.e the incoming text is the winner
collision happend with box:606.421875 and text:True solving on the basis of percent match boxes
the current box specification are
To
((877.751953125, 706.005859375), (958.013671875, 741.677734375))
text1 i.e the prev text is the winner
T9rue
((877.751953125, 792.212890625), (949.095703125, 821.939453125))
collision happend with box:792.212890625 and text:T9rue solving on the basis of percent match boxes
the current box specification are
Trwe
((880.7246093750001, 870.98828125), (955.0410156249999, 906.66015625))
text1 i.e the prev text is the winner
Fale
((885.18359375, 958.681640625), (955.0410156249999, 986.921875))
collision happend with box:958.681640625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Taje
((880.7246093750001, 1034.484375), (952.068359375, 1068.669921875))
text1 i.e the prev text is the winner
Tyue
((879.23828125, 1157.849609375), (959.5, 1193.521484375))
the final dict without editing {'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 331, '2': 432, '3': 499, '5': 700, '6': 802, '7': 868, '8': 969, '9': 1037, '10': 1135}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': False, '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RN7zNhk.jpg
OCR detection done with doctr
left top x of T/F: 805.48046875
bottom right x of T/F: 1175.1484375
left top x of SN: 26.94531249999997
bottom right x of SN: 247.9609375
first t/f detection
for
((780.32421875, 272.4609375), (809.62109375, 298.828125))
collision happend with box:272.4609375 and text:for solving on the basis of percent match boxes
the current box specification are
Leha
((835.98828125, 246.09375), (910.6953125000001, 284.1796875))
text2 i.e the incoming text is the winner
collision happend with box:246.09375 and text:Leha solving on the basis of percent match boxes
the current box specification are
True
((857.9609375, 303.22265625), (935.59765625, 338.37890625))
text2 i.e the incoming text is the winner
collision happend with box:303.22265625 and text:True solving on the basis of percent match boxes
the current box specification are
TYWe
((855.03125, 367.67578125), (945.8515625000001, 404.296875))
text1 i.e the prev text is the winner
collision happend with box:303.22265625 and text:True solving on the basis of percent match boxes
the current box specification are
d-dimensional
((698.29296875, 437.98828125), (834.5234375, 479.00390625))
text2 i.e the incoming text is the winner
collision happend with box:437.98828125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Fobe
((871.14453125, 439.453125), (945.8515625000001, 474.609375))
text1 i.e the prev text is the winner
collision happend with box:437.98828125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((748.09765625, 544.921875), (821.33984375, 574.21875))
text1 i.e the prev text is the winner
collision happend with box:437.98828125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((821.33984375, 541.9921875), (847.70703125, 566.89453125))
text1 i.e the prev text is the winner
collision happend with box:437.98828125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((869.6796875, 525.87890625), (960.5, 569.82421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:525.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
between
((731.984375, 644.53125), (815.48046875, 678.22265625))
text1 i.e the prev text is the winner
collision happend with box:525.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Pre
((812.5507812500001, 640.13671875), (857.9609375, 670.8984375))
text1 i.e the prev text is the winner
collision happend with box:525.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((881.3984375, 638.671875), (937.0625, 670.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:638.671875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((938.52734375, 637.20703125), (975.1484375, 669.43359375))
text1 i.e the prev text is the winner
collision happend with box:638.671875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((896.0468749999999, 720.703125), (991.26171875, 761.71875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:720.703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((749.5625, 741.2109375), (871.14453125, 780.76171875))
text2 i.e the incoming text is the winner
collision happend with box:741.2109375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((781.7890625, 814.453125), (806.69140625, 845.21484375))
text1 i.e the prev text is the winner
collision happend with box:741.2109375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((803.76171875, 808.59375), (879.9335937500001, 843.75))
text1 i.e the prev text is the winner
collision happend with box:741.2109375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Fakye
((907.765625, 810.05859375), (989.796875, 846.6796875))
text1 i.e the prev text is the winner
collision happend with box:741.2109375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Esttr
((910.6953125000001, 878.90625), (992.7265625, 912.59765625))
text1 i.e the prev text is the winner
original
((752.4921875, 915.52734375), (831.59375, 950.68359375))
collision happend with box:915.52734375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((828.6640624999999, 912.59765625), (890.1875, 943.359375))
text1 i.e the prev text is the winner
collision happend with box:915.52734375 and text:original solving on the basis of percent match boxes
the current box specification are
TRUE
((922.4140625, 909.66796875), (1011.7695312500001, 950.68359375))
text2 i.e the incoming text is the winner
collision happend with box:909.66796875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
a
((789.11328125, 988.76953125), (806.69140625, 1012.20703125))
text1 i.e the prev text is the winner
collision happend with box:909.66796875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
prediction
((805.2265625, 978.515625), (903.37109375, 1013.671875))
text1 i.e the prev text is the winner
collision happend with box:909.66796875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
True
((939.9921875, 978.515625), (1019.09375, 1013.671875))
text2 i.e the incoming text is the winner
collision happend with box:978.515625 and text:True solving on the basis of percent match boxes
the current box specification are
overfitting
((783.25390625, 1081.0546875), (887.2578125, 1116.2109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1081.0546875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((792.04296875, 1114.74609375), (860.890625, 1149.90234375))
text2 i.e the incoming text is the winner
collision happend with box:1114.74609375 and text:details solving on the basis of percent match boxes
the current box specification are
the
((884.328125, 1111.81640625), (920.94921875, 1138.18359375))
text1 i.e the prev text is the winner
collision happend with box:1114.74609375 and text:details solving on the basis of percent match boxes
the current box specification are
TRVE
((960.5, 1073.73046875), (1045.4609375, 1108.88671875))
text1 i.e the prev text is the winner
collision happend with box:1114.74609375 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((756.88671875, 1154.296875), (809.62109375, 1185.05859375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 528, '2': 436, '3': 503, '4': 603, '5': 707, '6': 807, '7': 873, '8': 975, '9': 1044, '10': 1142}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zWXFXYW.jpg
OCR detection done with doctr
left top x of SN: 1260.5
bottom right x of SN: 1711.4375
left top x of T/F: 5769.999999999999
bottom right x of T/F: 7045.687500000001
first t/f detection
haridwriting
((5048.46875, 252.875), (5834.187499999999, 550.90625))
TRUE
((5653.562500000001, 2158.46875), (6078.031249999999, 2384.25))
TRUE
((5518.093750000001, 2519.71875), (5951.593750000001, 2754.53125))
TRUE
((5472.9375, 3061.59375), (5843.218750000001, 3296.40625))
FALSE
((5472.9375, 3440.90625), (5960.625, 3666.6875))
collision happend with box:3440.90625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Bua
((5436.812500000001, 3585.40625), (5897.406250000001, 3856.34375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 1300, '2': 1833}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DSxCXr6.jpg
OCR detection done with doctr
left top x of SN: 547.0312500000001
bottom right x of SN: 988.9374999999999
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6910.218750000001
first t/f detection
FALSE
((5689.6875, 2113.3125), (6348.968749999999, 2312.0))
TRUE
((5563.249999999999, 2700.34375), (6168.343750000001, 2944.1875))
TRUE
((5572.281250000001, 3332.53125), (6078.031249999999, 3558.3125))
FALSE
((5427.781249999999, 3856.34375), (6159.312499999999, 4109.21875))
FALSE
((5518.093750000001, 4280.8125), (6159.312499999999, 4533.6875))
TRUE
((5337.46875, 4940.09375), (5906.4375, 5192.96875))
FALSE
((5382.625000000001, 5635.5), (6096.09375, 5879.34375))
TRUE
((5265.218749999999, 6204.46875), (5789.031250000001, 6475.40625))
FALSE
((5409.718750000001, 6565.71875), (6114.156250000001, 6818.59375))
teBE
((5265.218749999999, 6755.375), (5834.187499999999, 7008.25))
TRUE
((5120.71875, 7414.65625), (5734.843750000001, 7658.5))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 1779, '2': 2357, '3': 2953}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1BDUOhL.jpg
OCR detection done with doctr
left top x of T/F: 732.93359375
bottom right x of T/F: 1118.03125
left top x of SN: -34.068359375
bottom right x of SN: 188.91015625
first t/f detection
Folre
((765.21875, 354.970703125), (863.91015625, 425.009765625))
collision happend with box:354.970703125 and text:Folre solving on the basis of percent match boxes
the current box specification are
Truk
((789.095703125, 440.927734375), (884.603515625, 498.232421875))
text2 i.e the incoming text is the winner
collision happend with box:440.927734375 and text:Truk solving on the basis of percent match boxes
the current box specification are
for
((709.505859375, 367.705078125), (744.525390625, 394.765625))
text1 i.e the prev text is the winner
collision happend with box:440.927734375 and text:Truk solving on the basis of percent match boxes
the current box specification are
Fak
((884.603515625, 431.376953125), (941.908203125, 479.130859375))
text1 i.e the prev text is the winner
collision happend with box:440.927734375 and text:Truk solving on the basis of percent match boxes
the current box specification are
Vu
((889.3789062499999, 528.4765625), (954.642578125, 579.4140625))
text1 i.e the prev text is the winner
kl
((870.27734375, 619.208984375), (897.337890625, 639.90234375))
collision happend with box:619.208984375 and text:kl solving on the basis of percent match boxes
the current box specification are
d-dimensional
((629.916015625, 528.4765625), (771.5859375, 581.005859375))
text2 i.e the incoming text is the winner
collision happend with box:528.4765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((682.4453125, 633.53515625), (760.443359375, 670.146484375))
text1 i.e the prev text is the winner
collision happend with box:528.4765625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((757.259765625, 633.53515625), (779.544921875, 657.412109375))
text1 i.e the prev text is the winner
between
((666.52734375, 737.001953125), (752.484375, 775.205078125))
collision happend with box:737.001953125 and text:between solving on the basis of percent match boxes
the current box specification are
Pre-
((746.1171875, 730.634765625), (793.87109375, 762.470703125))
text2 i.e the incoming text is the winner
collision happend with box:730.634765625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
folne
((812.9726562500001, 721.083984375), (914.84765625, 795.8984375))
text2 i.e the incoming text is the winner
collision happend with box:721.083984375 and text:folne solving on the basis of percent match boxes
the current box specification are
Tiur
((830.482421875, 791.123046875), (929.1738281250001, 867.529296875))
text2 i.e the incoming text is the winner
collision happend with box:791.123046875 and text:Tiur solving on the basis of percent match boxes
the current box specification are
Kful
((843.216796875, 878.671875), (933.94921875, 947.119140625))
text2 i.e the incoming text is the winner
collision happend with box:878.671875 and text:Kful solving on the basis of percent match boxes
the current box specification are
Folw
((863.91015625, 972.587890625), (949.8671875, 1028.30078125))
text1 i.e the prev text is the winner
Falue
((868.685546875, 1052.177734375), (967.376953125, 1122.216796875))
distribution.
((682.4453125, 829.326171875), (808.197265625, 873.896484375))
collision happend with box:829.326171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((717.46484375, 910.5078125), (742.93359375, 935.9765625))
text1 i.e the prev text is the winner
collision happend with box:829.326171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((738.158203125, 897.7734375), (817.748046875, 935.9765625))
text1 i.e the prev text is the winner
original
((690.404296875, 1007.607421875), (766.810546875, 1045.810546875))
collision happend with box:1007.607421875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((762.03515625, 999.6484375), (828.8906250000001, 1037.8515625))
text1 i.e the prev text is the winner
collision happend with box:1007.607421875 and text:original solving on the basis of percent match boxes
the current box specification are
a
((723.83203125, 1084.013671875), (744.525390625, 1106.298828125))
text1 i.e the prev text is the winner
collision happend with box:1007.607421875 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((738.158203125, 1066.50390625), (843.216796875, 1109.482421875))
text1 i.e the prev text is the winner
overfitting
((719.056640625, 1169.970703125), (824.115234375, 1212.94921875))
collision happend with box:1169.970703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Folxe
((886.1953124999999, 1150.869140625), (986.478515625, 1228.8671875))
text1 i.e the prev text is the winner
collision happend with box:1169.970703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((728.607421875, 1208.173828125), (797.0546875, 1241.6015625))
text2 i.e the incoming text is the winner
collision happend with box:1208.173828125 and text:details solving on the basis of percent match boxes
the current box specification are
the
((820.931640625, 1200.21484375), (857.54296875, 1230.458984375))
text1 i.e the prev text is the winner
collision happend with box:1208.173828125 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((693.587890625, 1247.96875), (749.30078125, 1281.396484375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 471, '2': 568, '3': 633, '4': 737, '5': 832, '6': 929, '7': 996, '8': 1095, '9': 1163, '10': 1262}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : neGZfyt.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1385.234375
bottom right x of T/F: 1866.9140624999998
first t/f detection
True
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:True solving on the basis of percent match boxes
the current box specification are
Tyue
((1425.703125, 787.109375), (1537.421875, 850.5859375))
text1 i.e the prev text is the winner
Fale
((1461.25, 916.6015625), (1578.046875, 972.4609375))
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:falk solving on the basis of percent match boxes
the current box specification are
Faue
((1435.859375, 1228.90625), (1547.578125, 1289.84375))
text2 i.e the incoming text is the winner
collision happend with box:1228.90625 and text:Faue solving on the basis of percent match boxes
the current box specification are
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1378.7109375 and text:False solving on the basis of percent match boxes
the current box specification are
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
text2 i.e the incoming text is the winner
collision happend with box:1513.28125 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1458.7109375000002, 1663.0859375), (1565.3515625, 1716.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1663.0859375 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
text2 i.e the incoming text is the winner
True
((1443.4765624999998, 1980.46875), (1532.34375, 2036.328125))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1074, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1779, '10': 1942}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6f36g6m.jpg
OCR detection done with doctr
left top x of T/F: 5652.59375
bottom right x of T/F: 6937.312500000001
left top x of SN: 348.3437499999999
bottom right x of SN: 772.1874999999999
first t/f detection
FALSE
((5734.843750000001, 1788.1875), (6358.000000000001, 2032.03125))
FALSE
((5734.843750000001, 2375.21875), (6249.625000000001, 2591.96875))
FALSE
((5716.78125, 2971.28125), (6195.437500000001, 3151.90625))
FALSE
((5752.906249999999, 3504.125), (6267.687499999999, 3684.75))
FALSE
((5752.906249999999, 4009.875), (6267.687499999999, 4181.46875))
EES
((5789.031250000001, 4732.375), (6132.218749999999, 4922.03125))
FALSE
((5798.0625, 4497.5625), (6339.9375, 4714.3125))
FALSE
((5734.843750000001, 5400.6875), (6213.499999999999, 5617.4375))
FALSE
((5770.96875, 5978.6875), (6312.84375, 6186.40625))
FALSE
((5761.937500000001, 6529.59375), (6303.812500000001, 6782.46875))
FALSE
((5843.218750000001, 7206.9375), (6412.187500000001, 7414.65625))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2456, '3': 3052, '4': 3666, '5': 4064, '6': 4669, '7': 5472, '8': 6078, '9': 6484, '10': 7288}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f6396vC.jpg
rotation started
['"egep', 'uoosun', "'mou", '01', 'ITOM', 'azire1oues', 'zou', 'op', '7e44', 'egep', 'Surureng', 'au7', 'UI', 'sTregep', 'JO', 'OSIOU', 'oyreds', 'amades', '07', 'UIBOT', 'Kew', 'popour', 'a47', 'Se', "'soseaIo", '-ur', 'Surnyieno', 'Jo', 'YSLI', 'ay7', "'WAS", 'UI', 'peleurered', 'D', 'au4', 'Jo', 'anreA', 'y81y', 'B', 'YAIM', 'OT', 'aNAL', 'WAS', 'ASOI-SA-BUO', 'uey?', 'IOMOTS', 'SI', 'WAS', 'Quo-SA-QUO', 'Sursn', '85744', 'uororpard', 'e', 'Suryeur', "'sessepo", 'Jo', 'requnu', 'a81el', 'B', 'YAIM', 'suerqoid', 'sseppramu', 'JOI', '6', 'AnyL', 'ooeds', 'TEUrSTIO', 'au7', 'uI', 'IBQUIT-uou', '2q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsioep', 'OUL', '8', '20YL', 'Atparp', 'SI', 'DOIL', 'UOISIDAI', 'ay7', 'UI', 'uomorpard', 'B', 'Suryeur', 'IOJ', 'pammbar', 'OUIIL', 'OUL', 'L', '35744', '"uornqugsip', 'ueissnes', 'e', 'Sienre', 'SI', 'suorgnqugsip', 'uerssnes', 'OM7', 'Jo', 'amgXIu', 'V', '9', 'Anal', '-aId', 'uDamgaq', '70rd', 'e', 'SI', 'OAINO', '(DOH)', 'orgsutegpereyd', 'Surerado', 'IOAIODOY', 'OUL', 'S', '9974+', 'SI', 'quoosop', 'querpe1s', 'STIYM', 'SAU81OM', 'ou7', 'agepdn', '07', 'pasn', 'SI', 'uone8odoxdypeg', '4', 'sapou', 'Jo', 'roqunu', 'a47', '07', 'Teuorgiodo.d', 'TreDOH', 'pue', 'UOISIO', '"YIOMJOU', '[emou', 'au7', 'UI', 'squerpe.rs', 'e47', 'agnduoo', '07', 'pesn', ':f', 'pue', 'I', 'SIO900A', 'A5744', 'Teuorsuaump-p', 'Kue', 'JOJ', 'OLIQOUI', 'aouensip', 'PITBA', 'B', 'SI', '(A-z/Auopuagouxson', '-', 'I', '&', 'anat', '"IeyISselo', 'mBQUIT-uou', 'B', 'SI', 'NNY', '2', 'quaurdordap', '2NL', 'JIOJ', 'WAS', 'ueya', '1081eT', 'yonu', 'SI', 'NNY', 'JOJ', 'queuremmbar', 'a8e1ons', 'aun', 'SteordAL', 'I', 'ASTVA/ANHL', 'quawagess', 'NS', ':0.104', 'Jaqunu', 'ITOI', 'IOX', 'BAIM', 'Surgumpuey', 'reapp', 'pue', 'S.I97101', 'Teardeo', 'ur', 'ISTVI', 'IO', 'INAL', 'B1LIM', '(sad', 'OT)', '6']
rotation started
['I', ':', '-', ':', '-', 'LD', '-', ':', '-', 'iD', ':', ':', '-', 'a', 'E', 'a', 'I', '-', 'iis', 'E', 'a', 'I', 'is', 'E', 'I', 'I', 'I', 'is', 'I', 'I', 'd', 'I', '1', 'E', 'à', 'I', 'a', 'e', 'of', 's', '$', 'a', 'a', 'I', 'is', 'I', 'iE', 'i', 'a', '', 'I', 'à', 'E', 'I', ':', 'e', 'I', 'I', 'a', 'I', 'I', 'I', 'iE', 'I', 'of', ':', '1', 'E', 'I', 'I', '8', 'is', 'e', 'iE', 'o', 'e', 'I', '1', '2', '8', 'I', 'a', 'I', 'o', 'i', 'E', '', 'I', '-', ':', 'a', 'a', 'I', 'of', 'I', 'o', 'a', 'U', 'E', 'I', 'I', 'I', 'I', 'I', '2', 'I', 'is', 'e', 'S', 'I', 'E', 'e', 'a', '', '8', 'I', 'is', 'o', 'I', 'E', ':', 'I', 'I', '1', '2', 'I', '11', 'I', 'I', 'a', '', 'E', 'a', '.E', 'I', '1', 'I', 'I', ':', 'E', 'I', '1', 'E', '-', '5', 'E', '€', 'E', 'e', 'oi', 'I', 'I', '-', '', 'is', 'I', 'I', 'I', 'of', '€', 'is', 'a', 'à', ':', 'I', 'a', 'a', 'I', 'of', 'E', 'I', 'o', 'I', '-', 'of', 'de', 'I', 'I', 'à', 'a', 'a', 'I', '5', '8', 'S', 'I', 'I', 'a', 'à', 'I', 'I', 'I', 'I', 'I', 'E', 'I', '', 'E', 'E', 'E', '-', '€', 'I', 'I', '7', '11', '4', '10', '', '', '00', '', 'of']
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'handwriting.', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FALSE', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'TRUE', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'TRVE', '3', '1-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALGE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRVE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'TRUE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRVE']
rotation done for:  f6396vC.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of SN: 556.0625
bottom right x of SN: 979.90625
left top x of T/F: 5300.375
bottom right x of T/F: 6494.781249999999
first t/f detection
TRUE
((5400.687499999999, 1941.71875), (6032.875000000001, 2185.5625))
TRVE
((5382.625000000001, 2510.6875), (5978.687500000001, 2727.4375))
FALSE
((5337.46875, 2962.25), (6014.8125, 3179.0))
FALGE
((5301.343750000001, 3549.28125), (6014.8125, 3766.03125))
TRVE
((5301.343750000001, 4145.34375), (5852.25, 4362.09375))
FALSE
((5247.156250000001, 4651.09375), (5915.468749999999, 4858.8125))
TRUE
((5283.28125, 5102.65625), (5807.093749999999, 5283.28125))
TRUE
((5265.218749999999, 5590.34375), (5924.500000000001, 5852.25))
FALSE
((5247.156250000001, 6041.90625), (5915.468749999999, 6249.625))
TRVE
((5192.96875, 6710.21875), (5843.218750000001, 6917.9375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1995, '2': 2564, '3': 2953, '4': 3531, '5': 4100, '6': 4669, '7': 5057, '8': 5626, '9': 6014, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zHa0aYH.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6756.6875
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
TRI
((5518.093750000001, 2113.3125), (6078.031249999999, 2375.21875))
TRUE
((5581.3125, 2664.21875), (6312.84375, 2926.125))
TRUE
((5590.343749999999, 3188.03125), (6394.125, 3468.0))
FALSE
((5536.156249999999, 3784.09375), (6457.343749999999, 4118.25))
FALSE
((5563.249999999999, 4452.40625), (6466.375000000001, 4750.4375))
FALS
((5554.21875, 5021.375), (6231.5625, 5283.28125))
FALSE
((5536.156249999999, 5481.96875), (6439.281250000001, 5734.84375))
TRVE
((5527.125, 6032.875), (6267.687499999999, 6249.625))
TRUE
((5545.187500000001, 6484.4375), (6367.03125, 6728.28125))
TRUE
((5617.437499999999, 7170.8125), (6376.062499999999, 7378.53125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2962, '3': 3368, '4': 3982, '5': 4587, '6': 5202, '7': 5608, '9': 6637, '8': 6222, '10': 7261}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WZ5A722.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5652.59375
bottom right x of T/F: 6856.031250000001
first t/f detection
Golse
((5789.031250000001, 1652.71875), (6321.874999999999, 1959.78125))
Yalse
((5743.875, 2312.0), (6222.531250000001, 2573.90625))
Halse
((5698.718749999999, 2899.03125), (6222.531250000001, 3215.125))
Jalse
((5725.812499999999, 3431.875), (6186.406249999999, 3702.8125))
Jalse
((5725.812499999999, 3865.375), (6231.5625, 4082.125))
Yalse
((5716.78125, 4624.0), (6195.437500000001, 4885.90625))
True
((5743.875, 5301.34375), (6150.28125, 5590.34375))
True
((5761.937500000001, 5852.25), (6159.312499999999, 6141.25))
Yalse
((5716.78125, 6376.0625), (6240.593749999999, 6683.125))
True
((5743.875, 7035.34375), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2321, '3': 2908, '4': 3513, '5': 3901, '6': 4506, '7': 5310, '8': 5924, '9': 6330, '10': 7143}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : n1jxrs3.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6630.249999999999
left top x of SN: 185.78124999999986
bottom right x of SN: 600.59375
first t/f detection
Tolse.
((5590.343749999999, 1517.25), (6096.09375, 1788.1875))
Yalse
((5581.3125, 2158.46875), (6059.968750000001, 2438.4375))
than
((5084.59375, 2772.59375), (5400.687499999999, 2953.21875))
collision happend with box:2772.59375 and text:than solving on the basis of percent match boxes
the current box specification are
Holse
((5572.281250000001, 2763.5625), (6105.124999999999, 3070.625))
text2 i.e the incoming text is the winner
galse
((5635.5, 3287.375), (6105.124999999999, 3549.28125))
matrix
((5021.375, 3784.09375), (5472.9375, 3964.71875))
collision happend with box:3784.09375 and text:matrix solving on the basis of percent match boxes
the current box specification are
"Jalse
((5662.59375, 3711.84375), (6177.375, 3928.59375))
text2 i.e the incoming text is the winner
then
((5192.96875, 4380.15625), (5518.093750000001, 4551.75))
Oor
((5156.84375, 4587.875), (5536.156249999999, 4750.4375))
collision happend with box:4587.875 and text:Oor solving on the basis of percent match boxes
the current box specification are
galse
((5716.78125, 4470.46875), (6204.46875, 4732.375))
text2 i.e the incoming text is the winner
the
((5346.499999999999, 5183.9375), (5572.281250000001, 5337.46875))
collision happend with box:5183.9375 and text:the solving on the basis of percent match boxes
the current box specification are
True
((5789.031250000001, 5156.84375), (6204.46875, 5427.78125))
text2 i.e the incoming text is the winner
True
((5852.25, 5707.75), (6249.625000000001, 5987.71875))
to
((5247.156250000001, 6222.53125), (5427.781249999999, 6367.03125))
collision happend with box:6222.53125 and text:to solving on the basis of percent match boxes
the current box specification are
the
((5418.75, 6195.4375), (5653.562500000001, 6348.96875))
text2 i.e the incoming text is the winner
collision happend with box:6195.4375 and text:the solving on the basis of percent match boxes
the current box specification are
Yalse
((5843.218750000001, 6231.5625), (6358.000000000001, 6502.5))
text2 i.e the incoming text is the winner
of
((5373.593749999999, 6403.15625), (5554.21875, 6556.6875))
True
((5933.53125, 6899.875), (6394.125, 7188.875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6']
['1', '2', '3', '4', '5', '6', '1', '2', '3', '4', '5', '6']
printing the number dict y_coordinate
{'1': 1905, '2': 2492, '3': 3088, '4': 3684, '5': 4082, '6': 4678}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oyXPXol.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1285.646484375 and text:Falle solving on the basis of percent match boxes
the current box specification are
False
((1337.77734375, 1398.052734375), (1454.8671875, 1454.255859375))
text2 i.e the incoming text is the winner
collision happend with box:1398.052734375 and text:False solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
text1 i.e the prev text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1873.4375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1133, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mrijc85.jpg
OCR detection done with doctr
left top x of T/F: 995.5156249999999
bottom right x of T/F: 1432.03125
left top x of SN: -13.281250000000014
bottom right x of SN: 220.74999999999997
first t/f detection
for
((961.8750000000001, 473.8125), (1007.5937499999999, 511.21875))
collision happend with box:473.8125 and text:for solving on the basis of percent match boxes
the current box specification are
(iwr
((1063.703125, 461.34375), (1163.453125, 544.46875))
text1 i.e the prev text is the winner
collision happend with box:473.8125 and text:for solving on the basis of percent match boxes
the current box specification are
(olee
((1059.546875, 554.859375), (1182.15625, 646.296875))
text1 i.e the prev text is the winner
d-dimensional
((857.96875, 683.703125), (1042.921875, 752.28125))
collision happend with box:683.703125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1022.140625, 820.859375), (1055.390625, 854.109375))
text1 i.e the prev text is the winner
Pre-
((1009.6718749999999, 951.78125), (1069.9375, 987.109375))
collision happend with box:951.78125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
descent
((924.4687499999999, 822.9375), (1026.296875, 872.8125))
text2 i.e the incoming text is the winner
collision happend with box:822.9375 and text:descent solving on the basis of percent match boxes
the current box specification are
between
((903.6875, 958.015625), (1015.90625, 1007.890625))
text1 i.e the prev text is the winner
Kvur
((1163.453125, 1034.90625), (1242.421875, 1103.484375))
collision happend with box:1034.90625 and text:Kvur solving on the basis of percent match boxes
the current box specification are
distribution.
((926.5468749999999, 1078.546875), (1090.71875, 1136.734375))
text2 i.e the incoming text is the winner
collision happend with box:1078.546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((970.1875000000001, 1180.375), (1003.4374999999999, 1219.859375))
text1 i.e the prev text is the winner
collision happend with box:1078.546875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((997.203125, 1163.75), (1103.1875, 1215.703125))
text1 i.e the prev text is the winner
space.
((1032.53125, 1300.90625), (1115.65625, 1344.546875))
collision happend with box:1300.90625 and text:space. solving on the basis of percent match boxes
the current box specification are
Falye
((1178.0, 1251.03125), (1281.90625, 1330.0))
text2 i.e the incoming text is the winner
collision happend with box:1251.03125 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1184.234375, 1361.171875), (1302.6875, 1448.453125))
text2 i.e the incoming text is the winner
collision happend with box:1361.171875 and text:Falwe solving on the basis of percent match boxes
the current box specification are
original
((934.859375, 1307.140625), (1038.765625, 1359.09375))
text2 i.e the incoming text is the winner
collision happend with box:1307.140625 and text:original solving on the basis of percent match boxes
the current box specification are
a
((980.578125, 1408.96875), (1007.5937499999999, 1438.0625))
text1 i.e the prev text is the winner
collision happend with box:1307.140625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((999.2812500000001, 1384.03125), (1134.359375, 1442.21875))
text1 i.e the prev text is the winner
overfitting
((974.34375, 1521.1875), (1111.5, 1577.296875))
collision happend with box:1521.1875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((986.8125, 1573.140625), (1076.171875, 1616.78125))
text2 i.e the incoming text is the winner
collision happend with box:1573.140625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1107.34375, 1560.671875), (1157.21875, 1596.0))
text1 i.e the prev text is the winner
collision happend with box:1573.140625 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((941.09375, 1627.171875), (1011.75, 1670.8125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '7', '10']
the assigned keys are ['1', '2', '3', '4', '6', '8', '9']
['1', '2', '3', '4', '6', '8', '9', '1', '2', '3', '4', '6', '8', '9']
printing the number dict y_coordinate
{'2': 735, '1': 814, '3': 822, '4': 955, '6': 1219, '8': 1440, '9': 1531}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': 'UNASSIGNED', '6': False, '7': 'UNASSIGNED', '8': False, '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qKVBUWs.jpg
OCR detection done with doctr
left top x of T/F: 5571.3125
bottom right x of T/F: 6783.78125
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
Te.
((5671.624999999999, 1743.03125), (6213.499999999999, 1950.75))
False.
((5599.375000000001, 2853.875), (6168.343750000001, 3124.8125))
Falal,
((5635.5, 3458.96875), (6186.406249999999, 3720.875))
TUR.
((5608.40625, 3964.71875), (6050.937499999999, 4136.3125))
Palbe,
((5608.40625, 4651.09375), (6168.343750000001, 4922.03125))
hue
((5725.812499999999, 5373.59375), (6123.1875, 5545.1875))
Foul
((5707.750000000001, 5888.375), (6186.406249999999, 6050.9375))
hue.
((5671.624999999999, 6430.25), (6240.593749999999, 6601.84375))
Toue
((5689.6875, 7062.4375), (6168.343750000001, 7234.03125))
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': False, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
the unassigned keys are ['8']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '9', '10']
['1', '2', '3', '4', '5', '6', '7', '9', '10', '1', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 1824, '2': 2420, '3': 2998, '4': 3594, '5': 3982, '6': 4578, '7': 5364, '9': 6348, '10': 7134}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': False, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CVx5tZW.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:755.58984375 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1415.904296875, 898.201171875), (1588.5390625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:898.201171875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1198.435546875), (1591.041015625, 1306.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1198.435546875 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1336.04296875 and text:True solving on the basis of percent match boxes
the current box specification are
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
text2 i.e the incoming text is the winner
collision happend with box:1481.15625 and text:falke solving on the basis of percent match boxes
the current box specification are
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1616.26171875 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1746.36328125 and text:fale solving on the basis of percent match boxes
the current box specification are
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1466, '8': 1628, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xVlxPxC.jpg
OCR detection done with doctr
left top x of SN: 91.80078125000003
bottom right x of SN: 310.716796875
left top x of T/F: 870.5449218749999
bottom right x of T/F: 1236.208984375
first t/f detection
FALSE
((882.1015625, 386.046875), (975.5, 431.189453125))
collision happend with box:386.046875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((882.1015625, 473.21875), (969.2734375, 510.578125))
text2 i.e the incoming text is the winner
collision happend with box:473.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((877.431640625, 558.833984375), (959.93359375, 594.63671875))
text1 i.e the prev text is the winner
TRVE
((885.2148437499999, 655.345703125), (963.046875, 683.365234375))
collision happend with box:655.345703125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((880.5449218749999, 758.083984375), (970.830078125, 793.88671875))
text2 i.e the incoming text is the winner
collision happend with box:758.083984375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((880.5449218749999, 843.69921875), (959.93359375, 879.501953125))
text1 i.e the prev text is the winner
TRUE
((888.328125, 926.201171875), (959.93359375, 957.333984375))
collision happend with box:926.201171875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FALSE
((891.4414062500001, 1016.486328125), (978.6132812499999, 1046.0625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1016.486328125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((889.8847656249999, 1092.76171875), (975.5, 1130.12109375))
text2 i.e the incoming text is the winner
collision happend with box:1092.76171875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((892.998046875, 1211.06640625), (972.38671875, 1240.642578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['2', '3', '4', '5']
the assigned keys are ['1', '6', '7', '8', '9', '10']
['1', '6', '7', '8', '9', '10', '1', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 561, '6': 867, '7': 930, '8': 1032, '9': 1100, '10': 1200}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ebHOerd.jpg
OCR detection done with doctr
left top x of SN: 72.38671874999999
bottom right x of SN: 319.939453125
left top x of T/F: 1393.39453125
bottom right x of T/F: 1873.60546875
first t/f detection
Falx
((1410.9003906249998, 617.982421875), (1591.041015625, 735.57421875))
collision happend with box:617.982421875 and text:Falx solving on the basis of percent match boxes
the current box specification are
falve
((1433.41796875, 750.5859375), (1588.5390625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:750.5859375 and text:falve solving on the basis of percent match boxes
the current box specification are
Trul
((1418.40625, 903.205078125), (1586.037109375, 1005.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:903.205078125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tul
((1428.4140624999998, 1045.81640625), (1576.029296875, 1153.400390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tyul
((1435.919921875, 1200.9375), (1593.54296875, 1303.517578125))
text2 i.e the incoming text is the winner
collision happend with box:1200.9375 and text:Tyul solving on the basis of percent match boxes
the current box specification are
True
((1435.919921875, 1336.04296875), (1576.029296875, 1431.1171875))
text2 i.e the incoming text is the winner
collision happend with box:1336.04296875 and text:True solving on the basis of percent match boxes
the current box specification are
falre
((1418.40625, 1483.658203125), (1591.041015625, 1586.23828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1483.658203125 and text:falre solving on the basis of percent match boxes
the current box specification are
Falw
((1435.919921875, 1611.2578125), (1593.54296875, 1698.826171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1611.2578125 and text:Falw solving on the basis of percent match boxes
the current box specification are
Fale
((1423.41015625, 1741.359375), (1583.53515625, 1846.44140625))
text2 i.e the incoming text is the winner
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 880, '2': 773, '3': 883, '5': 1200, '6': 1363, '7': 1468, '8': 1628, '9': 1738, '10': 1898}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VW40e4h.jpg
OCR detection done with doctr
left top x of T/F: 853.8203124999999
bottom right x of T/F: 1222.0234375
left top x of SN: 70.89062500000003
bottom right x of SN: 287.51171875
first t/f detection
tote
((871.14453125, 263.671875), (967.8242187499999, 306.15234375))
collision happend with box:263.671875 and text:tote solving on the basis of percent match boxes
the current box specification are
Tywe
((896.0468749999999, 325.1953125), (969.2890625, 360.3515625))
text1 i.e the prev text is the winner
collision happend with box:263.671875 and text:tote solving on the basis of percent match boxes
the current box specification are
Tywe
((890.1875, 394.04296875), (973.68359375, 423.33984375))
text1 i.e the prev text is the winner
Feubse
((897.5117187499999, 464.35546875), (969.2890625, 493.65234375))
collision happend with box:464.35546875 and text:Feubse solving on the basis of percent match boxes
the current box specification are
d-dimensional
((726.125, 457.03125), (855.03125, 484.86328125))
text2 i.e the incoming text is the winner
collision happend with box:457.03125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((840.3828125, 559.5703125), (860.890625, 583.0078125))
text1 i.e the prev text is the winner
collision happend with box:457.03125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
CALSE
((888.72265625, 549.31640625), (973.68359375, 590.33203125))
text2 i.e the incoming text is the winner
collision happend with box:549.31640625 and text:CALSE solving on the basis of percent match boxes
the current box specification are
Pre
((819.875, 657.71484375), (865.28515625, 687.01171875))
text1 i.e the prev text is the winner
collision happend with box:549.31640625 and text:CALSE solving on the basis of percent match boxes
the current box specification are
FAL
((890.1875, 662.109375), (942.9218750000001, 691.40625))
text2 i.e the incoming text is the winner
collision happend with box:662.109375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((950.24609375, 663.57421875), (979.5429687500001, 691.40625))
text1 i.e the prev text is the winner
collision happend with box:662.109375 and text:FAL solving on the basis of percent match boxes
the current box specification are
distribution.
((751.02734375, 761.71875), (868.21484375, 789.55078125))
text2 i.e the incoming text is the winner
collision happend with box:761.71875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((898.9765624999999, 747.0703125), (988.33203125, 782.2265625))
text1 i.e the prev text is the winner
collision happend with box:761.71875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((796.4374999999999, 829.1015625), (871.14453125, 856.93359375))
text1 i.e the prev text is the winner
collision happend with box:761.71875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Faye
((901.90625, 834.9609375), (982.47265625, 868.65234375))
text1 i.e the prev text is the winner
collision happend with box:761.71875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Ftr
((898.9765624999999, 905.2734375), (979.5429687500001, 931.640625))
text1 i.e the prev text is the winner
space.
((814.015625, 934.5703125), (874.07421875, 960.9375))
collision happend with box:934.5703125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((909.2304687500001, 938.96484375), (994.19140625, 972.65625))
text2 i.e the incoming text is the winner
collision happend with box:938.96484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
prediction
((783.25390625, 1000.48828125), (878.4687500000001, 1026.85546875))
text1 i.e the prev text is the winner
collision happend with box:938.96484375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
True
((918.01953125, 1003.41796875), (995.65625, 1040.0390625))
text2 i.e the incoming text is the winner
collision happend with box:1003.41796875 and text:True solving on the basis of percent match boxes
the current box specification are
the
((852.1015625, 1132.32421875), (885.79296875, 1157.2265625))
text1 i.e the prev text is the winner
collision happend with box:1003.41796875 and text:True solving on the basis of percent match boxes
the current box specification are
TRVE
((932.6679687499999, 1103.02734375), (1011.7695312500001, 1132.32421875))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 309, '2': 405, '3': 474, '4': 575, '5': 675, '6': 777, '7': 845, '8': 947, '9': 1015, '10': 1117}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': True, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EIHSAUE.jpg
OCR detection done with doctr
left top x of T/F: 5553.249999999999
bottom right x of T/F: 6846.999999999999
left top x of SN: 574.1250000000001
bottom right x of SN: 979.90625
first t/f detection
TRUE
((5536.156249999999, 2077.1875), (6267.687499999999, 2366.1875))
TRUE
((5581.3125, 2691.3125), (6249.625000000001, 2980.3125))
TRUE.
((5617.437499999999, 3251.25), (6403.156249999999, 3549.28125))
FALSE.
((5509.062499999999, 3946.65625), (6439.281250000001, 4190.5))
TRUF.
((5545.187500000001, 4614.96875), (6285.75, 4831.71875))
FALE.
((5545.187500000001, 5120.71875), (6312.84375, 5355.53125))
#R
((5454.874999999999, 5644.53125), (5816.125000000001, 5870.3125))
collision happend with box:5644.53125 and text:#R solving on the basis of percent match boxes
the current box specification are
FALE
((5897.406250000001, 5644.53125), (6556.6875, 5888.375))
text2 i.e the incoming text is the winner
TRUE
((5427.781249999999, 6168.34375), (6231.5625, 6412.1875))
TRUE
((5427.781249999999, 6701.1875), (6114.156250000001, 6945.03125))
TRUE.
((5491.000000000001, 7333.375), (6303.812500000001, 7613.34375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2926, '3': 3314, '4': 3928, '5': 4488, '6': 5093, '7': 5491, '8': 6096, '9': 6502, '10': 7116}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KctCRld.jpg
OCR detection done with doctr
left top x of T/F: 5210.062500000001
bottom right x of T/F: 6458.65625
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
True
((5274.250000000001, 1734.0), (5716.78125, 2013.96875))
Tue
((5292.312499999999, 2275.875), (5752.906249999999, 2537.78125))
false
((5337.46875, 2718.40625), (5816.125000000001, 3052.5625))
Folse
((5319.406249999999, 3314.46875), (5789.031250000001, 3639.59375))
True
((5301.343750000001, 3973.75), (5779.999999999999, 4262.75))
False
((5319.406249999999, 4443.375), (5798.0625, 4759.46875))
Folse
((5310.375, 4949.125), (5725.812499999999, 5229.09375))
True
((5328.437500000001, 5518.09375), (5734.843750000001, 5743.875))
Tue
((5301.343750000001, 5987.71875), (5752.906249999999, 6249.625))
Thue
((5328.437500000001, 6565.71875), (5825.15625, 6827.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1986, '2': 2546, '3': 2926, '4': 3504, '5': 4082, '6': 4660, '7': 5039, '8': 5635, '9': 6023, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gKxPK1Y.jpg
OCR detection done with doctr
left top x of T/F: 823.58984375
bottom right x of T/F: 1190.97265625
left top x of SN: 54.507812499999986
bottom right x of SN: 277.7109375
first t/f detection
fot
((791.9296875, 359.51171875), (824.33203125, 385.7421875))
collision happend with box:359.51171875 and text:fot solving on the basis of percent match boxes
the current box specification are
FALSE
((856.734375, 368.76953125), (936.96875, 407.34375))
text2 i.e the incoming text is the winner
collision happend with box:368.76953125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((858.27734375, 447.4609375), (943.1406250000001, 482.94921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:447.4609375 and text:FAISE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((703.98046875, 529.23828125), (835.1328125, 564.7265625))
text2 i.e the incoming text is the winner
collision happend with box:529.23828125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
TRUE
((865.9921875, 529.23828125), (940.0546875, 560.09765625))
text2 i.e the incoming text is the winner
collision happend with box:529.23828125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
is
((819.703125, 629.53125), (844.390625, 658.84765625))
text1 i.e the prev text is the winner
collision happend with box:529.23828125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((862.90625, 629.53125), (938.51171875, 666.5625))
text1 i.e the prev text is the winner
Pre
((804.2734374999999, 729.82421875), (850.5625, 760.68359375))
collision happend with box:729.82421875 and text:Pre solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 734.453125), (955.484375, 765.3125))
text2 i.e the incoming text is the winner
collision happend with box:734.453125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((739.46875, 830.1171875), (856.734375, 865.60546875))
text2 i.e the incoming text is the winner
collision happend with box:830.1171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 816.23046875), (953.9414062500001, 856.34765625))
text1 i.e the prev text is the winner
collision happend with box:830.1171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((785.7578125, 898.0078125), (862.90625, 933.49609375))
text1 i.e the prev text is the winner
collision happend with box:830.1171875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
TEUE
((886.05078125, 902.63671875), (950.85546875, 933.49609375))
text1 i.e the prev text is the winner
space.
((807.359375, 1006.015625), (865.9921875, 1030.703125))
collision happend with box:1006.015625 and text:space. solving on the basis of percent match boxes
the current box specification are
FALSE
((893.765625, 989.04296875), (974.0, 1019.90234375))
text2 i.e the incoming text is the winner
collision happend with box:989.04296875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
prediction
((776.5, 1067.734375), (875.25, 1101.6796875))
text1 i.e the prev text is the winner
collision happend with box:989.04296875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAISE
((896.8515625, 1067.734375), (977.0859375, 1104.765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1067.734375 and text:FAISE solving on the basis of percent match boxes
the current box specification are
overfitting
((753.35546875, 1169.5703125), (852.10546875, 1203.515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1169.5703125 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((761.0703125, 1203.515625), (825.8749999999999, 1234.375))
text2 i.e the incoming text is the winner
collision happend with box:1203.515625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((850.5625, 1201.97265625), (886.05078125, 1228.203125))
text1 i.e the prev text is the winner
collision happend with box:1203.515625 and text:details solving on the basis of percent match boxes
the current box specification are
TRVE
((904.56640625, 1185.0), (977.0859375, 1215.859375))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 404, '2': 503, '3': 572, '4': 672, '5': 773, '6': 874, '7': 941, '8': 1043, '9': 1115, '10': 1209}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6tXsNC9.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6521.874999999999
left top x of SN: 574.1250000000001
bottom right x of SN: 979.90625
first t/f detection
TRUE
((5382.625000000001, 2059.125), (5906.4375, 2266.84375))
TRUE
((5337.46875, 2564.875), (5933.53125, 2772.59375))
FALSE
((5346.499999999999, 3079.65625), (6005.781250000001, 3287.375))
FALSE
((5337.46875, 3729.90625), (5933.53125, 3901.5))
TRUE
((5328.437500000001, 4280.8125), (5861.281249999999, 4452.40625))
FALSE
((5373.593749999999, 4795.59375), (5915.468749999999, 4967.1875))
TRUG
((5274.250000000001, 5229.09375), (5825.15625, 5400.6875))
TRUE
((5292.312499999999, 5716.78125), (5870.312500000001, 5924.5))
TRUC
((5301.343750000001, 6186.40625), (5798.0625, 6358.0))
TRUE
((5319.406249999999, 6809.5625), (5861.281249999999, 7017.28125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2266, '2': 2835, '3': 3215, '4': 3784, '5': 4344, '6': 4922, '7': 5301, '8': 5879, '9': 6267, '10': 6854}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0qZVJKm.jpg
OCR detection done with doctr
left top x of T/F: 853.0859375000001
bottom right x of T/F: 1250.0
left top x of SN: 15.810546874999986
bottom right x of SN: 239.31640625
first t/f detection
for
((830.859375, 380.2734375), (863.0859375000001, 409.27734375))
collision happend with box:380.2734375 and text:for solving on the basis of percent match boxes
the current box specification are
F
((929.150390625, 375.439453125), (967.822265625, 423.779296875))
text1 i.e the prev text is the winner
collision happend with box:380.2734375 and text:for solving on the basis of percent match boxes
the current box specification are
L
((961.376953125, 451.171875), (982.3242187500001, 476.953125))
text1 i.e the prev text is the winner
d-dimensional
((747.0703125, 547.8515625), (898.53515625, 599.4140625))
collision happend with box:547.8515625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
descent
((805.078125, 654.19921875), (887.255859375, 692.87109375))
text1 i.e the prev text is the winner
collision happend with box:547.8515625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((885.64453125, 654.19921875), (908.203125, 678.369140625))
text1 i.e the prev text is the winner
Pre-
((877.5878906249999, 752.490234375), (927.5390625000001, 784.716796875))
collision happend with box:752.490234375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
between
((792.1875, 758.935546875), (880.810546875, 797.607421875))
text2 i.e the incoming text is the winner
collision happend with box:758.935546875 and text:between solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 749.267578125), (1048.388671875, 795.99609375))
text2 i.e the incoming text is the winner
F
((1014.5507812499999, 915.234375), (1048.388671875, 965.185546875))
collision happend with box:915.234375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1019.384765625, 999.0234375), (1056.4453125, 1040.91796875))
text2 i.e the incoming text is the winner
collision happend with box:999.0234375 and text:T solving on the basis of percent match boxes
the current box specification are
distribution.
((813.1347656249999, 852.392578125), (946.875, 897.509765625))
text2 i.e the incoming text is the winner
collision happend with box:852.392578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Tree
((801.85546875, 932.958984375), (855.029296875, 966.796875))
text1 i.e the prev text is the winner
collision happend with box:852.392578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((853.41796875, 932.958984375), (875.9765625, 958.740234375))
text1 i.e the prev text is the winner
collision happend with box:852.392578125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((874.365234375, 920.068359375), (958.154296875, 958.740234375))
text1 i.e the prev text is the winner
original
((826.025390625, 1029.638671875), (908.203125, 1069.921875))
collision happend with box:1029.638671875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((904.9804687499999, 1026.416015625), (971.044921875, 1058.642578125))
text1 i.e the prev text is the winner
collision happend with box:1029.638671875 and text:original solving on the basis of percent match boxes
the current box specification are
making
((787.353515625, 1105.37109375), (867.9199218749999, 1144.04296875))
text1 i.e the prev text is the winner
collision happend with box:1029.638671875 and text:original solving on the basis of percent match boxes
the current box specification are
a
((864.697265625, 1108.59375), (884.033203125, 1131.15234375))
text1 i.e the prev text is the winner
collision happend with box:1029.638671875 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((879.19921875, 1092.48046875), (987.1582031249999, 1131.15234375))
text1 i.e the prev text is the winner
overfitting
((861.474609375, 1195.60546875), (971.044921875, 1234.27734375))
collision happend with box:1195.60546875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
or
((845.3613281250001, 1248.779296875), (872.7539062500001, 1269.7265625))
text1 i.e the prev text is the winner
collision happend with box:1195.60546875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((874.365234375, 1232.666015625), (945.2636718750001, 1266.50390625))
text2 i.e the incoming text is the winner
collision happend with box:1232.666015625 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((837.3046875, 1274.560546875), (895.3124999999999, 1306.787109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1274.560546875 and text:data. solving on the basis of percent match boxes
the current box specification are
A
((1112.841796875, 1192.3828125), (1140.234375, 1226.220703125))
text1 i.e the prev text is the winner
collision happend with box:1274.560546875 and text:data. solving on the basis of percent match boxes
the current box specification are
of
((834.08203125, 1208.49609375), (863.0859375000001, 1235.888671875))
text1 i.e the prev text is the winner
collision happend with box:1274.560546875 and text:data. solving on the basis of percent match boxes
the current box specification are
the
((972.6562500000001, 1224.609375), (1011.328125, 1253.61328125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': 'NULL', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 1493
printing the number dict y_coordinate
{'1': 481, '2': 583, '3': 652, '4': 754, '6': 955, '5': 855, '7': 1023, '8': 1126, '9': 1193, '10': 1493}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': 'NULL', '6': False, '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DtoSTqh.jpg
OCR detection done with doctr
left top x of SN: 90.2109375
bottom right x of SN: 309.76171875
left top x of T/F: 874.83984375
bottom right x of T/F: 1241.4609375
first t/f detection
FAL
((892.75, 428.73046875), (943.375, 461.953125))
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((946.5390625, 431.89453125), (975.0156250000001, 458.7890625))
text1 i.e the prev text is the winner
collision happend with box:428.73046875 and text:FAL solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 512.578125), (963.94140625, 544.21875))
text1 i.e the prev text is the winner
TRVE
((891.16796875, 596.42578125), (965.5234375000001, 628.06640625))
collision happend with box:596.42578125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((889.5859375, 691.34765625), (968.6875, 729.31640625))
text2 i.e the incoming text is the winner
collision happend with box:691.34765625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRVE
((888.00390625, 794.1796875), (956.03125, 824.23828125))
text2 i.e the incoming text is the winner
collision happend with box:794.1796875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.421875, 882.7734375), (960.77734375, 912.83203125))
text2 i.e the incoming text is the winner
collision happend with box:882.7734375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((892.75, 968.203125), (963.94140625, 998.26171875))
text1 i.e the prev text is the winner
TRUE
((891.16796875, 1058.37890625), (965.5234375000001, 1088.4375))
collision happend with box:1058.37890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((899.078125, 1140.64453125), (979.7617187500001, 1170.703125))
text2 i.e the incoming text is the winner
collision happend with box:1140.64453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((899.078125, 1232.40234375), (954.44921875, 1265.625))
text2 i.e the incoming text is the winner
collision happend with box:1232.40234375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((952.8671875, 1237.1484375), (986.0898437499999, 1267.20703125))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 422, '2': 523, '3': 591, '4': 692, '5': 794, '6': 897, '7': 965, '8': 1067, '9': 1137, '10': 1238}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VMvseht.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 498.33984375), (942.12109375, 534.7265625))
text2 i.e the incoming text is the winner
collision happend with box:498.33984375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 580.60546875), (950.03125, 616.9921875))
text2 i.e the incoming text is the winner
collision happend with box:580.60546875 and text:F solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 688.18359375), (946.8671875000001, 719.82421875))
text2 i.e the incoming text is the winner
T
((915.2265624999999, 878.02734375), (945.2851562500001, 911.25))
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1083.69140625))
F
((905.734375, 1222.91015625), (934.2109374999999, 1259.296875))
the final dict without editing {'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9', '10']
['1', '2', '3', '5', '6', '7', '8', '9', '10', '1', '2', '3', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 585, '2': 517, '3': 585, '5': 787, '6': 890, '7': 957, '8': 1059, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': True, '4': 'UNASSIGNED', '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u20CbaY.jpg
OCR detection done with doctr
left top x of T/F: 5201.031249999999
bottom right x of T/F: 6485.75
left top x of SN: 140.62500000000014
bottom right x of SN: 582.5312499999999
first t/f detection
TRUE
((5247.156250000001, 1860.4375), (6105.124999999999, 2194.59375))
TRUE
((5346.499999999999, 2411.34375), (6132.218749999999, 2745.5))
TRUE
((5427.781249999999, 2944.1875), (6258.65625, 3278.34375))
collision happend with box:2944.1875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
ranyddimensional
((4018.9062500000005, 3025.46875), (5301.343750000001, 3440.90625))
text2 i.e the incoming text is the winner
is
((5165.875, 3693.78125), (5328.437500000001, 3856.34375))
FALSE
((5436.812500000001, 3531.21875), (6385.093750000001, 3946.65625))
Pre
((5066.53125, 4316.9375), (5382.625000000001, 4497.5625))
collision happend with box:4316.9375 and text:Pre solving on the basis of percent match boxes
the current box specification are
FALSE
((5518.093750000001, 4172.4375), (6466.375000000001, 4587.875))
text2 i.e the incoming text is the winner
distribution.
((4624.0, 4922.03125), (5454.874999999999, 5156.84375))
collision happend with box:4922.03125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALS
((5581.3125, 4777.53125), (6303.812500000001, 5111.6875))
text1 i.e the prev text is the winner
directly
((4976.21875, 5319.40625), (5481.968749999999, 5536.15625))
space.
((5120.71875, 5951.59375), (5536.156249999999, 6132.21875))
TRVE
((5662.59375, 5789.03125), (6421.21875, 6078.03125))
prediction
((4949.125, 6312.84375), (5608.40625, 6565.71875))
the
((5463.906250000001, 7116.625), (5698.718749999999, 7279.1875))
overfitting
((4804.625, 6926.96875), (5472.9375, 7170.8125))
details
((4858.8125, 7143.71875), (5301.343750000001, 7360.46875))
the final dict without editing {'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2610, '2': 3215, '3': 3612}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uhFFYJ4.jpg
OCR detection done with doctr
left top x of SN: 87.37500000000001
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((916.8085937499999, 498.33984375), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:498.33984375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (951.61328125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((896.2421874999999, 957.12890625), (948.44921875, 991.93359375))
T
((913.64453125, 686.6015625), (948.44921875, 721.40625))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 876.4453125), (945.2851562500001, 911.25))
text2 i.e the incoming text is the winner
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (935.7929687499999, 1259.296875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 583, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1059, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LAB7L4d.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6711.531249999999
left top x of SN: 483.8124999999999
bottom right x of SN: 898.625
first t/f detection
TRVE
((5563.249999999999, 1797.21875), (6159.312499999999, 2013.96875))
collision happend with box:1797.21875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
a
((6249.625000000001, 1860.4375), (6321.874999999999, 1932.6875))
text1 i.e the prev text is the winner
TRUE
((5509.062499999999, 2357.15625), (6087.062500000001, 2573.90625))
FALSE
((5680.656250000001, 3468.0), (6294.781249999999, 3684.75))
FALSE:
((5563.249999999999, 4145.34375), (6285.75, 4362.09375))
TRVE
((5608.40625, 4750.4375), (6213.499999999999, 4949.125))
False.
((5653.562500000001, 5220.0625), (6294.781249999999, 5427.78125))
TRUE
((5554.21875, 5870.3125), (6123.1875, 6069.0))
TRUE
((5635.5, 6385.09375), (6168.343750000001, 6592.8125))
TRUG
((5680.656250000001, 7125.65625), (6358.000000000001, 7369.5))
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2637, '3': 3034, '4': 3621, '5': 4217, '6': 4831, '7': 5238, '8': 5852, '9': 6267, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AhnOq2U.jpg
OCR detection done with doctr
left top x of T/F: 5490.03125
bottom right x of T/F: 6792.812499999999
left top x of SN: 303.1875000000001
bottom right x of SN: 717.9999999999999
first t/f detection
True
((5689.6875, 2212.65625), (6430.249999999999, 2564.875))
True
((5734.843750000001, 2899.03125), (6520.562500000001, 3197.0625))
Tu
((5509.062499999999, 3449.9375), (6439.281250000001, 3784.09375))
Falu
((5509.062499999999, 4018.90625), (6358.000000000001, 4398.21875))
Falu
((5581.3125, 4614.96875), (6394.125, 4994.28125))
TrRLl
((5481.968749999999, 5220.0625), (6303.812500000001, 5518.09375))
Falle
((5463.906250000001, 5743.875), (6358.000000000001, 6078.03125))
Tyuu
((5409.718750000001, 6240.59375), (6186.406249999999, 6547.65625))
Tuu
((5481.968749999999, 6683.125), (6249.625000000001, 7026.3125))
Trul
((5400.687499999999, 7378.53125), (6231.5625, 7721.71875))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2944, '3': 3359, '4': 3973, '5': 4587, '6': 5202, '7': 5599, '8': 6213, '9': 6619, '10': 7225}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : R2MhuVp.jpg
OCR detection done with doctr
left top x of T/F: 1243.2265625
bottom right x of T/F: 1731.068359375
left top x of SN: -2.0292968750000355
bottom right x of SN: 240.78710937500003
first t/f detection
Tyut
((1328.123046875, 567.763671875), (1448.923828125, 628.1640625))
collision happend with box:567.763671875 and text:Tyut solving on the basis of percent match boxes
the current box specification are
Trur
((1337.787109375, 698.228515625), (1458.5878906249998, 758.62890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:698.228515625 and text:Trur solving on the basis of percent match boxes
the current box specification are
Faske
((1357.115234375, 823.861328125), (1489.99609375, 891.509765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:823.861328125 and text:Faske solving on the basis of percent match boxes
the current box specification are
Fasr
((1376.443359375, 976.0703125), (1502.076171875, 1036.470703125))
true and false collision so given priority to text2 which is the incoming text
Pre-
((1216.986328125, 1140.359375), (1289.466796875, 1181.431640625))
collision happend with box:1140.359375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
A
((1311.2109375, 1166.935546875), (1325.70703125, 1183.84765625))
text2 i.e the incoming text is the winner
collision happend with box:1166.935546875 and text:A solving on the basis of percent match boxes
the current box specification are
Felu
((1361.9472656250002, 1113.783203125), (1489.99609375, 1183.84765625))
text2 i.e the incoming text is the winner
d-dimensional
((1050.28125, 831.109375), (1270.138671875, 896.341796875))
collision happend with box:831.109375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1245.978515625, 990.56640625), (1279.802734375, 1026.806640625))
text1 i.e the prev text is the winner
Falae
((1410.267578125, 1263.576171875), (1538.3164062500002, 1319.14453125))
collision happend with box:1263.576171875 and text:Falae solving on the basis of percent match boxes
the current box specification are
False
((1427.1796875, 1384.376953125), (1560.060546875, 1452.025390625))
text2 i.e the incoming text is the winner
collision happend with box:1384.376953125 and text:False solving on the basis of percent match boxes
the current box specification are
Tyut
((1412.68359375, 1514.841796875), (1540.732421875, 1570.41015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1514.841796875 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1453.755859375, 1642.890625), (1562.4765625, 1700.875))
text2 i.e the incoming text is the winner
distribution.
((1110.6816406249998, 1290.15234375), (1306.37890625, 1348.13671875))
collision happend with box:1290.15234375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1192.826171875, 1391.625), (1318.458984375, 1447.193359375))
text1 i.e the prev text is the winner
space.
((1226.650390625, 1553.498046875), (1325.70703125, 1599.40234375))
collision happend with box:1553.498046875 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((1183.162109375, 1650.138671875), (1342.6191406249998, 1705.70703125))
text2 i.e the incoming text is the winner
collision happend with box:1650.138671875 and text:prediction solving on the basis of percent match boxes
the current box specification are
overfitting
((1142.08984375, 1807.1796875), (1306.37890625, 1862.748046875))
text2 i.e the incoming text is the winner
collision happend with box:1807.1796875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
Trt
((1436.84375, 1816.84375), (1557.64453125, 1877.244140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1816.84375 and text:Trt solving on the basis of percent match boxes
the current box specification are
details
((1156.5859375, 1862.748046875), (1262.890625, 1911.068359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1862.748046875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1306.37890625, 1853.083984375), (1364.36328125, 1896.572265625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 681, '2': 833, '3': 934, '4': 1089, '5': 1239, '6': 1394, '7': 1495, '8': 1652, '9': 1756, '10': 1908}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yyY2D8i.jpg
rotation started
['of', '8', 'o0', '1', '8', '', '', 'a', 'N', '-', '2', 'I', 'I', 'E', 'I', '3', 'E', 'E', 'o>', 'I', 'F', '&', 'I', '1', 'e', ':', '8', 'F', 'I', 'E', '8.', 'H', ':', 'e', 'I', '€', 'E', 'I', 'I', 'I', 'I', '9', 'I', 'I', 'E', 'E', 'I', '8', 'E', 'I', 'I', 'E', 'I', '(', 'I', 'E', '4', 'I', '8', 'E', '4', '%', '2', 'I', 'I', 'E', 'I', 'g', 'I', 'I', '2', '8', 'a', 'F', 'f', 'I', 'I', 'I', 'I', ':', 'e', 'I', 'E', 'i', '9', 'I', 'I', 'e', 'LE', ':', '8', 'I', 'i', '1', 'I', '£', '8', '#', 'I', 'E', '2', 'I', '8', 'I', 'E', 'I', 'g', '!', '3', '2', 'I', '1', '&', 'I', 'F', 'I', '2', 'f', 'I', '&', 'E', 'E', '&', 'f,', '€', 'E', 'I', 'E', 'F', 's', 'g', 't', '€', 'a', 'A', 'a', 'E', 'i', 'I', 'E', '-', 'E', 'I', 'I', 'E', '8', 'E', 'E', 'I', 'I', '!', 'I', ':', 'I', 'E', 'E', 'I', 'I', 'a', '2', 'iE', 'I', 'F', 'E', ':', 'I', 'F', 'I', 'I', 'I', 'i', 'DP', '7', 'i', 'LE', 'I', 'I', '1', 'I', 'I', '7', 'I', 'LE', 'I', '-', '1', '-', 'T', 'T', 'm', 'A', 'I']
rotation started
['etp', 'tioosun', 'mou', '02', 'IPM', 'ozesoua8', 'jou', 'op', 'pey1', 'erep', 'Saturen', 'aya', 'ur', 'suejap', '10', 'astou', 'oyieds', 'ainadeo', '07', 'ujeor', 'Aeur', 'lapou', 'aya', 'se', "'soseals", '-ul', 'Sumyaano', 'Jo', 'YsEA', 'ayl', "'WAS", 'ui', 'magaturered', 'Dayi', 'jo', 'anTEA', 'y8ry', 'e', 'iim', 'OI', 'I', 'NAS', '1801-SA-0u0', 'uega', 'JaMoTs', 'SI', 'WAS', 'auo-Sa-suo', 'Suisn', 'L', '-', 'uouorpaud', 't', 'Suryeul', "'sossepjo", 'nqumu', '08181', 't', '47LM', 'sulojgoid', 'ssepupnu', '1O1', '6', 'aoeds', 'Teutsuo', 'oyr', 'ur', 'reaull-uou', 'aq', 'aes', 'WAS', 'de', 'Jo', 'Arepunoq', 'uoistop', 'o41', '8', 'Apsortp', 'SI', 'DOJL', 'UOISDDOG', 'oy1', 'ur', 'uomatpaid', 'e', 'Suryeu', '10J', 'palmbaa', 'AUTL', 'BUL', 'L', 'uolnquisip', 'UEISSIES', 'e', 'SAEME', 'SI', 'sttonnquisip', 'TIUSSIES', 'OMI', 'joamixma', 'V', '9', '-DId', '130n10q', '1ord', 'e', 'SLOAINS', '(Dou)', 'Dusiinnoerey)', 'Bugerado', 'JOAIOOJY', '(OyL', '9', 'SI', 'suaosop', 'qUorpers', 'OIIYM', "'suu8tom", 'bya', 'agepdn', '01', 'posni', 'S!', 'uolesodordypeg', 't', 'Teuroisuouttp-p', 'Kue', 'JOj', 'ouupou', 'somestp', 'PIEA', 't', 'SI', 'uu', ')jumpursuisa)', '-', 'I', 'E', 'sopou', 'j0', 'naqumu', 'ou1', '01', '(euoliiodoid', 'Te3oy', 'pue', 'tOISDD', 'Ylomgad', '(eJou', 'ou1', 'ur', 'stusipels', 'aun', 'anduos', '01', 'posn', 'h', 'pue', 'I', 'SJ01001', 'loyissep', '1e0u1-tou', 'e', 'St', 'NNY', '2', 'nuou.fordap', 'L', 'JOJ', 'INAS', 'tellt', '108111', 'qpnui', 'SI', 'NNX', 'JOJ', 'quotodinbal', '38e1o1s', 'oyi', 'SijeDidAL', '-', '3STV3/anuL', 'quautozess', 'NS', ':0101', 'aaqutnu', '1104', 'shox', 'a1lam', 'sununpttuy', 'IoP', 'ptu', 'AiMIPL', 'pdus', 'tASIVA', 'J0', 'aNgL', 'JIUM', '(sad', 'ot)', '6']
rotation started
['lA', '-', 'I', '3', 'E', 'a', 'I', '1', 'iE', 'E', 's', 'I', 'is', 'E', 'I', 'I', 'i2', 'I', 'I', ':', 'I', ':', 'E', 'of', '-', '4', 'be', 'A', 'd', 'I', 't', 'I', 'd', 'i', 'à', '€', 'I', '2', 'à', 'I', 'I', 'e', 'I', 'I', 'I', '!', 'n', 'I', 'E', 'I', 'I', '7', '€', 'e', 'I', '.s', 'de', 'e', '9', 'I', 'I', '1', 'e', 'I', '1', 'E', '3', 'I', 'I', '2', '', 'F', 'I', 'I', 'I', '-', 'a', 'I', 'à', 'is', 'de', 'I', 'e', 'I', 'I', 'E', 'i', 'de', '8', 'à', '2', 'i', '1', '€', 'I', 'e', '', 'I', 'H', 'E', ':', '41', ':', '9', 'd', 'I', 'I', 'a', '1', 'I', 'I', 'a', '1', 'E', 'E', 'E', 'I', 'I', '', 'I', '2', '8', '1', 'E', 'E', 'iE', '[', '1', '&', 'I', 'e', 'I', 'E', 'à', 'I', 'I', 'I', 'E', '!', '1', 'E', ':', 'I', 'i', 'E', '2', ':', 'e', 'i', 'i', 'a', '1', 'E', 'à', 'I', 'of', 'e', 'a', 'I', 'of', '€', '!', '3', '1', 'I', ':', '!', '€', 'à', '2', 'e', 'ci', 'I', 'I', ':', 'I', '1', 'I', '2', '2', 'I', 'E', 'I', 'I', '7', '1', 'ai', 'm', '4', '10', '0o', 'a', 'of']
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capitid', 'letters', 'and', 'dlear', 'hanlwriting.', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FALSE', 'T', 'T', 'F', 'F', '1', 'Typically.', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM-for', 'deployment.', '2', 'KNNis', 'a', 'non-linear', 'classifier.', '1-', 'cosineSimalarify(r.', 'y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimerisional', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'vectors', 'I', 'and', 'y.', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neura)', 'petwork.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'isalways.a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'largé', 'number', 'ofclasses,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'thec', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the.', 'training', 'data', 'that', 'do', 'not', 'genéralize', 'Well', 'to', 'new,', 'linseen', 'data:', 'F', 'F', 'F', 'T', 'T', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'tising', 'one-vs-One', 'SVM', 'is.slower', 'than', 'one-Vs-rest', 'SVM.', 'T']
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 417.615234375), (948.0390625, 449.373046875))
collision happend with box:417.615234375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 509.712890625), (944.86328125, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:509.712890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((919.45703125, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 676.44140625), (954.390625, 711.375))
text2 i.e the incoming text is the winner
the.
((838.474609375, 1263.9609375), (878.171875, 1290.955078125))
F
((925.80859375, 790.76953125), (954.390625, 827.291015625))
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 914.625))
text2 i.e the incoming text is the winner
collision happend with box:879.69140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 967.025390625), (952.802734375, 1003.546875))
text2 i.e the incoming text is the winner
collision happend with box:967.025390625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((925.80859375, 1059.123046875), (948.0390625, 1084.529296875))
text2 i.e the incoming text is the winner
collision happend with box:1059.123046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((916.28125, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
collision happend with box:1132.166015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((924.220703125, 1240.142578125), (954.390625, 1270.3125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['3', '4']
the assigned keys are ['1', '2', '5', '6', '7', '8', '9', '10']
['1', '2', '5', '6', '7', '8', '9', '10', '1', '2', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 423, '2': 522, '5': 792, '6': 893, '7': 962, '8': 1063, '9': 1132, '10': 1230}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LUYBpyQ.jpg
OCR detection done with doctr
left top x of T/F: 5318.437500000001
bottom right x of T/F: 6467.687499999999
left top x of SN: 817.9687500000001
bottom right x of SN: 1223.75
first t/f detection
TRUE
((5436.812500000001, 1860.4375), (6105.124999999999, 2113.3125))
TRUE
((5445.84375, 2375.21875), (6114.156250000001, 2619.0625))
TRU
((5463.906250000001, 2772.59375), (5870.312500000001, 3007.40625))
TRUE
((5472.9375, 3395.75), (6078.031249999999, 3612.5))
TRUE
((5445.84375, 3964.71875), (6105.124999999999, 4208.5625))
FALSE
((5445.84375, 4479.5), (6078.031249999999, 4696.25))
FALSE
((5509.062499999999, 4922.03125), (6141.250000000001, 5138.78125))
TRVE
((5491.000000000001, 5391.65625), (6141.250000000001, 5653.5625))
TRVE
((5536.156249999999, 5915.46875), (6159.312499999999, 6168.34375))
TRVE
((5481.968749999999, 6511.53125), (6177.375, 6755.375))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2601, '3': 2962, '4': 3513, '5': 4055, '6': 4614, '7': 4985, '8': 5554, '9': 5924, '10': 6511}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jioK374.jpg
OCR detection done with doctr
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6512.84375
left top x of SN: 393.5
bottom right x of SN: 799.2812499999999
first t/f detection
FALSE.
((5481.968749999999, 1625.625), (6059.968750000001, 1824.3125))
TRUE
((5527.125, 2257.8125), (5969.656249999999, 2465.53125))
TRVE
((5536.156249999999, 2727.4375), (5933.53125, 2953.21875))
TRUE
((5554.21875, 3278.34375), (6041.90625, 3486.0625))
FALSE
((5527.125, 3757.0), (5978.687500000001, 3964.71875))
then
((5030.40625, 4262.75), (5346.499999999999, 4434.34375))
or
((5183.9375, 4488.53125), (5346.499999999999, 4605.9375))
collision happend with box:4488.53125 and text:or solving on the basis of percent match boxes
the current box specification are
FALSE
((5644.531249999999, 4434.34375), (6105.124999999999, 4614.96875))
text2 i.e the incoming text is the winner
the
((5138.78125, 5048.46875), (5364.5625, 5192.96875))
collision happend with box:5048.46875 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5581.3125, 5120.71875), (6059.968750000001, 5301.34375))
text2 i.e the incoming text is the winner
TRUE
((5599.375000000001, 5653.5625), (6114.156250000001, 5834.1875))
the
((5165.875, 6041.90625), (5391.65625, 6168.34375))
collision happend with box:6041.90625 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5680.656250000001, 6177.375), (6249.625000000001, 6430.25))
text2 i.e the incoming text is the winner
TRUE.
((5617.437499999999, 6836.65625), (6087.062500000001, 7008.25))
the final dict without editing {'1': False, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1806, '2': 2357, '3': 2908, '4': 3477, '5': 3847, '6': 4416, '7': 5183, '8': 5761, '9': 6159, '10': 6917}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 40B8D9P.jpg
OCR detection done with doctr
left top x of SN: 1007.6250000000002
bottom right x of SN: 1422.4374999999998
left top x of T/F: 5616.468750000001
bottom right x of T/F: 6874.093749999999
first t/f detection
handwriting
((4876.875, 1038.59375), (5644.531249999999, 1318.5625))
falsc
((5536.156249999999, 2718.40625), (6096.09375, 3034.5))
Halse
((5491.000000000001, 3197.0625), (5969.656249999999, 3458.96875))
tue
((5382.625000000001, 3675.71875), (5843.218750000001, 3910.53125))
tour
((5337.46875, 4244.6875), (5906.4375, 4551.75))
False
((5265.218749999999, 4759.46875), (5734.843750000001, 5021.375))
False
((5382.625000000001, 6764.40625), (5789.031250000001, 7008.25))
the final dict without editing {'1': 'NULL', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2104, '2': 2664}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cWwqME1.jpg
OCR detection done with doctr
left top x of T/F: 5544.21875
bottom right x of T/F: 6756.6875
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
TRI
((5518.093750000001, 2113.3125), (6069.0, 2375.21875))
TRUE
((5581.3125, 2664.21875), (6312.84375, 2926.125))
TRUE
((5590.343749999999, 3188.03125), (6394.125, 3468.0))
FALSE
((5536.156249999999, 3784.09375), (6457.343749999999, 4118.25))
FALS
((5572.281250000001, 4479.5), (6249.625000000001, 4741.40625))
FALS
((5554.21875, 5021.375), (6231.5625, 5283.28125))
FALSE
((5536.156249999999, 5481.96875), (6439.281250000001, 5734.84375))
TRVE
((5527.125, 6032.875), (6267.687499999999, 6249.625))
TRUE
((5545.187500000001, 6484.4375), (6367.03125, 6728.28125))
TRUE
((5608.40625, 7161.78125), (6376.062499999999, 7396.59375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2348, '2': 2962, '3': 3368, '4': 3982, '5': 4587, '6': 5202, '7': 5608, '9': 6637, '8': 6222, '10': 7261}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tRSUcnu.jpg
rotation started
['"egep', 'uoosun', "'MoU", '01', 'TTOM', 'azie.ioues', 'qou', 'op', 'ge47', 'egep', 'Sururen', 'TAYL', 'ouA', 'uI', 'sTegop', 'JIO', 'ostOu', 'oypods', 'omades', '01', 'ULIBOT', 'Keur', 'lopou', 'au7', 'Se', "'saseaI", '-UT', 'SumayIoAo', 'Jo', 'YSLI', 'ouA', "'IAS", 'uI', 'rogourered', 'D', 'o44', 'Jo', 'OnTBA', '4814', 'e', 'YAIM', 'OT', 'WAS', '9SOI-SA-OUO', 'ueya', 'JOMOIS', 'SI', 'IAS', 'auo-SA-auo', 'Sursn', 'IOL', '3574', '3574', '357U1', 'uororpard', 'B', 'Suryeur', "'sossepp", 'Jo', 'noqunu', '08.1el', 'B', 'YAIM', 'suarqoid', 'ssepprmur', 'JOI', '6', 'ooeds', 'TBULSIIO', 'eu4', 'UI', 'JeQUIT-uou', '0q', 'ueo', 'WAS', 'ue', 'Jo', 'Krepunoq', 'uoisiDap', 'BUL', '8', 'Stoamp', 'SI', 'OOIL', 'UOISIDOG', 'ou7', 'UI', 'uonorpard', 'B', 'Surgeur', 'JOJ', 'pammbar', 'OWIL', 'OUL', 'L', '"uornquasip', 'uerssneD', 'e', 'sienre', 'SI', 'suornquasip', 'uerssneD', 'OM7', 'Jo', 'amgXIu', 'V', '9', "'sopou", 'Jo', 'pequnu', 'au7', '01', 'Teuoriodoud', 'TeDOY', 'pue', 'UOISIO', '3NAL', '-aId', 'uoamgeq', 'nord', 'B', 'SI', 'DAINO', '(DO4)', 'orstagpereud', 'Surerado', 'IOAIODOY', 'OUL', 'S', '357WE', 'SI', 'quaosap', 'querpe1s', 'OTIYM', "'sau810M", 'ou9', 'agepdn', '01', 'pasn', 'SI', 'tone@odoxdypeg', '1', 'YIOMIOU', '[emeu', 'ou4', 'UI', 'squerpe.s', 'aut', 'agnduoo', '01', 'pasn', 'f', 'pue', 'I', 'SIOQ0OA', 'Kue', 'JOJ', 'ouIour', 'oouensip', 'PITBA', 'B', 'SI', '(A-z)Aguopuagouzsoy', '-', 'I', 'S', '3ANL', 'Teuorsuouurp-p', 'royisseo', 'meourI-uou', 'B', 'SI', 'NNY', '3', 'JOSL', '351U3', 'quaurordap', 'JOJ', 'quotombal', 'a8e.oqs', 'aui', 'STeordAL', 'I', 'JOJ', 'WAS', 'ueya', '108101', 'yonur', 'SI', 'NNX', 'quauageas', 'NS', 'asTVa/AnaL', ':0.OU', 'Joqunu', 'ITO.I', 'mor', 'OILIAL', 'JIO', 'ANUL', 'O1LIM', '(sad', 'O1)', '6', 'S109101', 'pearduo', 'ul', 'ASTVI', 'Burguumpuer', 'reop', 'pure']
rotation started
['I', '-', '-', 'E', '2', 'E', ':', '-', '-', 'E', 'E', 'a', 'E', ':', 'I', 'i', 'is', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'E', 'e', 'E', 'I', 'I', 'I', 'I', 'I', 'is', '8a', 'I', 'I', 'à', 'a', 'E', 'e', '', 'I', '3', 'is', 'I', 'I', 'E', 'à', 'E', '8', '-', 'a', '1', 'of', '1', 'I', 'I', 'iE', 'I', 'E', 'I', 'I', 'I', '8', 'is', 'e', 'I', 'E', '2', 'a', 'I', 'I', '2', 'e', 'I', 'E', '8', 'ia', 'a', 'I', '-', 'a', 'i', 'E', 'a', 'I', 'of', 'I', '8', 'E', 'C', 'E', 'I', 'I', 'I', 'I', 'of', '€', 'is', 'I', 'I', 'a', 'I', 'e', '-', 'E', 'is', 'e', 'I', 'E', 'of', 'de', 's', 'I', 'e', 'I', 'I', '1', 'a', '8', 'à', 'E', 'e', '', '4', 'I', 'E', ':', '8', '$', '', 'a', 'I', '8', 'I', 'à', 'I', 'I', 'I', 'I', 'I', '1', 'I', 'E', 'E', 'e', 'I', '.', '', 'CI', 'S2', '4', '10', '', '', 'I', 'I', 'I', 'of', '5', ':', 'i', 'I', 'I', ':', 'e', 'I', '3', 'E', 'I', '1', 'E', '-', 'o6', 'E', 'à', 'E', 'e', '', 'I', 'I', '-', '8a', 'is', 'I', '2', 'E', ':', 'I', 'e', 'I', '1', 'I', 'E', 'E', '1', 'of', 'I', 'I', 'I', 'à', 'E', 'I', 'E', 'I', 'I', '7', '1', '0O', '', '19']
rotation started
['and', 'clear', 'handwriting.', 'in', 'capital', 'letters', 'Write', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'FALSE', 'TRUE', 'SN', 'Statement', 'larger', 'than', 'SVM', 'for', 'the', 'requirement', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'storage', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1', '-', 'cosineSimalaritylz.u)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRVE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre', 'TRUE', 'FALSE', 'FALSE', 'FALSE', 'TRUE', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'TRVE']
rotation done for:  tRSUcnu.jpg
Number of times rotation done: 3
OCR detection done with doctr
left top x of T/F: 5372.625000000001
bottom right x of T/F: 6666.375000000001
left top x of SN: 619.2812499999999
bottom right x of SN: 1034.09375
first t/f detection
FALSE
((5536.156249999999, 2167.5), (6041.90625, 2339.09375))
TRUE
((5491.000000000001, 2727.4375), (5915.468749999999, 2908.0625))
TRVE
((5491.000000000001, 3160.9375), (5987.71875, 3377.6875))
FALSE
((5463.906250000001, 3811.1875), (5996.749999999999, 3982.78125))
TRUE
((5509.062499999999, 4398.21875), (5978.687500000001, 4605.9375))
FALSE
((5536.156249999999, 4949.125), (6041.90625, 5120.71875))
FALSE
((5581.3125, 5409.71875), (6159.312499999999, 5608.40625))
FALSE
((5635.5, 5924.5), (6105.124999999999, 6105.125))
TRUE
((5581.3125, 6412.1875), (6132.218749999999, 6619.90625))
TRVE
((5599.375000000001, 7062.4375), (6105.124999999999, 7279.1875))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2375, '2': 2935, '3': 3323, '4': 3910, '5': 4470, '6': 5048, '7': 5436, '8': 6014, '9': 6403, '10': 6999}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Gn7hJNd.jpg
rotation started
[':', 'ON', '€', '€', 'a', ':', '€', '-', ':', '€', '€', '-', ':', ':', 'a', 'E', 'a', '-', 'i', 'iis', 'E', 'a', 'I', 'is', '8', 'I', '6', 'I', 'df', 'à', '8', 'I', 'a', '-', 'I', 'à', 'E', 'e', 'I', 'E', 'is', 'I', 'I', '2', '1', 'I', 'E', 'of', '6', ':', '1', ':', 'I', 'à', 'E', 'a', '1', '-', 'e', 'I', 'I', 'i', 'e', 'of', 'iE', 'I', 'I', ':', 'I', 'E', 'à', 'e', 'I', 'iE', '9', 'a', 'e', '2', 'E', 'd', 'à', 'I', '2', 'I', 'i', 'iE', '*', 'a', 'I', '-', ':', ':', 'o', 'of', '', 'I', 'I', '8', 'd', 'E', '', '.', 'I', 'I', '1', 'I', 'of', '€', 'is', 'I', 'I', '1', 'a', 'i', 'de', 'à', ':', 'S', 'is', 'I', 'E', 'I', 'a', 'e', 'e', 'E', 'of', 'de', 'S', 'I', 'I', 'E', 'I', 'I', '1', '3', 'e', 'E', 'I', 'of', 'I', 'o', 'à', 'e', 'a', '', '8', 'I', '3', 'is', '8', 'I', 'E', '-', '4', '$', 'I', ':', 'à', 'a', 'I', 'I', 'I', '1', 'I', 'I', 'I', '2', 'I', '11', 'I', 'I', 'I', 'a', '', '-', 'I', '8', 'I', 'a', 'e', 'I', 'I', ':', 'E', '€', '1', 'iE', 'a', 'S', 'E', 'à', 'E', 'e', 'o', 'a', 'y', 'is', '', '3', 'I', '-', 'I', '8', '9', 'is', 'I', 'i', '-', '', 'is', 'I', 'I', 'I', 'I', 'E', 'à', '<', 'E', 'E', 'b', 'i', 'E', 'I', 'I', '7', '11', '4', '1D', '6', 'A', '0', '', '00']
rotation started
['and', 'clear', 'handwriting.', 'letters', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FALSE', 'TRUE', 'larger', 'than', 'SVM', 'for', 'for', 'KNN', 'is', 'much', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', 'TRUE', '3', '1-', 'cosineSimalarityz.y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALS', 'E', 'vectors', 'I', 'and', 'y.', '(gradont', 'Dee', 'Clochf', '%p)', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'PALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', 'cision', 'and', 'Recall.', 'bre', 'Pegitve', 'Rake', 'VS', 'Falsc', 'Ngpdu', 'Rak]', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'to', 'the', 'number', 'FALSE', 'proportional', 'of', 'nodes.', 'Cheght)', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'PALSE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'TRUE', 'n', 'e', 'ao6e', '*agege', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE']
rotation done for:  Gn7hJNd.jpg
Number of times rotation done: 2
OCR detection done with doctr
left top x of SN: 808.9374999999999
bottom right x of SN: 1205.6874999999998
left top x of T/F: 5634.531249999999
bottom right x of T/F: 6874.093749999999
first t/f detection
TRUE
((5599.375000000001, 2095.25), (6267.687499999999, 2348.125))
TRUE
((5662.59375, 2700.34375), (6267.687499999999, 2908.0625))
FALS
((5626.468750000001, 3224.15625), (6123.1875, 3440.90625))
PALSE
((5644.531249999999, 3820.21875), (6321.874999999999, 4073.09375))
TRUE
((5590.343749999999, 4434.34375), (6403.156249999999, 4678.1875))
FALSE
((5590.343749999999, 4958.15625), (6367.03125, 5202.0))
FALSE
((5581.3125, 5445.84375), (6348.968749999999, 5680.65625))
PALSE
((5653.562500000001, 5969.65625), (6258.65625, 6177.375))
TRUE
((5581.3125, 6520.5625), (6376.062499999999, 6728.28125))
TRUE
((5590.343749999999, 7170.8125), (6421.21875, 7459.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2899, '3': 3278, '4': 3847, '5': 4407, '6': 5003, '7': 5373, '8': 5960, '9': 6348, '10': 6945}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': False, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WJnOlzC.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 663.8124999999999
left top x of T/F: 4866.875
bottom right x of T/F: 6124.500000000001
first t/f detection
a
((5807.093749999999, 352.21875), (5861.281249999999, 433.5))
Halse
((4949.125, 2230.71875), (5500.03125, 2501.65625))
Jalse
((5030.40625, 2700.34375), (5518.093750000001, 2962.25))
d-dimensional
((4145.34375, 3215.125), (4976.21875, 3468.0))
collision happend with box:3215.125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Htue
((5057.5, 3179.0), (5536.156249999999, 3440.90625))
text1 i.e the prev text is the winner
descent
((4443.375, 3811.1875), (4894.9375, 3991.8125))
collision happend with box:3811.1875 and text:descent solving on the basis of percent match boxes
the current box specification are
is
((4903.96875, 3793.125), (5030.40625, 3928.59375))
text1 i.e the prev text is the winner
collision happend with box:3811.1875 and text:descent solving on the basis of percent match boxes
the current box specification are
toue
((5192.96875, 3729.90625), (5779.999999999999, 4027.9375))
text2 i.e the incoming text is the winner
False
((5274.250000000001, 4271.78125), (5734.843750000001, 4497.5625))
Taue
((5265.218749999999, 4786.5625), (5743.875, 5003.3125))
Truc
((5337.46875, 5238.125), (5852.25, 5500.03125))
Frue
((5373.593749999999, 5752.90625), (5879.34375, 5933.53125))
Pre
((4822.6875, 4353.0625), (5093.625, 4506.59375))
distribution.
((4434.34375, 4894.9375), (5183.9375, 5138.78125))
directly
((4750.4375, 5274.25), (5220.062500000001, 5491.0))
original
((4443.375, 5879.34375), (4913.0, 6087.0625))
collision happend with box:5879.34375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((4894.9375, 5870.3125), (5283.28125, 6041.90625))
text1 i.e the prev text is the winner
prediction
((4750.4375, 6222.53125), (5346.499999999999, 6439.28125))
collision happend with box:6222.53125 and text:prediction solving on the basis of percent match boxes
the current box specification are
TEBA
((5491.000000000001, 6240.59375), (5960.625, 6457.34375))
text2 i.e the incoming text is the winner
overfitting
((4605.9375, 6782.46875), (5238.124999999999, 7026.3125))
details
((4669.15625, 6999.21875), (5066.53125, 7179.84375))
collision happend with box:6999.21875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5220.062500000001, 6963.09375), (5436.812500000001, 7116.625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2772, '2': 3341, '3': 3720}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : S9amPJh.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6404.46875
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5238.124999999999, 2176.53125), (6240.593749999999, 2510.6875))
FALSE
((5310.375, 3314.46875), (6303.812500000001, 3558.3125))
TRUE
((5229.09375, 3901.5), (6159.312499999999, 4154.375))
FAISE
((5202.0, 4434.34375), (6213.499999999999, 4714.3125))
TRUE
((5174.90625, 4994.28125), (6105.124999999999, 5238.125))
TRUE
((5156.84375, 5409.71875), (6041.90625, 5689.6875))
TRUE
((5183.9375, 5933.53125), (6023.843749999999, 6186.40625))
TRUE
((5202.0, 6412.1875), (6069.0, 6656.03125))
TRUE
((5238.124999999999, 6972.125), (6105.124999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3007, '3': 3377, '4': 3937, '5': 4488, '6': 5048, '7': 5418, '8': 5969, '9': 6348, '10': 6899}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'NULL', '4': True, '5': False, '6': True, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1zHXQVK.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text1 i.e the prev text is the winner
FAL
((827.76171875, 492.8515625), (872.27734375, 526.23828125))
collision happend with box:492.8515625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:492.8515625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (873.8671875, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((873.8671875, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((815.04296875, 767.89453125), (867.5078125000001, 798.1015625))
text2 i.e the incoming text is the winner
collision happend with box:767.89453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:767.89453125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (902.484375, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((816.6328125, 926.87890625), (894.5351562500001, 955.49609375))
text1 i.e the prev text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (897.7148437500001, 1028.62890625))
text1 i.e the prev text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 996, '1': 324, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 834, '8': 931, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 36XFKDU.jpg
OCR detection done with doctr
left top x of SN: 101.21093750000003
bottom right x of SN: 323.10546875
left top x of T/F: 956.2109375
bottom right x of T/F: 1338.623046875
first t/f detection
True
((972.6562500000001, 430.224609375), (1054.833984375, 472.119140625))
collision happend with box:430.224609375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 509.1796875), (1070.947265625, 549.462890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:False solving on the basis of percent match boxes
the current box specification are
false
((971.044921875, 586.5234375), (1075.78125, 633.251953125))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:false solving on the basis of percent match boxes
the current box specification are
True
((964.599609375, 689.6484375), (1054.833984375, 729.931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:689.6484375 and text:True solving on the basis of percent match boxes
the current box specification are
Ea
((956.54296875, 787.939453125), (1008.10546875, 834.66796875))
text1 i.e the prev text is the winner
False
((971.044921875, 873.33984375), (1069.3359375, 913.623046875))
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
Trve
((1014.5507812499999, 792.7734375), (1096.728515625, 839.501953125))
text1 i.e the prev text is the winner
collision happend with box:873.33984375 and text:False solving on the basis of percent match boxes
the current box specification are
Trve
((972.6562500000001, 965.185546875), (1058.056640625, 1005.46875))
text1 i.e the prev text is the winner
False
((971.044921875, 1050.5859375), (1064.501953125, 1090.869140625))
collision happend with box:1050.5859375 and text:False solving on the basis of percent match boxes
the current box specification are
False
((974.267578125, 1137.59765625), (1058.056640625, 1176.26953125))
text2 i.e the incoming text is the winner
collision happend with box:1137.59765625 and text:False solving on the basis of percent match boxes
the current box specification are
False
((990.3808593750001, 1239.111328125), (1096.728515625, 1284.228515625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'2': 509, '3': 578, '1': 580, '4': 683, '5': 784, '7': 957, '8': 1060, '9': 1131, '10': 1232}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : OqVkVCv.jpg
OCR detection done with doctr
left top x of T/F: 5155.875
bottom right x of T/F: 6377.375
left top x of SN: 276.0937500000001
bottom right x of SN: 690.9062499999999
first t/f detection
True
((5183.9375, 2321.03125), (5581.3125, 2501.65625))
HUL
((5238.124999999999, 2862.90625), (5689.6875, 3034.5))
False
((5256.1875, 3305.4375), (5725.812499999999, 3513.15625))
is
((5003.3125, 3919.5625), (5156.84375, 4082.125))
collision happend with box:3919.5625 and text:is solving on the basis of percent match boxes
the current box specification are
Tru
((5220.062500000001, 3937.625), (5635.5, 4136.3125))
text2 i.e the incoming text is the winner
Pre-
((4867.84375, 4524.65625), (5165.875, 4696.25))
collision happend with box:4524.65625 and text:Pre- solving on the basis of percent match boxes
the current box specification are
False
((5364.5625, 4551.75), (5770.96875, 4723.34375))
text2 i.e the incoming text is the winner
distribution.
((4416.28125, 5129.75), (5174.90625, 5301.34375))
collision happend with box:5129.75 and text:distribution. solving on the basis of percent match boxes
the current box specification are
False
((5337.46875, 5084.59375), (5789.031250000001, 5265.21875))
text1 i.e the prev text is the winner
directly
((4714.3125, 5536.15625), (5192.96875, 5707.75))
collision happend with box:5536.15625 and text:directly solving on the basis of percent match boxes
the current box specification are
False
((5391.65625, 5545.1875), (5798.0625, 5725.8125))
true and false collision so given priority to text2 which is the incoming text
Trle
((5391.65625, 6041.90625), (5752.906249999999, 6222.53125))
collision happend with box:6041.90625 and text:Trle solving on the basis of percent match boxes
the current box specification are
space.
((4822.6875, 6168.34375), (5211.031249999999, 6330.90625))
text1 i.e the prev text is the winner
prediction
((4624.0, 6565.71875), (5247.156250000001, 6728.28125))
collision happend with box:6565.71875 and text:prediction solving on the basis of percent match boxes
the current box specification are
False
((5337.46875, 6619.90625), (5798.0625, 6827.625))
text2 i.e the incoming text is the winner
TYul
((5463.906250000001, 7297.25), (5915.468749999999, 7468.84375))
collision happend with box:7297.25 and text:TYul solving on the basis of percent match boxes
the current box specification are
the
((5057.5, 7369.5), (5283.28125, 7523.03125))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2465, '2': 3070, '3': 3468, '4': 4064, '5': 4669, '6': 5274, '7': 5671, '8': 6285, '9': 6701, '10': 7297}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : roxXaVD.jpg
OCR detection done with doctr
left top x of T/F: 5399.718750000001
bottom right x of T/F: 6576.062499999999
left top x of SN: 203.84375
bottom right x of SN: 618.6562500000001
first t/f detection
PALSE
((5527.125, 1887.53125), (6050.937499999999, 2059.125))
FALSE
((5509.062499999999, 2474.5625), (6159.312499999999, 2691.3125))
TRVE
((5581.3125, 3115.78125), (6041.90625, 3278.34375))
TEUE
((5653.562500000001, 3693.78125), (6078.031249999999, 3874.40625))
TAUE
((5680.656250000001, 4154.375), (6114.156250000001, 4335.0))
TEUE
((5798.0625, 4804.625), (6285.75, 5030.40625))
<Oor
((4867.84375, 4985.25), (5400.687499999999, 5147.8125))
the
((5183.9375, 5581.3125), (5427.781249999999, 5725.8125))
collision happend with box:5581.3125 and text:the solving on the basis of percent match boxes
the current box specification are
TEUE
((5689.6875, 5527.125), (6159.312499999999, 5734.84375))
text2 i.e the incoming text is the winner
FALSE
((5653.562500000001, 6105.125), (6249.625000000001, 6276.71875))
the
((5229.09375, 6574.75), (5481.968749999999, 6728.28125))
ofX
((5183.9375, 6746.34375), (5481.968749999999, 6945.03125))
collision happend with box:6746.34375 and text:ofX solving on the basis of percent match boxes
the current box specification are
FALSE
((5707.750000000001, 6647.0), (6240.593749999999, 6863.75))
text2 i.e the incoming text is the winner
TRUE
((5779.999999999999, 7225.0), (6258.65625, 7441.75))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': 'NULL'}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '8']
the assigned keys are ['7', '9', '10']
printing the number dict y_coordinate
{'7': 5789, '9': 6791, '10': 7613}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': True, '8': 'UNASSIGNED', '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vT46Zg1.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
TRVE
((5156.84375, 1842.375), (5581.3125, 2004.9375))
TRUE
((5111.6875, 2221.6875), (5509.062499999999, 2393.28125))
TRUE
((5156.84375, 2763.5625), (5527.125, 2926.125))
Eea
((5229.09375, 3287.375), (5671.624999999999, 3468.0))
False
((5247.156250000001, 3829.25), (5590.343749999999, 4018.90625))
FALSE
((5229.09375, 3097.71875), (5707.750000000001, 3305.4375))
False
((5211.031249999999, 4280.8125), (5626.468750000001, 4479.5))
falke
((5220.062500000001, 4624.0), (5590.343749999999, 4840.75))
TRUE
((5174.90625, 5247.15625), (5590.343749999999, 5427.78125))
TRUE
((5165.875, 5770.96875), (5590.343749999999, 5951.59375))
TRUE
((5138.78125, 6376.0625), (5599.375000000001, 6538.625))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1688, '2': 2239, '3': 2610, '4': 3160, '5': 3711, '6': 4262, '7': 4633, '8': 5174, '9': 5545, '10': 6096}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7I0zVgw.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 803.453125
bottom right x of T/F: 1161.30859375
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((826.1718749999999, 416.5390625), (892.9453124999999, 445.15625))
text1 i.e the prev text is the winner
FAL
((830.9414062500001, 496.03125), (870.6875, 524.6484375))
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((821.40234375, 685.22265625), (875.45703125, 717.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((865.91796875, 688.40234375), (902.484375, 715.4296875))
text1 i.e the prev text is the winner
collision happend with box:685.22265625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((818.22265625, 769.484375), (867.5078125000001, 794.921875))
text2 i.e the incoming text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 767.89453125), (900.89453125, 793.33203125))
text1 i.e the prev text is the winner
collision happend with box:769.484375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 876.00390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((816.6328125, 926.87890625), (896.125, 955.49609375))
text1 i.e the prev text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (897.7148437500001, 1028.62890625))
text1 i.e the prev text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 486, '2': 421, '3': 484, '4': 580, '5': 675, '6': 772, '7': 836, '8': 931, '9': 996, '10': 1093}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : InCQsuH.jpg
OCR detection done with doctr
left top x of T/F: 5110.71875
bottom right x of T/F: 6341.250000000001
left top x of SN: 447.6875
bottom right x of SN: 862.5000000000001
first t/f detection
Halse
((5138.78125, 2366.1875), (5680.656250000001, 2619.0625))
dalse
((5183.9375, 2844.84375), (5653.562500000001, 3070.625))
Hue
((5174.90625, 3323.5), (5635.5, 3549.28125))
toul
((5256.1875, 3892.46875), (5825.15625, 4154.375))
False
((5301.343750000001, 4443.375), (5743.875, 4624.0))
Taue
((5238.124999999999, 4931.0625), (5716.78125, 5138.78125))
Truc
((5265.218749999999, 5391.65625), (5779.999999999999, 5644.53125))
True
((5274.250000000001, 5906.4375), (5761.937500000001, 6078.03125))
TBx
((5337.46875, 6394.125), (5816.125000000001, 6610.875))
distribution.
((4407.25, 5030.40625), (5129.75, 5202.0))
directly
((4687.21875, 5400.6875), (5147.8125, 5572.28125))
space.
((4786.5625, 5987.71875), (5156.84375, 6150.28125))
prediction
((4605.9375, 6348.96875), (5183.9375, 6520.5625))
collision happend with box:6348.96875 and text:prediction solving on the basis of percent match boxes
the current box specification are
False
((5825.15625, 6367.03125), (6249.625000000001, 6583.78125))
text2 i.e the incoming text is the winner
the
((5012.34375, 7089.53125), (5229.09375, 7243.0625))
Tue
((5418.75, 6926.96875), (5942.562499999999, 7134.6875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2564, '2': 3133, '3': 3522, '4': 4091, '5': 4660, '6': 5229, '7': 5599, '8': 6159}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nVDIV7v.jpg
OCR detection done with doctr
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6702.5
left top x of SN: 167.71875000000014
bottom right x of SN: 582.5312499999999
first t/f detection
Falie
((5436.812500000001, 1797.21875), (5933.53125, 2023.0))
True
((5644.531249999999, 2393.28125), (6141.250000000001, 2610.03125))
False
((5572.281250000001, 3151.90625), (6023.843749999999, 3368.65625))
True
((5599.375000000001, 3630.5625), (6159.312499999999, 3856.34375))
False
((5608.40625, 4118.25), (6105.124999999999, 4371.125))
False
((5743.875, 4822.6875), (6222.531250000001, 5003.3125))
Trul
((5635.5, 5518.09375), (6132.218749999999, 5734.84375))
Trul
((5644.531249999999, 6032.875), (6105.124999999999, 6249.625))
the
((5229.09375, 6493.46875), (5454.874999999999, 6637.96875))
collision happend with box:6493.46875 and text:the solving on the basis of percent match boxes
the current box specification are
True
((5653.562500000001, 6583.78125), (6168.343750000001, 6800.53125))
text2 i.e the incoming text is the winner
Frul
((5689.6875, 7215.96875), (6114.156250000001, 7486.90625))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6937
printing the number dict y_coordinate
{'1': 2059, '2': 2655, '3': 3251, '4': 3856, '5': 4244, '6': 4858, '7': 5644, '8': 6240, '9': 6637, '10': 6937}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : IbR3JQ2.jpg
OCR detection done with doctr
left top x of SN: 123.76953124999997
bottom right x of SN: 344.052734375
left top x of T/F: 978.76953125
bottom right x of T/F: 1362.79296875
first t/f detection
T
((996.8261718749999, 512.40234375), (1048.388671875, 565.576171875))
F
((998.4375, 678.369140625), (1040.33203125, 733.154296875))
collision happend with box:678.369140625 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1017.7734375000001, 792.7734375), (1062.890625, 831.4453125))
text2 i.e the incoming text is the winner
collision happend with box:792.7734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((982.3242187500001, 895.8984375), (1029.052734375, 932.958984375))
text2 i.e the incoming text is the winner
collision happend with box:895.8984375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((971.044921875, 1053.80859375), (1011.328125, 1098.92578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
the unassigned keys are ['1', '2', '3', '9']
the assigned keys are ['4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'4': 668, '5': 773, '6': 873, '7': 941, '8': 1047, '10': 1216}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': True, '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : msX3bBM.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6774.750000000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5581.3125, 1779.15625), (6204.46875, 2077.1875))
FALSE
((5536.156249999999, 2393.28125), (6249.625000000001, 2637.125))
TRUE
((5491.000000000001, 2871.9375), (6285.75, 3224.15625))
TRUE
((5454.874999999999, 3585.40625), (6159.312499999999, 3838.28125))
FALSE
((5463.906250000001, 4280.8125), (6240.593749999999, 4524.65625))
TRUE
((5436.812500000001, 4885.90625), (6096.09375, 5102.65625))
TRVL
((5472.9375, 5391.65625), (6195.437500000001, 5608.40625))
FALSE
((5491.000000000001, 5924.5), (6168.343750000001, 6168.34375))
TRUE
((5400.687499999999, 6430.25), (6105.124999999999, 6683.125))
FALSE
((5445.84375, 7116.625), (6168.343750000001, 7405.625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2564, '3': 2980, '4': 3594, '5': 4208, '6': 4831, '7': 5238, '8': 5852, '9': 6276, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : UpUB4NP.jpg
OCR detection done with doctr
left top x of SN: 510.9062499999999
bottom right x of SN: 916.6875000000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5581.3125, 2203.625), (6050.937499999999, 2375.21875))
PALSE
((5581.3125, 2817.75), (6096.09375, 2998.375))
TRUE
((5491.000000000001, 3350.59375), (5960.625, 3522.1875))
TRUE
((5491.000000000001, 3811.1875), (5987.71875, 3982.78125))
TRUE
((5518.093750000001, 4452.40625), (6005.781250000001, 4624.0))
TRUE
((5491.000000000001, 5066.53125), (5933.53125, 5229.09375))
FALSE
((5545.187500000001, 5644.53125), (6050.937499999999, 5780.0))
FALSE
((5563.249999999999, 6204.46875), (6078.031249999999, 6376.0625))
the final dict without editing {'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2275, '3': 2844, '4': 3413, '5': 3784, '6': 4362, '7': 5120, '8': 5698, '9': 6087, '10': 6863}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': False, '4': True, '5': True, '6': True, '7': True, '8': False, '9': False, '10': 'NULL'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jbJWS9A.jpg
OCR detection done with doctr
left top x of T/F: 5137.8125
bottom right x of T/F: 6314.156250000001
left top x of SN: 492.8437500000001
bottom right x of SN: 907.6562499999999
first t/f detection
TRUE
((5274.250000000001, 1706.90625), (5825.15625, 1869.46875))
TRUE
((5310.375, 2194.59375), (5879.34375, 2411.34375))
TRUE
((5301.343750000001, 2736.46875), (5870.312500000001, 2908.0625))
FALSE
((5220.062500000001, 3251.25), (5915.468749999999, 3495.09375))
TRUE
((5238.124999999999, 3901.5), (5770.96875, 4109.21875))
TRUE
((5265.218749999999, 4389.1875), (5852.25, 4560.78125))
FALSE
((5283.28125, 4858.8125), (5924.500000000001, 5030.40625))
TRUE
((5265.218749999999, 5391.65625), (5779.999999999999, 5563.25))
TRUE
((5346.499999999999, 5861.28125), (5960.625, 6032.875))
TRUE
((5328.437500000001, 6565.71875), (5924.500000000001, 6737.3125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1887, '2': 2429, '3': 2799, '4': 3359, '5': 3919, '6': 4497, '7': 4876, '8': 5463, '9': 5861, '10': 6466}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mGHkXo0.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
left top x of SN: 303.1875000000001
bottom right x of SN: 717.9999999999999
first t/f detection
TRUE
((5409.718750000001, 1743.03125), (5906.4375, 1968.8125))
TRUE
((5481.968749999999, 2275.875), (5933.53125, 2483.59375))
PALSE
((5518.093750000001, 2808.71875), (6041.90625, 3034.5))
PALSE
((5563.249999999999, 3359.625), (6141.250000000001, 3612.5))
d-dimensional
((4325.96875, 2772.59375), (5238.124999999999, 3061.59375))
is
((5147.8125, 3413.8125), (5274.250000000001, 3558.3125))
Pre-
((5039.4375, 4009.875), (5337.46875, 4190.5))
collision happend with box:4009.875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5617.437499999999, 3973.75), (6177.375, 4199.53125))
text2 i.e the incoming text is the winner
PALSE
((5698.718749999999, 4497.5625), (6204.46875, 4714.3125))
collision happend with box:4497.5625 and text:PALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4605.9375, 4596.90625), (5409.718750000001, 4831.71875))
text2 i.e the incoming text is the winner
directly
((4940.09375, 4994.28125), (5436.812500000001, 5202.0))
collision happend with box:4994.28125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRUE
((5671.624999999999, 4949.125), (6141.250000000001, 5165.875))
text2 i.e the incoming text is the winner
space.
((5084.59375, 5617.4375), (5481.968749999999, 5789.03125))
collision happend with box:5617.4375 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5743.875, 5536.15625), (6150.28125, 5716.78125))
text2 i.e the incoming text is the winner
prediction
((4913.0, 5996.75), (5545.187500000001, 6204.46875))
collision happend with box:5996.75 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUE
((5770.96875, 6023.84375), (6240.593749999999, 6231.5625))
text2 i.e the incoming text is the winner
overfitting
((4768.5, 6601.84375), (5409.718750000001, 6809.5625))
details
((4822.6875, 6809.5625), (5238.124999999999, 6990.1875))
collision happend with box:6809.5625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5409.718750000001, 6782.46875), (5635.5, 6945.03125))
text1 i.e the prev text is the winner
collision happend with box:6809.5625 and text:details solving on the basis of percent match boxes
the current box specification are
TRUE
((5879.34375, 6737.3125), (6367.03125, 6945.03125))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3']
['1', '2', '3', '1', '2', '3']
printing the number dict y_coordinate
{'1': 2266, '2': 2853, '3': 3251}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qz31CIs.jpg
OCR detection done with doctr
left top x of SN: 556.0625
bottom right x of SN: 979.90625
left top x of T/F: 5237.156250000001
bottom right x of T/F: 6449.625000000001
first t/f detection
Halsc
((5229.09375, 2429.40625), (5770.96875, 2691.3125))
Jalse
((5256.1875, 2917.09375), (5716.78125, 3151.90625))
ttue
((5220.062500000001, 3395.75), (5680.656250000001, 3621.53125))
toul
((5292.312499999999, 3991.8125), (5843.218750000001, 4217.59375))
False
((5310.375, 4515.625), (5734.843750000001, 4696.25))
Taue
((5220.062500000001, 5003.3125), (5689.6875, 5211.03125))
Truc
((5238.124999999999, 5481.96875), (5725.812499999999, 5698.71875))
Truc
((5202.0, 5978.6875), (5698.718749999999, 6159.3125))
Tbe
((5247.156250000001, 6493.46875), (5707.750000000001, 6674.09375))
collision happend with box:6493.46875 and text:Tbe solving on the basis of percent match boxes
the current box specification are
False
((5752.906249999999, 6475.40625), (6141.250000000001, 6665.0625))
text2 i.e the incoming text is the winner
Tue
((5301.343750000001, 7008.25), (5825.15625, 7215.96875))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2456, '2': 3034, '3': 3413, '4': 3991, '5': 4551, '6': 5120, '7': 5500, '8': 6059, '9': 6430, '10': 7008}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : hkpSQ2K.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
Truc
((1451.09375, 652.5390625), (1567.890625, 703.3203125))
collision happend with box:652.5390625 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1537.421875, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Fale
((1461.25, 916.6015625), (1575.5078125, 967.3828125))
text2 i.e the incoming text is the winner
collision happend with box:916.6015625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1555.1953125, 1124.8046875))
text2 i.e the incoming text is the winner
False
((1438.3984375, 1233.984375), (1542.5, 1287.3046875))
collision happend with box:1233.984375 and text:False solving on the basis of percent match boxes
the current box specification are
False
((1428.2421875, 1378.7109375), (1552.65625, 1437.109375))
text2 i.e the incoming text is the winner
collision happend with box:1378.7109375 and text:False solving on the basis of percent match boxes
the current box specification are
Falte
((1448.5546875, 1513.28125), (1565.3515625, 1569.140625))
text2 i.e the incoming text is the winner
collision happend with box:1513.28125 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1665.625), (1565.3515625, 1716.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1665.625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
text2 i.e the incoming text is the winner
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1503, '8': 1668, '9': 1777, '10': 1939}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7iS1YLO.jpg
OCR detection done with doctr
left top x of SN: 193.49902343750006
bottom right x of SN: 436.34082031249994
left top x of T/F: 1429.578125
bottom right x of T/F: 1915.115234375
first t/f detection
handwriting
((1243.8017578125, 258.6181640625), (1446.8291015625, 335.9619140625))
false
((1432.3271484375, 727.5146484375), (1587.0146484375, 812.109375))
collision happend with box:727.5146484375 and text:false solving on the basis of percent match boxes
the current box specification are
Trobl
((1429.91015625, 865.283203125), (1577.3466796874998, 935.3759765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:865.283203125 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Fake
((1584.59765625, 872.5341796875), (1676.443359375, 940.2099609375))
text1 i.e the prev text is the winner
collision happend with box:865.283203125 and text:Trobl solving on the basis of percent match boxes
the current box specification are
Falas
((1422.6591796875, 981.298828125), (1572.5126953125, 1061.0595703125))
text2 i.e the incoming text is the winner
collision happend with box:981.298828125 and text:Falas solving on the basis of percent match boxes
the current box specification are
Trul
((1531.423828125, 1024.8046875), (1642.60546875, 1087.646484375))
text1 i.e the prev text is the winner
collision happend with box:981.298828125 and text:Falas solving on the basis of percent match boxes
the current box specification are
fobr
((1398.4892578125, 1126.318359375), (1545.92578125, 1198.828125))
text1 i.e the prev text is the winner
Tree
((1502.4199218750002, 1157.7392578125), (1630.5205078125, 1242.333984375))
collision happend with box:1157.7392578125 and text:Tree solving on the basis of percent match boxes
the current box specification are
Fale
((1333.23046875, 1290.673828125), (1490.3349609375, 1370.4345703125))
text2 i.e the incoming text is the winner
collision happend with box:1290.673828125 and text:Fale solving on the basis of percent match boxes
the current box specification are
Tyue
((1325.9794921875, 1406.689453125), (1475.8330078125, 1479.19921875))
text1 i.e the prev text is the winner
Tyue
((1309.060546875, 1522.705078125), (1451.6630859375, 1604.8828125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2', '3', '4']
['1', '2', '3', '4', '1', '2', '3', '4']
printing the number dict y_coordinate
{'1': 783, '2': 669, '3': 771, '4': 925}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vrpQEKp.jpg
rotation started
['DE', '', 'N', 'P', '>', 'I', 'E', 'a', 'I', '7', 'E', 'I', 'I', 'p', '-', 'I', 'E', '8', 'H', 'it', 'P', 'i', ':', 'e', 'I', 'I', '€', 'E', 'f', 'I', 'E', 'E', '-', 'E', '8', 'I', 'e', 'I', 'E', ':', 'E', 'I', 'E', 'I', 'E', 'i5', 'I', 'I', '3', '8', 'I', 'f', '2', 'I', 'I', 'E', 'I', 'I', 'E', 'E', 'it', 'of', 'I', 'E', 'I', 'I', '8', 'I', 'Q', 'à', 'it', 'I', 'B', 'I', 'I', 'I', 'a', 'of', 'I', '2', 'E', 'a', '2', '1', '1', '8', 'E', 'E', 'I', 'I', 'E', 'E', 'I', 'E', 'I', 'E', '€', 'B', 'e', 't', 'I', 'I', '8', 'I', 'I', 'I', '2', 'I', 'of', 'E', '8', 'I', ':', 'E', 'I', '1', 'I', 'a', 'E', 'I', 'it', 'a', 'I', 'I', 'E', 'I', 'e', '2', 'E', 'I', 't', 'I', '1', 'I', 'I', 'I', '', '00', 'E', 'I', '3', 'F', '-', '', 'OT', '4', '11', '2', '16', 'E', 'E', '-', 'a', '9', 'E', 'E', '1', 'I', 'I', 'I', 'I', 'I', 'I', 'E', 'E', 'it', 'E', 'I', 'E', '2', 'E', '-', 'm', 'I', 'I', 'E', 'E', 'I', '€', 'a', 'I', 'E', 'I', 'E', '2', 'I', 'E', ':', 'E', '€', '2', '9', '€', 'E', 'I', 'F', 'E', ':', 'I', 'I', 't', '-', 'E', 'F', 'I', ':', 'm', 'P', 'E', 'F', 'E', '€', '€', '€', 'India', 'NAME', 'COURSE', '', 'Suaiud', 'TITT', 'I', 'P']
rotation started
['"egep', 'uoosun', "'mou", '07', 'ITOM', 'azyreiouas', 'qou', 'op', 'ge47', 'egep', 'Burureng', 'amal', 'aun', 'uT', 'stegep', 'IO', 'esIou', 'oyreds', 'amngdeo', '01', 'ureal', 'Keu', 'popour', 'au7', 'Se', 'soseaI', '-UI', 'Sumnyeno', 'Jo', 'YSLI', 'ou4', "'TAS", 'UI', 'megaurered', 'D', 'ay4', 'Jo', 'anreA', 'yBry', 'e', 'YAIM', 'OT', 'WAS', '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'auo-SA-auO', 'Bursn', 'E0ul', 'uororpard', 'B', 'Suryeu', "'sossepo", 'Jo', 'poqunu', 'aB1eT', 'e', 'YAIM', 'suarqoid', 'ssepprmu', 'JOH', '6', '"ooeds', '[eursto', 'ay7', 'UI', 'meOUII-uou', 'aq', 'ued', 'IAS', 'ue', 'Jo', 'Krepunoq', 'uorstoap', 'OUL', '8', 'FoNL', 'sepou', 'Jo', 'roqunu', 'aya', '07', '[euoriodoud', 'oPO', 'Stgpaup', 'SI', 'DOJL', 'UOISIDOC', 'ay7', 'uI', 'uonorpard', 'B', 'Buryeur', 'IOJ', 'pammbar', 'BUIL', 'OUL', 'L', 'a', 'OaL', '"Lornqugsip', 'uerssneD', 'e', 'sienre', 'SI', 'suoranqugsip', 'uerssneg', 'OM7', 'Jo', 'amgxIu', 'V', '9', 'Tresay', 'pue', 'UOISIO', 'uoamgeq', 'nord', 'B', 'SI', 'BAINO', '(DOH)', 'orgsturanpeeuD', 'Burgeiado', 'IBAIODOY', 'OUL', 'S', 'n8m', '-aId', 'A9T', '6', 'YIOMOU', 'Temeu', 'ay7', 'UI', 'squorpers', 'ayn', 'agnduoo', '01', 'posn', 'querpe.1s', 'OTIYM', "'sau81am", 'ay7', 'agepdn', '07', 'pasn', 'SI', 'uone@odoxdypeg', '4', 'SI', 'queosap', 'fi', 'pue', 'I', 'SIOTOA', 'souensip', 'PITEA', 'B', 'SI', '(A-z/Aguopuagousog', '-', 'I', '&', 'STJ', 'Teuorsuoump-p', 'Kue', 'IOJ', 'OLIgaur', '"layissep', 'reouII-uou', 'B', 'SI', 'NNY', '2', '30mL', 'quoufordop', 'quottambar', 'a8e1018', 'au1', 'KeoidAL', 'I', '1a8rel', 'yonur', 'SI', 'NNY', 'IOJ', 'JORL', 'JOJ', 'WAS', 'ueyg', 'quouragess', 'NS', 'mor', '311M', '"IVA/anaL', 'P', 'a', 'R', '-', 'F', ':aJau', 'naqumu', 'ITOI', 'D91M', '(sod', 'O1)', "'6", 'ul', 'ASTVA', '1O', 'INAL', 'pue', 'S101181', 'Teardes', 'Surgumpurey', 'peapo']
rotation started
['LIL', '3592103', 'APTPPST', 'BATYN', 'eipuy', 'ul', 'E', 'I', '-', 'à', 'NL', 'à', 'F', 'E', '2', 'E', 'à', '-', 'E', 'is', 'I', 'a', 'E', 'a', 'I', 'i', 'is', 'E', 'a', 'I', 'à', 'I', 'I', 'I', 'is', 'I', 'I', 'I', 'a', 'of', '5', '-', 'e', 'I', 'iE', 'i', 'I', ':', 'e', 'I', 'I', '1', 'of', 'I', 'I', ':', 'o', 'e', '-', 'I', 'E', 'I', '-', 'E', 'e', 'E', 'I', '-', 'I', 'I', 'E', 'a', 'is', 'a', 'I', 'I', 'a', 'à', 'E', 'e', '1', 'I', 'E', 'I', '1', '8', 'is', 'e', 'e', 'I', 'iE', '1', 'I', '8', 'I', 'I', 'I', 'of', 'de', 'iis', 'de', 'e', '1', 'E', 'I', 'os', '9', 'I', 'à', 'de', ':', 'of', 'I', 'e', 'a', 'E', 'I', '5', '8', 'S', 'd', 'H', 'E', 'a', 'I', 'is', '9', 'I', 'à', 'I', 'I', 'I', ':', 'I', 'E', 'E', 'I', 'I', 'I', 'à', 'I', 'I', '1', 'E', '1', 'I', 'I', 'E', 'à', 'A', ':', 'I', 'I', 'a', '3', '8', 'I', '00', '', 'à', 'a', '1', 'I', 'a', 'E', 'I', '1', 'iE', '-', '5', 'E', 'à', 'E', 'e', '6', 'I', 'E', 'à', ':', '9', 'a', 'I', 'E', '8', 'I', 'of', 'I', 'a', 'I', 'I', 'I', 'of', 'E', 'is', 'e', ':', ':', 'I', 's', '-', '-', 'ad', 'is', 'I', 'I', 'i', 'I', 'E', 'I', 'I', 'E', 'I', 'I', '7', '1', '4', '10', '1f']
rotation started
['letters', 'and', 'clear', 'handwriting.', 'FALSE', 'in', 'capital', 'pts)', 'Write', 'TRUE', 'or', '9.', '(10', 'E', '/', '1', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', 'TRUE/FAL', 'I', 'than', 'SVM', 'for', 'TRU', 'E', 'for', 'KNN', 'is', 'much', 'larger', '1', 'Typically,', 'the', 'storage', 'requirement', 'deployment.', 'TRUE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'metric', 'for', 'any', 'd-dimensional', 'False', '3', '1-', 'cosineSimalarityz.u)', 'is', 'a', 'valid', 'distance', 'vectors', 'I', 'and', 'y.', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'g', 'Falbe', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'Pulse', '5', 'The', 'Receiver', 'Operating', 'cision', 'and', 'Recall.', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'False', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'Fue', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'TRUE', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE']
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 844.4375
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 14:59:13] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : vrpQEKp.jpg
[2024/06/28 14:59:14] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:59:15] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.1489725112915039
[2024/06/28 14:59:18] ppocr DEBUG: rec_res num  : 46, elapsed : 2.479569911956787
[2024/06/28 14:59:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:59:19] ppocr DEBUG: dt_boxes num : 45, elapsed : 0.1854386329650879
[2024/06/28 14:59:21] ppocr DEBUG: rec_res num  : 45, elapsed : 1.913144588470459
['SN', '2', '9', '5', '6', '8', 'V', '10', 'Statement', 'KNN is a non-linear classifier.', 'deployment.', 'Backpropogation is used to update the weights, while gradient descent is', 'vectors x and y.', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'cision and Recall.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'used to compute the gradients in the neural network.', 'The Time required for making a prediction in the Decision Tree is directly', 'With a high value of the C parameter in SVM, the risk of overfitting in-', 'For multiclass problems with a large number of classes, making a prediction', 'proportional to the number of nodes.', 'Write your roll number here:', 'creases as the model may learn to capture specific noise or details in the', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'training data that do not generalize well to new, unseen data.', 'TRUE/FAL', 'False', 'Toue', 'TRUE', 'False', 'TRUE', 'TRUE', 'TRUE', 'False', 'False', 'TRUE', 'India', 'NAME', 'COURSE']
[2024/06/28 14:59:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:59:23] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.11752176284790039
[2024/06/28 14:59:25] ppocr DEBUG: rec_res num  : 40, elapsed : 1.7407174110412598
['10', 'TRUE', '8', 'oner', '9', 'TRUE', 'C', '2', 'TRUE', 'I', 'TEUL', 'COURSE', 'NS', 'starnnent', 'NAME', 'TIT', 'India']
[2024/06/28 14:59:25] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:59:26] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.12126398086547852
[2024/06/28 14:59:28] ppocr DEBUG: rec_res num  : 46, elapsed : 1.9131267070770264
['4', 'COUnSE', 'FTYPPIS.', 'NAME', 'TRUE', 'TRUE', 'TEUL', 'TRUE', 'o', '9', '6', '8', '7', 'NS', '2', '3', '5', '4']
[2024/06/28 14:59:29] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 14:59:29] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.11980795860290527
[2024/06/28 14:59:32] ppocr DEBUG: rec_res num  : 46, elapsed : 2.2390782833099365
['NAAME', 'COURSE', 'Write your roll number here:', 'TRUE/FALA', 'Statement', 'SN', 'TRUE', 'Typically, the storage requirement for KNN is much larger than SVM for', 'deployment.', 'TRUE', 'KNN is a non-linear classifier.', '2', 'False', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional', '3', 'vectors x and y.', 'False', 'Backpropogation is used to update the weights, while gradient descent is', 'used to compute the gradients in the neural network.', 'False', 'The Receiver Operating Characteristic (ROC curve is a plot between Pre-', '5', 'cision and Recall.', 'TRUE', '6', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', 'False', 'The Time required for making a prediction in the Decision Tree is directly', '7', 'proportional to the number of nodes.', 'Foue', 'The decision boundary of an SVM can be non-linear in the original space.', '8', 'TRUE', 'For multiclass problems with a large number of classes, making a prediction', '9', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'With a high value of the C parameter in SVM, the risk of overfitting in-', '10', 'TRUE', 'creases, as the model may learn to capture specific noise or details in the', 'training data that do not generalize well to new, unseen data.']
OCR detection done
left top x of SN: 483.0
bottom right x of SN: 859.0
left top y of SN: 1830.0
bottom right y of SN: 2115.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/vrpQEKp.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : GidbMC1.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1226.4609375
first t/f detection
FALSE
((884.5078125, 393.45703125), (964.7421875000001, 428.9453125))
collision happend with box:393.45703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 549.296875), (958.5703125, 584.78515625))
text1 i.e the prev text is the winner
TRVE
((873.70703125, 651.1328125), (949.3125, 686.62109375))
collision happend with box:651.1328125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
TRUE
((886.05078125, 757.59765625), (957.02734375, 786.9140625))
text2 i.e the incoming text is the winner
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((879.87890625, 840.91796875), (947.76953125, 873.3203125))
text1 i.e the prev text is the winner
TRUE
((875.25, 922.6953125), (940.0546875, 955.09765625))
collision happend with box:922.6953125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((875.25, 1012.1875), (927.7109375, 1043.046875))
text2 i.e the incoming text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((923.08203125, 1012.1875), (955.484375, 1039.9609375))
text1 i.e the prev text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((875.25, 1090.87890625), (953.9414062500001, 1126.3671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1090.87890625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((872.1640625, 1208.14453125), (946.2265625, 1239.00390625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 376, '2': 476, '3': 543, '4': 644, '5': 745, '6': 847, '7': 913, '8': 1016, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yRPD0Dn.jpg
OCR detection done with doctr
left top x of SN: 1224.3750000000002
bottom right x of SN: 1630.15625
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6774.750000000001
first t/f detection
TRUE
((5608.40625, 2411.34375), (6078.031249999999, 2619.0625))
TRUE
((5518.093750000001, 2890.0), (6014.8125, 3142.875))
TRUE
((5454.874999999999, 3323.5), (5915.468749999999, 3540.25))
FALSE
((5310.375, 3892.46875), (5879.34375, 4100.1875))
FALSE
((5274.250000000001, 4443.375), (5834.187499999999, 4696.25))
FALSE
((5202.0, 4940.09375), (5743.875, 5156.84375))
FALSE
((5120.71875, 5337.46875), (5635.5, 5563.25))
the final dict without editing {'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2013, '2': 2537}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : AuWeWTd.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 327.939453125
left top x of T/F: 948.154296875
bottom right x of T/F: 1330.56640625
first t/f detection
Falle
((988.76953125, 433.447265625), (1079.00390625, 483.3984375))
collision happend with box:433.447265625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Filke
((990.3808593750001, 507.568359375), (1083.837890625, 562.353515625))
text1 i.e the prev text is the winner
Taue
((1032.275390625, 594.580078125), (1130.56640625, 642.919921875))
collision happend with box:594.580078125 and text:Taue solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 700.927734375), (1069.3359375, 755.712890625))
text1 i.e the prev text is the winner
Taue
((958.154296875, 800.830078125), (1070.947265625, 847.55859375))
collision happend with box:800.830078125 and text:Taue solving on the basis of percent match boxes
the current box specification are
pul
((961.376953125, 878.173828125), (1079.00390625, 924.90234375))
text1 i.e the prev text is the winner
Tque
((1012.939453125, 966.796875), (1125.732421875, 1013.525390625))
collision happend with box:966.796875 and text:Tque solving on the basis of percent match boxes
the current box specification are
bue
((966.2109375, 1053.80859375), (1058.056640625, 1103.759765625))
text1 i.e the prev text is the winner
fe
((969.4335937499999, 1148.876953125), (1054.833984375, 1197.216796875))
collision happend with box:1148.876953125 and text:fe solving on the basis of percent match boxes
the current box specification are
sue
((966.2109375, 1271.337890625), (1053.22265625, 1327.734375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'UNASSIGNED', '3': True, '4': True, '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['2']
the assigned keys are ['1', '3', '4', '5', '6', '7', '8', '9', '10']
['1', '3', '4', '5', '6', '7', '8', '9', '10', '1', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 410, '3': 578, '4': 684, '5': 787, '6': 887, '7': 955, '8': 1057, '9': 1127, '10': 1229}
--------- Printing the final dict ------------
{'1': False, '2': 'UNASSIGNED', '3': True, '4': True, '5': True, '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uwONgIj.jpg
OCR detection done with doctr
left top x of T/F: 5481.000000000001
bottom right x of T/F: 6702.5
left top x of SN: 474.78125
bottom right x of SN: 880.5624999999999
first t/f detection
ToJe
((5545.187500000001, 1806.25), (6132.218749999999, 2059.125))
Falge
((5527.125, 2293.9375), (6213.499999999999, 2591.96875))
false
((5572.281250000001, 2926.125), (6105.124999999999, 3197.0625))
Toue.
((5572.281250000001, 3883.4375), (6376.062499999999, 4163.40625))
TOUe
((5599.375000000001, 4560.78125), (6213.499999999999, 4768.5))
fabe
((5707.750000000001, 5165.875), (6303.812500000001, 5472.9375))
toJe.
((5599.375000000001, 5780.0), (6276.718750000001, 6087.0625))
TOVe.
((5635.5, 6484.4375), (6358.000000000001, 6728.28125))
tove
((5599.375000000001, 6963.09375), (6321.874999999999, 7225.0))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1851, '2': 2420, '3': 2989, '4': 3567, '5': 3946, '6': 4533, '7': 5310, '8': 5897, '9': 6294, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cUCYouh.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6774.750000000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5581.3125, 1779.15625), (6204.46875, 2077.1875))
FALSE
((5536.156249999999, 2393.28125), (6249.625000000001, 2637.125))
TRUE
((5491.000000000001, 2871.9375), (6285.75, 3224.15625))
TRUE
((5454.874999999999, 3585.40625), (6159.312499999999, 3838.28125))
FALSE
((5463.906250000001, 4280.8125), (6240.593749999999, 4524.65625))
TRUE
((5436.812500000001, 4885.90625), (6096.09375, 5102.65625))
TRVL
((5472.9375, 5391.65625), (6195.437500000001, 5608.40625))
FALSE
((5491.000000000001, 5924.5), (6168.343750000001, 6168.34375))
TRUE
((5400.687499999999, 6430.25), (6105.124999999999, 6683.125))
FALSE
((5445.84375, 7116.625), (6168.343750000001, 7405.625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2564, '3': 2980, '4': 3594, '5': 4208, '6': 4831, '7': 5238, '8': 5852, '9': 6276, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q8iJyk0.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6738.624999999999
left top x of SN: 890.2187499999999
bottom right x of SN: 1286.9687499999998
first t/f detection
TRUE
((5472.9375, 2104.28125), (5879.34375, 2284.90625))
TROE
((5400.687499999999, 2591.96875), (5852.25, 2799.6875))
FALSE
((5445.84375, 3097.71875), (5960.625, 3278.34375))
FALSE
((5409.718750000001, 3693.78125), (5942.562499999999, 3901.5))
FALSE
((5400.687499999999, 4289.84375), (5906.4375, 4461.4375))
FALSE
((5346.499999999999, 4822.6875), (5888.374999999999, 4994.28125))
TRUE
((5337.46875, 5238.125), (5798.0625, 5400.6875))
TROE
((5319.406249999999, 5761.9375), (5761.937500000001, 5942.5625))
TRUE
((5310.375, 6168.34375), (5779.999999999999, 6348.96875))
TRUE
((5328.437500000001, 6683.125), (5807.093749999999, 6890.84375))
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
the unassigned keys are ['1', '2', '3', '4', '5', '6', '7']
the assigned keys are ['8', '9', '10']
printing the number dict y_coordinate
{'8': 5680, '9': 6032, '10': 6592}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZHdcDRf.jpg
OCR detection done with doctr
left top x of T/F: 5508.093750000001
bottom right x of T/F: 6720.562500000001
left top x of SN: 492.8437500000001
bottom right x of SN: 898.625
first t/f detection
FALSE
((5590.343749999999, 1878.5), (6069.0, 2104.28125))
collision happend with box:1878.5 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRHE
((5554.21875, 1724.96875), (6023.843749999999, 1932.6875))
text1 i.e the prev text is the winner
FALSE
((5563.249999999999, 2348.125), (6050.937499999999, 2528.75))
FALSE
((5572.281250000001, 2917.09375), (6041.90625, 3097.71875))
TRUE
((5590.343749999999, 3395.75), (5996.749999999999, 3576.375))
TRUE
((5590.343749999999, 3883.4375), (6096.09375, 4091.15625))
FALSE
((5653.562500000001, 4605.9375), (6132.218749999999, 4786.5625))
TRUE
((5635.5, 5265.21875), (6123.1875, 5445.84375))
TRUE
((5653.562500000001, 5807.09375), (6069.0, 5987.71875))
the
((5292.312499999999, 6240.59375), (5518.093750000001, 6385.09375))
collision happend with box:6240.59375 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5644.531249999999, 6358.0), (6078.031249999999, 6538.625))
text2 i.e the incoming text is the winner
TRUE
((5689.6875, 6990.1875), (6141.250000000001, 7170.8125))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2438, '3': 2998, '4': 3576, '5': 3964, '6': 4542, '7': 5328, '8': 5915, '9': 6312, '10': 7107}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 52pqQSe.jpg
OCR detection done with doctr
left top x of SN: 74.88867187499996
bottom right x of SN: 317.4375
left top x of T/F: 1393.39453125
bottom right x of T/F: 1871.103515625
first t/f detection
Falx
((1408.3984375, 620.484375), (1588.5390625, 738.076171875))
collision happend with box:620.484375 and text:Falx solving on the basis of percent match boxes
the current box specification are
falye
((1433.41796875, 755.58984375), (1591.041015625, 843.158203125))
text2 i.e the incoming text is the winner
collision happend with box:755.58984375 and text:falye solving on the basis of percent match boxes
the current box specification are
Trul
((1415.904296875, 898.201171875), (1591.041015625, 1010.7890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:898.201171875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Tur
((1423.41015625, 1045.81640625), (1578.5312500000002, 1155.90234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1045.81640625 and text:Tur solving on the basis of percent match boxes
the current box specification are
Trul
((1430.916015625, 1200.9375), (1591.041015625, 1306.01953125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1200.9375 and text:Trul solving on the basis of percent match boxes
the current box specification are
True
((1433.41796875, 1336.04296875), (1576.029296875, 1431.1171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1336.04296875 and text:True solving on the basis of percent match boxes
the current box specification are
falke
((1418.40625, 1481.15625), (1593.54296875, 1583.736328125))
text2 i.e the incoming text is the winner
collision happend with box:1481.15625 and text:falke solving on the basis of percent match boxes
the current box specification are
Falu
((1433.41796875, 1616.26171875), (1593.54296875, 1698.826171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1616.26171875 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((1425.912109375, 1746.36328125), (1588.5390625, 1848.943359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1746.36328125 and text:fale solving on the basis of percent match boxes
the current box specification are
Falye
((1420.9082031250002, 1903.986328125), (1586.037109375, 2009.068359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 883, '2': 773, '3': 880, '4': 1040, '5': 1200, '6': 1361, '7': 1466, '8': 1628, '9': 1738, '10': 1901}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : pDpbHYg.jpg
OCR detection done with doctr
left top x of SN: 36.336914062499986
bottom right x of SN: 263.041015625
left top x of T/F: 948.1103515624999
bottom right x of T/F: 1344.9267578125
first t/f detection
falx
((959.9785156249999, 470.77734375), (1085.1455078125, 560.44921875))
collision happend with box:470.77734375 and text:falx solving on the basis of percent match boxes
the current box specification are
Falte
((974.9238281249999, 575.39453125), (1087.013671875, 642.6484375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:575.39453125 and text:Falte solving on the basis of percent match boxes
the current box specification are
Trul
((959.9785156249999, 683.748046875), (1085.1455078125, 769.68359375))
text2 i.e the incoming text is the winner
collision happend with box:683.748046875 and text:Trul solving on the basis of percent match boxes
the current box specification are
Til
((973.0556640624999, 793.9697265625), (1075.8046875, 876.1689453125))
text1 i.e the prev text is the winner
Tiul
((973.0556640624999, 911.6640625), (1085.1455078125, 990.126953125))
collision happend with box:911.6640625 and text:Tiul solving on the basis of percent match boxes
the current box specification are
True
((974.9238281249999, 1016.28125), (1075.8046875, 1081.6669921875))
text2 i.e the incoming text is the winner
collision happend with box:1016.28125 and text:True solving on the basis of percent match boxes
the current box specification are
falre
((963.7148437499999, 1117.162109375), (1085.1455078125, 1197.4931640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1117.162109375 and text:falre solving on the basis of percent match boxes
the current box specification are
Falu
((976.7919921874999, 1223.6474609375), (1083.27734375, 1281.560546875))
text2 i.e the incoming text is the winner
collision happend with box:1223.6474609375 and text:Falu solving on the basis of percent match boxes
the current box specification are
fale
((963.7148437499999, 1315.1875), (1081.4091796875, 1389.9140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1315.1875 and text:fale solving on the basis of percent match boxes
the current box specification are
Falye
((963.7148437499999, 1429.1455078125), (1075.8046875, 1507.6083984375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['6']
the assigned keys are ['1', '2', '3', '4', '5', '7', '8', '9', '10']
['1', '2', '3', '4', '5', '7', '8', '9', '10', '1', '2', '3', '4', '5', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 478, '2': 595, '3': 678, '4': 799, '5': 922, '7': 1111, '8': 1229, '9': 1307, '10': 1427}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H6A3t08.jpg
OCR detection done with doctr
left top x of SN: 637.34375
bottom right x of SN: 1088.28125
left top x of T/F: 5417.781249999999
bottom right x of T/F: 6774.750000000001
first t/f detection
Jue
((5472.9375, 2402.3125), (5933.53125, 2664.21875))
drus
((5409.718750000001, 2953.21875), (5843.218750000001, 3160.9375))
True
((5472.9375, 3440.90625), (5897.406250000001, 3675.71875))
True
((5373.593749999999, 4109.21875), (5843.218750000001, 4335.0))
Trve
((5292.312499999999, 4669.15625), (5743.875, 4931.0625))
Tyoe
((5301.343750000001, 5265.21875), (5743.875, 5491.0))
True
((5192.96875, 5843.21875), (5671.624999999999, 6105.125))
bue
((5192.96875, 6303.8125), (5671.624999999999, 6592.8125))
Tue
((5165.875, 6827.625), (5635.5, 7116.625))
True
((5120.71875, 7514.0), (5653.562500000001, 7821.0625))
the final dict without editing {'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['2', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '3']
['1', '3', '1', '3']
printing the number dict y_coordinate
{'1': 2302, '3': 3242}
--------- Printing the final dict ------------
{'1': True, '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Rk1G1aS.jpg
rotation started
['Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letter', 'and', 'clear', 'handwriting.', '6.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', '1', 'If', 'a', 'E', 'Rd', 'then', 'a', 'trace', 'of', 'the', 'matrix', "aa'", 'is', 'equal', 'to', 'the', 'Euclidean', 'distance', 'TRUE', '2', 'PCA', 'becomes', 'equivalent', 'to', 'LDA', 'if', 'we', 'project', 'samples', 'of', 'each', 'class', 'using', 'PCA', 'FALSE', '3', 'For', 'a', 'particular', 'I,', 'the', 'value', 'of', 'the', 'probability', 'mass', 'function', 'can', 'be', 'greater', 'than', 'TRUE', 'between', 'the', 'origin', 'and', 'the', 'point', 'a.', 'independently.', 'one.', '4', 'The', 'PCA', 'will', 'project', '2D-data', 'points', 'to', '[1,01T', 'if', 'variance(z)', '>', 'variance(y).', '5', 'If', 'data', 'distributions', 'exactly', 'follow', 'y=x,', 'then', 'the', 'rank', 'of', 'the', 'covariance', 'matrix', '6', 'If', 'X', 'and', 'Y', 'are', 'two', 'real-valued', 'random', 'variables', 'such', 'that', 'Cou(X,Y)', '<', '0', 'then', 'at', 'least', 'one', 'of', 'X', 'or', 'Y', 'must', 'have', 'negative', 'variance', 'i.e.', 'either', 'a(X)', '<', '0', 'or', 'TRUE', 'PALSE', 'TRUE', 'will', 'be', 'zero.', 'a(Y)', '<0.', 'class', 'label.', '7', 'Naive', 'Bayes', 'assumes', 'that', 'all', 'features', 'are', 'conditionally', 'independent', 'given', 'the', 'TRUE', '8', 'LDA', 'is', 'sensitive', 'to', 'outliers', 'in', 'the', 'dataset.', 'FALSE', '9', 'A', 'die', 'is', 'loaded', 'SO', 'that', 'the', 'probability', 'of', 'a', 'face', 'coming', 'up', 'is', 'proportional', 'to', 'the', 'TRUE', 'number', 'on', 'that', 'face.', 'The', 'die', 'is', 'rolled', 'with', 'outcome', 'X.', 'The', 'expected', 'value', 'of', 'X', 'is', 'greater', 'than', '4.', '10', 'B', '=l', '(11,17.1-1,07)', 'is', 'one', 'of', 'the', 'basis', 'in', '2D-space.', 'TRVE']
rotation done for:  Rk1G1aS.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6530.906250000001
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
TRUE
((5463.906250000001, 1770.125), (5852.25, 1959.78125))
FALSE
((5445.84375, 2330.0625), (5933.53125, 2510.6875))
TRUE
((5382.625000000001, 2880.96875), (5879.34375, 3097.71875))
TRUE
((5427.781249999999, 4515.625), (5834.187499999999, 4696.25))
PALSE
((5491.000000000001, 3431.875), (5969.656249999999, 3639.59375))
TRUE
((5518.093750000001, 3892.46875), (5897.406250000001, 4118.25))
TRUE
((5463.906250000001, 5174.90625), (5879.34375, 5337.46875))
FALSE
((5545.187500000001, 5671.625), (5960.625, 5852.25))
TRUE
((5481.968749999999, 6123.1875), (5915.468749999999, 6330.90625))
TRVE
((5527.125, 6782.46875), (5897.406250000001, 6963.09375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2393, '3': 2944, '4': 3513, '5': 3883, '6': 4452, '7': 5211, '8': 5780, '9': 6168, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lTliwxI.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1330.56640625
first t/f detection
Falle
((990.3808593750001, 433.447265625), (1077.392578125, 483.3984375))
collision happend with box:433.447265625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Filfe
((991.9921875, 509.1796875), (1085.44921875, 559.130859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Taue
((1025.830078125, 589.74609375), (1127.34375, 642.919921875))
text2 i.e the incoming text is the winner
collision happend with box:589.74609375 and text:Taue solving on the basis of percent match boxes
the current box specification are
Bul
((964.599609375, 700.927734375), (1069.3359375, 754.1015625))
text1 i.e the prev text is the winner
Touue
((954.9316406250001, 795.99609375), (1070.947265625, 849.169921875))
collision happend with box:795.99609375 and text:Touue solving on the basis of percent match boxes
the current box specification are
pul
((962.9882812500001, 878.173828125), (1079.00390625, 923.291015625))
text1 i.e the prev text is the winner
Tquue
((1011.328125, 961.962890625), (1127.34375, 1015.13671875))
collision happend with box:961.962890625 and text:Tquue solving on the basis of percent match boxes
the current box specification are
bue
((967.822265625, 1055.419921875), (1058.056640625, 1105.37109375))
text1 i.e the prev text is the winner
fe
((971.044921875, 1152.099609375), (1054.833984375, 1193.994140625))
collision happend with box:1152.099609375 and text:fe solving on the basis of percent match boxes
the current box specification are
sue
((971.044921875, 1274.560546875), (1050.0, 1326.123046875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 512, '3': 580, '4': 683, '5': 784, '6': 886, '7': 953, '8': 1057, '9': 1126, '10': 1229}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EPA6x5l.jpg
OCR detection done with doctr
left top x of T/F: 4704.3125
bottom right x of T/F: 5970.96875
left top x of SN: -40.0
bottom right x of SN: 365.7812499999999
first t/f detection
distance
((4208.5625, 1688.84375), (4741.40625, 1905.59375))
collision happend with box:1688.84375 and text:distance solving on the basis of percent match boxes
the current box specification are
TRVE
((4777.53125, 1571.4375), (5527.125, 1905.59375))
text1 i.e the prev text is the winner
PCA
((4479.5, 2239.75), (4804.625, 2429.40625))
collision happend with box:2239.75 and text:PCA solving on the basis of percent match boxes
the current box specification are
TRUE
((4885.90625, 2149.4375), (5662.59375, 2483.59375))
text2 i.e the incoming text is the winner
than
((4587.875, 2817.75), (4949.125, 2998.375))
collision happend with box:2817.75 and text:than solving on the basis of percent match boxes
the current box specification are
TRVE
((5003.3125, 2727.4375), (5725.812499999999, 3070.625))
text2 i.e the incoming text is the winner
TRUE
((5120.71875, 3251.25), (5761.937500000001, 3549.28125))
TRUE
((5183.9375, 3757.0), (5870.312500000001, 4046.0))
variance()
((4073.0937500000005, 3404.78125), (4804.625, 3666.6875))
matrix
((4605.9375, 3766.03125), (5066.53125, 3973.75))
dntCetkincouer
((3630.5625, 4262.75), (5220.062500000001, 4714.3125))
O.or
((4867.84375, 4524.65625), (5192.96875, 4696.25))
the
((5039.4375, 5084.59375), (5256.1875, 5247.15625))
collision happend with box:5084.59375 and text:the solving on the basis of percent match boxes
the current box specification are
TRVE
((5364.5625, 5075.5625), (5942.562499999999, 5337.46875))
text2 i.e the incoming text is the winner
the
((5202.0, 6059.96875), (5436.812500000001, 6222.53125))
collision happend with box:6059.96875 and text:the solving on the basis of percent match boxes
the current box specification are
is.proportionalto
((4127.28125, 6050.9375), (5256.1875, 6385.09375))
text2 i.e the incoming text is the winner
of
((5165.875, 6258.65625), (5328.437500000001, 6421.21875))
collision happend with box:6258.65625 and text:of solving on the basis of percent match boxes
the current box specification are
expected
((4289.84375, 6321.875), (4849.78125, 6547.65625))
text2 i.e the incoming text is the winner
collision happend with box:6321.875 and text:expected solving on the basis of percent match boxes
the current box specification are
value
((4831.71875, 6285.75), (5183.9375, 6466.375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['2', '3']
['2', '3', '2', '3']
printing the number dict y_coordinate
{'3': 3458, '2': 2871, '1': 2571}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': True, '3': False, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : SHj76OQ.jpg
OCR detection done with doctr
left top x of T/F: 5408.75
bottom right x of T/F: 6666.375000000001
left top x of SN: 547.0312500000001
bottom right x of SN: 970.8750000000001
first t/f detection
Trve
((5481.968749999999, 2068.15625), (6222.531250000001, 2366.1875))
True
((5454.874999999999, 2691.3125), (6231.5625, 2926.125))
True
((5418.75, 3106.75), (6339.9375, 3395.75))
True
((5481.968749999999, 3738.9375), (6204.46875, 4000.84375))
True
((5509.062499999999, 4362.09375), (6168.343750000001, 4578.84375))
False
((5518.093750000001, 4849.78125), (6258.65625, 5111.6875))
Trve
((5491.000000000001, 5355.53125), (6159.312499999999, 5563.25))
True
((5445.84375, 5789.03125), (6204.46875, 6087.0625))
prediction
((4741.40625, 6321.875), (5436.812500000001, 6484.4375))
collision happend with box:6321.875 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tru
((5500.03125, 6276.71875), (5870.312500000001, 6529.59375))
text2 i.e the incoming text is the winner
True
((5481.968749999999, 6899.875), (6222.531250000001, 7234.03125))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2357, '2': 2944, '3': 3341, '4': 3919, '6': 5084, '7': 5472, '5': 4497, '8': 6059, '9': 6439, '10': 7026}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YUtXx1Q.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6521.874999999999
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
TRUE
((5454.874999999999, 1770.125), (5852.25, 1959.78125))
FALSE
((5445.84375, 2339.09375), (5933.53125, 2519.71875))
TRUE
((5382.625000000001, 2880.96875), (5879.34375, 3097.71875))
TRUE
((5436.812500000001, 4506.59375), (5834.187499999999, 4696.25))
FALSE
((5491.000000000001, 3431.875), (5969.656249999999, 3648.625))
TRUE
((5509.062499999999, 3883.4375), (5897.406250000001, 4118.25))
TRUE
((5472.9375, 5156.84375), (5879.34375, 5337.46875))
FALSE
((5545.187500000001, 5671.625), (5951.593750000001, 5852.25))
TRUE
((5481.968749999999, 6114.15625), (5915.468749999999, 6321.875))
TRVE
((5527.125, 6782.46875), (5897.406250000001, 6963.09375))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1824, '2': 2393, '3': 2953, '4': 3504, '5': 3883, '6': 4443, '7': 5211, '8': 5780, '9': 6168, '10': 6926}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 406Rype.jpg
OCR detection done with doctr
left top x of T/F: 5499.062499999999
bottom right x of T/F: 6702.5
left top x of SN: 528.96875
bottom right x of SN: 934.7499999999999
first t/f detection
folse
((5617.437499999999, 1544.34375), (6087.062500000001, 1878.5))
True
((5572.281250000001, 2140.40625), (6096.09375, 2474.5625))
Folse
((5617.437499999999, 2709.375), (6105.124999999999, 3052.5625))
Folse
((5608.40625, 3206.09375), (5996.749999999999, 3504.125))
Tue
((5581.3125, 3648.625), (6078.031249999999, 3973.75))
folse.
((5662.59375, 4262.75), (6195.437500000001, 4642.0625))
the
((5283.28125, 5057.5), (5509.062499999999, 5202.0))
collision happend with box:5057.5 and text:the solving on the basis of percent match boxes
the current box specification are
True
((5608.40625, 5048.46875), (6032.875000000001, 5355.53125))
text2 i.e the incoming text is the winner
Thue
((5617.437499999999, 5527.125), (6032.875000000001, 5798.0625))
the
((5319.406249999999, 6032.875), (5536.156249999999, 6168.34375))
collision happend with box:6032.875 and text:the solving on the basis of percent match boxes
the current box specification are
false
((5734.843750000001, 6069.0), (6177.375, 6430.25))
text2 i.e the incoming text is the winner
Tree
((5725.812499999999, 6710.21875), (6096.09375, 6963.09375))
the final dict without editing {'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1752, '2': 2312, '3': 2880, '4': 3449, '5': 3829, '6': 4416, '7': 5183, '8': 5761, '9': 6150, '10': 6936}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': False, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DMStlYW.jpg
OCR detection done with doctr
left top x of T/F: 1099.2216796875
bottom right x of T/F: 1541.08984375
left top x of SN: 11.729492187499964
bottom right x of SN: 245.90429687499994
first t/f detection
falte
((1148.2275390625, 485.40625), (1291.2490234375, 593.755859375))
collision happend with box:485.40625 and text:falte solving on the basis of percent match boxes
the current box specification are
fabe
((1152.5615234375, 626.2607421875), (1265.2451171875, 706.439453125))
text1 i.e the prev text is the winner
TAse
((1156.8955078125, 745.4453125), (1295.5830078125, 847.2939453125))
collision happend with box:745.4453125 and text:TAse solving on the basis of percent match boxes
the current box specification are
Kil
((1180.732421875, 873.2978515625), (1319.419921875, 962.14453125))
text1 i.e the prev text is the winner
collision happend with box:745.4453125 and text:TAse solving on the basis of percent match boxes
the current box specification are
d-dimensional
((920.6933593749999, 745.4453125), (1111.388671875, 801.787109375))
text2 i.e the incoming text is the winner
collision happend with box:745.4453125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1085.384765625, 886.2998046875), (1120.056640625, 920.9716796875))
text1 i.e the prev text is the winner
Pre-
((1059.380859375, 1018.486328125), (1124.390625, 1061.826171875))
collision happend with box:1018.486328125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
Trer
((1180.732421875, 1011.9853515625), (1319.419921875, 1113.833984375))
text2 i.e the incoming text is the winner
collision happend with box:1011.9853515625 and text:Trer solving on the basis of percent match boxes
the current box specification are
distribution.
((966.2001953124999, 1155.0068359375), (1133.05859375, 1207.0146484375))
text2 i.e the incoming text is the winner
collision happend with box:1155.0068359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Kul
((1176.3984375, 1133.3369140625), (1308.5849609375, 1207.0146484375))
text1 i.e the prev text is the winner
collision happend with box:1155.0068359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1033.376953125, 1250.3544921875), (1137.392578125, 1291.52734375))
text1 i.e the prev text is the winner
collision happend with box:1155.0068359375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
Kaue
((1169.8974609375, 1248.1875), (1317.2529296875, 1339.201171875))
text1 i.e the prev text is the winner
space.
((1059.380859375, 1389.0419921875), (1146.060546875, 1430.21484375))
collision happend with box:1389.0419921875 and text:space. solving on the basis of percent match boxes
the current box specification are
Folwe
((1198.068359375, 1356.537109375), (1319.419921875, 1436.7158203125))
text2 i.e the incoming text is the winner
collision happend with box:1356.537109375 and text:Folwe solving on the basis of percent match boxes
the current box specification are
prediction
((1018.2080078125, 1477.888671875), (1159.0625, 1525.5625))
text2 i.e the incoming text is the winner
collision happend with box:1477.888671875 and text:prediction solving on the basis of percent match boxes
the current box specification are
Folre
((1200.2353515625, 1471.3876953125), (1328.087890625, 1560.234375))
text2 i.e the incoming text is the winner
collision happend with box:1471.3876953125 and text:Folre solving on the basis of percent match boxes
the current box specification are
overfitting
((981.369140625, 1623.0771484375), (1122.2236328125, 1664.25))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1623.0771484375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((1120.056640625, 1662.0830078125), (1172.064453125, 1698.921875))
text1 i.e the prev text is the winner
collision happend with box:1623.0771484375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TruL
((1202.40234375, 1653.4150390625), (1360.5927734375, 1753.0966796875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 814, '2': 723, '3': 816, '4': 957, '5': 1092, '6': 1228, '7': 1321, '8': 1456, '9': 1551, '10': 1685}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xaxBugs.jpg
rotation started
['bE', 'to', 'C0', '1', 'oe', 'E', '3', 'I', 'I', 'e', 'a', '1', 'I', '-', ':', 'I', 'E', 'I', 'I', '€', 'I', '1', 'f', 'I', 'I', 'I', '9', 'S', '2', 'I', 'E', 'I', 'I', '2', 'I', 'I', 'I', 'I', 'a', '2', 'E', 'I', 'E', 'I', 'I', 'I', 'E', 'a', 'a', 'E', 'I', 'E', '€', 'po', '2', '6', 'E', 'p', 'I', 'I', 'I', 'I', '-', 'E', '2', 'lE', 'I', 'I', 'iE', 'I', ':', 'I', 'oo', 'E', 'I', 'nj', 'o', 'oi', 'a', 'EU', '€', '-', 'E', 'E', 'I', 'in', 'e', '2', 'I', 'I', 'I', 'I', 'I', 'A', '1', 'so', '6', 'E', '-', 'E', 'of', 'E', 'F', '-', 'F', 'E', '>', 'E', 'F', 'I', 'E', '2', 'I', 'E', 'E', 'I', 'à', 'I', 'E', 't', 'I', 'I', 'I', 'd8', 'e', 'I', 'i', 'a', 'E', 'I', 'I', 'I', 'S', 'a', 'I', 'I', 'I', 'I', 'I', '-', 'E', 'E', 'I', '8', ':', 'E', 'I', 'E', 'a', ':', 'Lt', '2', 'I', '9', '.', 'E', ':', 'I', '-', 'E', 'E', 'E', '2', 'E', 'E', 'e', 'E', '2', 'I', '2', 'it', 'E', 'I', 'I', 'E', 'I', '-', 'I', 'a', 'a', 'E', 'E', '€', 'I', 'E', 'E', 'E', 'a', 'a', 'I', 'P', 'I', '2', 'L', '€', 'ro', 'à', 'A', '-', 'I', '€', ':', '8', 'a', '-', '-', '-', 'Maue', 'COLA', 'Io']
rotation started
['erep', 'uoosun', 'mou', '09', 'TOM', 'ozrpeloues', 'gou', 'op', '1841', 'Bep', 'Buruten', 'aup', 'ur', 'sjtegop', 'IO', 'esiott', 'oureds', 'XSTI', '947', 'WASUI', '10jourered', 'a', 'out', 'J0', 'onyer', 'y8iy', 'e', 'TAIM', 'OT', 'a', '03', 'omadeoo1', 'LLIBOT', 'Kew', 'popour', 'au4', 'Se', 'SOseoJoUr', 'Surnyzono', 'Jo', 'WAS', '9501-SA-outo', '20th', 'treu', '10M101S', 'SI', 'WAS', 'OUO-SA-OUO', 'Sursn', 'uonorpard', 'B', 'Suryeur', 'sossero', 'Jo', 'roquni', '081er', 'e', 'TIIA', 'sulaigoid', 'ssepprmnur', 'IOJ', '6', 'astot', '2001', '204', 'ogeds', 'peurauo', 'oui', 'ur', 'IBOUUT-uou', '09', 'ues', 'NAS', 'ue', 'Jo', 'Arepunoq', 'dorsioap', 'auL', '8', 'sapou', 'JO', 'Joqunu', 'au7', '01', 'Teuor.odoad', 'Apoamp', 'SI', 'BOIT', 'UOISIDD', 'OU7', 'UT', 'Uotjoipaid', 'e', 'Buryeur', '1OJ', 'paimbal', 'BUILOAL', '2', '-sneD', 'e', 'SABMTE', 'SI', 'Suonnqugsip', 'tetssneD', 'OMI', 'Jo', 'OIDAXIUI', 'V', '9', 'uonnqusip', 'uers', 'Trepoy', 'pue', 'UOISIDOId', 'taomioQ', 'jod', 'R', 'ST', 'BAINO', '(0ou)', 'D11SLA1DBIEU)', 'Surgelodo', 'IOTTOJOT', 'OUL', 'C', ':', 'sioMyou', '204l', 'pemau', 'eur', 'ursquerpe18', 'oyy', 'agnduoo', '04', 'post', 'SI', 'queosop', 'quarp', '-e18', "opya'susras-an", 'anepdnoy', 'posn', 'st', 'uoreBodoadypeg', '20e1', 'f', 'pue.', 'E', 'SIO90OA', '[uttoisuoump-p', 'Aue', 'IOJ', 'ouaur', 'Bote1SIp.pITeA', 'R', 'SI', '(f', 'T)figzmpunsausog-', '=', '10UISSeTO', 'pourl-tou', 'e', 'SI', 'NNDI', '2', 'guourcordop', '101', 'NAS', 'ueyn', 'quoulaunbal', '0861005', 'ouAreoidAL', 'T', 'OSO', 'D0e1', '1082014pnu1', 'sl', 'NNM', '10]', 'suoualess', 'NS', 'o', '', 'IVa/anaL', 'taJou', 'daqtunu', 'TIOI', 'mos', '011M', 'BSLIA', '(sod', 'O1)', '6', '10', 'ANHL', 'suanorTeydeo', 'ur', 'ASTYA', 'umpuey', '1e0p', 'pue']
rotation started
['VRD', 'EIy', '%', '-', ':', 'I', 'Q', '2', 'e', '%', '-', ':', '-', 'C', 'à', '-', '8', '2', '1', '-', 'E', '-', 'a', 'a', 'I', 'E', 'a', 'I', 'a', 'I', '', 'd', 'I', 'I', 'a', 'I', 'is', '-', 'I', 'E', 'e', '1', 'E', 'of', 'I', 'I', '2', 'a', 'I', 'e', '€', 'df', 'I', 'I', 'à', '', 'E', 'a', 'I', ':', 'e', 'E', 'à', 'i', 'I', 'E', '-', 'a', 'e', 'I', 'a', 'I', ':', 'I', '9', '-', 'I', ':', '', 'I', 'of', 'E', 'E', 'E', 'LE', 'E', 'e', 'I', '6', 'I', 'of', 'I', 'I', '1', 'I', ':', 'I', '5', '3', 'of', 'I', ':', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', '1', 'a', 'I', 'e', 'I', '8', 'a', 'e', '.', 'e', 'of', 'à', 'E', '2', 'I', 'a', 'I', '9', 'I', 'ta', 'I', 'U', 'Tr', '6', 'E', 'I', 'I', 'I', 'I', 'E', 'I', 'I', 'I', 'E', 'I', 'i', 'I', '1', 'I', 'I', 's', 'I', 'I', 'I', 'E', 'à', '€', 'I', 'I', 'le', 'is', 'à', ':', 'i', '3', 'I', 'C', 'od', 'I', '-', '2', 'e', '-', ':', 'à', 'I', 'I', ':', '1', 'E', 'a', 'A', '€', 'à', '1', 'E', 'I', 'à', 'i', 'I', 'E', '1', '1', '7', '10', 'to', '7', '00', 'o', '10', 'of']
rotation started
['capital', 'letters', 'and', 'clearhand', 'TRUEOr', 'FALSEin', '9.', '(10', 'pts)', 'Write', 'Write', 'your', 'toll', 'number', 'here:', '-', 'd', 'coi', 'TRUE/FALS', 'SN', 'Statement', 'requirement', 'for', 'KNNI', 'is', 'much', 'larger', '1', 'Typically', 'the', 'storage', 'than', 'SVM', 'for', 'deploymento', 'KNN', 'is', 'non-linear', 'classifier.', 'Tove', 'Tase', '2', 'a', '3', '1-cosmeSimalerityr.m', 'is', 'a', 'valid', 'distancemetric', 'for', 'any', 'd-dimensional', 'Vectors', 'a', 'and', '1', 'Ioue', 'Backpropogation', 'is', 'used', 'to.update', 'the', 'weights,', 'while', 'gra-', 'dient', 'descent', 'is', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'True', 'network.', 'l', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus-', 'plot', 'between', 'Precision', 'and', 'Recall', 'Tu', 'sian', 'distribution', 'Tve', 'Falae', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Treeis', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'originalspace.', 'False', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'Jarge', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'using', 'one-vs-one', 'SVMis', 'slower', 'than', 'Troe', 'one-vs-rest', 'SVM.', '10', 'With', 'a:', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'increases,as', 'the', 'model', 'may', 'learn', 'tocapture', 'True', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data']
OCR detection done with doctr
left top x of SN: 501.875
bottom right x of SN: 961.8437499999999
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:00:50] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : xaxBugs.jpg
[2024/06/28 15:00:51] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:00:52] ppocr DEBUG: dt_boxes num : 42, elapsed : 0.14562320709228516
[2024/06/28 15:00:54] ppocr DEBUG: rec_res num  : 42, elapsed : 2.257235527038574
[2024/06/28 15:00:55] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:00:56] ppocr DEBUG: dt_boxes num : 53, elapsed : 0.18857097625732422
[2024/06/28 15:00:58] ppocr DEBUG: rec_res num  : 53, elapsed : 2.0759971141815186
['8', '45', 'SN Statement', '2', 'The decision boundary of an SVM can be non-linear in the', 'With a high value of the C parameter in SyM, the risk', 'one-ys-rest SVM', 'goneralize.well to new unseen data.', 'specific noise or details in the training data that do.not', 'original.space.', 'of overfitting increases,as the model may learn to capture', 'Tree is directly proportional to the number of nodes.', 'The Time required for making a.prediction in the Decision', 'plot between Precision and Recall...', 'The Receiver Operating Characteristic (RQC) curve is a', 'A.mixture. of two Gaussian distributions is always a Gaus', '1-cosineSimalority(xy) is a valid distance metric for any', 'Sian distribution', 'Backpropogation is used to.update the-weights while gra-', 'd-dimensional vectors x and y.', 'than-SVM-for.deployment..', 'network.', 'Write your roll number here:', '....', '....', 'Trve', 'TRUE/FALS', 'TRUT', 'TrUe', 'True', 'Fase', 'Toue', 'Tre', 'Toue', 'Falee', 'False', 'NAME', 'Ano']
[2024/06/28 15:00:59] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:00:59] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12013411521911621
[2024/06/28 15:01:02] ppocr DEBUG: rec_res num  : 41, elapsed : 2.2071633338928223
['Dne)', 'NS', 'Cou', 'NAME']
[2024/06/28 15:01:02] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:01:03] ppocr DEBUG: dt_boxes num : 58, elapsed : 0.13764238357543945
[2024/06/28 15:01:06] ppocr DEBUG: rec_res num  : 58, elapsed : 2.297236442565918
['OUS', 'Dnel', '::', ':', '.', '6', '8']
[2024/06/28 15:01:06] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:01:07] ppocr DEBUG: dt_boxes num : 42, elapsed : 0.12077951431274414
[2024/06/28 15:01:09] ppocr DEBUG: rec_res num  : 42, elapsed : 2.178001642227173
['Write your toll number here:', 'TRUE/FALS', 'Statement', 'SN', 'Typically the storage requirement lor KNN is much larger', 'Toue', 'than SyM for deployment', 'fase', 'KNN is anon-linear classifier', '2', '1-cosineSimalarity(xy)is a valid distance metric for any', '3', 'Toue', 'd-dimensional vectors x and y', 'Backpropogation is used to.update the-weights,while.gra', 'Toue', 'dient descent is used to compute the gradients in the neural', 'network.', '15', 'The Receiver Operating Characteristic (RoC)curve is a', 'plot between Precision and Recall:', 'A.mixture of two Gaussian distributions is always a Gaus', 'Sian distribution.', 'Trve', 'The Time required for making a.prediction in the Decision', 'Falde', 'Tree is directly.proportional to the number of nodes.', 'The decision boundary of an SvM can be non-linear in the', 'False', 'original.space.', 'For multiclass problems with a large number of classes,', 'tre', 'making aprediction lsmg one-vs-one SVM is slower than', 'one-vs-rest SyM', 'With a high value of the C parameter in S/M, the risk', '10', 'rue', 'of Overfitting increases, as the model may learn to capture', 'specific noise or details in the training data that do not', 'generalize.well to newunseendata.']
OCR detection done
left top x of SN: 552.0
bottom right x of SN: 968.0
left top y of SN: 1763.0
bottom right y of SN: 2057.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/xaxBugs.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : F0nOhUP.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 871.53125
left top x of T/F: 5625.5
bottom right x of T/F: 6828.937500000001
first t/f detection
TRUE
((5716.78125, 1797.21875), (6556.6875, 2122.34375))
TRVE
((5626.468750000001, 2483.59375), (6484.437499999999, 2736.46875))
FALSE
((5617.437499999999, 3043.53125), (6592.812499999999, 3332.53125))
FALSE
((5608.40625, 3576.375), (6538.624999999999, 3856.34375))
TRUE
((5590.343749999999, 4064.0625), (6430.249999999999, 4298.875))
TRUE
((5653.562500000001, 4741.40625), (6493.468750000001, 4994.28125))
TRUE
((5608.40625, 5409.71875), (6457.343749999999, 5689.6875))
TRUE
((5608.40625, 5951.59375), (6394.125, 6186.40625))
FALSE
((5644.531249999999, 6475.40625), (6538.624999999999, 6764.40625))
TRUE
((5599.375000000001, 7089.53125), (6502.5, 7333.375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1869, '2': 2456, '3': 3043, '4': 3639, '5': 4027, '6': 4624, '7': 5409, '8': 6005, '9': 6403, '10': 7179}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': True, '6': True, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xL6QQZg.jpg
OCR detection done with doctr
left top x of SN: 76.55175781250004
bottom right x of SN: 321.8818359375
left top x of T/F: 1400.58984375
bottom right x of T/F: 1879.4482421875
first t/f detection
folu
((1443.2548828125, 643.25), (1614.1181640625, 743.7578125))
collision happend with box:643.25 and text:folu solving on the basis of percent match boxes
the current box specification are
Falle
((1448.2802734375, 776.4228515625), (1606.580078125, 859.341796875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:776.4228515625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Trur
((1433.2041015625, 904.5703125), (1599.0419921875002, 1020.154296875))
text2 i.e the incoming text is the winner
Tver
((1453.3056640624998, 1065.3828125), (1606.580078125, 1168.4033203125))
collision happend with box:1065.3828125 and text:Tver solving on the basis of percent match boxes
the current box specification are
Tyul
((1445.767578125, 1223.6826171875), (1601.5546875, 1331.728515625))
text2 i.e the incoming text is the winner
collision happend with box:1223.6826171875 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Trul
((1433.2041015625, 1369.4189453125), (1604.0673828125, 1454.8505859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1369.4189453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
Teul
((1438.2294921875, 1490.0283203125), (1604.0673828125, 1593.048828125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1490.0283203125 and text:Teul solving on the basis of percent match boxes
the current box specification are
Tru
((1443.2548828125, 1630.7392578125), (1599.0419921875002, 1713.658203125))
text2 i.e the incoming text is the winner
collision happend with box:1630.7392578125 and text:Tru solving on the basis of percent match boxes
the current box specification are
false
((1448.2802734375, 1763.912109375), (1591.50390625, 1849.34375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1763.912109375 and text:false solving on the basis of percent match boxes
the current box specification are
falu
((1438.2294921875, 1919.69921875), (1631.70703125, 2017.6943359375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 620, '2': 781, '3': 889, '4': 1052, '5': 1213, '6': 1374, '7': 1479, '8': 1643, '9': 1751, '10': 1914}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : fq5o2TP.jpg
OCR detection done with doctr
left top x of SN: 574.1250000000001
bottom right x of SN: 988.9374999999999
left top x of T/F: 5255.218749999999
bottom right x of T/F: 6467.687499999999
first t/f detection
Halsc
((5238.124999999999, 2447.46875), (5789.031250000001, 2709.375))
Halse
((5265.218749999999, 2926.125), (5734.843750000001, 3151.90625))
ttue
((5220.062500000001, 3404.78125), (5680.656250000001, 3630.5625))
toul
((5292.312499999999, 4000.84375), (5843.218750000001, 4217.59375))
False
((5292.312499999999, 4506.59375), (5743.875, 4723.34375))
Taue
((5211.031249999999, 5012.34375), (5680.656250000001, 5229.09375))
Truc
((5229.09375, 5491.0), (5725.812499999999, 5707.75))
Frue
((5183.9375, 5978.6875), (5698.718749999999, 6186.40625))
False
((5725.812499999999, 6475.40625), (6141.250000000001, 6692.15625))
Tul
((5292.312499999999, 7017.28125), (5816.125000000001, 7234.03125))
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2447, '2': 3025, '3': 3404, '4': 3964, '5': 4542, '6': 5102, '7': 5472, '8': 6041, '9': 6439, '10': 6981}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5nwXIEF.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tur
((1416.6328125, 643.2529296875), (1519.2529296875, 703.3232421875))
collision happend with box:643.2529296875 and text:Tur solving on the basis of percent match boxes
the current box specification are
True
((1414.1298828125, 778.4111328125), (1526.7617187500002, 838.4814453125))
text2 i.e the incoming text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fosn
((1396.609375, 911.06640625), (1524.2587890625, 971.13671875))
text1 i.e the prev text is the winner
collision happend with box:778.4111328125 and text:True solving on the basis of percent match boxes
the current box specification are
fark
((1529.2646484375, 891.04296875), (1629.3818359374998, 956.119140625))
text2 i.e the incoming text is the winner
Falk
((1424.1416015625, 1058.7392578125), (1551.791015625, 1118.8095703125))
collision happend with box:1058.7392578125 and text:Falk solving on the basis of percent match boxes
the current box specification are
Falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
text2 i.e the incoming text is the winner
collision happend with box:1203.9091796875 and text:Falk solving on the basis of percent match boxes
the current box specification are
faese
((1421.6386718749998, 1349.0791015625), (1541.779296875, 1409.1494140625))
text2 i.e the incoming text is the winner
collision happend with box:1349.0791015625 and text:faese solving on the basis of percent match boxes
the current box specification are
Falu
((1436.65625, 1479.2314453125), (1556.796875, 1539.3017578125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1479.2314453125 and text:Falu solving on the basis of percent match boxes
the current box specification are
ATru
((1369.0771484375, 1624.4013671875), (1521.755859375, 1681.96875))
text2 i.e the incoming text is the winner
collision happend with box:1624.4013671875 and text:ATru solving on the basis of percent match boxes
the current box specification are
Tyuc
((1416.6328125, 1752.05078125), (1534.2705078125, 1797.103515625))
text1 i.e the prev text is the winner
Tru
((1426.6445312500002, 1924.7529296875), (1541.779296875, 1987.326171875))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 906, '2': 790, '3': 896, '4': 1056, '5': 1213, '6': 1376, '7': 1481, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oTtfso4.jpg
OCR detection done with doctr
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
left top x of T/F: 5652.59375
bottom right x of T/F: 6856.031250000001
first t/f detection
Golse
((5789.031250000001, 1652.71875), (6321.874999999999, 1959.78125))
Yalse
((5743.875, 2302.96875), (6222.531250000001, 2573.90625))
Halse
((5698.718749999999, 2899.03125), (6222.531250000001, 3215.125))
Jalse
((5725.812499999999, 3431.875), (6186.406249999999, 3702.8125))
Jalse
((5725.812499999999, 3865.375), (6231.5625, 4082.125))
Yalse
((5716.78125, 4624.0), (6195.437500000001, 4885.90625))
True
((5743.875, 5301.34375), (6150.28125, 5590.34375))
True
((5761.937500000001, 5852.25), (6159.312499999999, 6141.25))
Yalse
((5716.78125, 6376.0625), (6240.593749999999, 6683.125))
True
((5743.875, 7035.34375), (6231.5625, 7360.46875))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1724, '2': 2321, '3': 2908, '4': 3513, '5': 3901, '6': 4506, '7': 5310, '8': 5924, '9': 6330, '10': 7143}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : MbaIt3p.jpg
OCR detection done with doctr
left top x of SN: 65.619140625
bottom right x of SN: 308.435546875
left top x of T/F: 1325.37109375
bottom right x of T/F: 1796.3007812500002
first t/f detection
Trut
((1393.35546875, 625.748046875), (1509.3242187500002, 681.31640625))
collision happend with box:625.748046875 and text:Trut solving on the basis of percent match boxes
the current box specification are
True
((1388.5234375, 753.796875), (1506.908203125, 809.365234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:753.796875 and text:True solving on the basis of percent match boxes
the current box specification are
Fatte
((1398.1875, 886.677734375), (1526.236328125, 942.24609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:886.677734375 and text:Fatte solving on the basis of percent match boxes
the current box specification are
Falh
((1398.1875, 1036.470703125), (1521.404296875, 1092.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1036.470703125 and text:Falh solving on the basis of percent match boxes
the current box specification are
Felte
((1371.6113281249998, 1179.015625), (1494.828125, 1237.0))
text2 i.e the incoming text is the winner
collision happend with box:1179.015625 and text:Felte solving on the basis of percent match boxes
the current box specification are
Fula
((1407.8515625, 1326.392578125), (1526.236328125, 1374.712890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1326.392578125 and text:Fula solving on the basis of percent match boxes
the current box specification are
False
((1410.267578125, 1449.609375), (1535.900390625, 1505.177734375))
text2 i.e the incoming text is the winner
collision happend with box:1449.609375 and text:False solving on the basis of percent match boxes
the current box specification are
Tyut
((1381.275390625, 1577.658203125), (1506.908203125, 1623.5625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1577.658203125 and text:Tyut solving on the basis of percent match boxes
the current box specification are
True
((1407.8515625, 1700.875), (1511.740234375, 1761.275390625))
text2 i.e the incoming text is the winner
Trut
((1374.02734375, 1879.66015625), (1489.99609375, 1935.228515625))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 606, '2': 761, '3': 862, '4': 1019, '5': 1169, '6': 1323, '7': 1427, '8': 1582, '9': 1686, '10': 1841}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : x8FnUkW.jpg
OCR detection done with doctr
left top x of SN: 80.04296875000004
bottom right x of SN: 318.587890625
left top x of T/F: 1320.751953125
bottom right x of T/F: 1778.982421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 669.75390625))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text2 i.e the incoming text is the winner
collision happend with box:728.298828125 and text:True solving on the basis of percent match boxes
the current box specification are
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 995.263671875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
EER
((1349.486328125, 1145.138671875), (1457.208984375, 1201.341796875))
text1 i.e the prev text is the winner
collision happend with box:995.263671875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1576.640625, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Falle
((1351.828125, 1285.646484375), (1450.18359375, 1332.482421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1285.646484375 and text:Falle solving on the basis of percent match boxes
the current box specification are
Falye
((1340.119140625, 1398.052734375), (1454.8671875, 1454.255859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1398.052734375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1536.21875), (1438.474609375, 1583.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
RER
((1363.537109375, 1660.333984375), (1438.474609375, 1695.4609375))
text1 i.e the prev text is the winner
collision happend with box:1536.21875 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1641.599609375), (1581.32421875, 1700.14453125))
text2 i.e the incoming text is the winner
True
((1354.169921875, 1814.892578125), (1464.234375, 1871.095703125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 838, '2': 735, '3': 836, '4': 988, '5': 1135, '6': 1285, '7': 1386, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : LSxnasq.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6278.031249999999
left top x of SN: 601.2187500000001
bottom right x of SN: 988.9374999999999
first t/f detection
TRUE
((5472.9375, 1643.6875), (6069.0, 1905.59375))
collision happend with box:1643.6875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Pette
((5147.8125, 1788.1875), (5761.937500000001, 2095.25))
text1 i.e the prev text is the winner
FeasFASE
((5156.84375, 2221.6875), (6204.46875, 2537.78125))
FACSE
((5147.8125, 2826.78125), (5888.374999999999, 3088.6875))
TRUE
((5165.875, 3386.71875), (5870.312500000001, 3630.5625))
TRUE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
ATRUE
((5129.75, 4353.0625), (6069.0, 4633.03125))
FAGSE
((5138.78125, 4876.875), (5852.25, 5129.75))
PALSE
((5274.250000000001, 5192.96875), (5969.656249999999, 5400.6875))
EUe
((5183.9375, 5364.5625), (5798.0625, 5581.3125))
FALSE
((5138.78125, 5834.1875), (5861.281249999999, 6177.375))
FALSE
((5229.09375, 6348.96875), (5951.593750000001, 6737.3125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2483, '3': 2853, '4': 3413, '5': 3946, '6': 4497, '7': 4858, '8': 5427, '9': 5807, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : q2ejgty.jpg
OCR detection done with doctr
left top x of SN: 70.46875
bottom right x of SN: 313.9453125
left top x of T/F: 1387.7734375
bottom right x of T/F: 1866.9140624999998
first t/f detection
Truc
((1453.6328125, 650.0), (1567.890625, 700.78125))
collision happend with box:650.0 and text:Truc solving on the basis of percent match boxes
the current box specification are
True
((1428.2421875, 787.109375), (1539.9609375, 850.5859375))
text2 i.e the incoming text is the winner
collision happend with box:787.109375 and text:True solving on the basis of percent match boxes
the current box specification are
Falie
((1458.7109375000002, 914.0625), (1580.5859375, 972.4609375))
text2 i.e the incoming text is the winner
collision happend with box:914.0625 and text:Falie solving on the basis of percent match boxes
the current box specification are
Falk
((1443.4765624999998, 1071.484375), (1560.2734375, 1127.34375))
text2 i.e the incoming text is the winner
collision happend with box:1071.484375 and text:Falk solving on the basis of percent match boxes
the current box specification are
Fale
((1435.859375, 1231.4453125), (1547.578125, 1292.3828125))
text2 i.e the incoming text is the winner
collision happend with box:1231.4453125 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falje
((1430.7812499999998, 1383.7890625), (1552.65625, 1434.5703125))
text2 i.e the incoming text is the winner
collision happend with box:1383.7890625 and text:Falje solving on the basis of percent match boxes
the current box specification are
Falte
((1446.0156250000002, 1508.203125), (1565.3515625, 1569.140625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1508.203125 and text:Falte solving on the basis of percent match boxes
the current box specification are
True
((1458.7109375000002, 1665.625), (1565.3515625, 1716.40625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1665.625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1456.1718749999998, 1782.421875), (1547.578125, 1838.28125))
text2 i.e the incoming text is the winner
True
((1443.4765624999998, 1980.46875), (1534.8828125000002, 2036.328125))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 908, '2': 799, '3': 908, '4': 1071, '5': 1233, '6': 1396, '7': 1505, '8': 1668, '9': 1777, '10': 1942}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : Icxu8bH.jpg
OCR detection done with doctr
left top x of T/F: 1238.18359375
bottom right x of T/F: 1696.828125
left top x of SN: 63.48046875000004
bottom right x of SN: 302.123046875
first t/f detection
falte
((1269.294921875, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falte solving on the basis of percent match boxes
the current box specification are
Falie
((1281.0234374999998, 727.16796875), (1428.802734375, 806.921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:727.16796875 and text:Falie solving on the basis of percent match boxes
the current box specification are
Tyue
((1273.986328125, 865.564453125), (1414.7285156249998, 950.009765625))
text1 i.e the prev text is the winner
Tvel
((1288.0605468750002, 1006.306640625), (1428.802734375, 1090.751953125))
collision happend with box:1006.306640625 and text:Tvel solving on the basis of percent match boxes
the current box specification are
lyue
((1290.40625, 1156.431640625), (1424.111328125, 1245.568359375))
text2 i.e the incoming text is the winner
collision happend with box:1156.431640625 and text:lyue solving on the basis of percent match boxes
the current box specification are
Tyul
((1285.71484375, 1287.791015625), (1421.7656250000002, 1358.162109375))
text2 i.e the incoming text is the winner
collision happend with box:1287.791015625 and text:Tyul solving on the basis of percent match boxes
the current box specification are
Inul
((1288.0605468750002, 1405.076171875), (1426.45703125, 1489.521484375))
text1 i.e the prev text is the winner
Mrue
((1278.677734375, 1527.052734375), (1417.07421875, 1606.806640625))
collision happend with box:1527.052734375 and text:Mrue solving on the basis of percent match boxes
the current box specification are
Fale
((1285.71484375, 1656.06640625), (1410.037109375, 1726.4375))
text2 i.e the incoming text is the winner
collision happend with box:1656.06640625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Falu
((1278.677734375, 1796.80859375), (1414.7285156249998, 1876.5625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'UNASSIGNED', '10': 'NULL'}
the unassigned keys are ['1', '9']
the assigned keys are ['2', '3', '4', '5', '6', '7', '8', '10']
['2', '3', '4', '5', '6', '7', '8', '10', '2', '3', '4', '5', '6', '7', '8', '10']
printing the number dict y_coordinate
{'2': 743, '3': 844, '4': 999, '5': 1151, '6': 1292, '7': 1391, '8': 1538, '10': 1787, '1': 443}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 6bqo0C9.jpg
OCR detection done with doctr
left top x of SN: 80.26367187499997
bottom right x of SN: 302.158203125
left top x of T/F: 932.041015625
bottom right x of T/F: 1320.8984375
first t/f detection
True
((953.3203125, 412.5), (1037.109375, 462.451171875))
collision happend with box:412.5 and text:True solving on the basis of percent match boxes
the current box specification are
False
((958.154296875, 491.455078125), (1058.056640625, 538.18359375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:491.455078125 and text:False solving on the basis of percent match boxes
the current box specification are
false
((958.154296875, 570.41015625), (1067.724609375, 623.583984375))
text2 i.e the incoming text is the winner
collision happend with box:570.41015625 and text:false solving on the basis of percent match boxes
the current box specification are
is
((914.6484375, 683.203125), (935.595703125, 705.76171875))
text1 i.e the prev text is the winner
collision happend with box:570.41015625 and text:false solving on the basis of percent match boxes
the current box specification are
True
((956.54296875, 673.53515625), (1051.611328125, 720.263671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:673.53515625 and text:True solving on the basis of percent match boxes
the current box specification are
Pre-
((892.08984375, 783.10546875), (938.818359375, 808.88671875))
text1 i.e the prev text is the winner
collision happend with box:673.53515625 and text:True solving on the basis of percent match boxes
the current box specification are
fa
((954.9316406250001, 773.4375), (1008.10546875, 823.388671875))
text1 i.e the prev text is the winner
collision happend with box:673.53515625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1014.5507812499999, 778.271484375), (1093.505859375, 820.166015625))
text2 i.e the incoming text is the winner
collision happend with box:778.271484375 and text:True solving on the basis of percent match boxes
the current box specification are
False
((975.87890625, 860.44921875), (1074.169921875, 900.732421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:860.44921875 and text:False solving on the basis of percent match boxes
the current box specification are
distribution.
((814.74609375, 881.396484375), (940.4296875, 912.01171875))
text2 i.e the incoming text is the winner
collision happend with box:881.396484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((864.697265625, 950.68359375), (946.875, 979.6875))
text1 i.e the prev text is the winner
collision happend with box:881.396484375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
True
((979.1015625, 950.68359375), (1062.890625, 992.578125))
text1 i.e the prev text is the winner
Space.
((880.810546875, 1055.419921875), (946.875, 1086.03515625))
collision happend with box:1055.419921875 and text:Space. solving on the basis of percent match boxes
the current box specification are
False
((983.935546875, 1037.6953125), (1074.169921875, 1076.3671875))
text2 i.e the incoming text is the winner
collision happend with box:1037.6953125 and text:False solving on the basis of percent match boxes
the current box specification are
prediction
((848.583984375, 1123.095703125), (951.708984375, 1152.099609375))
text1 i.e the prev text is the winner
collision happend with box:1037.6953125 and text:False solving on the basis of percent match boxes
the current box specification are
False
((988.76953125, 1124.70703125), (1072.55859375, 1163.37890625))
text2 i.e the incoming text is the winner
collision happend with box:1124.70703125 and text:False solving on the basis of percent match boxes
the current box specification are
False.
((1011.328125, 1226.220703125), (1120.8984375, 1269.7265625))
text2 i.e the incoming text is the winner
collision happend with box:1226.220703125 and text:False. solving on the basis of percent match boxes
the current box specification are
the
((921.09375, 1258.447265625), (958.154296875, 1284.228515625))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 594, '2': 523, '3': 592, '4': 697, '5': 799, '6': 902, '7': 971, '9': 1145, '8': 1076, '10': 1248}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ucH9S9s.jpg
OCR detection done with doctr
left top x of SN: 709.5937500000001
bottom right x of SN: 1115.375
left top x of T/F: 4984.28125
bottom right x of T/F: 6160.625
first t/f detection
TRVE
((5093.625, 1995.90625), (5599.375000000001, 2212.65625))
TRVE
((5111.6875, 2483.59375), (5617.437499999999, 2691.3125))
d-dimensional
((4163.40625, 2926.125), (4994.28125, 3160.9375))
collision happend with box:2926.125 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5156.84375, 2953.21875), (5635.5, 3160.9375))
true and false collision so given priority to text2 which is the incoming text
is
((4894.9375, 3513.15625), (5021.375, 3648.625))
collision happend with box:3513.15625 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5202.0, 3458.96875), (5716.78125, 3711.84375))
text2 i.e the incoming text is the winner
Pre-
((4786.5625, 4073.09375), (5048.46875, 4226.625))
collision happend with box:4073.09375 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALJE
((5238.124999999999, 4073.09375), (5752.906249999999, 4280.8125))
text2 i.e the incoming text is the winner
distribution.
((4353.0625, 4614.96875), (5084.59375, 4813.65625))
collision happend with box:4614.96875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((5283.28125, 4587.875), (5779.999999999999, 4768.5))
text1 i.e the prev text is the winner
directly
((4651.09375, 5003.3125), (5102.65625, 5174.90625))
collision happend with box:5003.3125 and text:directly solving on the basis of percent match boxes
the current box specification are
FALSE
((5301.343750000001, 5030.40625), (5761.937500000001, 5211.03125))
true and false collision so given priority to text2 which is the incoming text
space.
((4750.4375, 5581.3125), (5129.75, 5743.875))
collision happend with box:5581.3125 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5301.343750000001, 5527.125), (5725.812499999999, 5698.71875))
text2 i.e the incoming text is the winner
prediction
((4587.875, 5951.59375), (5165.875, 6114.15625))
collision happend with box:5951.59375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRVE
((5373.593749999999, 5933.53125), (5888.374999999999, 6141.25))
text2 i.e the incoming text is the winner
overfitting
((4416.28125, 6502.5), (5012.34375, 6674.09375))
collision happend with box:6502.5 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUE
((5391.65625, 6547.65625), (5798.0625, 6710.21875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:6547.65625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
the
((5003.3125, 6674.09375), (5220.062500000001, 6818.59375))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'NULL', '8': True, '9': True, '10': 'UNASSIGNED'}
the unassigned keys are ['10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9']
that question which is editted is 10
the value of y is 6350
printing the number dict y_coordinate
{'1': 2420, '2': 2926, '3': 3269, '4': 3784, '5': 4298, '6': 4822, '7': 5165, '9': 6050, '8': 5698, '10': 6350}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': False, '5': True, '6': False, '7': 'NULL', '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : uaLdeF8.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 314.736328125
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 509.712890625), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:509.712890625 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 619.27734375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 676.44140625), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:676.44140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 879.69140625), (954.390625, 916.212890625))
text2 i.e the incoming text is the winner
collision happend with box:879.69140625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 963.849609375), (967.0937500000001, 1011.486328125))
text2 i.e the incoming text is the winner
collision happend with box:963.849609375 and text:F solving on the basis of percent match boxes
the current box specification are
T
((925.80859375, 1059.123046875), (948.0390625, 1079.765625))
text2 i.e the incoming text is the winner
collision happend with box:1059.123046875 and text:T solving on the basis of percent match boxes
the current box specification are
T
((914.6933593750001, 1132.166015625), (946.451171875, 1163.923828125))
text2 i.e the incoming text is the winner
collision happend with box:1132.166015625 and text:T solving on the basis of percent match boxes
the current box specification are
the.
((838.474609375, 1263.9609375), (878.171875, 1290.955078125))
text2 i.e the incoming text is the winner
collision happend with box:1263.9609375 and text:the. solving on the basis of percent match boxes
the current box specification are
T
((922.6328125, 1238.5546875), (954.390625, 1270.3125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 420, '2': 522, '3': 589, '4': 690, '5': 790, '6': 892, '7': 960, '8': 1062, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rIRR2QT.jpg
OCR detection done with doctr
left top x of SN: 61.4755859375
bottom right x of SN: 306.8056640625
left top x of T/F: 1385.513671875
bottom right x of T/F: 1869.3974609375002
first t/f detection
falke
((1433.2041015625, 630.6865234375), (1599.0419921875002, 733.70703125))
collision happend with box:630.6865234375 and text:falke solving on the basis of percent match boxes
the current box specification are
Falke
((1433.2041015625, 761.3466796875), (1596.529296875, 844.265625))
text2 i.e the incoming text is the winner
collision happend with box:761.3466796875 and text:Falke solving on the basis of percent match boxes
the current box specification are
Tiur
((1425.6660156250002, 902.0576171875), (1591.50390625, 1002.5654296875))
text2 i.e the incoming text is the winner
collision happend with box:902.0576171875 and text:Tiur solving on the basis of percent match boxes
the current box specification are
Tyor
((1443.2548828125, 1052.8193359375), (1606.580078125, 1158.3525390625))
text1 i.e the prev text is the winner
Tul
((1450.79296875, 1213.6318359375), (1601.5546875, 1316.65234375))
collision happend with box:1213.6318359375 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1438.2294921875, 1359.3681640625), (1606.580078125, 1444.7998046875))
text2 i.e the incoming text is the winner
collision happend with box:1359.3681640625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1450.79296875, 1477.46484375), (1611.6054687500002, 1580.4853515625))
text2 i.e the incoming text is the winner
collision happend with box:1477.46484375 and text:True solving on the basis of percent match boxes
the current box specification are
Frue
((1450.79296875, 1618.17578125), (1604.0673828125, 1706.1201171875))
text2 i.e the incoming text is the winner
collision happend with box:1618.17578125 and text:Frue solving on the basis of percent match boxes
the current box specification are
Falye
((1458.3310546875, 1751.3486328125), (1601.5546875, 1836.7802734375))
text2 i.e the incoming text is the winner
collision happend with box:1751.3486328125 and text:Falye solving on the basis of percent match boxes
the current box specification are
False
((1453.3056640624998, 1909.6484375), (1609.0927734375, 2002.6181640625))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 907, '2': 794, '3': 902, '4': 1072, '5': 1228, '6': 1387, '7': 1505, '8': 1655, '9': 1763, '10': 1929}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mMcX0kT.jpg
OCR detection done with doctr
left top x of SN: 384.4687500000001
bottom right x of SN: 808.3125000000001
left top x of T/F: 5724.843750000001
bottom right x of T/F: 7009.562499999999
first t/f detection
FALSE
((5816.125000000001, 1986.875), (6475.40625, 2230.71875))
TRU6
((5770.96875, 2619.0625), (6376.062499999999, 2862.90625))
FALSE
((5734.843750000001, 3260.28125), (6385.093750000001, 3468.0))
TRU
((5680.656250000001, 3793.125), (6041.90625, 3982.78125))
TRUE
((5680.656250000001, 4262.75), (6222.531250000001, 4488.53125))
FALSE
((5879.34375, 4903.96875), (6583.78125, 5192.96875))
TRVE
((5861.281249999999, 5716.78125), (6556.6875, 5969.65625))
TRUE
((5816.125000000001, 6276.71875), (6385.093750000001, 6484.4375))
FALSE
((5834.187499999999, 6827.625), (6502.5, 7071.46875))
TRVE
((5743.875, 7450.78125), (6249.625000000001, 7658.5))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2619, '3': 3233, '4': 3847, '5': 4262, '6': 4876, '7': 5698, '8': 6312, '9': 6728, '10': 7550}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : vhKiEc5.jpg
OCR detection done with doctr
left top x of SN: 456.7187499999999
bottom right x of SN: 862.5000000000001
left top x of T/F: 5661.624999999999
bottom right x of T/F: 6846.999999999999
first t/f detection
FALSE
((5816.125000000001, 2077.1875), (6321.874999999999, 2248.78125))
FALSE
((5816.125000000001, 2673.25), (6385.093750000001, 2871.9375))
FALSE
((5789.031250000001, 3296.40625), (6330.906250000001, 3504.125))
TRVE
((5716.78125, 3838.28125), (6186.406249999999, 4009.875))
TRUE
((5752.906249999999, 4316.9375), (6186.406249999999, 4479.5))
FALSE
((5725.812499999999, 4967.1875), (6213.499999999999, 5138.78125))
TRVE
((5752.906249999999, 5671.625), (6168.343750000001, 5852.25))
FALSE
((5779.999999999999, 6222.53125), (6222.531250000001, 6394.125))
TRUE
((5725.812499999999, 6764.40625), (6132.218749999999, 6945.03125))
TRUE
((5707.750000000001, 7360.46875), (6123.1875, 7532.0625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2664, '3': 3251, '4': 3856, '5': 4244, '6': 4831, '7': 5617, '8': 6204, '9': 6592, '10': 7369}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : frSrwVi.jpg
OCR detection done with doctr
left top x of SN: 465.7500000000001
bottom right x of SN: 880.5624999999999
left top x of T/F: 5173.9375
bottom right x of T/F: 6404.46875
first t/f detection
TRWE
((5202.0, 2185.5625), (5761.937500000001, 2402.3125))
TRUE
((5138.78125, 2682.28125), (5816.125000000001, 2926.125))
FALSE
((5229.09375, 3151.90625), (5834.187499999999, 3395.75))
FALSE
((5202.0, 3738.9375), (5852.25, 3982.78125))
FALSE
((5220.062500000001, 4362.09375), (5770.96875, 4578.84375))
FALSE
((5256.1875, 4795.59375), (5843.218750000001, 5057.5))
FALSE
((5202.0, 5292.3125), (5789.031250000001, 5509.0625))
TRUETKUE
((5247.156250000001, 5816.125), (6240.593749999999, 6023.84375))
FALSE
((5256.1875, 6249.625), (5861.281249999999, 6502.5))
T
((5247.156250000001, 6872.78125), (5409.718750000001, 7044.375))
collision happend with box:6872.78125 and text:T solving on the basis of percent match boxes
the current box specification are
RuE
((5391.65625, 6845.6875), (5807.093749999999, 7062.4375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
the unassigned keys are ['8']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '9', '10']
['1', '2', '3', '4', '5', '6', '7', '9', '10', '1', '2', '3', '4', '5', '6', '7', '9', '10']
printing the number dict y_coordinate
{'1': 2257, '2': 2826, '3': 3215, '4': 3811, '5': 4362, '6': 4940, '7': 5319, '9': 6303, '10': 6872}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': 'UNASSIGNED', '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : VyHTNQ9.jpg
OCR detection done with doctr
left top x of T/F: 5074.59375
bottom right x of T/F: 6305.124999999999
left top x of SN: 601.2187500000001
bottom right x of SN: 1007.0
first t/f detection
FALSE
((5147.8125, 2194.59375), (5626.468750000001, 2411.34375))
FALSE
((5211.031249999999, 2736.46875), (5662.59375, 2953.21875))
d-dimensional
((4307.90625, 3151.90625), (5120.71875, 3386.71875))
collision happend with box:3151.90625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FALSE
((5292.312499999999, 3169.96875), (5743.875, 3386.71875))
true and false collision so given priority to text2 which is the incoming text
is
((5030.40625, 3729.90625), (5156.84375, 3865.375))
collision happend with box:3729.90625 and text:is solving on the basis of percent match boxes
the current box specification are
TRUE
((5292.312499999999, 3666.6875), (5698.718749999999, 3883.4375))
text2 i.e the incoming text is the winner
Pre-
((4940.09375, 4271.78125), (5202.0, 4425.3125))
collision happend with box:4271.78125 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRUE
((5319.406249999999, 4262.75), (5761.937500000001, 4443.375))
text2 i.e the incoming text is the winner
TRUE
((5337.46875, 4768.5), (5789.031250000001, 4985.25))
collision happend with box:4768.5 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((4515.625, 4831.71875), (5247.156250000001, 5030.40625))
text2 i.e the incoming text is the winner
directly
((4822.6875, 5211.03125), (5283.28125, 5382.625))
collision happend with box:5211.03125 and text:directly solving on the basis of percent match boxes
the current box specification are
TRUe
((5427.781249999999, 5211.03125), (5825.15625, 5400.6875))
text2 i.e the incoming text is the winner
space.
((4940.09375, 5798.0625), (5319.406249999999, 5960.625))
collision happend with box:5798.0625 and text:space. solving on the basis of percent match boxes
the current box specification are
TRUE
((5481.968749999999, 5707.75), (5915.468749999999, 5915.46875))
text2 i.e the incoming text is the winner
prediction
((4768.5, 6168.34375), (5355.531250000001, 6339.9375))
collision happend with box:6168.34375 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRUC
((5518.093750000001, 6150.28125), (5996.749999999999, 6358.0))
text2 i.e the incoming text is the winner
overfitting
((4605.9375, 6755.375), (5211.031249999999, 6926.96875))
collision happend with box:6755.375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRUe.
((5617.437499999999, 6827.625), (6114.156250000001, 6999.21875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:6827.625 and text:TRUe. solving on the basis of percent match boxes
the current box specification are
the
((5211.031249999999, 6917.9375), (5427.781249999999, 7071.46875))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 2564, '2': 3115, '3': 3486, '4': 4036, '5': 4596, '6': 5156, '7': 5545}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': True, '4': True, '5': True, '6': True, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y6Vf5sD.jpg
OCR detection done with doctr
left top x of T/F: 5390.687499999999
bottom right x of T/F: 6621.21875
left top x of SN: 258.03125
bottom right x of SN: 672.8437500000001
first t/f detection
FALSE
((5472.9375, 1914.625), (6096.09375, 2131.375))
TRUE
((5436.812500000001, 2546.8125), (5960.625, 2727.4375))
TRUE
((5454.874999999999, 3142.875), (5951.593750000001, 3368.65625))
FALSE
((5454.874999999999, 3693.78125), (6087.062500000001, 3892.46875))
FALSE
((5509.062499999999, 4127.28125), (6105.124999999999, 4325.96875))
TRUE
((5427.781249999999, 4804.625), (5915.468749999999, 4976.21875))
FALSE
((5509.062499999999, 5491.0), (6105.124999999999, 5662.59375))
TRUE
((5427.781249999999, 6059.96875), (5933.53125, 6276.71875))
FALSE
((5653.562500000001, 6403.15625), (6285.75, 6610.875))
T&Ur
((5472.9375, 6592.8125), (6032.875000000001, 6809.5625))
TRUE
((5409.718750000001, 7261.125), (5987.71875, 7468.84375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2023, '2': 2601, '3': 3179, '4': 3766, '5': 4154, '6': 4741, '7': 5527, '8': 6114, '9': 6511, '10': 7297}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : wNpuM8I.jpg
OCR detection done with doctr
left top x of SN: 107.65624999999997
bottom right x of SN: 329.55078125
left top x of T/F: 962.6562500000001
bottom right x of T/F: 1346.6796875
first t/f detection
T
((1032.275390625, 415.72265625), (1085.44921875, 464.0625))
collision happend with box:415.72265625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((985.546875, 502.734375), (1035.498046875, 552.685546875))
text2 i.e the incoming text is the winner
collision happend with box:502.734375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 586.5234375), (1025.830078125, 628.41796875))
text2 i.e the incoming text is the winner
collision happend with box:586.5234375 and text:T solving on the basis of percent match boxes
the current box specification are
F
((1000.0488281250001, 670.3125), (1033.88671875, 721.875))
text2 i.e the incoming text is the winner
collision happend with box:670.3125 and text:F solving on the basis of percent match boxes
the current box specification are
T
((1016.162109375, 779.8828125), (1067.724609375, 825.0))
text2 i.e the incoming text is the winner
collision happend with box:779.8828125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((983.935546875, 881.396484375), (1035.498046875, 924.90234375))
text2 i.e the incoming text is the winner
collision happend with box:881.396484375 and text:T solving on the basis of percent match boxes
the current box specification are
or
((1000.0488281250001, 966.796875), (1085.44921875, 1013.525390625))
text2 i.e the incoming text is the winner
collision happend with box:966.796875 and text:or solving on the basis of percent match boxes
the current box specification are
F
((985.546875, 1045.751953125), (1019.384765625, 1089.2578125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 406, '2': 509, '3': 578, '4': 679, '5': 783, '6': 883, '7': 952, '8': 1055, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : NGhWj87.jpg
OCR detection done with doctr
left top x of T/F: 5291.343750000001
bottom right x of T/F: 6476.718750000001
left top x of SN: 673.4687499999999
bottom right x of SN: 1088.28125
first t/f detection
TRUE
((5355.531250000001, 2212.65625), (5834.187499999999, 2429.40625))
TRUF
((5310.375, 2691.3125), (5825.15625, 2899.03125))
TRUE
((5319.406249999999, 3169.96875), (5834.187499999999, 3377.6875))
TRUE
((5355.531250000001, 3639.59375), (5807.093749999999, 3856.34375))
FALSE
((5346.499999999999, 4316.9375), (5906.4375, 4488.53125))
FALSE
((5301.343750000001, 4849.78125), (5825.15625, 5030.40625))
FALSE
((5373.593749999999, 5310.375), (5987.71875, 5481.96875))
TKUE
((5319.406249999999, 5843.21875), (5698.718749999999, 6014.8125))
TRUE
((5373.593749999999, 6276.71875), (5816.125000000001, 6484.4375))
TRUE
((5391.65625, 6890.84375), (5770.96875, 7071.46875))
the final dict without editing {'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2330, '2': 2880, '3': 3251, '4': 3811, '5': 4362, '6': 4931, '7': 5301, '8': 5870, '9': 6258, '10': 6836}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': True, '5': False, '6': False, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : jx1zqEB.jpg
OCR detection done with doctr
left top x of SN: 99.76171875
bottom right x of SN: 319.21875
left top x of T/F: 893.103515625
bottom right x of T/F: 1254.861328125
first t/f detection
Efte
((913.7265625, 358.1484375), (988.087890625, 386.982421875))
collision happend with box:358.1484375 and text:Efte solving on the basis of percent match boxes
the current box specification are
FALSE
((921.314453125, 400.640625), (1004.78125, 430.9921875))
text2 i.e the incoming text is the winner
collision happend with box:400.640625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((912.208984375, 459.826171875), (1004.78125, 496.248046875))
text2 i.e the incoming text is the winner
collision happend with box:459.826171875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((907.65625, 538.740234375), (986.5703125, 575.162109375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:538.740234375 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((913.7265625, 669.251953125), (986.5703125, 699.603515625))
text1 i.e the prev text is the winner
TRVE
((916.76171875, 734.5078125), (992.640625, 769.412109375))
collision happend with box:734.5078125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FALSE
((910.69140625, 839.220703125), (995.67578125, 874.125))
text2 i.e the incoming text is the winner
collision happend with box:839.220703125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((910.69140625, 924.205078125), (997.193359375, 959.109375))
text2 i.e the incoming text is the winner
collision happend with box:924.205078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FAL
((918.279296875, 1015.259765625), (971.39453125, 1045.611328125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1015.259765625 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((971.39453125, 1016.77734375), (1001.74609375, 1044.09375))
text1 i.e the prev text is the winner
collision happend with box:1015.259765625 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((919.796875, 1083.55078125), (1000.228515625, 1112.384765625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Tef
((919.796875, 1185.228515625), (1001.74609375, 1220.1328125))
text1 i.e the prev text is the winner
collision happend with box:1083.55078125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((925.8671875, 1239.861328125), (1013.88671875, 1274.765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['2', '4', '5', '6']
the assigned keys are ['1', '3', '7', '8', '9', '10']
['1', '3', '7', '8', '9', '10', '1', '3', '7', '8', '9', '10']
printing the number dict y_coordinate
{'3': 549, '1': 543, '7': 934, '8': 1044, '9': 1115, '10': 1221}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 4us8p1f.jpg
OCR detection done with doctr
left top x of SN: 239.9687499999999
bottom right x of SN: 645.7500000000001
left top x of T/F: 5336.499999999999
bottom right x of T/F: 6567.03125
first t/f detection
TRUE
((5400.687499999999, 1761.09375), (5969.656249999999, 1968.8125))
FALSE
((5409.718750000001, 2357.15625), (5951.593750000001, 2564.875))
FALSE
((5436.812500000001, 2944.1875), (5942.562499999999, 3160.9375))
TRUE
((5409.718750000001, 3513.15625), (5960.625, 3711.84375))
TRUE
((5382.625000000001, 3964.71875), (5915.468749999999, 4172.4375))
FALSE
((5409.718750000001, 4633.03125), (6050.937499999999, 4876.875))
TRUE
((5400.687499999999, 5310.375), (5951.593750000001, 5527.125))
TRUE
((5391.65625, 5834.1875), (5915.468749999999, 6014.8125))
Tor
((5418.75, 6394.125), (5942.562499999999, 6610.875))
TRUE
((5463.906250000001, 7008.25), (6032.875000000001, 7206.9375))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1824, '2': 2420, '3': 2998, '4': 3585, '5': 3973, '6': 4569, '7': 5346, '8': 5933, '9': 6321, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yc12lqc.jpg
rotation started
['bf', '3', 'N', 'I', 'E', 'I', '9', 'E', 'L', 'I', '2', 'I', 'p', '8', 'I', 'it', 'e', 'E', 'E', '8', 'E', 'f', 'I', 'E', 'E', 'I', '8', 'E', 'I', 's', 'I', 'E', 'E', 'I', 'a', 'I', '8', 'I', 'f', 'it', 'I', '2', 'I', 'I', 'E', 'E', 'I', 'E', 'it', 'I', 'E', 'E', 'f', 'a', 'Q', 'I', 'I', 'E', 'B', 'I', '8', 'it', '8', 'I', 'I', 'I', 'f', 'I', 'I', '8', '8', '2', 'a', 'E', '1', 'I', 'E', 'E', 'I', 'E', '1', '€', 'E', 'I', '€', 'E', 'I', 'E', 'e', '8', 'I', 'it', 'I', 'I', 'I', 'E', 'I', 'a', '2', 'I', 'of', '8', 'I', 'I', 'E', 'I', 'E', '8', '2', 'I', 'I', 'E', 'I', 'I', 'I', ':', 'E', 'E', 'I', 'p', 't', 'E', 'E', '€', '9', 'f', 'I', 'E', 'I', 'e', 'E', 'a', 'E', 'I', 'I', 'I', 't', 'E', 'I', 'I', '1', 'E', 'F', 'I', 'I', 'I', 'F', '6o', '00', '1', 'o', 'CT', '4', '11', '2', 'so', 'a', 'E', '-', 'a', '9', 'E', 'E', 'i', 'I', 'E', 'E', 'F', '>', 'I', 'P', '&', 'I', 'I', 'I', '-', 'I', 'E', 'e', 'I', 'I', 'I', 'I', 'E', '2', 'I', 'I', 'E', '2', 'it', 'E', 'I', 'E', '2', 'E', 'I', 'I', 'it', 'I', 'I', 'E', '2', '€', 'E', 'E', ':', 'E', '€', '-', '2', 'I', '-', 'L', 'RE', 'te', '4', 'D', 'A', 'Din', 'X', 'MEd']
rotation started
['"ezep', 'ueosun', "'mou", '09', 'TTOM', 'azire.ioues', 'gou', 'op', 'geyn', 'egep', 'Surureng', '3041', 'eua', 'uT', 'smegep', 'JO', 'OSIOU', 'oyreds', 'amadeo', '01', 'ureol', 'Keur', 'lapou', 'au4', 'se', "'soseaIo", '-ur', 'SurayIeno', 'Jo', 'YSLI', 'eun', "'WAS", 'UI', 'pojoure.red', 'D', 'au4', 'Jo', 'anyea', 'y8ry', 'e', 'YAIM', 'OT', 'uororpaad', 'B', 'Suryeur', "'sossero", 'Jo', 'roqunu', 'a8rel', 'e', 'YAIM', 'suarqoid', 'sseppramur', 'JOI', '6', '2091', "'WAS", '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-QUO', 'Sursn', '35743', 'aoeds', 'TeurBto', 'auy', 'UI', 'JBOUIT-uou', 'aq', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorsioap', 'OUL', '8', '3S789', "'sapou", 'Jo', 'poqunu', 'au7', '01', 'Teuorniodoud', 'Amperp', 'SI', 'BOIL', 'UOISIDOC', 'euy', 'UI', 'uororpard', 'e', 'Suryeur', 'JOJ', 'pammbar', 'OUIL', 'OUL', 'L', '95743', '"uornquasip', 'uerssnes', 'B', 'Skenre', 'SI', 'suorgnqugsip', 'uerssnes', 'OM7', 'Jo', 'amgXIu', 'V', '9', '30dL', '-ald', 'UOomgOq', 'nord', 'B', 'SI', 'OAINO', '(0OH)', 'orsutegpereud', 'Surge.rado', 'IOAIODOY', 'OUL', 'S', '2574', 'SI', 'quaosap', 'querpe1s', 'TIYM', "'SAU8IOM", 'auy', 'agepdn', '07', 'pasn', 'SI', 'uoneBodoxdypeg', '4', 'TreDoy', 'pue', 'UOISIO', '"YIOMIOU', '[emeu', 'eu7', 'UI', 'squerpers', 'au7', 'agnduoo', '01', 'pesn', ':f', 'pue', 'I', 'SIO9OOA', '308L', 'Teuorsueuump-p', 'Kue', 'IOJ', 'olIgauI', 'aouegsip', 'PITBA', 'B', 'SI', '(A-z/Aguopuagousoy', '-', 'I', '&', 'poyisselo', 'JBOUII-uou', 'e', 'SI', 'NNY', '2', 'quotutemmbar', 'a8e10qs', 'aun', 'STeordAL', 'I', '3081', 'IMaL', 'oivalanuL', 'quaurfoydap', '1', 'AvO', 'epO', '>', 'sere', 'FaS', 'ueya', '1a81e1', 'yonur', 'SI', 'NNX', 'JOJ', 'JOJ', 'WAS', 'NS', 'quouagens', 'OALIM', 'mor', ':0.104', 'paqunu', 'IIO.I', '29LM', '(sad', 'OT)', '6', 'IO', 'ANAL', 'Teardeo', 'UI', 'ASTVA', 'reepo', 'pure', 'S.I21101', 'Surgumpuey', 'Sepui']
rotation started
['na', 'V', 'MNO', '-', 'T', 'SAy', 'ERE', '%', '-', 'I', '-', '-', 'à', '-', '-', 'E', '€', 'à', '2', '2', 'a', 'E', 'a', 'I', 'i', 'is', 'E', 'a', 'I', 'is', 'I', 'E', 'I', 'I', 'is', 'I', 'a', 'I', 'I', 'I', 'à', 'I', 'a', 'E', 'a', 'of', '6', 'a', 's', 'is', 'a', 'I', 'I', 'iE', 'I', 'i', 'à', 'à', 'E', 'a', 'I', ':', 'e', 'I', 'I', 'a', '1', 'I', 'iE', 'I', 'of', ':', '1', 'I', 'I', 'f', 'I', '8', 'is', 'e', 'I', 'iE', 'o', 'e', 'a', 'I', 'E', '1', 'I', '2', '-', 'iE', '', '1', ':', ':', '0', 'is', '8', 'i', 'of', 'E', 'a', 'I', 'I', '8', 'E', '0', 'E', 'I', 'I', 'I', 'of', ':', 'I', 'I', 'is', 'I', 'T', 's', 'i', 'e', 'à', ':', 'is', 'e', 'I', '-', 'of', 'de', 'S', 'I', 'E', 'e', 'I', '1', 'o', 'I', 'à', 'a', 'E', 'I', 'of', 'I', 'a', '', '8', 'I', '-', 'a', '$', 'is', '00', 'I', 'E', 'a', 'I', 'à', 'I', 'I', 'I', 'I', '2', '1', 'I', 'I', 'I', 'C', '3', 'E', 'e', 'E', 'I', '1', 'I', 'I', '3', 'E', 'I', '1', 'iE', '-', 'e', 'E', 'à', 'E', 'e', 'o', 'E', 'I', '2', '3', ':', 'I', 'e', 'I', '1', 'I', 'I', 'I', 'T', 'E', '.', '', 'E', 'E', 'E', 'I', '€', 'I', 'I', '7', '11', '4', '10', '6', 'I', '00', 'o', '1f']
rotation started
['handwriting.', 'Ipbarn', 'and', 'clear', 'letters', 'in', 'capital', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'Sas', 'X', 'Hiae', 'cove', 'DNTE', '1', 'roll', 'number', 'here:', 'Write', 'your', 'SN', 'Statement', '1', 'Typically,', 'the', 'storage', 'deployment.', 'TRUE/FALS', 'TRUE', 'TRUG', 'than', 'SVM', 'for', 'is', 'much', 'larger', 'requirement', 'for', 'KNN', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', '3', '1-', 'cosineSimalarityl.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'TRUE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'TRUE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALSE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALSE', 'FALSE', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRVE']
OCR detection done with doctr
left top x of SN: 420.59375
bottom right x of SN: 817.34375
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:02:36] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : yc12lqc.jpg
[2024/06/28 15:02:37] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:02:38] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.14611315727233887
[2024/06/28 15:02:40] ppocr DEBUG: rec_res num  : 41, elapsed : 2.2324130535125732
OCR detection done
left top x of T/F: 4984.0
bottom right x of T/F: 5812.0
left top y of T/F: 1402.0
bottom right y of T/F: 1998.0
cant detect s/n column also so going with all detection using box width
first t/f detection
Indian
[[6198.0, 323.0], [6755.0, 0.0], [6886.0, 110.0], [6329.0, 501.0]]
first t/f detection
TRUE/FALSE
[[4994.0, 1542.0], [5822.0, 1664.0], [5792.0, 1858.0], [4964.0, 1736.0]]
first t/f detection
first t/f detection
first t/f detection
SN
[[447.0, 1913.0], [745.0, 1874.0], [765.0, 2018.0], [467.0, 2058.0]]
first t/f detection
first t/f detection
DATE
[[6508.0, 2106.0], [6862.0, 1824.0], [6935.0, 1988.0], [6645.0, 2270.0]]
first t/f detection
deployment.
[[766.0, 2459.0], [1433.0, 2425.0], [1441.0, 2589.0], [774.0, 2622.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[4985.0, 3728.0], [5626.0, 3728.0], [5626.0, 3969.0], [4985.0, 3969.0]]
first t/f detection
first t/f detection
FALSE
[[4946.0, 4784.0], [5571.0, 4821.0], [5556.0, 5062.0], [4931.0, 5024.0]]
first t/f detection
FALSE
[[4949.0, 5273.0], [5503.0, 5322.0], [5484.0, 5526.0], [4930.0, 5476.0]]
first t/f detection
FALSE
[[4966.0, 5809.0], [5586.0, 5809.0], [5586.0, 6011.0], [4966.0, 6011.0]]
first t/f detection
first t/f detection
the true list is  [1804, 1892, 2042, 2582, 3057, 4306, 6240, 6833]
the false list is  []
the true list for xdirn [6286, 735, 5015, 4985, 4963, 4936, 4982, 4933]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': True, '10': True}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': True}
left top x of SN: 447.0
bottom right x of SN: 905.0
left top y of SN: 1913.0
bottom right y of SN: 2158.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': True, '4': 'UNASSIGNED', '5': True, '6': True, '7': 'NULL', '8': 'NULL', '9': 'UNASSIGNED', '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nQw20fw.jpg
OCR detection done with doctr
left top x of SN: 77.10156250000003
bottom right x of SN: 293.66796875
left top x of T/F: 805.04296875
bottom right x of T/F: 1159.71875
first t/f detection
TRUE
((822.9921875, 329.09765625), (896.125, 359.3046875))
collision happend with box:329.09765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRUE
((826.1718749999999, 414.94921875), (892.9453124999999, 445.15625))
text2 i.e the incoming text is the winner
collision happend with box:414.94921875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
FAL
((829.3515624999999, 496.03125), (869.09765625, 524.6484375))
text2 i.e the incoming text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((872.27734375, 497.62109375), (900.89453125, 524.6484375))
text1 i.e the prev text is the winner
collision happend with box:496.03125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 589.83203125), (900.89453125, 620.0390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:589.83203125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
PPLSE
((819.8125, 683.6328125), (904.07421875, 720.19921875))
text1 i.e the prev text is the winner
PAL
((816.6328125, 766.3046875), (865.91796875, 798.1015625))
collision happend with box:766.3046875 and text:PAL solving on the basis of percent match boxes
the current box specification are
SE
((867.5078125000001, 766.3046875), (900.89453125, 794.921875))
text1 i.e the prev text is the winner
collision happend with box:766.3046875 and text:PAL solving on the basis of percent match boxes
the current box specification are
FALSE
((822.9921875, 845.796875), (904.07421875, 874.4140625))
text2 i.e the incoming text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((816.6328125, 930.05859375), (894.5351562500001, 953.90625))
text1 i.e the prev text is the winner
collision happend with box:845.796875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 998.421875), (896.125, 1028.62890625))
text1 i.e the prev text is the winner
TRVE
((834.1210937500001, 1093.8125), (908.84375, 1125.609375))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'9': 996, '1': 325, '2': 421, '3': 483, '4': 581, '5': 677, '6': 772, '7': 836, '8': 931, '10': 1093}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': False, '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FMctx8O.jpg
OCR detection done with doctr
left top x of T/F: 5029.4375
bottom right x of T/F: 6232.875000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:02:47] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : FMctx8O.jpg
[2024/06/28 15:02:48] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:02:49] ppocr DEBUG: dt_boxes num : 32, elapsed : 0.12399864196777344
[2024/06/28 15:02:50] ppocr DEBUG: rec_res num  : 32, elapsed : 1.5599381923675537
[2024/06/28 15:02:51] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:02:52] ppocr DEBUG: dt_boxes num : 54, elapsed : 0.19335007667541504
[2024/06/28 15:02:54] ppocr DEBUG: rec_res num  : 54, elapsed : 1.631326675415039
['Stalenenr', 'anng data t do mt generalize we to new, unseen data.', 'NOLE', 'fpGaussian disioutions is always a Gaussian distribution.', 'oudary cf an SVM can be non-linear in the original space.', 'aose muniter ci nodes.', 'SOL', 'Ii makng a predction', 'EXLSE', 'Ciasstfie', 'gadienrs in the neural network.', 'in the Decision Tree is directly', 'gradient', 'd-dimensiona', 'descent is', 'TRUE/FALSE', 'FTRUE', 'TRUE', 'FALSE', 'T', 'TRUE', 'TRUWE', 'FALSE', 'TROE', 'TRUE', 'TRUE', 'RVE', 'NAME.', 'COURSE']
rotation done for:  FMctx8O.jpg
Number of times rotation done: 1
OCR detection done
left top x of T/F: 7543.0
bottom right x of T/F: 7746.0
left top y of T/F: 4914.0
bottom right y of T/F: 6150.0
cant detect s/n column also so going with all detection using box width
first t/f detection
Stalenenr
[[7176.0, 742.0], [7301.0, 737.0], [7323.0, 1396.0], [7197.0, 1401.0]]
first t/f detection
NOLE
[[7601.0, 1271.0], [7697.0, 1271.0], [7697.0, 1567.0], [7601.0, 1567.0]]
first t/f detection
SOL
[[7627.0, 1632.0], [7704.0, 1622.0], [7729.0, 1836.0], [7651.0, 1846.0]]
first t/f detection
EXLSE
[[8318.0, 1906.0], [8453.0, 1885.0], [8542.0, 2478.0], [8407.0, 2499.0]]
first t/f detection
Ciasstfie
[[6346.0, 1936.0], [6452.0, 1928.0], [6486.0, 2399.0], [6380.0, 2407.0]]
first t/f detection
first t/f detection
descent is
[[5536.0, 4383.0], [5709.0, 4371.0], [5754.0, 5056.0], [5581.0, 5068.0]]
first t/f detection
first t/f detection
FALSE
[[4926.0, 5178.0], [5206.0, 5156.0], [5266.0, 5955.0], [4986.0, 5977.0]]
first t/f detection
first t/f detection
first t/f detection
FALSE
[[4480.0, 5251.0], [4720.0, 5251.0], [4720.0, 5990.0], [4480.0, 5990.0]]
first t/f detection
first t/f detection
first t/f detection
first t/f detection
first t/f detection
NAME.
[[7886.0, 6123.0], [8405.0, 6359.0], [8327.0, 6537.0], [7808.0, 6301.0]]
first t/f detection
the true list is  [3891, 5143, 5190, 5217, 5261, 5301, 5369, 5458, 6443]
the false list is  []
the true list for xdirn [5497, 7144, 5531, 6063, 6618, 3034, 2437, 5578, 7716]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qNdhAQG.jpg
OCR detection done with doctr
left top x of T/F: 5300.375
bottom right x of T/F: 6413.499999999999
left top x of SN: 989.5625
bottom right x of SN: 1377.2812500000002
first t/f detection
Tue
((5491.000000000001, 2456.5), (6050.937499999999, 2709.375))
Tue
((5364.5625, 2989.34375), (5987.71875, 3188.03125))
False
((5418.75, 3431.875), (6041.90625, 3639.59375))
Tue,
((5436.812500000001, 4000.84375), (6023.843749999999, 4172.4375))
Frtre
((5337.46875, 4533.6875), (5951.593750000001, 4732.375))
False
((5454.874999999999, 4714.3125), (6078.031249999999, 4913.0))
Tue
((5418.75, 4994.28125), (6023.843749999999, 5202.0))
fale
((5463.906250000001, 5454.875), (6050.937499999999, 5671.625))
Tue
((5409.718750000001, 5924.5), (5915.468749999999, 6105.125))
Tue
((5364.5625, 6348.96875), (5852.25, 6574.75))
falie
((5418.75, 6872.78125), (6014.8125, 7116.625))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2646, '2': 3151, '3': 3495, '4': 4018, '5': 4524, '6': 5048, '7': 5391, '8': 5906, '9': 6258, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : mWBX4hq.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 325.20410156249994
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
Tyuc
((1416.1083984375, 627.615234375), (1518.2783203125002, 676.267578125))
collision happend with box:627.615234375 and text:Tyuc solving on the basis of percent match boxes
the current box specification are
True
((1420.9736328125, 758.9765625), (1525.576171875, 807.62890625))
text2 i.e the incoming text is the winner
collision happend with box:758.9765625 and text:True solving on the basis of percent match boxes
the current box specification are
Falte
((1428.271484375, 885.47265625), (1540.171875, 938.990234375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:885.47265625 and text:Falte solving on the basis of percent match boxes
the current box specification are
fatie
((1425.8388671875, 1019.2666015625), (1528.0087890625, 1077.6494140625))
true and false collision so given priority to text2 which is the incoming text
Falk
((1413.67578125, 1194.4150390625), (1520.7109375, 1243.0673828125))
collision happend with box:1194.4150390625 and text:Falk solving on the basis of percent match boxes
the current box specification are
false
((1416.1083984375, 1323.34375), (1523.1435546875, 1371.99609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1323.34375 and text:false solving on the basis of percent match boxes
the current box specification are
frda
((1408.810546875, 1454.705078125), (1537.7392578125, 1513.087890625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
fek
((1552.3349609375, 1452.2724609375), (1635.0439453125, 1508.22265625))
text1 i.e the prev text is the winner
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
Thue
((1425.8388671875, 1586.06640625), (1525.576171875, 1634.71875))
text1 i.e the prev text is the winner
Tuue
((1430.7041015624998, 1707.697265625), (1535.306640625, 1756.349609375))
True
((1408.810546875, 1890.1435546875), (1520.7109375, 1943.6611328125))
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 866, '2': 756, '3': 863, '4': 1021, '5': 1177, '6': 1333, '7': 1435, '8': 1595, '9': 1700, '10': 1858}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : kLPP4io.jpg
OCR detection done with doctr
left top x of SN: 89.99609374999997
bottom right x of SN: 308.5703125
left top x of T/F: 860.6210937500001
bottom right x of T/F: 1224.91796875
first t/f detection
FALSE
((886.05078125, 391.9140625), (966.28515625, 427.40234375))
collision happend with box:391.9140625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
FALSE
((884.5078125, 472.1484375), (966.28515625, 499.921875))
text2 i.e the incoming text is the winner
collision happend with box:472.1484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((881.421875, 549.296875), (958.5703125, 584.78515625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:549.296875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((873.70703125, 651.1328125), (950.85546875, 686.62109375))
text1 i.e the prev text is the winner
TRUE
((886.05078125, 757.59765625), (957.02734375, 785.37109375))
collision happend with box:757.59765625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((881.421875, 840.91796875), (949.3125, 873.3203125))
text1 i.e the prev text is the winner
TRVE
((876.7929687499999, 925.78125), (940.0546875, 955.09765625))
collision happend with box:925.78125 and text:TRVE solving on the basis of percent match boxes
the current box specification are
FAL
((875.25, 1012.1875), (926.16796875, 1041.50390625))
text2 i.e the incoming text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((926.16796875, 1013.73046875), (955.484375, 1039.9609375))
text1 i.e the prev text is the winner
collision happend with box:1012.1875 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((876.7929687499999, 1093.96484375), (952.3984374999999, 1124.82421875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1093.96484375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
TRUE
((870.6210937500001, 1206.6015625), (947.76953125, 1242.08984375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 374, '2': 476, '3': 544, '4': 644, '5': 745, '6': 845, '7': 913, '8': 1016, '9': 1083, '10': 1185}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': True, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1gwlmOe.jpg
OCR detection done with doctr
left top x of T/F: 5101.6875
bottom right x of T/F: 6278.031249999999
left top x of SN: 592.1874999999999
bottom right x of SN: 997.9687500000001
first t/f detection
TRUE
((5472.9375, 1652.71875), (6069.0, 1905.59375))
collision happend with box:1652.71875 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Fette
((5138.78125, 1788.1875), (5761.937500000001, 2104.28125))
text2 i.e the incoming text is the winner
FtsFASE
((5165.875, 2230.71875), (6186.406249999999, 2519.71875))
FACSE
((5138.78125, 2835.8125), (5897.406250000001, 3079.65625))
TRUE
((5174.90625, 3395.75), (5861.281249999999, 3612.5))
TRUE
((5165.875, 3856.34375), (5825.15625, 4100.1875))
FTRUE
((5129.75, 4371.125), (6069.0, 4614.96875))
FALSE
((5138.78125, 4867.84375), (5861.281249999999, 5129.75))
PALSE
((5274.250000000001, 5183.9375), (5969.656249999999, 5391.65625))
RUE
((5192.96875, 5355.53125), (5798.0625, 5572.28125))
FALSE
((5138.78125, 5834.1875), (5861.281249999999, 6168.34375))
FALSE
((5229.09375, 6339.9375), (5951.593750000001, 6737.3125))
the final dict without editing {'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1941, '2': 2483, '3': 2853, '4': 3404, '5': 3946, '6': 4497, '7': 4867, '8': 5427, '9': 5807, '10': 6367}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': False, '4': True, '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : oYYOzj0.jpg
OCR detection done with doctr
left top x of T/F: 5580.343749999999
bottom right x of T/F: 6837.96875
left top x of SN: 411.5625000000001
bottom right x of SN: 826.3749999999999
first t/f detection
F
((5852.25, 1779.15625), (6059.968750000001, 2023.0))
T
((5843.218750000001, 2393.28125), (6069.0, 2628.09375))
F
((5843.218750000001, 3043.53125), (6041.90625, 3278.34375))
T
((5752.906249999999, 3576.375), (6041.90625, 3775.0625))
T
((5852.25, 4046.0), (6123.1875, 4316.9375))
F
((5807.093749999999, 4669.15625), (5996.749999999999, 4958.15625))
T
((5843.218750000001, 5445.84375), (6132.218749999999, 5689.6875))
T
((5915.468749999999, 5960.625), (6150.28125, 6186.40625))
F
((5843.218750000001, 6484.4375), (6041.90625, 6719.25))
T
((5789.031250000001, 7225.0), (6050.937499999999, 7450.78125))
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1932, '2': 2510, '3': 3097, '4': 3684, '5': 4082, '6': 4678, '7': 5463, '8': 6069, '9': 6466, '10': 7270}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': True, '6': False, '7': True, '8': True, '9': False, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 7UgFm9q.jpg
OCR detection done with doctr
left top x of T/F: 5607.437499999999
bottom right x of T/F: 6919.25
left top x of SN: 547.0312500000001
bottom right x of SN: 961.8437499999999
first t/f detection
TRUE
((5635.5, 2013.96875), (6240.593749999999, 2257.8125))
TRVE
((5617.437499999999, 2610.03125), (6213.499999999999, 2817.75))
TRue
((5599.375000000001, 3179.0), (6231.5625, 3395.75))
FALSE
((5581.3125, 3829.25), (6231.5625, 4027.9375))
FALSE
((5545.187500000001, 4461.4375), (6231.5625, 4669.15625))
TRUE
((5500.03125, 5021.375), (6087.062500000001, 5238.125))
FALSE
((5518.093750000001, 5527.125), (6258.65625, 5770.96875))
TRUE
((5554.21875, 6059.96875), (6195.437500000001, 6276.71875))
TRUE
((5563.249999999999, 6547.65625), (6141.250000000001, 6764.40625))
TRVE
((5518.093750000001, 7252.09375), (6177.375, 7450.78125))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2230, '2': 2826, '3': 3233, '4': 3829, '5': 4434, '6': 5048, '7': 5454, '8': 6069, '9': 6484, '10': 7107}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': False, '6': True, '7': False, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : BlQwjrY.jpg
OCR detection done with doctr
left top x of SN: 65.09765624999997
bottom right x of SN: 307.6708984375
left top x of T/F: 1346.5625
bottom right x of T/F: 1824.3759765625
first t/f detection
Tut
((1416.6328125, 640.75), (1519.2529296875, 700.8203125))
collision happend with box:640.75 and text:Tut solving on the basis of percent match boxes
the current box specification are
True
((1414.1298828125, 780.9140625), (1524.2587890625, 833.4755859375))
text2 i.e the incoming text is the winner
collision happend with box:780.9140625 and text:True solving on the basis of percent match boxes
the current box specification are
fosa
((1396.609375, 911.06640625), (1524.2587890625, 973.6396484375))
text2 i.e the incoming text is the winner
collision happend with box:911.06640625 and text:fosa solving on the basis of percent match boxes
the current box specification are
Falk
((1424.1416015625, 1058.7392578125), (1551.791015625, 1118.8095703125))
text2 i.e the incoming text is the winner
collision happend with box:1058.7392578125 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1421.6386718749998, 1203.9091796875), (1536.7734375, 1258.9736328125))
text2 i.e the incoming text is the winner
fask
((1526.7617187500002, 888.5400390625), (1629.3818359374998, 956.119140625))
Ef
((1356.5625, 1351.58203125), (1441.662109375, 1406.646484375))
collision happend with box:1351.58203125 and text:Ef solving on the basis of percent match boxes
the current box specification are
Faes
((1421.6386718749998, 1346.576171875), (1539.2763671875, 1411.65234375))
text2 i.e the incoming text is the winner
collision happend with box:1346.576171875 and text:Faes solving on the basis of percent match boxes
the current box specification are
Falh
((1436.65625, 1476.728515625), (1554.2939453125, 1539.3017578125))
text2 i.e the incoming text is the winner
collision happend with box:1476.728515625 and text:Falh solving on the basis of percent match boxes
the current box specification are
BThu
((1369.0771484375, 1624.4013671875), (1521.755859375, 1681.96875))
text1 i.e the prev text is the winner
Tyue
((1419.1357421875, 1749.5478515625), (1534.2705078125, 1799.6064453125))
Tre
((1426.6445312500002, 1927.255859375), (1544.2822265625, 1987.326171875))
the final dict without editing {'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 896, '2': 788, '3': 896, '4': 1056, '5': 1213, '6': 1374, '7': 1479, '8': 1639, '9': 1747, '10': 1907}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZvHkGNT.jpg
OCR detection done with doctr
left top x of T/F: 5011.375
bottom right x of T/F: 6124.500000000001
left top x of SN: 664.4375
bottom right x of SN: 1061.1875
first t/f detection
touee
((5075.5625, 2032.03125), (5509.062499999999, 2239.75))
True
((5084.59375, 2528.75), (5527.125, 2736.46875))
falx
((5156.84375, 2989.34375), (5590.343749999999, 3169.96875))
Blemee
((5120.71875, 3440.90625), (5888.374999999999, 3612.5))
faueefalte
((5129.75, 4027.9375), (5906.4375, 4235.65625))
-fase
((5111.6875, 4488.53125), (5599.375000000001, 4660.125))
directly
((4587.875, 4849.78125), (5021.375, 5012.34375))
collision happend with box:4849.78125 and text:directly solving on the basis of percent match boxes
the current box specification are
-fahe
((5165.875, 4922.03125), (5653.562500000001, 5129.75))
text1 i.e the prev text is the winner
space.
((4687.21875, 5418.75), (5030.40625, 5545.1875))
collision happend with box:5418.75 and text:space. solving on the basis of percent match boxes
the current box specification are
Joul
((5192.96875, 5382.625), (5680.656250000001, 5554.21875))
text2 i.e the incoming text is the winner
prediction
((4506.59375, 5761.9375), (5057.5, 5897.40625))
collision happend with box:5761.9375 and text:prediction solving on the basis of percent match boxes
the current box specification are
Tnue
((5319.406249999999, 5752.90625), (5698.718749999999, 5942.5625))
text2 i.e the incoming text is the winner
faue
((5256.1875, 6312.84375), (5770.96875, 6493.46875))
collision happend with box:6312.84375 and text:faue solving on the basis of percent match boxes
the current box specification are
the
((4894.9375, 6457.34375), (5102.65625, 6601.84375))
text1 i.e the prev text is the winner
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2158, '2': 2691, '3': 3052, '4': 3585, '5': 4109, '6': 4642, '7': 5003, '8': 5527, '9': 5888, '10': 6439}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : y1LnCHF.jpg
OCR detection done with doctr
left top x of SN: 664.4375
bottom right x of SN: 1070.21875
left top x of T/F: 5300.375
bottom right x of T/F: 6458.65625
first t/f detection
A
((5987.71875, 722.5), (6041.90625, 803.78125))
TRUE
((5436.812500000001, 2149.4375), (5987.71875, 2321.03125))
TRUE
((5418.75, 2673.25), (6032.875000000001, 2844.84375))
TRUE
((5373.593749999999, 3133.84375), (6014.8125, 3341.5625))
FALSE
((5355.531250000001, 3766.03125), (5996.749999999999, 3919.5625))
T
((5337.46875, 4335.0), (5572.281250000001, 4488.53125))
collision happend with box:4335.0 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5518.093750000001, 4325.96875), (5897.406250000001, 4497.5625))
text2 i.e the incoming text is the winner
TRUE
((5274.250000000001, 4804.625), (5852.25, 5003.3125))
FALSE
((5265.218749999999, 5265.21875), (5834.187499999999, 5463.90625))
FALSE
((5238.124999999999, 5752.90625), (5725.812499999999, 5924.5))
TRUE
((5247.156250000001, 6177.375), (5734.843750000001, 6339.9375))
TRU
((5192.96875, 6800.53125), (5599.375000000001, 6963.09375))
the final dict without editing {'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2140, '2': 2691, '3': 3061, '4': 3621, '5': 4172, '6': 4732, '7': 5093, '8': 5662, '9': 6041, '10': 6610}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': True, '4': False, '5': True, '6': True, '7': False, '8': False, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : xicjOgf.jpg
OCR detection done with doctr
left top x of SN: 146.32812499999997
bottom right x of SN: 368.22265625
left top x of T/F: 986.8261718749999
bottom right x of T/F: 1370.849609375
first t/f detection
Fale
((1017.7734375000001, 459.228515625), (1111.23046875, 514.013671875))
collision happend with box:459.228515625 and text:Fale solving on the basis of percent match boxes
the current box specification are
Filke
((1011.328125, 533.349609375), (1104.78515625, 591.357421875))
text1 i.e the prev text is the winner
Tyue
((1048.388671875, 628.41796875), (1141.845703125, 667.08984375))
collision happend with box:628.41796875 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Buul
((971.044921875, 726.708984375), (1074.169921875, 779.8828125))
text2 i.e the incoming text is the winner
collision happend with box:726.708984375 and text:Buul solving on the basis of percent match boxes
the current box specification are
loue
((956.54296875, 823.388671875), (1069.3359375, 870.1171875))
text1 i.e the prev text is the winner
pul
((953.3203125, 899.12109375), (1072.55859375, 952.294921875))
collision happend with box:899.12109375 and text:pul solving on the basis of percent match boxes
the current box specification are
Tquie
((996.8261718749999, 994.189453125), (1106.396484375, 1040.91796875))
text2 i.e the incoming text is the winner
collision happend with box:994.189453125 and text:Tquie solving on the basis of percent match boxes
the current box specification are
Hue
((943.65234375, 1076.3671875), (1035.498046875, 1126.318359375))
text1 i.e the prev text is the winner
Re
((938.818359375, 1173.046875), (1022.607421875, 1221.38671875))
collision happend with box:1173.046875 and text:Re solving on the basis of percent match boxes
the current box specification are
Jue
((925.927734375, 1297.119140625), (1008.10546875, 1347.0703125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '4', '9', '10']
the assigned keys are ['2', '3', '5', '6', '7', '8']
['2', '3', '5', '6', '7', '8', '2', '3', '5', '6', '7', '8']
printing the number dict y_coordinate
{'2': 481, '3': 549, '5': 754, '6': 855, '7': 924, '8': 1026, '1': 181}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': True, '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'NULL', '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZcOeygj.jpg
OCR detection done with doctr
left top x of SN: 73.39062500000003
bottom right x of SN: 316.8671875
left top x of T/F: 1398.3125
bottom right x of T/F: 1885.0703125000002
first t/f detection
falu
((1443.859375, 632.2265625), (1621.59375, 738.8671875))
collision happend with box:632.2265625 and text:falu solving on the basis of percent match boxes
the current box specification are
fabre
((1436.2421875, 782.03125), (1578.4296875, 870.8984375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:782.03125 and text:fabre solving on the basis of percent match boxes
the current box specification are
Trul
((1433.703125, 934.375), (1593.6640625, 1035.9375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:934.375 and text:Trul solving on the basis of percent match boxes
the current box specification are
Ful
((1446.3984374999998, 1081.640625), (1613.9765625, 1180.6640625))
true and false collision so given priority to text2 which is the incoming text
grw
((1436.2421875, 1246.6796875), (1603.8203125, 1350.78125))
collision happend with box:1246.6796875 and text:grw solving on the basis of percent match boxes
the current box specification are
Tul
((1415.9296875, 1388.8671875), (1580.9687500000002, 1465.0390625))
text2 i.e the incoming text is the winner
collision happend with box:1388.8671875 and text:Tul solving on the basis of percent match boxes
the current box specification are
True
((1398.15625, 1523.4375), (1575.890625, 1619.921875))
text2 i.e the incoming text is the winner
collision happend with box:1523.4375 and text:True solving on the basis of percent match boxes
the current box specification are
fale
((1423.546875, 1645.3125), (1573.3515624999998, 1734.1796875))
text2 i.e the incoming text is the winner
collision happend with box:1645.3125 and text:fale solving on the basis of percent match boxes
the current box specification are
Falu
((1421.0078124999998, 1784.9609375), (1570.8125, 1873.828125))
true and false collision so given priority to text2 which is the incoming text
True
((1405.7734375, 1998.2421875), (1586.046875, 2102.34375))
the final dict without editing {'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 898, '4': 1063, '5': 1223, '6': 1386, '7': 1495, '8': 1658, '9': 1767, '10': 1929}
--------- Printing the final dict ------------
{'1': 'NULL', '2': False, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : TQUHeNf.jpg
rotation started
['Dn', '6o', 'o', 'I', 'I', 'E', 'E', '9', '2', 'o', 'OT', '8', 'e', 'A', 'F', 'P', 'y', 'H', 'Cs', '2', '8', 'E', '/', '/', 'F', 'P', 'P', 'E', 'T', '1', '2', 'E', 'I', '8', 'I', 'E', 'F', 'I', 'I', '2', '&', 'I', 'of', '8', 'E', 'f', 'I', '4', 't', 'a', '8', '2', 'I', 'I', '8', '8', 'I', 'E', '-', 'I', 'I', 'I', 'E', 't', 'I', 'I', 's', 'I', 'Q', 'E', 'of', 'e', 'I', 'E', 't', 'E', 'I', '-', 'E', 'I', 'I', 'a', 'I', 'I', 'E', 'I', '2', 'I', '8', 'of', 'I', '8', 'a', 'I', 'I', 'E', 'I', 'E', 'I', 'e', 'E', 'I', '/', 'I', 'I', 'I', 's', 'E', 'E', 'E', 'E', '2', ':', 'E', 'I', 'I', 'E', 'E', 'E', 'I', 'E', '-', '2', 'lt', 'I', 'e', 'E', 'I', 'E', '8', '/', 'I', 'I', '2', '/', 'of', 'I', '8', '2', '/', '/', 'I', 'E', 't', '8', 'I', 'a', 'I', 'I', 'F', 'to', 'I', '/', '8', 'I', 'E', 'I', '-', 'I', 'a', 'tn', 'a', 'I', 'E', '2', 'it', '-', 'I', 'E', '2', '9', 'I', 'E', 'E', 'F', '9', 'of', 'I', 'E', '/', 'E', 'I', '8', 'e', 'I', '/', '1', '€', 'I', 'e', 'I', 'E', '8', 'F', 'I', 't', '2', '-', 'F', 'I', '-', '-', 'e', 'I', 'F', '-', ':', 'P', 'F', 'TT', 'T', 'F', '/']
rotation started
['4', 'PML', 'oun', 'ur', '-Ur', 'Surgyzaho', '"egep', 'uaasun', "'mou", 'sTregap', 'JO', 'ostou', 'Jo', 'YSLI', 'oug', 'WAS', 'WAS', '2501-5A-0110', 'ureug', "'sossepo", 'Jo', 'Jaquu', 'uI', 'IBOLIT-TIOUL', '02', 'ITOM', 'ur', 'laoure.ed', 'oyroads', 'anngdes', 'azeouas', 'zou', 'op', '02', 'ULIBOT', 'Aeur', 'zeu7', 'erep', 'Surureng', 'lepour', 'eu7', 'Se', 'O', 'aua', 'Jo', 'enrea', 'IOMOTS', 'SI', 'WAS', 'a8rer', 'B', 'YAIM', 'surergoud', 'aq', 'ues', 'WAS', 'ue', 'Jo', 'sapou', 'uomorpard', 'B', 'Suryeur', 'SAenpe', 'SI', 'suorInquAsIp', '95703', '2011', "'sosears", 'y8r4', 'e', 'YAIM', 'Bt0-SA-000', 'Sursn', 'ssepramnuz', 'JO1', '6', 'uomorpard', 'e', 'Suryeur', 'OI', 'L', 'ogeds', 'Teursuo', 'eug', '35741', 'Arepunoq', 'uorsiap', 'OUL', 'ATgpa1p', 'SI', 'OBIL', '8', 'LOISIDOEI', 'euy', 'uI', 'uerssnes', 'e', 'Jo', 'nequmnu', 'aua', '02', 'Tetorodoud', '25741', '"uornquastp', 'JOJ', 'paumbar', 'BUIII', 'uerssnes', 'OM2', 'Jo', 'amaxTur', 'OUL', 'L', 'V', '9', 'Teoay', 'pue', 'LOISIO', 'Jaaraooy', 'OUL', 'S', 'aanduos', '02', 'pesn', 'nopesodoaxdypng', 'F', 'R', 'pue', '2', 'S101021', 'e)@uamypunsouseo', '-', 'T', '&', 'uoyissepp', 'mour-ttou', 'B', 'SI', 'NNY', '2', '237H-1', 'INL', '-BId', 'uoamgaq', 'pord', 'B', 'SI', 'BAINO', '(bou)', '0115102002040', 'Surerado', 'SI', 'queosap', 'querpe.18', '"YIOMJOU', 'remou', 'auy', 'uT', 'squerpeus', 'aua', 'OTIYM', "'say81om", 'oun', 'agepdn', '09', 'posn', 'SI', 'aTT4', 'Teuorsuouurp-p', 'Aue', 'JOJ', 'OLIgOuI', 'oouregsip', 'PITRA', 'B', 'SI', '(A', 'ml', 'quouordap', 'quouoges', 'NS', 'mel', 'JOJ', 'IAS', 'ueya', '1081e1', 'yonur', 'SI', 'NNX', 'JOJ', 'quouommbor', 'aSeuogs', 'oua', 'eordAL', 'I', 'a9TVa/anuL', ':0JOU', 'Joqunu', 'ITOI', 'aor', 'OJUML', 'S.109901', 'renduo', 'ul', 'aSTVI', '10', 'aNUL', '021411', '(sad', 'or)', '6', 'Surgumpuey', '1e0p0', 'pue']
rotation started
['I', 'E', '2', 'd', 'L', '-', '2', '2', 'à', 'F', 'E', 'a', ':', ':', '-', ':', 'a', 'E', ':', 'I', '1', 'is', 'E', 'a', 'I', 'is', 'I', 'E', 'I', 'I', 'I', 'is', '/', 'E', 'I', '8a', '/', 'I', '/', '#', 'e', 'iE', '1', '/', 'of', '6', 'S', '2', ':', 'J', 'à', 'e', 'I', '1', 'iE', 'E', 'e', 'E', '2', 'I', ':', 'o', 'I', '1', 'I', ':', 'E', 'I', '1', 'E', '-', 's', 'E', 'à', '2', 'e', 'C', 'à', 'a', 'a', 'à', 'is', '', 'i', 'I', 'E', 'I', 'I', 'e', 'I', 'e', 'I', '8', '.2', 'iE', 'I', ':', 'e', 'be', '8', 'E', 'I', 'E', 'i', 'i2', 'i', 'I', '8a', 'I', 'f', 'e', '/', '1', 'of', ':', ':', 'I', '2', 'I', 'I', 'I', 'i', 'E', 'la', 'I', '2', 'e', 'of', ':', '', 'o', 'E', 'S', '€', 'I', 'I', 'I', 'e', 'i', '.', 'S', 'à', ':', 'A', 'a', 'E', '4', 'I', 'E', 'e', 'E', 'of', 'de', 'o', 'I', '1', 'I', 'of', 'I', '/', 'I', 'de', 'I', '2', 'I', 'I', 'a', 'I', 'I', 'E', ':', '1', 'I', 'a', 'e', 'I', 'I', 'E', 'Cu', 'E', 'I', 'S', 'I', '4', 'I', '5', '8', '$', '/', '4', '', '/', 'E', 'I', '10', '6o', 'A', 'I', 'I', 'I', 'I', '8a', 'e', 'I', '.E', '/', 'of', '7', '1', 'E', 'e', 'i', 'E', '0', 'o', 'o9']
rotation started
['in', 'capital', 'letters', 'and', 'clear', 'handwriting.', '9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'TRUE/FAISE', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'Tow', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'vectors', 'cosineSimalaritvls.w)', '2', 'and', 'Backpropogation', 'is', 'used', 'to', 'used', 'to', 'compute', 'the', '5', 'The', 'Receiver', '6', 'A', 'mixture', 'of', '7', 'The', 'Time', 'proportional', '8', 'The', 'decision', '9', 'For', 'multiclass', 'using', '10', 'With', 'a', 'high', 'creases,', 'value', 'of', 'the', 'C', 'as', 'the', 'training', 'model', 'may', 'learn', 'data', 'that', 'do', 'Tue', 'false', '3', '1-', '4', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'V.', 'any', 'd-dimensional', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'gradients', 'in', 'the', 'neural', 'network.', 'is', 'TRUE', 'FALSE', 'FALSE', 'cision', 'and', 'Recall', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'two', 'Gaussian', 'required', 'for', 'distributions', 'is', 'making', 'a', 'nodes.', 'can', 'be', 'number', 'of', 'one-vs-rest', 'in', 'SVM,', 'the', 'well', 'to', 'new,', 'always', 'a', 'Gaussian', 'distribution.', 'Tree', 'is', 'to', 'the', 'number', 'of', 'prediction', 'in', 'the', 'Decision', 'directly', 'FALSE', 'boundary', 'of', 'an', 'SVM', 'problems', 'with', 'a', 'large', 'non-linear', 'in', 'the', 'classes,', 'making', 'a', 'SVM.', 'original', 'space.', 'prediction', 'one-vs-one', 'SVM', 'is', 'TRIE', 'FALSE.', 'slower', 'than', 'parameter', 'to', 'risk', 'of', 'unseen', 'data.', 'not', 'generalize', 'capture', 'specific', 'noise', 'overfitting', 'in-', 'or', 'details', 'in', 'Thue', 'the', '-']
OCR detection done with doctr
left top x of SN: 1179.21875
bottom right x of SN: 1584.9999999999998
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:03:46] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : TQUHeNf.jpg
[2024/06/28 15:03:47] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:03:48] ppocr DEBUG: dt_boxes num : 36, elapsed : 0.12387824058532715
[2024/06/28 15:03:50] ppocr DEBUG: rec_res num  : 36, elapsed : 1.987299919128418
OCR detection done
left top x of T/F: 5762.0
bottom right x of T/F: 6717.0
left top y of T/F: 1923.0
bottom right y of T/F: 2539.0
cant detect s/n column also so going with all detection using box width
first t/f detection
SN
[[1251.0, 2110.0], [1527.0, 2110.0], [1527.0, 2235.0], [1251.0, 2235.0]]
first t/f detection
first t/f detection
first t/f detection
deployment.
[[1455.0, 2627.0], [2092.0, 2671.0], [2082.0, 2806.0], [1445.0, 2762.0]]
first t/f detection
first t/f detection
Fatse
[[5630.0, 3607.0], [6016.0, 3646.0], [5996.0, 3830.0], [5610.0, 3791.0]]
first t/f detection
first t/f detection
FALSE
[[5420.0, 4789.0], [6239.0, 4892.0], [6208.0, 5124.0], [5390.0, 5021.0]]
first t/f detection
FALSE
[[5504.0, 5345.0], [6257.0, 5444.0], [6220.0, 5714.0], [5467.0, 5616.0]]
first t/f detection
FALSE
[[5475.0, 5860.0], [6205.0, 5931.0], [6181.0, 6172.0], [5450.0, 6101.0]]
first t/f detection
first t/f detection
FALSE.
[[5388.0, 7034.0], [6100.0, 7118.0], [6071.0, 7359.0], [5358.0, 7274.0]]
the true list is  [2108, 2482, 3060, 4252, 6443]
the false list is  []
the true list for xdirn [1481, 5793, 5666, 5523, 5433]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
left top x of SN: 1251.0
bottom right x of SN: 1667.0
left top y of SN: 2110.0
bottom right y of SN: 2375.0
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'UNASSIGNED', '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'NULL', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : qXZqYLa.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1130.2031250000002, 527.84375), (1244.5, 604.734375))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folte
((1123.96875, 627.59375), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:627.59375 and text:folte solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tier
((1123.96875, 1003.734375), (1246.578125, 1095.171875))
text1 i.e the prev text is the winner
Tyue
((1130.2031250000002, 1105.5625), (1244.5, 1180.375))
collision happend with box:1105.5625 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Tie
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
text1 i.e the prev text is the winner
Falye
((1142.671875, 1330.0), (1244.5, 1398.578125))
collision happend with box:1330.0 and text:Falye solving on the basis of percent match boxes
the current box specification are
Falwe
((1132.28125, 1438.0625), (1252.8125, 1523.265625))
text2 i.e the incoming text is the winner
collision happend with box:1438.0625 and text:Falwe solving on the basis of percent match boxes
the current box specification are
Fale
((1119.8125, 1573.140625), (1273.59375, 1681.203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1132, '7': 1221, '8': 1354, '9': 1446, '10': 1581}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : YqjoUp3.jpg
OCR detection done with doctr
left top x of SN: 96.62695312500003
bottom right x of SN: 316.32421875
left top x of T/F: 876.111328125
bottom right x of T/F: 1243.3125
first t/f detection
T
((916.28125, 419.203125), (946.451171875, 450.9609375))
collision happend with box:419.203125 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.1054687500001, 508.125), (946.451171875, 539.8828125))
text2 i.e the incoming text is the winner
collision happend with box:508.125 and text:T solving on the basis of percent match boxes
the current box specification are
F
((921.044921875, 585.931640625), (949.626953125, 620.865234375))
text2 i.e the incoming text is the winner
collision happend with box:585.931640625 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 678.029296875), (952.802734375, 711.375))
text2 i.e the incoming text is the winner
collision happend with box:678.029296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 790.76953125), (955.978515625, 827.291015625))
text2 i.e the incoming text is the winner
collision happend with box:790.76953125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((925.80859375, 881.279296875), (955.978515625, 916.212890625))
text2 i.e the incoming text is the winner
collision happend with box:881.279296875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((924.220703125, 967.025390625), (968.681640625, 1011.486328125))
text2 i.e the incoming text is the winner
T
((917.869140625, 1133.75390625), (944.86328125, 1163.923828125))
collision happend with box:1133.75390625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((924.220703125, 1238.5546875), (954.390625, 1271.900390625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 589, '2': 524, '3': 589, '4': 690, '5': 790, '6': 892, '7': 959, '8': 1060, '9': 1128, '10': 1233}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': 'NULL', '4': False, '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : diLM5gw.jpg
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/diLM5gw.jpg: 'size' must be a 1-D Tensor of 2 elements: new_height, new_width
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : FpQD5VW.jpg
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5373.593749999999, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5373.593749999999, 2492.625), (6087.062500000001, 2754.53125))
FALSE
((5454.874999999999, 3025.46875), (6186.406249999999, 3269.3125))
FALSE
((5400.687499999999, 3639.59375), (6141.250000000001, 3856.34375))
FALSE
((5391.65625, 4226.625), (6096.09375, 4443.375))
FALS
((5445.84375, 4741.40625), (6041.90625, 4949.125))
FALSE
((5436.812500000001, 5192.96875), (6168.343750000001, 5400.6875))
TRUE
((5436.812500000001, 5725.8125), (6105.124999999999, 5969.65625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6439.28125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2185, '2': 2754, '3': 3142, '4': 3702, '5': 4271, '6': 4849, '7': 5229, '8': 5798, '9': 6186, '10': 6782}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : f6kyRqj.jpg
OCR detection done with doctr
left top x of SN: 84.38867187500003
bottom right x of SN: 325.20410156249994
left top x of T/F: 1367.1865234375
bottom right x of T/F: 1839.9091796875
first t/f detection
Tyut
((1416.1083984375, 627.615234375), (1515.845703125, 676.267578125))
collision happend with box:627.615234375 and text:Tyut solving on the basis of percent match boxes
the current box specification are
Tuue
((1420.9736328125, 761.4091796875), (1525.576171875, 810.0615234375))
text2 i.e the incoming text is the winner
collision happend with box:761.4091796875 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Falk
((1428.271484375, 885.47265625), (1540.171875, 934.125))
text2 i.e the incoming text is the winner
collision happend with box:885.47265625 and text:Falk solving on the basis of percent match boxes
the current box specification are
fale
((1428.271484375, 1016.833984375), (1530.44140625, 1082.5146484375))
text2 i.e the incoming text is the winner
Falke
((1411.2431640625, 1194.4150390625), (1518.2783203125002, 1245.5))
collision happend with box:1194.4150390625 and text:Falke solving on the basis of percent match boxes
the current box specification are
fle
((1416.1083984375, 1325.7763671875), (1520.7109375, 1374.4287109375))
text1 i.e the prev text is the winner
frda
((1406.3779296874998, 1454.705078125), (1540.171875, 1513.087890625))
collision happend with box:1454.705078125 and text:frda solving on the basis of percent match boxes
the current box specification are
fest
((1549.90234375, 1447.4072265625), (1637.4765625, 1513.087890625))
text2 i.e the incoming text is the winner
collision happend with box:1447.4072265625 and text:fest solving on the basis of percent match boxes
the current box specification are
The
((1425.8388671875, 1583.6337890625), (1525.576171875, 1634.71875))
text1 i.e the prev text is the winner
True
((1430.7041015624998, 1707.697265625), (1535.306640625, 1758.7822265625))
Thut
((1406.3779296874998, 1890.1435546875), (1518.2783203125002, 1938.7958984375))
the final dict without editing {'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 868, '2': 758, '3': 866, '4': 1021, '5': 1177, '6': 1333, '7': 1435, '8': 1595, '9': 1702, '10': 1856}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': False, '4': 'NULL', '5': False, '6': 'NULL', '7': True, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : sPGI0Yj.jpg
OCR detection done with doctr
left top x of T/F: 5219.09375
bottom right x of T/F: 6422.531250000001
left top x of SN: 402.5312499999999
bottom right x of SN: 808.3125000000001
first t/f detection
TRUE
((5292.312499999999, 1905.59375), (5924.500000000001, 2149.4375))
TRVE
((5355.531250000001, 2447.46875), (5924.500000000001, 2664.21875))
FALSE
((5211.031249999999, 2989.34375), (5770.96875, 3206.09375))
FALSE
((5337.46875, 3540.25), (5978.687500000001, 3784.09375))
FALSE
((5328.437500000001, 4154.375), (6032.875000000001, 4371.125))
FALSE
((5247.156250000001, 4678.1875), (5915.468749999999, 4885.90625))
FALSE
((5274.250000000001, 5192.96875), (6023.843749999999, 5391.65625))
FALSE
((5238.124999999999, 5698.71875), (5825.15625, 5870.3125))
TRVE
((5337.46875, 6177.375), (5861.281249999999, 6358.0))
FALSE
((5328.437500000001, 6782.46875), (6014.8125, 6999.21875))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2032, '2': 2610, '3': 3007, '4': 3585, '5': 4172, '6': 4759, '7': 5147, '8': 5743, '9': 6132, '10': 6719}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : gOTMKLB.jpg
OCR detection done with doctr
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
left top x of SN: 610.25
bottom right x of SN: 1025.0625
first t/f detection
True
((5274.250000000001, 1752.0625), (5798.0625, 1977.84375))
hue
((5274.250000000001, 2302.96875), (5671.624999999999, 2528.75))
TYue
((5400.687499999999, 2754.53125), (5960.625, 2980.3125))
False
((5328.437500000001, 3404.78125), (5978.687500000001, 3657.65625))
re
((5509.062499999999, 4018.90625), (5906.4375, 4199.53125))
rue
((5500.03125, 4190.5), (6050.937499999999, 4407.25))
Frue
((5355.531250000001, 4533.6875), (5888.374999999999, 4741.40625))
Falje
((5274.250000000001, 4958.15625), (5770.96875, 5183.9375))
True
((5346.499999999999, 5409.71875), (5807.093749999999, 5590.34375))
False
((5283.28125, 5852.25), (5825.15625, 6059.96875))
Falie
((5382.625000000001, 6376.0625), (5888.374999999999, 6583.78125))
the
((4967.1875, 6592.8125), (5192.96875, 6746.34375))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': True, '9': False, '10': 'UNASSIGNED'}
the unassigned keys are ['4', '10']
the assigned keys are ['1', '2', '3', '5', '6', '7', '8', '9']
['1', '2', '3', '5', '6', '7', '8', '9', '1', '2', '3', '5', '6', '7', '8', '9']
printing the number dict y_coordinate
{'1': 2185, '2': 2727, '3': 3088, '5': 4181, '6': 4750, '7': 5093, '8': 5626, '9': 6005}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'UNASSIGNED', '5': True, '6': True, '7': False, '8': True, '9': False, '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : niEMuqt.jpg
OCR detection done with doctr
left top x of T/F: 4993.3125
bottom right x of T/F: 6395.437500000001
left top x of SN: 95.46875
bottom right x of SN: 510.2812500000001
first t/f detection
TRU
((5138.78125, 1670.78125), (5599.375000000001, 1959.78125))
TRUE
((5220.062500000001, 2221.6875), (5861.281249999999, 2528.75))
TRUE
((5292.312499999999, 2763.5625), (5978.687500000001, 3106.75))
collision happend with box:2763.5625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((4235.65625, 2871.9375), (5211.031249999999, 3242.21875))
text2 i.e the incoming text is the winner
is
((5120.71875, 3549.28125), (5283.28125, 3720.875))
collision happend with box:3549.28125 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5400.687499999999, 3422.84375), (6087.062500000001, 3729.90625))
text2 i.e the incoming text is the winner
collision happend with box:3422.84375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
descent
((4596.90625, 3558.3125), (5138.78125, 3811.1875))
text1 i.e the prev text is the winner
Pre-
((5066.53125, 4181.46875), (5382.625000000001, 4371.125))
collision happend with box:4181.46875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
FALSE
((5472.9375, 4064.0625), (6213.499999999999, 4353.0625))
text2 i.e the incoming text is the winner
between
((4506.59375, 4226.625), (5075.5625, 4443.375))
TRUE
((5545.187500000001, 4660.125), (6150.28125, 4876.875))
collision happend with box:4660.125 and text:TRUE solving on the basis of percent match boxes
the current box specification are
distribution.
((4660.125, 4804.625), (5491.000000000001, 5057.5))
text2 i.e the incoming text is the winner
is
((4885.90625, 5274.25), (5039.4375, 5436.8125))
collision happend with box:5274.25 and text:is solving on the basis of percent match boxes
the current box specification are
directly
((5030.40625, 5220.0625), (5554.21875, 5436.8125))
text2 i.e the incoming text is the winner
original
((4723.34375, 5879.34375), (5229.09375, 6105.125))
collision happend with box:5879.34375 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((5229.09375, 5861.28125), (5635.5, 6041.90625))
text1 i.e the prev text is the winner
a
((4967.1875, 6358.0), (5075.5625, 6475.40625))
collision happend with box:6358.0 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((5057.5, 6249.625), (5743.875, 6493.46875))
text2 i.e the incoming text is the winner
overfitting
((4940.09375, 6881.8125), (5635.5, 7134.6875))
details
((5012.34375, 7116.625), (5463.906250000001, 7324.34375))
collision happend with box:7116.625 and text:details solving on the basis of percent match boxes
the current box specification are
the
((5626.468750000001, 7062.4375), (5888.374999999999, 7252.09375))
text1 i.e the prev text is the winner
collision happend with box:7116.625 and text:details solving on the basis of percent match boxes
the current box specification are
or
((4849.78125, 7215.96875), (5003.3125, 7333.375))
text1 i.e the prev text is the winner
data.
((4786.5625, 7378.53125), (5138.78125, 7559.15625))
the final dict without editing {'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2673, '2': 3269}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 0
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 0Ld34zC.jpg
OCR detection done with doctr
left top x of T/F: 4812.6875
bottom right x of T/F: 6178.687500000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:04:19] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 0Ld34zC.jpg
[2024/06/28 15:04:20] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:04:21] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.12638187408447266
[2024/06/28 15:04:24] ppocr DEBUG: rec_res num  : 39, elapsed : 2.1456072330474854
OCR detection done
left top x of T/F: 4840.0
bottom right x of T/F: 5988.0
left top y of T/F: 961.0
bottom right y of T/F: 1293.0
cant detect s/n column also so going with all detection using box width
first t/f detection
first t/f detection
first t/f detection
deployment.
[[297.0, 2618.0], [1037.0, 2507.0], [1063.0, 2671.0], [323.0, 2782.0]]
first t/f detection
first t/f detection
FALSE
[[5673.0, 5580.0], [6401.0, 5470.0], [6446.0, 5748.0], [5717.0, 5859.0]]
first t/f detection
the true list is  [1492, 2002, 4559, 6071]
the false list is  []
the true list for xdirn [4965, 198, 5426, 5685]
the false list for xdirn []
the final dict for y is: 
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'UNASSIGNED'}
the final dict for x is: 
{'1': 'UNASSIGNED', '2': True, '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': 'NULL', '7': 'UNASSIGNED', '8': 'NULL', '9': 'NULL', '10': 'UNASSIGNED'}
the final dict without editing {'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'UNASSIGNED'}
['2', '3', '5', '6', '8', '9']
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': True, '6': 'NULL', '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 96QZdd8.jpg
rotation started
['and', 'clear', 'handwriting.', 'letters', 'in', 'capital', 'Write', 'TRUE', 'or', 'FALSE', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'TRUE', 'TRUE', 'deployment.', '3', '1', '-', 'cosineSimalaritylz,', 'y)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'i', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'FALSE', 'FALSE', 'FALSE', 'TRUE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'space.', 'TRUE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'TRUE', 'overfitting', 'in-', 'TRUE']
rotation done for:  96QZdd8.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of T/F: 5471.968749999999
bottom right x of T/F: 6720.562500000001
left top x of SN: 890.2187499999999
bottom right x of SN: 1277.9375
first t/f detection
TRUE
((5481.968749999999, 2104.28125), (5879.34375, 2284.90625))
TRUE
((5400.687499999999, 2582.9375), (5861.281249999999, 2790.65625))
FALSE
((5472.9375, 3097.71875), (5969.656249999999, 3278.34375))
FALSE
((5436.812500000001, 3720.875), (5933.53125, 3883.4375))
FALSE
((5418.75, 4307.90625), (5888.374999999999, 4443.375))
FALSE
((5364.5625, 4822.6875), (5879.34375, 4994.28125))
TRUE
((5355.531250000001, 5238.125), (5798.0625, 5400.6875))
TRUE
((5310.375, 5752.90625), (5743.875, 5933.53125))
TRUE
((5328.437500000001, 6177.375), (5770.96875, 6358.0))
TRUE
((5337.46875, 6701.1875), (5798.0625, 6881.8125))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2736, '3': 3097, '4': 3648, '5': 4190, '6': 4732, '7': 5102, '8': 5662, '9': 6032, '10': 6601}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H6JMOwY.jpg
rotation started
['letters', 'and', 'clear', 'handwriting.', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', '9.', '(10', 'pts)', 'Write', 'your', 'roll', 'number', 'here:', 'TRUE/FALSE', 'SN', 'Statement', 'for', 'KNN', 'is', 'much', 'larger', 'than', 'SVM', 'for', 'TRUE', '1', 'Typically,', 'the', 'storage', 'requirement', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'deployment.', 'TRUE', '3', '1-', 'cosineSimalaritylz.)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'any', 'd-dimensional', 'FALSE', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'FALSE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FALSE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'FALS', 'E', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', 'space.', 'TRUE', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'cision', 'and', 'Recall.', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FALSE', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.', 'as', 'the', 'model', 'TRUE', 'creases,', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the']
rotation done for:  H6JMOwY.jpg
Number of times rotation done: 1
OCR detection done with doctr
left top x of T/F: 5354.5625
bottom right x of T/F: 6603.156249999999
left top x of SN: 628.3125000000001
bottom right x of SN: 1034.09375
first t/f detection
TRUE
((5373.593749999999, 1968.8125), (6078.031249999999, 2221.6875))
TRUE
((5373.593749999999, 2492.625), (6096.09375, 2754.53125))
FALSE
((5454.874999999999, 3016.4375), (6195.437500000001, 3269.3125))
FALSE
((5391.65625, 3621.53125), (6159.312499999999, 3856.34375))
FALSE
((5391.65625, 4226.625), (6105.124999999999, 4434.34375))
FALS
((5445.84375, 4750.4375), (6050.937499999999, 4958.15625))
FALSE
((5427.781249999999, 5202.0), (6168.343750000001, 5400.6875))
TRUE
((5445.84375, 5743.875), (6096.09375, 5960.625))
FALSE
((5491.000000000001, 6240.59375), (6177.375, 6439.28125))
TRUE
((5436.812500000001, 6854.71875), (6114.156250000001, 7062.4375))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2194, '2': 2754, '3': 3133, '4': 3702, '5': 4271, '6': 4849, '7': 5229, '8': 5807, '9': 6186, '10': 6773}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': False, '8': True, '9': False, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : CG1NIoo.jpg
OCR detection done with doctr
left top x of SN: 890.2187499999999
bottom right x of SN: 1305.03125
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6612.187500000001
first t/f detection
TRUE
((5436.812500000001, 2348.125), (6078.031249999999, 2546.8125))
TRUE
((5527.125, 2844.84375), (6186.406249999999, 3016.4375))
False
((5572.281250000001, 3314.46875), (6168.343750000001, 3531.21875))
False
((5518.093750000001, 3892.46875), (6087.062500000001, 4091.15625))
False
((5472.9375, 4479.5), (6050.937499999999, 4696.25))
false
((5292.312499999999, 4958.15625), (5897.406250000001, 5174.90625))
True
((5409.718750000001, 5454.875), (5915.468749999999, 5635.5))
True
((5454.874999999999, 5879.34375), (5942.562499999999, 6087.0625))
True
((5481.968749999999, 6403.15625), (5987.71875, 6610.875))
True
((5418.75, 6945.03125), (5987.71875, 7143.71875))
the final dict without editing {'1': True, '2': 'NULL', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 3133, '2': 2772, '3': 3124, '4': 3675, '5': 4208, '6': 4768, '7': 5129}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': False, '4': False, '5': False, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : lbg7D6C.jpg
rotation started
['of', 'bE', '6o', '00', '2', '', 'I', 'E', '9', 'F', '>', 'Or', 'I', 'a', 'I', 'I', '8', 'F', 'E', 'E', 'P', 'A', 'tn', 'I', 'E', 'I', 'I', 'E', 'I', 'F', '9', 'I', 'I', '8', ':', 'E', '1', 'I', 'f', 'I', 'T', 'E', 'I', 'I', 'of', 'I', 'I', 'I', 'I', '8', 'E', '8', '9', 'I', 'E', 'Q', 'f', 'I', 'E', 'E', 'E', 'I', '-', 'A', 'I', 'E', '8', 'I', 'E', 'la', '9', 'I', 'I', 'I', 'E', 'I', '-', 'E', '-', '2', 'e', 'I', 'I', 'I', 'I', 'it', 'I', 'o', '-', 'E', 'I', 'A', '€', '2', 'I', '€', 'T', '2', 'E', 'I', 'la', 't', '2', 'I', 'I', '5h', 'I', 'I', 'is', '8', 'I', '8', '&', '8', 'E', '6', 'a', 'I', 'E', '-', 'E', 'I', '1', '2', 's', '&', 'E', 'E', '-', '2', 'E', 'F', 'I', ':', '3', 'I', '3', 'I', 'I', 'I', 'E', 'e', 'E', 'I', 'I', 'I', 'I', 'I', '-', 'E', '€', 'E', '2', 'E', 'e', '8', 'E', 'E', 'I', '2', 'I', 'E', 'I', 'E', 'I', 'E', '€', 'I', '-', 'e', '2', 'it', 'E', 'E', 'E', 'o', 'E', 't', 'S', '8', 'I', '-', 'I', '-', 'a', 'I', 'f', 'E', 'g', 'E', 'it', 'a', '2', 'I', 'a', 'E', 'I', ':', 'E', 'E', '2', '2', '€', '-', 'a', 'I', 'a', '(D', 'a', '-', 'I', '', '(', 'tn', '-']
rotation started
['jou', 'op', '7e49', 'egep', 'Sururen', 'erep', 'uoosun', 'Mou', '01', 'IfOm', '021210008', 'an8)', 'oangdes', '01', 'LIBOT', 'Keuz', 'a43', 'ul', 'sTrenap', 'JO', 'oSIOu', '(opour', 'ou7', 'se', "'sOseoDour", 'YSLI', 'ou1', 'WAS', 'oyroads', 'Sumyrano', 'JO', 'onjer', '48rg', 'e', 'YIM', 'OT', 'WAS', '2501-5A-DtIO', 'Suryeur', 'ssejotgnur', 'IOA', '6', "'apeds", 'peutsuo', 'UT', 'Jojourered', '0', 'ou1', 'Jo', '1', '2081', 'ueya', 'JOMOTS', 'SI', 'WAS', 'auo-SA-Quo', "'sossepo", 'Jo', 'Jaqunu', 'Suisn', 'Lonopoad', 'e', 'a81er', 'e', '431M', 'sulargold', '28104', 'de', '20b1', '-', '3a', 'o47', 'Ur', 'peouy-tou', 'aq', 'ugo', 'WAS', 'ue', 'Jo', 'Azepunoq', 'uorsppop', 'OUL', '8', 'sopou', 'Jo', 'Jaqumnu', 'au4', '07', 'uorsioaa', 'aun', 'ur', 'uomoipead', 'e', 'euoyodord', 'Apppamp', 'SI', '0011', 'Suryeur', 'JOJ', 'parmbar', 'OUIL', 'OUL', 'L', '"uoranquasip', 'ueis', '1', '-Snes', '2', 'SABATE', 'ST', 'suolnquosip', 'uerssues', 'OMg', 'Jo', 'aunaxtu', 'V', '9', 'xo4L', 'e', 'SI', 'aAn3', '(DOu)', 'Tesay', 'pue', 'uoisiaud', '1133m90q', 'orasutonpereto', 'Surezado', 'Joyd', 'Iotaoot', 'OUL', 'S', 'ypongau', 'quarp', '-', '2nul', '[emau', 'ayn', 'UI', 'Squerpe1s', 'a49', 'agndulos', 'MBI8', 'TIYA', "'say810m", 'ou7', '07', 'posn', 'SI', 'auposop', 'agepdn', '09', 'pasn', 'SI', 'f', 'pue', 'I', 'SI0900A', 'uoresodoadypeg', '7', 'Teuorsuouurp-p', '20e1', 'Sue', 'JOJ', 'OIIgOUI', 'aoupsip', 'PITEA', 'B', 'SI', '(R', 'z)iguampuagauso', '-', '0591', 'angl', '&', 'JoyIsSBO', 'JeOuTT-tonr', 'R', 'SI', 'NNY', 'G', 'quousojdap', 'JOJ', 'WAS', 'uey2', '108.rer', 'gonu', 'SI', 'NNY', '101', 'quoutammbar', 'a80.109S', 'oy1', 'STeoidi', 'I', '-', 'nva/anur', 'quouagezs', 'NS', ':axay', 'Jaqunu', 'IIOI', 'or', 'BLM', 'apley', 'peap', 'pue', 'S.1017OT', 'jeaide3', 'UI', 'ASTVI', 'IO', 'AAUL', 'BATIM', '(sad', 'OT)', "'6"]
rotation started
['-', 'MY', '1', '-', '-', 'I', 'P', 'à', '2', '-', ':', 'a', '-', 'I', '*', '2', 'à', 'à', '-', 'à', 'e', 'I', 'E', 'à', 'I', 'à', '€', 'e', 'a', '/', 'iE', 'a', 'I', '.E', 'e', 'f', 'of', '-', 'I', '8', 'I', 'iE', 'of', 'i4', '.4', 'I', 'I', ':', 'e', 'i', '3', 'S', '-', '>', 'I', 'E', 'a', '-', 'E', 'I', 'i', 'S', 'i', '8a', 'e', ':', 'I', 'o', 'a', 'I', 'e', 'E', '-', 'I', '8', '1', 'I', ':', 'E', 'I', 'T', '9', 'I', 'of', ':', 'I', '.s', 'I', 'I', 'I', 'I', 'S', 'i', 'i2', 'I', 'I', '/', 'I', 'E', 'I', 'of', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'E', 'is', 'a', '2', 'I', 'I', 'I', 'E', 'I', 'I', 'I', 'I', 'E', 'a', 'I', '20', 'I', 'I', '3', 'i', 'I', 'E', 'of', '1', '1', 'a', 'is', '€', '-', 'is', 'E', 'le', 'i', 'e', 'a', 'I', 'de', 'I', '00', 'a', 'E', 'is', 'E', ':', 'à', 'I', 'i', 'I', ':', 'O', 'e', '€', 'a', 'e', '8', 'I', 'of', '1', 'E', 'I', ':', ':', 'I', '6', '0', 'E', '-', 'I', '.', 'I', 's', '-', 'I', '2', 'e', 'a', 'E', 'a', 'E', '.4', ':', 'I', 'I', '-', 'E', '1', 'à', '2', 'e', 'a', '1', '22', '€', '1', '7', '4', '-', '4', '-', 'E', 'E', 'E', '', '7', '8o', '', '09']
rotation started
['9.', '(10', 'pts)', 'Write', 'TRUE', 'or', 'FALSE', 'in', 'capital', 'letters', 'and', 'clear', 'bandmna', 'Write', 'your', 'roll', 'number', 'here:', 'SN', 'Statement', 'L', 'TRUE/FALA', '1', 'Typically,', 'the', 'storage', 'requirement', 'for', 'KNN', 'is', 'much', 'than', 'SVM', 'for', 'deployment.', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'larger', 'Tove', 'Talse', '', '3', '1-', '4', 'd-dimensional', 'cosineSimalarityz,', '3)', 'is', 'a', 'valid', 'distance', 'metric', 'for', 'vectors', 'a', 'and', 'J.', 'any', 'Tove', 'dient', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'descent', 'is', 'used', 'to', 'compute', 'the', 'weights,', 'while', 'gra', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', '6', 'A', 'mixture', 'of', '7', 'The', 'Time', 'Tree', 'is', 'directly', '8', 'The', 'decision', 'original', '9', 'For', 'multiclass', 'making', 'a', 'prediction', 'using', 'one-vs-rest', 'SVM.', 'Trve', 'plot', 'between', 'Precision', 'Operating', 'Characteristic', '(ROC)', 'curve', 'and', 'Recall', 'is', 'a', 'Tot', 'sian', 'distribution.', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaus', 'required', 'for', 'Tve', 'Falge', 'o', 'False', 'making', 'a', 'prediction', 'in', 'the', 'proportional', 'to', 'the', 'number', 'of', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'Decision', 'hodes.', 'non-linear', 'in', 'the', 'space,', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'One-vs-one', 'SVM', 'is', 'slower', 'than', 'True', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'of', 'overfitting', 'increases,', 'parameter', 'in', 'SVM,', 'Specific', 'as', 'the', 'model', 'the', 'risk', 'noise', 'or', 'details', 'in', 'the', 'may', 'learn', 'to', 'capture', 'Tve', '-', '-', 'geheralize', 'well', 'to', 'new,', 'unseen', 'training', 'data', 'that', 'do', 'not', 'data.']
OCR detection done with doctr
left top x of SN: 790.8750000000001
bottom right x of SN: 1241.8125000000002
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:05:03] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : lbg7D6C.jpg
[2024/06/28 15:05:04] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:05:04] ppocr DEBUG: dt_boxes num : 48, elapsed : 0.13034272193908691
[2024/06/28 15:05:07] ppocr DEBUG: rec_res num  : 48, elapsed : 2.3859479427337646
[2024/06/28 15:05:08] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:05:08] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.18807172775268555
[2024/06/28 15:05:10] ppocr DEBUG: rec_res num  : 46, elapsed : 1.7333672046661377
['6', 'generalize well to new, unseen data.', 'of overfitting increases, as the model may learn to capture', 'specific noise or details in the training data that do not', 'With a high value of the C parameter in SVM, the risk', 'one-vs-rest SVM.', '9', 'original space.', 'Tree is directly proportional to the number of nodes.', 'sian distribution.', 'A mixture of two Gaussian distributions is always a Gaus-', 'SN', 'plot between Precision and Recall.', 'The Receiver Operating Characteristic', 'dient descent is used to compute the gradients in the neural', 'network.', 'Backpropogation is used to update the weights, while gra~', 'd-dimensional vectors x and y.', 'KNN is a non-linear classifier.', 'than SVM for deployment.', 'Statement', 'Write your roll number here:', 'ROC curve is a', 'Toue', 'oe', 'Tot', 'False', 'Faige', 'True', 'Toue', 'False', 'Toue', 'TRUE/FALS']
[2024/06/28 15:05:11] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:05:12] ppocr DEBUG: dt_boxes num : 46, elapsed : 0.12469792366027832
[2024/06/28 15:05:14] ppocr DEBUG: rec_res num  : 46, elapsed : 2.2049062252044678
['O0', '38704', '6', '9', 'anel', '2', 'TneL', 'NS']
[2024/06/28 15:05:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:05:15] ppocr DEBUG: dt_boxes num : 40, elapsed : 0.12194967269897461
[2024/06/28 15:05:17] ppocr DEBUG: rec_res num  : 40, elapsed : 1.6379599571228027
['Tnee', 'oenneee', 'meenk', 'NS', '2', '3', '4', '9', '9', '10']
[2024/06/28 15:05:18] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:05:18] ppocr DEBUG: dt_boxes num : 48, elapsed : 0.12539410591125488
[2024/06/28 15:05:21] ppocr DEBUG: rec_res num  : 48, elapsed : 2.327084541320801
['Write your roll number here:', 'SN', 'Statement', 'TRUE/FALS', 'Typically the storage requirement for KNN is much larger', 'than SVM for deployment', 'Toue', '2', 'KNN is a non-linear classifier', 'Fase', '3', '1-cosineSimalarity(x,y is a valid distance metric for any', 'd-dimensional vectors x and y.', 'Toe', 'Backpropogation is used to update the weights, while gra', 'dient descent is used to compute the gradients in the neural', 'network.', 'True', 'The Receiver Operating Characteristic (ROC curve is a', '5', 'plot between Precision and Recall.', '6', 'A mixture of two Gaussian distributions is always a Gaus', 'sian distribution.', '7', 'The Time required for making a prediction in the Decision', 'Tout', 'Tree is directly proportional to the number of nodes.', 'Faige', '8', 'The decision boundary of an SVM can be non-linear in the', 'original space.', 'False', 'For multiclass problems with a large number of classes,', '9', 'making a prediction using one-vs-one SVM is slower than', 'one-vs-rest SVM.', 'Toe', '10', 'With a high value of the C parameter in SVM, the risk', 'of overfitting increases, as the model may learn to capture', 'specific noise or details in the training data that do not', 'Toe.', 'generalize well to new unseen data']
OCR detection done
left top x of SN: 828.0
bottom right x of SN: 1293.0
left top y of SN: 1522.0
bottom right y of SN: 1845.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/lbg7D6C.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : tDvfNiE.jpg
OCR detection done with doctr
left top x of T/F: 1027.7109375
bottom right x of T/F: 1480.4140625
left top x of SN: -40.0
bottom right x of SN: 196.06347656249997
first t/f detection
faly
((1091.8857421875, 444.2333984375), (1226.2392578125, 554.75))
collision happend with box:444.2333984375 and text:faly solving on the basis of percent match boxes
the current box specification are
falet
((1107.0546875, 572.0859375), (1224.072265625, 665.2666015625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:572.0859375 and text:falet solving on the basis of percent match boxes
the current box specification are
for
((992.2041015625, 489.740234375), (1037.7109375, 528.74609375))
text1 i.e the prev text is the winner
collision happend with box:572.0859375 and text:falet solving on the basis of percent match boxes
the current box specification are
ddimensional
((881.6875, 708.6064453125), (1083.2177734375, 786.6181640625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:708.6064453125 and text:ddimensional solving on the basis of percent match boxes
the current box specification are
KAV
((1128.724609375, 699.9384765625), (1258.744140625, 793.119140625))
text1 i.e the prev text is the winner
collision happend with box:708.6064453125 and text:ddimensional solving on the basis of percent match boxes
the current box specification are
is
((1061.5478515625, 849.4609375), (1098.38671875, 890.6337890625))
text1 i.e the prev text is the winner
collision happend with box:708.6064453125 and text:ddimensional solving on the basis of percent match boxes
the current box specification are
descent
((959.69921875, 855.9619140625), (1068.048828125, 907.9697265625))
text1 i.e the prev text is the winner
Pre-
((1050.712890625, 983.814453125), (1117.8896484375, 1029.3212890625))
RiV
((1178.5654296875, 819.123046875), (1299.9169921875, 912.3037109375))
between
((940.1962890625, 994.6494140625), (1057.2138671875, 1048.82421875))
collision happend with box:994.6494140625 and text:between solving on the basis of percent match boxes
the current box specification are
TAV
((1176.3984375, 957.810546875), (1312.9189453125, 1063.9931640625))
text2 i.e the incoming text is the winner
KRuV
((1182.8994140625, 1189.6787109375), (1328.087890625, 1295.861328125))
collision happend with box:1189.6787109375 and text:KRuV solving on the basis of percent match boxes
the current box specification are
Colw
((1217.5712890625, 1298.0283203125), (1345.423828125, 1391.208984375))
text1 i.e the prev text is the winner
collision happend with box:1189.6787109375 and text:KRuV solving on the basis of percent match boxes
the current box specification are
distribution.
((966.2001953124999, 1116.0009765625), (1143.8935546875, 1185.3447265625))
text2 i.e the incoming text is the winner
collision happend with box:1116.0009765625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((1018.2080078125, 1230.8515625), (1048.5458984375, 1263.3564453125))
text1 i.e the prev text is the winner
collision happend with box:1116.0009765625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1044.2119140625, 1211.3486328125), (1154.7285156250002, 1261.189453125))
text1 i.e the prev text is the winner
original
((981.369140625, 1358.7041015625), (1091.8857421875, 1415.0458984375))
collision happend with box:1358.7041015625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((1085.384765625, 1352.203125), (1169.8974609375, 1395.54296875))
text1 i.e the prev text is the winner
collision happend with box:1358.7041015625 and text:original solving on the basis of percent match boxes
the current box specification are
making
((931.5283203125, 1460.552734375), (1037.7109375, 1514.7275390625))
text1 i.e the prev text is the winner
collision happend with box:1358.7041015625 and text:original solving on the basis of percent match boxes
the current box specification are
a
((1033.376953125, 1464.88671875), (1059.380859375, 1495.224609375))
text1 i.e the prev text is the winner
collision happend with box:1358.7041015625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1048.5458984375, 1436.7158203125), (1195.9013671875, 1497.3916015625))
text1 i.e the prev text is the winner
collision happend with box:1358.7041015625 and text:original solving on the basis of percent match boxes
the current box specification are
Falre
((1232.740234375, 1415.0458984375), (1360.5927734375, 1508.2265625))
true and false collision so given priority to text2 which is the incoming text
of
((992.2041015625, 1601.4072265625), (1031.2099609375, 1640.4130859375))
collision happend with box:1601.4072265625 and text:of solving on the basis of percent match boxes
the current box specification are
overfitting
((1026.8759765625, 1579.7373046875), (1174.2314453125, 1640.4130859375))
text2 i.e the incoming text is the winner
collision happend with box:1579.7373046875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((1172.064453125, 1618.7431640625), (1226.2392578125, 1657.7490234375))
text1 i.e the prev text is the winner
collision happend with box:1579.7373046875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
or
((1003.0390625, 1651.248046875), (1044.2119140625, 1685.919921875))
text1 i.e the prev text is the winner
collision happend with box:1579.7373046875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
details
((1042.044921875, 1627.4111328125), (1139.5595703125, 1681.5859375))
text2 i.e the incoming text is the winner
collision happend with box:1627.4111328125 and text:details solving on the basis of percent match boxes
the current box specification are
Kiuu
((1258.744140625, 1590.572265625), (1403.9326171875, 1694.587890625))
text1 i.e the prev text is the winner
collision happend with box:1627.4111328125 and text:details solving on the basis of percent match boxes
the current box specification are
data.
((994.37109375, 1688.0869140625), (1070.2158203125, 1733.59375))
true and false collision so given priority to text2 which is the incoming text
the final dict without editing {'1': False, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['8', '9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7']
['1', '2', '3', '4', '5', '6', '7', '1', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'1': 656, '2': 793, '3': 881, '4': 1018, '6': 1291, '7': 1378, '5': 1155}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': False, '4': True, '5': 'NULL', '6': True, '7': False, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : EB96Q7Y.jpg
OCR detection done with doctr
left top x of SN: 88.95703124999997
bottom right x of SN: 306.92578125
left top x of T/F: 870.421875
bottom right x of T/F: 1237.04296875
first t/f detection
F
((919.97265625, 416.07421875), (946.8671875000001, 452.4609375))
collision happend with box:416.07421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((918.390625, 496.7578125), (942.12109375, 533.14453125))
text2 i.e the incoming text is the winner
collision happend with box:496.7578125 and text:F solving on the basis of percent match boxes
the current box specification are
F
((921.5546875, 579.0234375), (950.03125, 615.41015625))
text2 i.e the incoming text is the winner
T.
((896.2421874999999, 957.12890625), (946.8671875000001, 990.3515625))
T
((913.64453125, 686.6015625), (945.2851562500001, 719.82421875))
collision happend with box:686.6015625 and text:T solving on the basis of percent match boxes
the current box specification are
T
((912.0625, 789.43359375), (940.5390625, 822.65625))
text2 i.e the incoming text is the winner
collision happend with box:789.43359375 and text:T solving on the basis of percent match boxes
the current box specification are
T
((913.64453125, 878.02734375), (945.2851562500001, 911.25))
text2 i.e the incoming text is the winner
F
((908.8984375000001, 1042.55859375), (935.7929687499999, 1082.109375))
collision happend with box:1042.55859375 and text:F solving on the basis of percent match boxes
the current box specification are
F
((908.8984375000001, 1124.82421875), (937.375, 1156.46484375))
text2 i.e the incoming text is the winner
collision happend with box:1124.82421875 and text:F solving on the basis of percent match boxes
the current box specification are
F
((905.734375, 1222.91015625), (934.2109374999999, 1257.71484375))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 416, '2': 517, '3': 585, '4': 686, '5': 787, '6': 889, '7': 957, '8': 1058, '9': 1124, '10': 1227}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': True, '5': 'NULL', '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DT4N2Zg.jpg
OCR detection done with doctr
left top x of SN: 71.92187500000001
bottom right x of SN: 303.875
left top x of T/F: 1097.34375
bottom right x of T/F: 1519.3125
first t/f detection
Tyw
((1136.4375, 527.84375), (1244.5, 606.8125))
collision happend with box:527.84375 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1121.890625, 629.671875), (1244.5, 714.875))
text2 i.e the incoming text is the winner
collision happend with box:629.671875 and text:folre solving on the basis of percent match boxes
the current box specification are
frov
((1128.125, 741.890625), (1240.34375, 822.9375))
text1 i.e the prev text is the winner
Truv
((1134.359375, 847.875), (1248.65625, 937.234375))
collision happend with box:847.875 and text:Truv solving on the basis of percent match boxes
the current box specification are
Tisr
((1123.96875, 1003.734375), (1246.578125, 1093.09375))
text2 i.e the incoming text is the winner
collision happend with box:1003.734375 and text:Tisr solving on the basis of percent match boxes
the current box specification are
Tyue
((1130.2031250000002, 1103.484375), (1246.578125, 1180.375))
text1 i.e the prev text is the winner
Tiue
((1121.890625, 1232.328125), (1252.8125, 1319.609375))
collision happend with box:1232.328125 and text:Tiue solving on the basis of percent match boxes
the current box specification are
Fale
((1142.671875, 1332.078125), (1244.5, 1398.578125))
text2 i.e the incoming text is the winner
collision happend with box:1332.078125 and text:Fale solving on the basis of percent match boxes
the current box specification are
falye
((1132.28125, 1438.0625), (1254.890625, 1525.34375))
text2 i.e the incoming text is the winner
collision happend with box:1438.0625 and text:falye solving on the basis of percent match boxes
the current box specification are
Faue
((1121.890625, 1575.21875), (1275.671875, 1681.203125))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 511, '2': 644, '3': 731, '4': 866, '5': 997, '6': 1130, '7': 1221, '8': 1354, '9': 1446, '10': 1585}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : eJT0NAj.jpg
OCR detection done with doctr
left top x of T/F: 1291.8095703125002
bottom right x of T/F: 1767.6787109375
left top x of SN: 36.39453125000003
bottom right x of SN: 279.236328125
first t/f detection
folre
((1316.3115234375, 596.9970703125), (1475.8330078125, 700.927734375))
collision happend with box:596.9970703125 and text:folre solving on the basis of percent match boxes
the current box specification are
TTcek
((1340.4814453124998, 739.599609375), (1490.3349609375, 819.3603515625))
text1 i.e the prev text is the winner
collision happend with box:596.9970703125 and text:folre solving on the basis of percent match boxes
the current box specification are
Faue
((1495.1689453124998, 722.6806640625), (1591.8486328125, 800.0244140625))
text2 i.e the incoming text is the winner
collision happend with box:722.6806640625 and text:Faue solving on the basis of percent match boxes
the current box specification are
d-dimensional
((1079.4462890625, 858.0322265625), (1296.9755859375, 913.623046875))
text2 i.e the incoming text is the winner
collision happend with box:858.0322265625 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1265.5546875000002, 1017.5537109375), (1299.392578125, 1051.3916015625))
text1 i.e the prev text is the winner
Tyu
((1492.751953125, 1022.3876953125), (1589.4316406249998, 1090.0634765625))
collision happend with box:1022.3876953125 and text:Tyu solving on the basis of percent match boxes
the current box specification are
Pre-
((1234.1337890625, 1167.4072265625), (1304.2265625, 1206.0791015625))
text1 i.e the prev text is the winner
collision happend with box:1022.3876953125 and text:Tyu solving on the basis of percent match boxes
the current box specification are
Foloe
((1338.064453125, 1162.5732421875), (1497.5859375, 1266.50390625))
text2 i.e the incoming text is the winner
collision happend with box:1162.5732421875 and text:Foloe solving on the basis of percent match boxes
the current box specification are
Trur
((1350.1494140625, 1278.5888671875), (1509.6708984375, 1377.685546875))
text2 i.e the incoming text is the winner
collision happend with box:1278.5888671875 and text:Trur solving on the basis of percent match boxes
the current box specification are
fre
((1362.234375, 1401.85546875), (1509.6708984375, 1500.9521484375))
text1 i.e the prev text is the winner
Falu
((1386.404296875, 1549.2919921875), (1521.755859375, 1621.8017578125))
collision happend with box:1549.2919921875 and text:Falu solving on the basis of percent match boxes
the current box specification are
Falke
((1383.9873046875002, 1667.724609375), (1536.2578125, 1766.8212890625))
true and false collision so given priority to text2 which is the incoming text
distribution.
((1118.1181640625, 1314.84375), (1313.89453125, 1368.017578125))
collision happend with box:1314.84375 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1197.87890625, 1418.7744140625), (1318.728515625, 1467.1142578125))
text1 i.e the prev text is the winner
space.
((1222.048828125, 1578.2958984375), (1323.5625, 1621.8017578125))
collision happend with box:1578.2958984375 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((1173.708984375, 1674.9755859375), (1333.23046875, 1728.1494140625))
text2 i.e the incoming text is the winner
the
((1287.3076171875, 1882.8369140625), (1345.3154296875, 1921.5087890625))
collision happend with box:1882.8369140625 and text:the solving on the basis of percent match boxes
the current box specification are
Falre
((1393.6552734375, 1824.8291015625), (1550.759765625, 1928.759765625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': False, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 655, '2': 812, '3': 913, '4': 1068, '5': 1222, '6': 1375, '7': 1479, '8': 1636, '9': 1740, '10': 1894}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': 'NULL', '4': True, '5': True, '6': False, '7': True, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ZGzhVNg.jpg
OCR detection done with doctr
left top x of SN: 438.6562500000001
bottom right x of SN: 853.4687499999999
left top x of T/F: 5544.21875
bottom right x of T/F: 6738.624999999999
first t/f detection
FALSE
((5653.562500000001, 1914.625), (6285.75, 2131.375))
TRVE
((5617.437499999999, 2492.625), (6141.250000000001, 2709.375))
TRUE
((5545.187500000001, 3052.5625), (6069.0, 3305.4375))
PALSE
((5617.437499999999, 3576.375), (6294.781249999999, 3793.125))
TRUE
((5644.531249999999, 4027.9375), (6222.531250000001, 4226.625))
FALSE
((5698.718749999999, 4696.25), (6285.75, 4940.09375))
TRUE
((5644.531249999999, 5409.71875), (6195.437500000001, 5617.4375))
FALSE
((5680.656250000001, 5933.53125), (6258.65625, 6150.28125))
TRUE
((5689.6875, 6520.5625), (6276.718750000001, 6764.40625))
FALSE
((5698.718749999999, 7071.46875), (6339.9375, 7333.375))
the final dict without editing {'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1833, '2': 2411, '3': 2998, '4': 3585, '5': 3973, '6': 4578, '7': 5382, '8': 5987, '9': 6394, '10': 7215}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': True, '4': False, '5': True, '6': False, '7': True, '8': False, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : QjnYgjU.jpg
OCR detection done with doctr
left top x of T/F: 5426.812500000001
bottom right x of T/F: 6603.156249999999
left top x of SN: 556.0625
bottom right x of SN: 961.8437499999999
first t/f detection
TRVE
((5825.15625, 1661.75), (6330.906250000001, 1833.34375))
FALSE
((5915.468749999999, 2203.625), (6439.281250000001, 2384.25))
TRUE
((5798.0625, 2772.59375), (6376.062499999999, 2971.28125))
Trirt
((5454.874999999999, 1779.15625), (6050.937499999999, 2032.03125))
Fabir
((5509.062499999999, 2357.15625), (5942.562499999999, 2573.90625))
Tue
((5463.906250000001, 2926.125), (5951.593750000001, 3151.90625))
FALSE
((5969.656249999999, 3314.46875), (6484.437499999999, 3531.21875))
TRUE
((5816.125000000001, 3711.84375), (6394.125, 3919.5625))
TRUE
((5725.812499999999, 4289.84375), (6249.625000000001, 4497.5625))
Ezel
((5536.156249999999, 4506.59375), (6114.156250000001, 4759.46875))
fatse
((5500.03125, 3422.84375), (5960.625, 3657.65625))
Tecl
((5500.03125, 3856.34375), (5960.625, 4091.15625))
TRUE
((5789.031250000001, 5075.5625), (6367.03125, 5283.28125))
collision happend with box:5075.5625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
Treel
((5554.21875, 5192.96875), (6105.124999999999, 5445.84375))
text2 i.e the incoming text is the winner
FALSE
((5915.468749999999, 5626.46875), (6529.59375, 5879.34375))
collision happend with box:5626.46875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
Fabre
((5518.093750000001, 5743.875), (6069.0, 5996.75))
true and false collision so given priority to text2 which is the incoming text
TRUE
((5491.000000000001, 6294.78125), (6186.406249999999, 6493.46875))
TRUE
((5500.03125, 6899.875), (6249.625000000001, 7152.75))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1914, '2': 2465, '3': 3007, '4': 3567, '5': 3937, '6': 4497, '7': 5247, '8': 5816, '9': 6204, '10': 6981}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 6
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 54jROSP.jpg
OCR detection done with doctr
left top x of T/F: 4984.28125
bottom right x of T/F: 6296.09375
left top x of SN: 249.0000000000001
bottom right x of SN: 690.9062499999999
first t/f detection
for
((4777.53125, 1788.1875), (4985.25, 1941.71875))
collision happend with box:1788.1875 and text:for solving on the basis of percent match boxes
the current box specification are
TRUE
((5147.8125, 1652.71875), (5779.999999999999, 1914.625))
text2 i.e the incoming text is the winner
-TRVE
((5192.96875, 2212.65625), (5807.093749999999, 2465.53125))
FALSE
((5301.343750000001, 2691.3125), (6032.875000000001, 3025.46875))
collision happend with box:2691.3125 and text:FALSE solving on the basis of percent match boxes
the current box specification are
ddimensional
((4235.65625, 2763.5625), (5147.8125, 3097.71875))
true and false collision so given priority to text2 which is the incoming text
is
((5066.53125, 3404.78125), (5192.96875, 3540.25))
collision happend with box:3404.78125 and text:is solving on the basis of percent match boxes
the current box specification are
FALSE
((5364.5625, 3296.40625), (6078.031249999999, 3585.40625))
text2 i.e the incoming text is the winner
collision happend with box:3296.40625 and text:FALSE solving on the basis of percent match boxes
the current box specification are
descent
((4569.8125, 3404.78125), (5057.5, 3621.53125))
text1 i.e the prev text is the winner
Pre-
((4976.21875, 3973.75), (5274.250000000001, 4154.375))
collision happend with box:3973.75 and text:Pre- solving on the basis of percent match boxes
the current box specification are
TRVE
((5454.874999999999, 3919.5625), (6105.124999999999, 4163.40625))
text2 i.e the incoming text is the winner
collision happend with box:3919.5625 and text:TRVE solving on the basis of percent match boxes
the current box specification are
between
((4470.46875, 4009.875), (5003.3125, 4226.625))
text1 i.e the prev text is the winner
FALSE
((5500.03125, 4398.21875), (6195.437500000001, 4651.09375))
collision happend with box:4398.21875 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((4587.875, 4524.65625), (5373.593749999999, 4804.625))
text2 i.e the incoming text is the winner
directly
((4931.0625, 4931.0625), (5418.75, 5147.8125))
TRVE
((5653.562500000001, 5382.625), (6294.781249999999, 5599.375))
original
((4642.0625, 5545.1875), (5111.6875, 5770.96875))
collision happend with box:5545.1875 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((5111.6875, 5536.15625), (5500.03125, 5716.78125))
text1 i.e the prev text is the winner
a
((4867.84375, 5987.71875), (4985.25, 6114.15625))
collision happend with box:5987.71875 and text:a solving on the basis of percent match boxes
the current box specification are
prediction
((4949.125, 5888.375), (5590.343749999999, 6132.21875))
text2 i.e the incoming text is the winner
overfitting
((4840.75, 6484.4375), (5491.000000000001, 6737.3125))
collision happend with box:6484.4375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((5463.906250000001, 6637.96875), (5707.750000000001, 6827.625))
text1 i.e the prev text is the winner
details
((4894.9375, 6692.15625), (5328.437500000001, 6908.90625))
data.
((4687.21875, 6945.03125), (5030.40625, 7134.6875))
the final dict without editing {'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['3', '4', '5', '6', '7', '8', '9', '10']
the assigned keys are ['1', '2']
['1', '2', '1', '2']
printing the number dict y_coordinate
{'1': 2447, '2': 3025}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': 'UNASSIGNED', '4': 'UNASSIGNED', '5': 'UNASSIGNED', '6': 'UNASSIGNED', '7': 'UNASSIGNED', '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rzQDZm4.jpg
OCR detection done with doctr
left top x of SN: 483.8124999999999
bottom right x of SN: 889.5937500000001
left top x of T/F: 5444.874999999999
bottom right x of T/F: 6648.3125
first t/f detection
TRUR
((5491.000000000001, 1896.5625), (5942.562499999999, 2113.3125))
FALSE
((5536.156249999999, 2366.1875), (6105.124999999999, 2619.0625))
TRUE
((5572.281250000001, 3034.5), (6041.90625, 3269.3125))
FALIE
((5572.281250000001, 3458.96875), (6069.0, 3675.71875))
TRUE
((5509.062499999999, 3946.65625), (5996.749999999999, 4127.28125))
FALSE
((5545.187500000001, 4651.09375), (6132.218749999999, 4903.96875))
the
((5229.09375, 5256.1875), (5445.84375, 5400.6875))
collision happend with box:5256.1875 and text:the solving on the basis of percent match boxes
the current box specification are
T
((5563.249999999999, 5301.34375), (5779.999999999999, 5509.0625))
text2 i.e the incoming text is the winner
collision happend with box:5301.34375 and text:T solving on the basis of percent match boxes
the current box specification are
RUE
((5789.031250000001, 5301.34375), (6150.28125, 5491.0))
text2 i.e the incoming text is the winner
TRUE
((5608.40625, 5798.0625), (6159.312499999999, 6050.9375))
the
((5256.1875, 6222.53125), (5472.9375, 6367.03125))
collision happend with box:6222.53125 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5590.343749999999, 6258.65625), (6087.062500000001, 6484.4375))
text2 i.e the incoming text is the winner
TRUE
((5581.3125, 6945.03125), (6222.531250000001, 7161.78125))
the final dict without editing {'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1905, '2': 2474, '3': 3043, '4': 3621, '5': 4000, '6': 4578, '7': 5346, '8': 5933, '9': 6321, '10': 7089}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': False, '5': True, '6': False, '7': True, '8': True, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zciEYbt.jpg
OCR detection done with doctr
left top x of SN: 249.0000000000001
bottom right x of SN: 672.8437500000001
left top x of T/F: 5643.562500000001
bottom right x of T/F: 6874.093749999999
first t/f detection
tRUE
((5725.812499999999, 1914.625), (6358.000000000001, 2158.46875))
TVue
((5779.999999999999, 2438.4375), (6240.593749999999, 2619.0625))
CAISE
((5707.750000000001, 3142.875), (6240.593749999999, 3314.46875))
trul
((5798.0625, 3585.40625), (6358.000000000001, 3802.15625))
fAlse
((5779.999999999999, 4163.40625), (6376.062499999999, 4407.25))
TYUE
((5617.437499999999, 4849.78125), (6087.062500000001, 4985.25))
TRUE
((5599.375000000001, 5563.25), (6114.156250000001, 5698.71875))
tRuE
((5843.218750000001, 6096.09375), (6475.40625, 6294.78125))
Palte
((5734.843750000001, 6647.0), (6222.531250000001, 6854.71875))
falst
((5779.999999999999, 7170.8125), (6385.093750000001, 7423.6875))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1797, '2': 2411, '3': 3025, '4': 3648, '5': 4055, '6': 4678, '7': 5500, '8': 6114, '9': 6538, '10': 7351}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': True, '7': True, '8': True, '9': False, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 4
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 1KUsNqb.jpg
rotation started
['bf', '', '00', '1', 'o', 'E', '>', '-', 'I', 'E', 'CT', '3', 'N', 'E', 'i', '11', 'I', 'E', '-', 'I', '8', 'it', ':', '8', 'I', 'le', 'I', 'I', 'I', 'E', 'E', 'I', 'e', 'I', '3', 't', 'I', 'I', 'E', 'a', 'I', '8', 'I', 'I', 'E', 'I', 'E', 'I', 'E', 'I', '8', 'I', 'E', 'I', 't', 'a', '€', 'e', 'I', '4', '11', '2', 's', 'E', 'E', '€', 'E', '9', 'E', 'LE', 'I', 'I', 'E', 'I', '9', 'P', 'a', 'e', 'E', '€', 'I', 'I', 'I', 'E', 'I', 'E', ':', '8', 'I', 'of', '2', 'I', 'I', '9', 'E', 'E', 'E', 't', 'of', 'I', 'Q', '€', 'I', 'B', 'a', 'f', 'I', 'I', 'I', '2', 'a', '8', 'I', 'E', 'I', 'E', 'E', 'I', '€', 'I', 'E', '8', 'e', 'I', 'I', 'I', 'a', '2', 'I', 'of', 'I', 'E', 'I', 'I', 'I', ':', 'E', '2', '€', '9', 'f', 'I', 'E', 'I', 'E', 'F', 'I', 'of', '8', 'E', 'I', 'a', 'I', 'E', 'I', 'it', 'I', 'a', '€', 'I', '1', '-', 'E', 'E', 'it', 'E', 'E', 'E', '2', 'E', 't', 'E', 'E', 'I', 'I', '8', 'I', 'I', 'I', 'a', 'E', 'E', 'E', 'E', 'E', 'I', 'E', 'e', 'I', 'I', '1', ':', 'tn', 'I', 'I', 'I', 'I', 'F', 'it', 'I', '2', '-', '€', '-', '€', '-', 'E', '€', 'E', 'a', '-', 'I', '1']
rotation started
['"egep', 'uoosun', "'mou", '07', 'ITOM', 'ezireioues', 'qou', 'op', '7e44', 'egep', 'Surureng', 'oun', 'ur', 'sTregop', 'JO', 'OSIOU', 'oyreds', 'emngdes', '01', 'ULIeOT', 'Keur', 'lopour', 'a47', 'Se', "'soseaI", '90a1', '-UI', 'SumayIano', 'Jo', 'YSLI', 'ou4', "'WAS", 'UT', 'logourered', 'D', 'o47', 'Jo', 'anyea', 'y8ry', 'e', 'YAIM', 'OT', '95143', '9031', '9S14J', "'IAS", '9SOI-SA-QUO', 'ueya', 'IOMOTS', 'SI', 'WAS', 'OUO-SA-3UO', 'Sursn', 'uoporpard', 'B', 'Suryeur', "'sessepp", 'Jo', 'poqunu', 'a8rel', 'e', 'Y9IM', 'sularqord', 'sseppramur', 'JOE', '6', 'aoeds', '[eurBuo', 'o49', 'UI', 'JeQUIT-uou', '0q', 'ued', 'WAS', 'ue', 'Jo', 'Arepunoq', 'uorstap', 'OYL', '8', 'sapou', 'Jo', 'poqunu', 'a47', '07', 'Teuorgodoud', 'Atgpamp', 'SI', 'BOIL', 'UOISIDOT', 'o44', 'UI', 'uororpard', 'B', 'Buryeur', 'JOJ', 'pammbar', 'BUIL', 'OUL', 'L', '901', 'uornquasip', 'ueissnes', 'e', 'Sienre', 'SI', 'suorgnqugsip', 'uerssnes', 'OM7', 'Jo', 'amgxIu', 'V', '9', '9514J', 'TreDoH', 'pue', 'UOISIO', '9A7', '-ald', 'uaamgeq', 'nord', 'B', 'SI', 'OAINO', '(0OH)', 'orsuegpe.eyD', 'Surerado', 'IBAIODON', 'OUL', 'S', 'YIOMIOU', 'Temou', 'o47', 'UI', 'squerpers', 'au4', 'aunduoo', '01', 'posn', '903L', 'SI', 'quaosap', 'quorpers', 'TIYM', "'SqUBIOM", 'o47', 'agepdn', '07', 'posn', 'SI', 'uone@odoxdypeg', 'V', ':f', 'pue', 'I', 'SIO9DOA', 'Aue', 'JOJ', 'OLIgOUI', 'souensip', 'PITEA', 'B', 'SI', "(@'z)quopuagauzso", '-', 'I', '&', '903L', '95143', 'Teuorsuoump-P', '"leyissepo', 'IBQUII-uou', 'B', 'SI', 'NNY', '2', 'quoufordap', 'quetutambar', 'a8810qs', 'oun', 'SeordAL', 'I', '1a81e1', 'yonur', 'SI', 'NNX', 'IOJ', 'AMZL', '"IVa/anuL', 'JOJ', 'WAS', 'ueya', 'quouagess', 'NS', 'Jaqumu', 'ITOI', 'mor', '091M', ':0.104', '(sad', 'OT)', '6', 'OUM', '10', 'ANAL', 'Teardeo', 'UI', 'ASTVA', 'S.I09101', 'L', 'reapo', 'pue']
rotation started
['1', 'I', '2', ':', ':', 'à', 'I', '-', 'à', '-', ':', ':', '2', 'a', 'E', 'a', 'I', 'is', 'I', 'à', 'I', 'I', 'I', 'E', 'a', 'iE', 'I', 'I', 'I', 'I', 'is', 'E', 'I', 'a', 'I', 'e', 'I', 'E', 'i', 'I', 'd', 'I', 'a', 'of', '5', ':', 'I', 'E', 'i', ':', ':', 'a', 'I', 'I', 'I', 'of', ':', '1', 'E', 'e', 'I', 'iE', 'o', '1', 'I', '2', 'E', ':', 'o', 'I', '0', 'E', 'I', 'I', 'I', 'à', 'a', 'I', 'I', 'a', 'a', 'is', 'à', 'E', 'I', 'I', 'I', '8', 'de', 'a', '1', 'E', 'o', 'I', 'I', 'I', ':', 'E', 'I', '1', 'is', 'E', 'a', 'I', 'I', '1', 'in', '-', 'ot', 'E', ':', 'E', 'e', '', '-', '', 'is', 'I', '-', 'I', 'a', 'of', '-', '-', ':', 'a', 'a', 'I', 'e', '1', 'I', 'e', 'I', 'E', 'o', 'I', 'of', 'I', 'of', ':', 'I', 'iis', 'de', 'à', ':', '1', 'of', '-', 'de', 'I', '1', 'à', 'a', 'a', 'I', '5', 'a', 'E', ':', 'iis', 'e', 'f', 'I', 'E', 'I', '8', 'o', 'I', 'E', 'I', '2', 'I', '3', 'e', ':', 'I', 'I', 'a', 'is', '1', 'I', 'E', 'L', 'I', 'à', 'I', 'I', 'I', 'I', 'E', 'I', 'I', 'E', '.', 'A', 'E', 'E', '-', 'E', 'I', 'I', '7', '1', '2', '', '4', '12', '8', 'A', '0', '', '1f']
rotation started
['letters', 'and', 'clear', 'FALSE', 'in', 'capital', 'Write', 'TRUE', 'or', '9.', '(10', 'pts)', 'roll', 'number', 'here:', 'Write', 'your', 'TRUE/FAI', 'TRVE', 'SN', 'Statement', 'much', 'larger', 'than', 'SVM', 'for', 'requirement', 'for', 'KNN', 'is', '1', 'Typically,', 'the', 'storage', 'deployment.', 'FAVSE', '2', 'KNN', 'is', 'a', 'non-linear', 'classifier.', 'metric', 'for', 'd-dimensional,', 'TRVE', '3', '1-cosin-Smmalaritylz.u)', 'is', 'a', 'valid', 'distance', 'any', 'vectors', 'I', 'and', 'y.', '4', 'Backpropogation', 'is', 'used', 'to', 'update', 'the', 'weights,', 'while', 'gradient', 'descent', 'is', 'TRVE', 'used', 'to', 'compute', 'the', 'gradients', 'in', 'the', 'neural', 'network.', '5', 'The', 'Receiver', 'Operating', 'Characteristic', '(ROC)', 'curve', 'is', 'a', 'plot', 'between', 'Pre-', 'FRUe', 'cision', 'and', 'Recall.', 'FAUSE', '6', 'A', 'mixture', 'of', 'two', 'Gaussian', 'distributions', 'is', 'always', 'a', 'Gaussian', 'distribution.', 'TRUE', '7', 'The', 'Time', 'required', 'for', 'making', 'a', 'prediction', 'in', 'the', 'Decision', 'Tree', 'is', 'directly', 'proportional', 'to', 'the', 'number', 'of', 'nodes.', 'FAUSE', 'TRUE', 'FALSE', '8', 'The', 'decision', 'boundary', 'of', 'an', 'SVM', 'can', 'be', 'non-linear', 'in', 'the', 'original', '9', 'For', 'multiclass', 'problems', 'with', 'a', 'large', 'number', 'of', 'classes,', 'making', 'a', 'prediction', 'space.', 'using', 'one-vs-one', 'SVM', 'is', 'slower', 'than', 'one-vs-rest', 'SVM.', '10', 'With', 'a', 'high', 'value', 'of', 'the', 'C', 'parameter', 'in', 'SVM,', 'the', 'risk', 'of', 'overfitting', 'in-', 'creases,', 'as', 'the', 'model', 'may', 'learn', 'to', 'capture', 'specific', 'noise', 'or', 'details', 'in', 'the', 'TRUE', 'training', 'data', 'that', 'do', 'not', 'generalize', 'well', 'to', 'new,', 'unseen', 'data.']
OCR detection done with doctr
left top x of SN: 230.9375
bottom right x of SN: 645.7500000000001
TRUE/FALSE not detected. Skipping this part of processing.
going with all detection
[2024/06/28 15:06:07] ppocr DEBUG: Namespace(alpha=1.0, alphacolor=(255, 255, 255), benchmark=False, beta=1.0, binarize=False, cls_batch_num=6, cls_image_shape='3, 48, 192', cls_model_dir='/home/adi_techbuddy/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_thresh=0.9, cpu_threads=10, crop_res_save_dir='./output', det=True, det_algorithm='DB', det_box_type='quad', det_db_box_thresh=0.6, det_db_score_mode='fast', det_db_thresh=0.3, det_db_unclip_ratio=1.5, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_east_score_thresh=0.8, det_limit_side_len=960, det_limit_type='max', det_model_dir='/home/adi_techbuddy/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, det_pse_thresh=0, det_sast_nms_thresh=0.2, det_sast_score_thresh=0.5, draw_img_save_dir='./inference_results', drop_score=0.5, e2e_algorithm='PGNet', e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_limit_side_len=768, e2e_limit_type='max', e2e_model_dir=None, e2e_pgnet_mode='fast', e2e_pgnet_score_thresh=0.5, e2e_pgnet_valid_set='totaltext', enable_mkldnn=False, fourier_degree=5, gpu_id=0, gpu_mem=500, help='==SUPPRESS==', image_dir=None, image_orientation=False, invert=False, ir_optim=True, kie_algorithm='LayoutXLM', label_list=['0', '180'], lang='en', layout=True, layout_dict_path=None, layout_model_dir=None, layout_nms_threshold=0.5, layout_score_threshold=0.5, max_batch_size=10, max_text_length=25, merge_no_span_structure=True, min_subgraph_size=15, mode='structure', ocr=True, ocr_order_method=None, ocr_version='PP-OCRv4', output='./output', page_num=0, precision='fp32', process_id=0, re_model_dir=None, rec=True, rec_algorithm='SVTR_LCNet', rec_batch_num=6, rec_char_dict_path='/home/adi_techbuddy/anaconda3/envs/mycondaenv/lib/python3.8/site-packages/paddleocr/ppocr/utils/en_dict.txt', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_model_dir='/home/adi_techbuddy/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', recovery=False, save_crop_res=False, save_log_path='./log_output/', scales=[8, 16, 32], ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ser_model_dir=None, show_log=True, sr_batch_num=1, sr_image_shape='3, 32, 128', sr_model_dir=None, structure_version='PP-StructureV2', table=True, table_algorithm='TableAttn', table_char_dict_path=None, table_max_len=488, table_model_dir=None, total_process_num=1, type='ocr', use_angle_cls=False, use_dilation=False, use_gpu=False, use_mp=False, use_npu=False, use_onnx=False, use_pdf2docx_api=False, use_pdserving=False, use_space_char=True, use_tensorrt=False, use_visual_backbone=True, use_xpu=False, vis_font_path='./doc/fonts/simfang.ttf', warmup=False)
!------------------------------start with paddleocr-----------------------------------!
Started processing of the image : 1KUsNqb.jpg
[2024/06/28 15:06:08] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:06:08] ppocr DEBUG: dt_boxes num : 39, elapsed : 0.14475536346435547
[2024/06/28 15:06:11] ppocr DEBUG: rec_res num  : 39, elapsed : 2.245889663696289
[2024/06/28 15:06:12] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:06:12] ppocr DEBUG: dt_boxes num : 45, elapsed : 0.17813873291015625
[2024/06/28 15:06:14] ppocr DEBUG: rec_res num  : 45, elapsed : 2.00295352935791
['9. (10 pts) Write TRUE or FALSE in capital letters and clear', 'SN', '10', '6', '8', '9', '3', 'Statement', 'With a high value of the C parameter in SVM, the risk of overfitting in-', 'training data that do not generalize well to new, unseen data.', 'creases, as the model may learn to capture specific noise or details in the', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'For multiclass problems with a large number of classes, making a prediction', 'The decision boundary of an SVM can be non-linear in the original space.', 'KNN is a non-lincar classifier.', 'deployment.', 'proportional to the number of nodes.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', 'Backpropogation is used to update the weights, while gradient descent is', 'vectors x and y.', 'cision and Recall.', 'used to compute the gradients in the neural network.', 'Write your roll number here:', 'TRUE', 'FALSE', 'FALSE', 'TRUE', 'TRUE', 'FRUE', 'TRUE/FAL', 'FALSE', 'FAUSE', 'TRUE', 'TRUE', 'TRVE']
[2024/06/28 15:06:15] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:06:16] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.11993646621704102
[2024/06/28 15:06:18] ppocr DEBUG: rec_res num  : 41, elapsed : 2.160588502883911
['TRUe', '10', 'FASse', '6', 'TRUE', '8', 'FAUSE', 'L', 'TRUE', '9', 'FASsE', 'TRUe', '3', 'TRUE', '2', 'FAUsE', 'TEUe', 'NS']
[2024/06/28 15:06:19] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:06:20] ppocr DEBUG: dt_boxes num : 41, elapsed : 0.12019824981689453
[2024/06/28 15:06:22] ppocr DEBUG: rec_res num  : 41, elapsed : 1.9399983882904053
['N', 'F4UsE', 'FASsE', 'TRUE', 'TAUE', 'FAUSE', 'TRUE', 'FAUse', 'TRUE', 'TRUe', 'NS', '2', '4', '6', '3', '5', '7', '8', '9', '10']
[2024/06/28 15:06:22] ppocr WARNING: Since the angle classifier is not initialized, it will not be used during the forward process
[2024/06/28 15:06:23] ppocr DEBUG: dt_boxes num : 38, elapsed : 0.1165611743927002
[2024/06/28 15:06:25] ppocr DEBUG: rec_res num  : 38, elapsed : 2.1492257118225098
['9.(10 pts) Write TRUE or FALSE in capital let', 'Write your roll number here:', 'TRUE/FAIS', 'Statement', 'SN', 'TRVE', 'Typically, the storage requirement for KNN is much larger than SVM for', 'deployment.', 'FAUSE', 'KNN is a non-linear classifier.', '2', 'TRVE', '1-cosineSimalarity(x,y) is a valid distance metric for any d-dimensional,', '3', 'vectors x and y', 'TRUE', 'Backpropogation is used to update the weights, while gradient descent is', 'used to compute the gradients in the neural network.', 'The Receiver Operating Characteristic (ROC) curve is a plot between Pre-', '5', 'FRUE', 'cision and Recall.', 'FALSE', 'A mixture of two Gaussian distributions is always a Gaussian distribution.', '6', 'TRUE', 'FALSE', 'proportional to the number of nodes.', 'The decision boundary of an SVM can be non-linear in the original space.', 'TRUE', 'For multiclass problems with a large number of classes, making a prediction', 'FALSE', 'using one-vs-one SVM is slower than one-vs-rest SVM.', 'With a high value of the C parameter in SVM, the risk of overfitting in-', '10', 'TRUE', 'creases, as the model may learn to capture specific noise or details in the', 'training data that do not generalize well to new, unseen data']
OCR detection done
left top x of SN: 266.0
bottom right x of SN: 692.0
left top y of SN: 1830.0
bottom right y of SN: 2124.0
Error processing Phase1Dataset/phase_1_eval_dataset_enc/phase_1_eval_dataset/1KUsNqb.jpg: local variable 'final_dict' referenced before assignment
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : DCqErqb.jpg
OCR detection done with doctr
left top x of T/F: 5535.187500000001
bottom right x of T/F: 6792.812499999999
left top x of SN: 330.2812500000001
bottom right x of SN: 736.0625
first t/f detection
FALSE
((5608.40625, 1977.84375), (6276.718750000001, 2221.6875))
FALSE
((5626.468750000001, 2610.03125), (6276.718750000001, 2826.78125))
FALSE
((5617.437499999999, 3188.03125), (6249.625000000001, 3404.78125))
TRUE
((5545.187500000001, 3711.84375), (6204.46875, 3955.6875))
FALSE
((5635.5, 4181.46875), (6249.625000000001, 4389.1875))
FALSE
((5644.531249999999, 4894.9375), (6403.156249999999, 5138.78125))
TRUE
((5563.249999999999, 5599.375), (6195.437500000001, 5807.09375))
TRUE
((5608.40625, 6078.03125), (6231.5625, 6294.78125))
TRUE
((5662.59375, 6628.9375), (6231.5625, 6845.6875))
FALSE
((5689.6875, 7270.15625), (6303.812500000001, 7441.75))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2104, '2': 2700, '3': 3296, '4': 3901, '5': 4298, '6': 4894, '7': 5680, '8': 6276, '9': 6674, '10': 7468}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : rtCMIC1.jpg
OCR detection done with doctr
left top x of SN: 106.04492187500003
bottom right x of SN: 326.328125
left top x of T/F: 949.7656249999999
bottom right x of T/F: 1330.56640625
first t/f detection
Falle
((990.3808593750001, 433.447265625), (1079.00390625, 483.3984375))
collision happend with box:433.447265625 and text:Falle solving on the basis of percent match boxes
the current box specification are
Filfe
((991.9921875, 509.1796875), (1085.44921875, 559.130859375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:509.1796875 and text:Filfe solving on the basis of percent match boxes
the current box specification are
Taue
((1025.830078125, 589.74609375), (1127.34375, 642.919921875))
text2 i.e the incoming text is the winner
collision happend with box:589.74609375 and text:Taue solving on the basis of percent match boxes
the current box specification are
Bul
((966.2109375, 704.150390625), (1067.724609375, 752.490234375))
text1 i.e the prev text is the winner
Touue
((954.9316406250001, 795.99609375), (1070.947265625, 849.169921875))
collision happend with box:795.99609375 and text:Touue solving on the basis of percent match boxes
the current box specification are
pul
((962.9882812500001, 878.173828125), (1079.00390625, 923.291015625))
text1 i.e the prev text is the winner
Tquue
((1011.328125, 961.962890625), (1127.34375, 1015.13671875))
collision happend with box:961.962890625 and text:Tquue solving on the basis of percent match boxes
the current box specification are
bue
((967.822265625, 1055.419921875), (1058.056640625, 1103.759765625))
text1 i.e the prev text is the winner
fre
((972.6562500000001, 1152.099609375), (1054.833984375, 1193.994140625))
collision happend with box:1152.099609375 and text:fre solving on the basis of percent match boxes
the current box specification are
sue
((971.044921875, 1274.560546875), (1050.0, 1324.51171875))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 581, '2': 512, '3': 580, '4': 683, '5': 784, '6': 886, '7': 953, '8': 1057, '9': 1126, '10': 1229}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : nD8jfSQ.jpg
OCR detection done with doctr
left top x of T/F: 1172.50390625
bottom right x of T/F: 1640.53125
left top x of SN: 7.183593750000043
bottom right x of SN: 245.82617187500003
first t/f detection
falu
((1227.072265625, 553.5859375), (1388.92578125, 659.142578125))
collision happend with box:553.5859375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falke
((1241.146484375, 680.25390625), (1386.580078125, 764.69921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:680.25390625 and text:Falke solving on the basis of percent match boxes
the current box specification are
Tfot
((1241.146484375, 802.23046875), (1395.962890625, 914.82421875))
text2 i.e the incoming text is the winner
collision happend with box:802.23046875 and text:Tfot solving on the basis of percent match boxes
the current box specification are
d-dimensional
((985.4648437499999, 816.3046875), (1191.88671875, 877.29296875))
text2 i.e the incoming text is the winner
collision happend with box:816.3046875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
is
((1163.73828125, 968.775390625), (1201.26953125, 1006.306640625))
text1 i.e the prev text is the winner
collision happend with box:816.3046875 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
Tisl
((1269.294921875, 950.009765625), (1412.3828125, 1053.220703125))
text2 i.e the incoming text is the winner
Pre-
((1140.28125, 1116.5546875), (1205.9609375000002, 1156.431640625))
collision happend with box:1116.5546875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
Tul
((1278.677734375, 1100.134765625), (1417.07421875, 1203.345703125))
text2 i.e the incoming text is the winner
collision happend with box:1100.134765625 and text:Tul solving on the basis of percent match boxes
the current box specification are
Tul
((1273.986328125, 1229.1484375), (1433.494140625, 1320.630859375))
text2 i.e the incoming text is the winner
collision happend with box:1229.1484375 and text:Tul solving on the basis of percent match boxes
the current box specification are
frud
((1292.751953125, 1348.779296875), (1442.876953125, 1444.953125))
text2 i.e the incoming text is the winner
collision happend with box:1348.779296875 and text:frud solving on the basis of percent match boxes
the current box specification are
frue
((1306.826171875, 1473.1015625), (1447.568359375, 1557.546875))
text2 i.e the incoming text is the winner
collision happend with box:1473.1015625 and text:frue solving on the basis of percent match boxes
the current box specification are
Fale
((1320.900390625, 1599.76953125), (1449.9140625, 1684.21484375))
text2 i.e the incoming text is the winner
collision happend with box:1599.76953125 and text:Fale solving on the basis of percent match boxes
the current box specification are
falre
((1320.900390625, 1735.8203125), (1478.0625, 1843.72265625))
true and false collision so given priority to text2 which is the incoming text
distribution.
((1039.416015625, 1261.98828125), (1222.380859375, 1315.939453125))
collision happend with box:1261.98828125 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1112.1328125, 1362.853515625), (1227.072265625, 1409.767578125))
text1 i.e the prev text is the winner
space.
((1142.626953125, 1517.669921875), (1231.763671875, 1555.201171875))
collision happend with box:1517.669921875 and text:space. solving on the basis of percent match boxes
the current box specification are
prediction
((1098.05859375, 1611.498046875), (1248.18359375, 1663.103515625))
text2 i.e the incoming text is the winner
collision happend with box:1611.498046875 and text:prediction solving on the basis of percent match boxes
the current box specification are
overfitting
((1058.181640625, 1761.623046875), (1210.65234375, 1813.228515625))
text2 i.e the incoming text is the winner
collision happend with box:1761.623046875 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((1208.306640625, 1808.537109375), (1264.603515625, 1848.4140625))
text1 i.e the prev text is the winner
the final dict without editing {'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 656, '2': 804, '3': 905, '4': 1053, '5': 1201, '6': 1348, '7': 1449, '8': 1597, '9': 1695, '10': 1843}
--------- Printing the final dict ------------
{'1': False, '2': 'NULL', '3': True, '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': False, '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : KB26N1r.jpg
OCR detection done with doctr
left top x of T/F: 5282.312499999999
bottom right x of T/F: 6494.781249999999
left top x of SN: 637.34375
bottom right x of SN: 1043.125
first t/f detection
TRUE
((5364.5625, 2086.21875), (5987.71875, 2293.9375))
TRUE
((5364.5625, 2655.1875), (6032.875000000001, 2899.03125))
LE
((5391.65625, 3169.96875), (5951.593750000001, 3368.65625))
FALSE
((5238.124999999999, 3377.6875), (5942.562499999999, 3594.4375))
Re
((5427.781249999999, 3820.21875), (5861.281249999999, 3982.78125))
FALSE
((5265.218749999999, 4009.875), (5987.71875, 4208.5625))
FALSE
((5265.218749999999, 4407.25), (5924.500000000001, 4614.96875))
FALSE
((5256.1875, 4913.0), (5906.4375, 5129.75))
TRUE
((5274.250000000001, 5337.46875), (5906.4375, 5599.375))
TRU
((5301.343750000001, 5843.21875), (5743.875, 6069.0))
TRUE
((5274.250000000001, 6348.96875), (5924.500000000001, 6592.8125))
FALSE
((5283.28125, 6963.09375), (5996.749999999999, 7206.9375))
the final dict without editing {'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2293, '2': 2844, '3': 3215, '4': 3775, '5': 4325, '6': 4885, '7': 5274, '8': 5834, '9': 6213, '10': 6791}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 7
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : WcYuBgk.jpg
OCR detection done with doctr
left top x of SN: 77.701171875
bottom right x of SN: 320.9296875
left top x of T/F: 1318.41015625
bottom right x of T/F: 1781.32421875
first t/f detection
True
((1347.14453125, 601.841796875), (1461.892578125, 672.095703125))
collision happend with box:601.841796875 and text:True solving on the basis of percent match boxes
the current box specification are
Tyue
((1482.96875, 728.298828125), (1583.666015625, 789.185546875))
text1 i.e the prev text is the winner
Falsc
((1363.537109375, 850.072265625), (1478.28515625, 903.93359375))
collision happend with box:850.072265625 and text:Falsc solving on the basis of percent match boxes
the current box specification are
Falk
((1354.169921875, 992.921875), (1454.8671875, 1042.099609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
Lesk
((1347.14453125, 1142.796875), (1457.208984375, 1199.0))
text1 i.e the prev text is the winner
collision happend with box:992.921875 and text:Falk solving on the basis of percent match boxes
the current box specification are
falk
((1482.96875, 1140.455078125), (1578.982421875, 1201.341796875))
text2 i.e the incoming text is the winner
collision happend with box:1140.455078125 and text:falk solving on the basis of percent match boxes
the current box specification are
Fadte
((1347.14453125, 1280.962890625), (1454.8671875, 1337.166015625))
text2 i.e the incoming text is the winner
collision happend with box:1280.962890625 and text:Fadte solving on the basis of percent match boxes
the current box specification are
Falye
((1337.77734375, 1395.7109375), (1454.8671875, 1454.255859375))
text2 i.e the incoming text is the winner
collision happend with box:1395.7109375 and text:Falye solving on the basis of percent match boxes
the current box specification are
Truc
((1344.802734375, 1533.876953125), (1436.1328125, 1583.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1533.876953125 and text:Truc solving on the basis of percent match boxes
the current box specification are
R
((1365.87890625, 1660.333984375), (1447.8417968750002, 1695.4609375))
text1 i.e the prev text is the winner
collision happend with box:1533.876953125 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tyut
((1471.259765625, 1639.2578125), (1583.666015625, 1700.14453125))
text2 i.e the incoming text is the winner
Trut
((1354.169921875, 1814.892578125), (1466.576171875, 1873.4375))
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'NULL'}
the unassigned keys are ['4', '7']
the assigned keys are ['1', '2', '3', '5', '6', '8', '9', '10']
['1', '2', '3', '5', '6', '8', '9', '10', '1', '2', '3', '5', '6', '8', '9', '10']
printing the number dict y_coordinate
{'1': 840, '2': 737, '3': 836, '5': 1135, '6': 1290, '8': 1538, '9': 1643, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'UNASSIGNED', '5': 'NULL', '6': True, '7': 'UNASSIGNED', '8': True, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : cbIcLP0.jpg
OCR detection done with doctr
left top x of T/F: 1255.7421875
bottom right x of T/F: 1760.2734375
left top x of SN: -38.71093749999996
bottom right x of SN: 212.3828125
first t/f detection
Trie
((1344.453125, 563.671875), (1473.9453125, 622.0703125))
collision happend with box:563.671875 and text:Trie solving on the basis of percent match boxes
the current box specification are
Trut
((1341.9140625, 703.3203125), (1461.25, 766.796875))
text2 i.e the incoming text is the winner
collision happend with box:703.3203125 and text:Trut solving on the basis of percent match boxes
the current box specification are
Fale
((1395.234375, 822.65625), (1517.109375, 888.671875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:822.65625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falk
((1400.3125, 975.0), (1524.7265625, 1048.6328125))
text2 i.e the incoming text is the winner
for
((1209.8828125, 586.5234375), (1265.7421875, 632.2265625))
d-dimensional
((1072.7734375, 848.046875), (1311.4453125, 931.8359375))
is
((1288.59375, 1018.1640625), (1324.140625, 1053.7109375))
collision happend with box:1018.1640625 and text:is solving on the basis of percent match boxes
the current box specification are
Pre-
((1265.7421875, 1173.046875), (1346.9921875, 1223.828125))
text2 i.e the incoming text is the winner
collision happend with box:1173.046875 and text:Pre- solving on the basis of percent match boxes
the current box specification are
descent
((1159.1015625, 1018.1640625), (1291.1328125, 1079.1015625))
text2 i.e the incoming text is the winner
between
((1131.171875, 1183.203125), (1275.8984375, 1244.140625))
collision happend with box:1183.203125 and text:between solving on the basis of percent match boxes
the current box specification are
fauie
((1420.625, 1140.0390625), (1537.421875, 1206.0546875))
text2 i.e the incoming text is the winner
collision happend with box:1140.0390625 and text:fauie solving on the basis of percent match boxes
the current box specification are
false
((1433.3203125, 1287.3046875), (1575.5078125, 1350.78125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1287.3046875 and text:false solving on the basis of percent match boxes
the current box specification are
falre
((1473.9453125, 1419.3359375), (1593.28125, 1480.2734375))
text2 i.e the incoming text is the winner
collision happend with box:1419.3359375 and text:falre solving on the basis of percent match boxes
the current box specification are
True
((1504.4140625, 1564.0625), (1621.2109375, 1625.0))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1564.0625 and text:True solving on the basis of percent match boxes
the current box specification are
True
((1522.1875000000002, 1683.3984375), (1623.75, 1746.875))
text2 i.e the incoming text is the winner
distribution.
((1166.71875, 1330.46875), (1377.4609375, 1401.5625))
collision happend with box:1330.46875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
is
((1225.1171875, 1459.9609375), (1260.6640625, 1495.5078125))
text1 i.e the prev text is the winner
collision happend with box:1330.46875 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((1255.5859375, 1434.5703125), (1387.6171875, 1498.046875))
text1 i.e the prev text is the winner
original
((1176.875, 1609.765625), (1308.90625, 1673.2421875))
collision happend with box:1609.765625 and text:original solving on the basis of percent match boxes
the current box specification are
space.
((1303.828125, 1602.1484375), (1405.3906249999998, 1655.46875))
text1 i.e the prev text is the winner
collision happend with box:1609.765625 and text:original solving on the basis of percent match boxes
the current box specification are
a
((1237.8125, 1734.1796875), (1270.8203125, 1769.7265625))
text1 i.e the prev text is the winner
collision happend with box:1609.765625 and text:original solving on the basis of percent match boxes
the current box specification are
prediction
((1250.5078125, 1703.7109375), (1430.7812499999998, 1772.265625))
text1 i.e the prev text is the winner
overfitting
((1225.1171875, 1871.2890625), (1402.8515625, 1939.84375))
collision happend with box:1871.2890625 and text:overfitting solving on the basis of percent match boxes
the current box specification are
data.
((1184.4921875, 2000.78125), (1278.4375, 2051.5625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:2000.78125 and text:data. solving on the basis of percent match boxes
the current box specification are
Trut
((1537.421875, 1883.984375), (1641.5234374999998, 1944.921875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1883.984375 and text:Trut solving on the basis of percent match boxes
the current box specification are
details
((1242.890625, 1929.6875), (1359.6875, 1990.625))
text2 i.e the incoming text is the winner
collision happend with box:1929.6875 and text:details solving on the basis of percent match boxes
the current box specification are
the
((1400.3125, 1919.53125), (1458.7109375000002, 1965.234375))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'UNASSIGNED', '2': False, '3': False, '4': False, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['1', '8', '9', '10']
the assigned keys are ['2', '3', '4', '5', '6', '7']
['2', '3', '4', '5', '6', '7', '2', '3', '4', '5', '6', '7']
printing the number dict y_coordinate
{'2': 916, '3': 1023, '4': 1193, '5': 1348, '6': 1505, '7': 1617, '1': 616}
--------- Printing the final dict ------------
{'1': 'UNASSIGNED', '2': False, '3': False, '4': False, '5': True, '6': False, '7': True, '8': 'UNASSIGNED', '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : zaZoS31.jpg
OCR detection done with doctr
left top x of T/F: 778.015625
bottom right x of T/F: 1135.87109375
left top x of SN: 53.253906249999986
bottom right x of SN: 269.8203125
first t/f detection
TRUE
((800.7343750000001, 314.7890625), (873.8671875, 344.99609375))
collision happend with box:314.7890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
TRVE
((808.68359375, 399.05078125), (875.45703125, 429.2578125))
text1 i.e the prev text is the winner
collision happend with box:314.7890625 and text:TRUE solving on the basis of percent match boxes
the current box specification are
d-dimensional
((662.41796875, 473.7734375), (784.8359375, 503.98046875))
text2 i.e the incoming text is the winner
collision happend with box:473.7734375 and text:d-dimensional solving on the basis of percent match boxes
the current box specification are
FAL
((815.04296875, 480.1328125), (867.5078125000001, 511.9296875))
text2 i.e the incoming text is the winner
collision happend with box:480.1328125 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((856.3789062499999, 480.1328125), (884.99609375, 507.16015625))
text1 i.e the prev text is the winner
collision happend with box:480.1328125 and text:FAL solving on the basis of percent match boxes
the current box specification are
is
((768.9374999999999, 570.75390625), (788.015625, 594.6015625))
text1 i.e the prev text is the winner
collision happend with box:480.1328125 and text:FAL solving on the basis of percent match boxes
the current box specification are
FAL
((815.04296875, 573.93359375), (862.73828125, 605.73046875))
text2 i.e the incoming text is the winner
collision happend with box:573.93359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
SE
((857.96875, 572.34375), (891.35546875, 599.37109375))
text1 i.e the prev text is the winner
collision happend with box:573.93359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
Pre-
((749.859375, 666.14453125), (792.78515625, 691.58203125))
text1 i.e the prev text is the winner
collision happend with box:573.93359375 and text:FAL solving on the basis of percent match boxes
the current box specification are
FALSE
((813.453125, 667.734375), (899.3046875, 704.30078125))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:667.734375 and text:FALSE solving on the basis of percent match boxes
the current box specification are
distribution.
((686.265625, 761.53515625), (795.96484375, 790.15234375))
text2 i.e the incoming text is the winner
collision happend with box:761.53515625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FAL
((813.453125, 751.99609375), (873.8671875, 783.79296875))
text1 i.e the prev text is the winner
collision happend with box:761.53515625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
SE
((862.73828125, 750.40625), (897.7148437500001, 775.84375))
text1 i.e the prev text is the winner
collision happend with box:761.53515625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
directly
((727.6015625, 823.5390625), (800.7343750000001, 852.15625))
text1 i.e the prev text is the winner
collision happend with box:761.53515625 and text:distribution. solving on the basis of percent match boxes
the current box specification are
FALSE
((824.58203125, 829.8984375), (904.07421875, 861.6953125))
text1 i.e the prev text is the winner
space.
((745.08984375, 925.2890625), (800.7343750000001, 949.13671875))
collision happend with box:925.2890625 and text:space. solving on the basis of percent match boxes
the current box specification are
TRVE
((821.40234375, 910.98046875), (899.3046875, 941.1875))
text2 i.e the incoming text is the winner
collision happend with box:910.98046875 and text:TRVE solving on the basis of percent match boxes
the current box specification are
prediction
((716.47265625, 984.11328125), (805.50390625, 1014.3203125))
text2 i.e the incoming text is the winner
collision happend with box:984.11328125 and text:prediction solving on the basis of percent match boxes
the current box specification are
TRVE
((829.3515624999999, 982.5234375), (907.25390625, 1012.73046875))
text2 i.e the incoming text is the winner
collision happend with box:982.5234375 and text:TRVE solving on the basis of percent match boxes
the current box specification are
overfitting
((689.4453125, 1082.68359375), (781.65625, 1111.30078125))
text2 i.e the incoming text is the winner
collision happend with box:1082.68359375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
TRJE
((846.83984375, 1077.9140625), (923.1523437499999, 1109.7109375))
text1 i.e the prev text is the winner
collision happend with box:1082.68359375 and text:overfitting solving on the basis of percent match boxes
the current box specification are
the
((778.4765625, 1111.30078125), (813.453125, 1136.73828125))
text1 i.e the prev text is the winner
the final dict without editing {'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 348, '2': 440, '3': 505, '4': 600, '5': 694, '6': 793, '7': 855, '8': 950, '9': 1015, '10': 1114}
--------- Printing the final dict ------------
{'1': 'NULL', '2': True, '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': True, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : u2GZM4K.jpg
OCR detection done with doctr
left top x of SN: 88.421875
bottom right x of SN: 306.484375
left top x of T/F: 863.8124999999999
bottom right x of T/F: 1232.40625
first t/f detection
Fale
((886.5, 418.6875), (959.4531249999999, 453.578125))
collision happend with box:418.6875 and text:Fale solving on the basis of percent match boxes
the current box specification are
Trure
((886.5, 505.9140625), (975.3125000000001, 542.390625))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:505.9140625 and text:Trure solving on the basis of percent match boxes
the current box specification are
Tuue
((883.3281250000001, 597.8984375), (961.0390625, 629.6171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:597.8984375 and text:Tuue solving on the basis of percent match boxes
the current box specification are
Tyuuc
((886.5, 689.8828125), (967.3828125, 726.359375))
text2 i.e the incoming text is the winner
collision happend with box:689.8828125 and text:Tyuuc solving on the basis of percent match boxes
the current box specification are
Truue
((892.84375, 799.3125), (968.9687500000001, 837.375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:799.3125 and text:Truue solving on the basis of percent match boxes
the current box specification are
Truue
((897.6015625, 883.3671875), (973.7265625, 919.84375))
text2 i.e the incoming text is the winner
collision happend with box:883.3671875 and text:Truue solving on the basis of percent match boxes
the current box specification are
Tywue
((899.1875, 965.8359375), (976.8984375, 997.5546875))
text1 i.e the prev text is the winner
Faye
((905.53125, 1049.890625), (976.8984375, 1081.609375))
collision happend with box:1049.890625 and text:Faye solving on the basis of percent match boxes
the current box specification are
Tywe
((892.84375, 1130.7734375), (972.140625, 1170.421875))
text1 i.e the prev text is the winner
Fale
((894.4296875, 1238.6171875), (973.7265625, 1275.09375))
the final dict without editing {'1': 'NULL', '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 417, '2': 518, '3': 585, '4': 688, '5': 789, '6': 891, '7': 957, '8': 1059, '9': 1129, '10': 1230}
--------- Printing the final dict ------------
{'1': 'NULL', '2': 'NULL', '3': True, '4': 'NULL', '5': False, '6': False, '7': 'NULL', '8': 'NULL', '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : yo3KVbK.jpg
OCR detection done with doctr
left top x of T/F: 5517.125
bottom right x of T/F: 6729.59375
left top x of SN: 601.2187500000001
bottom right x of SN: 1025.0625
first t/f detection
TRUE
((5707.750000000001, 1968.8125), (6177.375, 2149.4375))
TRUE
((5716.78125, 2510.6875), (6150.28125, 2673.25))
PALSE
((5698.718749999999, 3043.53125), (6195.437500000001, 3224.15625))
PALSE
((5689.6875, 3621.53125), (6240.593749999999, 3784.09375))
FALSE
((5671.624999999999, 4217.59375), (6204.46875, 4389.1875))
FALSE
((5698.718749999999, 4741.40625), (6177.375, 4913.0))
TRUE
((5626.468750000001, 5192.96875), (6078.031249999999, 5355.53125))
TRUE
((5617.437499999999, 5761.9375), (6023.843749999999, 5924.5))
TRUE
((5608.40625, 6258.65625), (6050.937499999999, 6421.21875))
TRUE
((5644.531249999999, 6981.15625), (6096.09375, 7152.75))
the final dict without editing {'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2013, '2': 2601, '3': 2998, '4': 3603, '5': 4199, '6': 4795, '7': 5202, '8': 5807, '9': 6213, '10': 6818}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': False, '5': False, '6': False, '7': True, '8': True, '9': True, '10': True}
True
True
False
False
False
False
False
True
True
True
Total Marks: 9
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : XZfYPZf.jpg
OCR detection done with doctr
left top x of T/F: 5670.656250000001
bottom right x of T/F: 6937.312500000001
left top x of SN: 420.59375
bottom right x of SN: 835.4062500000001
first t/f detection
falal
((5861.281249999999, 1851.40625), (6574.750000000001, 2113.3125))
False
((5689.6875, 2492.625), (6285.75, 2808.71875))
Falbo
((5834.187499999999, 3188.03125), (6448.3125, 3458.96875))
Faldg
((5689.6875, 3711.84375), (6177.375, 3937.625))
Falal
((5644.531249999999, 4154.375), (6168.343750000001, 4380.15625))
TJul
((5843.218750000001, 4858.8125), (6484.437499999999, 5147.8125))
Tow
((5834.187499999999, 5572.28125), (6493.468750000001, 5888.375))
Palp
((5897.406250000001, 6069.0), (6502.5, 6421.21875))
Trul
((5843.218750000001, 6683.125), (6493.468750000001, 7044.375))
Touul
((5798.0625, 7252.09375), (6547.656250000001, 7541.09375))
the final dict without editing {'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2059, '2': 2655, '3': 3251, '4': 3847, '5': 4244, '6': 4849, '7': 5662, '8': 6267, '9': 6674, '10': 7486}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': False, '5': False, '6': True, '7': True, '8': False, '9': True, '10': True}
False
False
False
False
False
False
True
True
True
True
Total Marks: 8
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : smkLrZa.jpg
OCR detection done with doctr
left top x of SN: 65.82617187500003
bottom right x of SN: 302.123046875
left top x of T/F: 1235.837890625
bottom right x of T/F: 1694.482421875
first t/f detection
falu
((1278.677734375, 607.537109375), (1433.494140625, 699.01953125))
collision happend with box:607.537109375 and text:falu solving on the basis of percent match boxes
the current box specification are
Falle
((1281.0234374999998, 729.513671875), (1428.802734375, 806.921875))
text2 i.e the incoming text is the winner
collision happend with box:729.513671875 and text:Falle solving on the basis of percent match boxes
the current box specification are
Truc
((1273.986328125, 856.181640625), (1417.07421875, 954.701171875))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:856.181640625 and text:Truc solving on the basis of percent match boxes
the current box specification are
Tvod
((1283.369140625, 996.923828125), (1426.45703125, 1097.7890625))
text1 i.e the prev text is the winner
Tue
((1281.0234374999998, 1147.048828125), (1421.7656250000002, 1247.9140625))
collision happend with box:1147.048828125 and text:Tue solving on the basis of percent match boxes
the current box specification are
Trul
((1269.294921875, 1285.4453125), (1424.111328125, 1362.853515625))
text2 i.e the incoming text is the winner
collision happend with box:1285.4453125 and text:Trul solving on the basis of percent match boxes
the current box specification are
frul
((1276.33203125, 1395.693359375), (1424.111328125, 1491.8671875))
text2 i.e the incoming text is the winner
collision happend with box:1395.693359375 and text:frul solving on the basis of percent match boxes
the current box specification are
True
((1276.33203125, 1524.70703125), (1417.07421875, 1604.4609375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1524.70703125 and text:True solving on the basis of percent match boxes
the current box specification are
False
((1285.71484375, 1653.720703125), (1407.69140625, 1726.4375))
true and false collision so given priority to text2 which is the incoming text
collision happend with box:1653.720703125 and text:False solving on the basis of percent match boxes
the current box specification are
Falue
((1271.640625, 1794.462890625), (1426.45703125, 1888.291015625))
text2 i.e the incoming text is the winner
the final dict without editing {'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 844, '2': 743, '3': 844, '4': 994, '5': 1142, '6': 1292, '7': 1388, '8': 1538, '9': 1639, '10': 1789}
--------- Printing the final dict ------------
{'1': True, '2': 'NULL', '3': 'NULL', '4': 'NULL', '5': 'NULL', '6': 'NULL', '7': 'NULL', '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 1
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : RRxEwCR.jpg
OCR detection done with doctr
left top x of SN: 75.07812499999999
bottom right x of SN: 317.7734375
left top x of T/F: 1389.0781249999998
bottom right x of T/F: 1867.4140624999998
first t/f detection
Tyw
((1416.6328125, 644.5078125), (1572.1171875, 744.8203125))
collision happend with box:644.5078125 and text:Tyw solving on the basis of percent match boxes
the current box specification are
folre
((1416.6328125, 769.8984375), (1569.6093749999998, 877.734375))
text2 i.e the incoming text is the winner
collision happend with box:769.8984375 and text:folre solving on the basis of percent match boxes
the current box specification are
Trov
((1421.6484374999998, 907.828125), (1569.6093749999998, 1010.6484375))
text1 i.e the prev text is the winner
Tror
((1431.6796875, 1038.234375), (1577.1328125, 1146.0703125))
Trwv
((1416.6328125, 1228.828125), (1572.1171875, 1336.6640625))
collision happend with box:1228.828125 and text:Trwv solving on the basis of percent match boxes
the current box specification are
Tyue
((1421.6484374999998, 1346.6953125), (1574.625, 1447.0078125))
text2 i.e the incoming text is the winner
Tyue
((1414.1250000000002, 1507.1953125), (1582.1484375, 1607.5078125))
collision happend with box:1507.1953125 and text:Tyue solving on the basis of percent match boxes
the current box specification are
Fale
((1441.7109375, 1625.0625), (1572.1171875, 1705.3125))
text2 i.e the incoming text is the winner
collision happend with box:1625.0625 and text:Fale solving on the basis of percent match boxes
the current box specification are
falwe
((1429.171875, 1755.46875), (1584.6562500000002, 1858.2890625))
text2 i.e the incoming text is the winner
Falte
((1416.6328125, 1918.4765625), (1614.75, 2046.375))
the final dict without editing {'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 629, '2': 792, '3': 900, '4': 1060, '5': 1218, '6': 1381, '7': 1487, '8': 1650, '9': 1757, '10': 1920}
--------- Printing the final dict ------------
{'1': False, '2': True, '3': 'NULL', '4': True, '5': 'NULL', '6': 'NULL', '7': False, '8': False, '9': 'NULL', '10': 'NULL'}
True
True
False
False
False
False
False
True
True
True
Total Marks: 2
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : 5GvROcS.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6774.750000000001
left top x of SN: 339.3125
bottom right x of SN: 754.1250000000001
first t/f detection
TRUE
((5581.3125, 1779.15625), (6204.46875, 2077.1875))
FALSE
((5536.156249999999, 2393.28125), (6249.625000000001, 2637.125))
TRUE
((5491.000000000001, 2871.9375), (6285.75, 3224.15625))
TRUE
((5454.874999999999, 3585.40625), (6159.312499999999, 3838.28125))
FALSE
((5463.906250000001, 4280.8125), (6240.593749999999, 4524.65625))
TRUE
((5436.812500000001, 4885.90625), (6096.09375, 5102.65625))
TRVL
((5472.9375, 5391.65625), (6195.437500000001, 5608.40625))
FALSE
((5491.000000000001, 5924.5), (6168.343750000001, 6168.34375))
TRUE
((5400.687499999999, 6430.25), (6105.124999999999, 6683.125))
FALSE
((5445.84375, 7116.625), (6168.343750000001, 7405.625))
the final dict without editing {'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 1959, '2': 2564, '3': 2980, '4': 3594, '5': 4208, '6': 4831, '7': 5238, '8': 5852, '9': 6276, '10': 6890}
--------- Printing the final dict ------------
{'1': True, '2': False, '3': True, '4': True, '5': False, '6': True, '7': True, '8': False, '9': True, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 3
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : ly91BaO.jpg
OCR detection done with doctr
left top x of SN: 619.2812499999999
bottom right x of SN: 1025.0625
left top x of T/F: 5173.9375
bottom right x of T/F: 6386.406249999999
first t/f detection
True
((5274.250000000001, 1752.0625), (5789.031250000001, 1977.84375))
Tue
((5165.875, 2284.90625), (5680.656250000001, 2537.78125))
Tyur
((5247.156250000001, 2727.4375), (5978.687500000001, 3016.4375))
False
((5346.499999999999, 3422.84375), (5969.656249999999, 3639.59375))
ue
((5500.03125, 4199.53125), (6041.90625, 4407.25))
Tyue
((5382.625000000001, 4533.6875), (5897.406250000001, 4741.40625))
False
((5283.28125, 4958.15625), (5779.999999999999, 5183.9375))
True
((5346.499999999999, 5400.6875), (5807.093749999999, 5581.3125))
False
((5292.312499999999, 5852.25), (5816.125000000001, 6059.96875))
Falye
((5391.65625, 6394.125), (5879.34375, 6574.75))
the
((4967.1875, 6592.8125), (5183.9375, 6737.3125))
the final dict without editing {'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
the unassigned keys are []
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
printing the number dict y_coordinate
{'1': 2176, '2': 2718, '3': 3088, '4': 3630, '5': 4172, '6': 4714, '7': 5075, '8': 5626, '9': 5987, '10': 6538}
--------- Printing the final dict ------------
{'1': True, '2': True, '3': False, '4': 'NULL', '5': True, '6': True, '7': False, '8': True, '9': False, '10': False}
True
True
False
False
False
False
False
True
True
True
Total Marks: 5
!------------------------------starting detection using doctr-----------------------------------!
Started processing of the image : H9hqtAY.jpg
OCR detection done with doctr
left top x of T/F: 5462.9375
bottom right x of T/F: 6711.531249999999
left top x of SN: 194.81250000000014
bottom right x of SN: 618.6562500000001
first t/f detection
FALSE
((5545.187500000001, 2131.375), (6150.28125, 2348.125))
FALSE
((5563.249999999999, 2754.53125), (6132.218749999999, 2926.125))
FALSE
((5590.343749999999, 3350.59375), (6177.375, 3549.28125))
TRUE
((5572.281250000001, 3919.5625), (6023.843749999999, 4091.15625))
FALSE
((5563.249999999999, 4362.09375), (6132.218749999999, 4560.78125))
then
((5174.90625, 4985.25), (5463.906250000001, 5129.75))
collision happend with box:4985.25 and text:then solving on the basis of percent match boxes
the current box specification are
FALSE
((5644.531249999999, 5030.40625), (6267.687499999999, 5202.0))
text2 i.e the incoming text is the winner
or
((5319.406249999999, 5211.03125), (5481.968749999999, 5328.4375))
the
((5283.28125, 5780.0), (5518.093750000001, 5933.53125))
collision happend with box:5780.0 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5662.59375, 5770.96875), (6159.312499999999, 5933.53125))
text2 i.e the incoming text is the winner
TRUE
((5680.656250000001, 6321.875), (6168.343750000001, 6502.5))
the
((5337.46875, 6800.53125), (5563.249999999999, 6945.03125))
collision happend with box:6800.53125 and text:the solving on the basis of percent match boxes
the current box specification are
TRUE
((5653.562500000001, 6791.5), (6204.46875, 6999.21875))
text2 i.e the incoming text is the winner
TRUE
((5779.999999999999, 7523.03125), (6276.718750000001, 7694.625))
the final dict without editing {'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
the unassigned keys are ['9', '10']
the assigned keys are ['1', '2', '3', '4', '5', '6', '7', '8']
['1', '2', '3', '4', '5', '6', '7', '8', '1', '2', '3', '4', '5', '6', '7', '8']
printing the number dict y_coordinate
{'1': 2393, '2': 2998, '3': 3594, '4': 4199, '5': 4596, '6': 5211, '7': 6005, '8': 6610}
--------- Printing the final dict ------------
{'1': False, '2': False, '3': False, '4': True, '5': False, '6': False, '7': True, '8': True, '9': 'UNASSIGNED', '10': 'UNASSIGNED'}
False
False
False
False
False
False
True
True
True
True
Total Marks: 7
Processing complete. Images saved to: Phase1Dataset/output Phase1Dataset/detection
